!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A0A0	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
A1	src/inverters/Wclov/cg_invert_WclovQ2.cpp	24;"	d	file:
A1	src/inverters/momenta/cg_invert_MFACC.cpp	32;"	d	file:
A1	src/inverters/momenta/cgm_invert_MFACC.cpp	33;"	d	file:
A1	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	34;"	d	file:
A1	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	35;"	d	file:
A1	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	34;"	d	file:
A1	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	35;"	d	file:
A1	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	32;"	d	file:
A1	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	35;"	d	file:
A1	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	32;"	d	file:
A1	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	28;"	d	file:
A1	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	27;"	d	file:
A1	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	26;"	d	file:
A1	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	47;"	d	file:
A1	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	39;"	d	file:
A1	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	26;"	d	file:
A1	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	34;"	d	file:
A1	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	43;"	d	file:
A1	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	41;"	d	file:
A1	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	38;"	d	file:
A1	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	28;"	d	file:
A1	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	27;"	d	file:
A1	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	26;"	d	file:
A1	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	47;"	d	file:
A1	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	37;"	d	file:
A1	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	35;"	d	file:
A1	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	36;"	d	file:
A1	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	38;"	d	file:
A1	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	38;"	d	file:
A2	src/inverters/Wclov/cg_invert_WclovQ2.cpp	26;"	d	file:
A2	src/inverters/momenta/cg_invert_MFACC.cpp	34;"	d	file:
A2	src/inverters/momenta/cgm_invert_MFACC.cpp	35;"	d	file:
A2	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	36;"	d	file:
A2	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	37;"	d	file:
A2	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	36;"	d	file:
A2	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	30;"	d	file:
A2	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	29;"	d	file:
A2	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	28;"	d	file:
A2	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	49;"	d	file:
A2	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	41;"	d	file:
A2	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	28;"	d	file:
A2	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	36;"	d	file:
A2	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	45;"	d	file:
A2	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	43;"	d	file:
A2	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	40;"	d	file:
A2	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	30;"	d	file:
A2	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	29;"	d	file:
A2	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	28;"	d	file:
A2	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	49;"	d	file:
A2	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	39;"	d	file:
A2	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	37;"	d	file:
A2	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	38;"	d	file:
A2	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	40;"	d	file:
A2	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	40;"	d	file:
A3	src/inverters/Wclov/cg_invert_WclovQ2.cpp	28;"	d	file:
A3	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	32;"	d	file:
A3	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	31;"	d	file:
A3	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	30;"	d	file:
A3	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	51;"	d	file:
A3	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	43;"	d	file:
A3	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	30;"	d	file:
A3	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	38;"	d	file:
A3	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	47;"	d	file:
A3	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	45;"	d	file:
A3	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	42;"	d	file:
A3	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	32;"	d	file:
A3	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	31;"	d	file:
A3	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	30;"	d	file:
A3	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	51;"	d	file:
A3	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	41;"	d	file:
A3	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	39;"	d	file:
A3	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	40;"	d	file:
A3	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	42;"	d	file:
A4	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	34;"	d	file:
A4	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	33;"	d	file:
A4	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	32;"	d	file:
A4	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	53;"	d	file:
A4	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	45;"	d	file:
A4	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	32;"	d	file:
A4	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	40;"	d	file:
A4	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	49;"	d	file:
A4	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	33;"	d	file:
A4	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	32;"	d	file:
A4	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	41;"	d	file:
A4	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	42;"	d	file:
A5	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	36;"	d	file:
A5	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	55;"	d	file:
A5	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	47;"	d	file:
A5	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	51;"	d	file:
AA	projects/x/progs/correct.cpp	/^const int PP=0,SS=1,VV=2,AA=3;$/;"	v
ACLOCAL	build/Makefile	/^ACLOCAL = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing aclocal-1.15$/;"	m
ACLOCAL	build/projects/Makefile	/^ACLOCAL = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing aclocal-1.15$/;"	m
ACLOCAL	build/src/Makefile	/^ACLOCAL = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing aclocal-1.15$/;"	m
ACLOCAL	build/tools/Makefile	/^ACLOCAL = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing aclocal-1.15$/;"	m
ACLOCAL_AMFLAGS	build/Makefile	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACLOCAL_M4	build/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	build/projects/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	build/src/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	build/tools/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AKAK	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
AKBK	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
ALL	projects/ib/disco.cpp	/^  enum{SINGLE,ALL};$/;"	e	enum:hits::__anon2	file:
ALL_TIMES	projects/ib/disco2.cpp	/^const int ALL_TIMES=-1;$/;"	v
ALL_TIMES	projects/ib/prop.hpp	/^  const int ALL_TIMES=-1;$/;"	m	namespace:nissa
AMTAR	build/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	build/projects/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	build/src/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	build/tools/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CPPFLAGS	build/projects/Makefile	/^AM_CPPFLAGS = -I$(top_srcdir)\/src$/;"	m
AM_CPPFLAGS	build/tools/Makefile	/^AM_CPPFLAGS = -I$(top_srcdir)\/src$/;"	m
AM_DEFAULT_VERBOSITY	build/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	build/projects/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	build/src/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	build/tools/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_LFLAGS	build/projects/Makefile	/^AM_LFLAGS = -s -P`basename $* | sed 's,l$$,,'`_ -olex.yy.c$/;"	m
AM_RECURSIVE_TARGETS	build/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_V_AR	build/src/Makefile	/^AM_V_AR = $(am__v_AR_$(V))$/;"	m
AM_V_CC	build/projects/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	build/src/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	build/projects/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	build/src/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CXX	build/projects/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	build/src/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	build/tools/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXXLD	build/projects/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	build/src/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	build/tools/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_GEN	build/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	build/projects/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	build/src/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	build/tools/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_LEX	build/projects/Makefile	/^AM_V_LEX = $(am__v_LEX_$(V))$/;"	m
AM_V_P	build/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	build/projects/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	build/src/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	build/tools/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_YACC	build/projects/Makefile	/^AM_V_YACC = $(am__v_YACC_$(V))$/;"	m
AM_V_at	build/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	build/projects/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	build/src/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	build/tools/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	build/projects/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_YFLAGS	build/projects/Makefile	/^AM_YFLAGS = -d -p `basename $* | sed 's,y$$,,'`_$/;"	m
ANALYSIS_MODE	projects/generate_confs/driver.hpp	/^    enum run_mode_t{EVOLUTION_MODE,ANALYSIS_MODE};$/;"	e	enum:nissa::driver_t::run_mode_t
ANTIPERIODIC	projects/reno_const/RIMOM.cpp	/^enum time_bc_t{PERIODIC,ANTIPERIODIC};$/;"	e	enum:time_bc_t	file:
ANTIPERIODIC_BC	projects/ib/pars.hpp	18;"	d
APE	src/operations/smearing/smooth.hpp	/^    enum method_t{COOLING,STOUT,WFLOW,APE,HYP};$/;"	e	enum:nissa::smooth_pars_t::method_t
APPLY_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_BGQ_NOCOMM	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	40;"	d
APPLY_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_BGQ_NOCOMM	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	495;"	d
APPLY_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_BGQ_NOCOMM	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	71;"	d
APPLY_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_BGQ_NOCOMM	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	39;"	d
APPLY_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_BGQ_NOCOMM	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	495;"	d
APPLY_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_BGQ_NOCOMM	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	72;"	d
APPLY_NABLA_I	src/operations/covariant_derivative.cpp	18;"	d	file:
APPLY_OPERATOR	src/inverters/Wclov/cg_invert_WclovQ2.cpp	16;"	d	file:
APPLY_OPERATOR	src/inverters/momenta/cg_invert_MFACC.cpp	16;"	d	file:
APPLY_OPERATOR	src/inverters/momenta/cgm_invert_MFACC.cpp	16;"	d	file:
APPLY_OPERATOR	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	16;"	d	file:
APPLY_OPERATOR	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	18;"	d	file:
APPLY_OPERATOR	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	16;"	d	file:
APPLY_OPERATOR	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	18;"	d	file:
APPLY_OPERATOR	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	15;"	d	file:
APPLY_OPERATOR	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	18;"	d	file:
APPLY_OPERATOR	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	15;"	d	file:
APPLY_OPERATOR	src/inverters/templates/cg_invert_template_threaded.cpp	144;"	d	file:
APPLY_OPERATOR	src/inverters/templates/cgm_invert_template_threaded.cpp	351;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	18;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	17;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	26;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	19;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	14;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	16;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	21;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	25;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	22;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	18;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	17;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	26;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	19;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	17;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	19;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	22;"	d	file:
APPLY_OPERATOR	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	22;"	d	file:
APPLY_OPERATOR_128	src/inverters/templates/cg_128_invert_template_threaded.cpp	119;"	d	file:
APPLY_OPERATOR_128	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	19;"	d	file:
APPLY_OPERATOR_128	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	17;"	d	file:
APPLY_OPERATOR_128	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	16;"	d	file:
APPLY_OPERATOR_128	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	19;"	d	file:
APPLY_OPERATOR_128	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	17;"	d	file:
APPLY_OPERATOR_128	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	16;"	d	file:
APPLY_STD2EE_M2_BGQ	src/dirac_operators/stD/dirac_operator_stD_bgq.cpp	22;"	d	file:
APPLY_STD2EE_M2_BGQ	src/dirac_operators/stD/dirac_operator_stD_bgq.cpp	30;"	d	file:
APPLY_STD2EE_M2_BGQ	src/dirac_operators/stD/dirac_operator_stD_bgq_template.cpp	45;"	d	file:
AR	build/src/Makefile	/^AR = ar$/;"	m
ARFLAGS	build/src/Makefile	/^ARFLAGS = cru$/;"	m
ASCII	projects/semileptonic/test_proj.cpp	3;"	d	file:
AT1	src/inverters/Wclov/cg_invert_WclovQ2.cpp	23;"	d	file:
AT1	src/inverters/momenta/cg_invert_MFACC.cpp	31;"	d	file:
AT1	src/inverters/momenta/cgm_invert_MFACC.cpp	32;"	d	file:
AT1	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	33;"	d	file:
AT1	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	34;"	d	file:
AT1	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	33;"	d	file:
AT1	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	34;"	d	file:
AT1	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	31;"	d	file:
AT1	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	34;"	d	file:
AT1	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	31;"	d	file:
AT1	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	27;"	d	file:
AT1	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	26;"	d	file:
AT1	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	25;"	d	file:
AT1	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	46;"	d	file:
AT1	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	38;"	d	file:
AT1	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	25;"	d	file:
AT1	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	33;"	d	file:
AT1	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	42;"	d	file:
AT1	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	40;"	d	file:
AT1	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	37;"	d	file:
AT1	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	27;"	d	file:
AT1	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	26;"	d	file:
AT1	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	25;"	d	file:
AT1	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	46;"	d	file:
AT1	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	36;"	d	file:
AT1	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	34;"	d	file:
AT1	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	35;"	d	file:
AT1	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	37;"	d	file:
AT1	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	37;"	d	file:
AT2	src/inverters/Wclov/cg_invert_WclovQ2.cpp	25;"	d	file:
AT2	src/inverters/momenta/cg_invert_MFACC.cpp	33;"	d	file:
AT2	src/inverters/momenta/cgm_invert_MFACC.cpp	34;"	d	file:
AT2	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	35;"	d	file:
AT2	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	36;"	d	file:
AT2	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	35;"	d	file:
AT2	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	29;"	d	file:
AT2	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	28;"	d	file:
AT2	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	27;"	d	file:
AT2	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	48;"	d	file:
AT2	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	40;"	d	file:
AT2	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	27;"	d	file:
AT2	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	35;"	d	file:
AT2	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	44;"	d	file:
AT2	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	42;"	d	file:
AT2	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	39;"	d	file:
AT2	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	29;"	d	file:
AT2	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	28;"	d	file:
AT2	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	27;"	d	file:
AT2	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	48;"	d	file:
AT2	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	38;"	d	file:
AT2	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	36;"	d	file:
AT2	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	37;"	d	file:
AT2	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	39;"	d	file:
AT2	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	39;"	d	file:
AT3	src/inverters/Wclov/cg_invert_WclovQ2.cpp	27;"	d	file:
AT3	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	31;"	d	file:
AT3	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	30;"	d	file:
AT3	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	29;"	d	file:
AT3	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	50;"	d	file:
AT3	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	42;"	d	file:
AT3	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	29;"	d	file:
AT3	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	37;"	d	file:
AT3	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	46;"	d	file:
AT3	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	44;"	d	file:
AT3	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	41;"	d	file:
AT3	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	31;"	d	file:
AT3	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	30;"	d	file:
AT3	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	29;"	d	file:
AT3	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	50;"	d	file:
AT3	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	40;"	d	file:
AT3	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	38;"	d	file:
AT3	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	39;"	d	file:
AT3	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	41;"	d	file:
AT4	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	33;"	d	file:
AT4	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	32;"	d	file:
AT4	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	31;"	d	file:
AT4	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	52;"	d	file:
AT4	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	44;"	d	file:
AT4	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	31;"	d	file:
AT4	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	39;"	d	file:
AT4	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	48;"	d	file:
AT4	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	32;"	d	file:
AT4	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	31;"	d	file:
AT4	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	40;"	d	file:
AT4	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	41;"	d	file:
AT5	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	35;"	d	file:
AT5	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	54;"	d	file:
AT5	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	46;"	d	file:
AT5	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	50;"	d	file:
AT_ORDER	src/operations/stag/rendens.cpp	25;"	d	file:
AUTOCONF	build/Makefile	/^AUTOCONF = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing autoconf$/;"	m
AUTOCONF	build/projects/Makefile	/^AUTOCONF = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing autoconf$/;"	m
AUTOCONF	build/src/Makefile	/^AUTOCONF = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing autoconf$/;"	m
AUTOCONF	build/tools/Makefile	/^AUTOCONF = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing autoconf$/;"	m
AUTOHEADER	build/Makefile	/^AUTOHEADER = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing autoheader$/;"	m
AUTOHEADER	build/projects/Makefile	/^AUTOHEADER = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing autoheader$/;"	m
AUTOHEADER	build/src/Makefile	/^AUTOHEADER = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing autoheader$/;"	m
AUTOHEADER	build/tools/Makefile	/^AUTOHEADER = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing autoheader$/;"	m
AUTOMAKE	build/Makefile	/^AUTOMAKE = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing automake-1.15$/;"	m
AUTOMAKE	build/projects/Makefile	/^AUTOMAKE = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing automake-1.15$/;"	m
AUTOMAKE	build/src/Makefile	/^AUTOMAKE = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing automake-1.15$/;"	m
AUTOMAKE	build/tools/Makefile	/^AUTOMAKE = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing automake-1.15$/;"	m
AUTOMAKE_OPTIONS	build/projects/Makefile	/^AUTOMAKE_OPTIONS = subdir-objects$/;"	m
AUTOMAKE_OPTIONS	build/tools/Makefile	/^AUTOMAKE_OPTIONS = subdir-objects$/;"	m
AWK	build/Makefile	/^AWK = gawk$/;"	m
AWK	build/projects/Makefile	/^AWK = gawk$/;"	m
AWK	build/src/Makefile	/^AWK = gawk$/;"	m
AWK	build/tools/Makefile	/^AWK = gawk$/;"	m
B	src/hmc/backfield.hpp	/^    double B[3];$/;"	m	struct:nissa::em_field_pars_t
BASETYPE	src/inverters/Wclov/cg_invert_WclovQ2.cpp	10;"	d	file:
BASETYPE	src/inverters/momenta/cg_invert_MFACC.cpp	11;"	d	file:
BASETYPE	src/inverters/momenta/cgm_invert_MFACC.cpp	11;"	d	file:
BASETYPE	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	11;"	d	file:
BASETYPE	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	13;"	d	file:
BASETYPE	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	11;"	d	file:
BASETYPE	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	13;"	d	file:
BASETYPE	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	10;"	d	file:
BASETYPE	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	13;"	d	file:
BASETYPE	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	10;"	d	file:
BASETYPE	src/inverters/templates/cg_128_invert_template_threaded.cpp	113;"	d	file:
BASETYPE	src/inverters/templates/cg_invert_template_threaded.cpp	139;"	d	file:
BASETYPE	src/inverters/templates/cgm_invert_template_threaded.cpp	346;"	d	file:
BASETYPE	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	12;"	d	file:
BASETYPE	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	10;"	d	file:
BASETYPE	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	9;"	d	file:
BASETYPE	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	21;"	d	file:
BASETYPE	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	14;"	d	file:
BASETYPE	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	8;"	d	file:
BASETYPE	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	10;"	d	file:
BASETYPE	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	16;"	d	file:
BASETYPE	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	19;"	d	file:
BASETYPE	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	15;"	d	file:
BASETYPE	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	12;"	d	file:
BASETYPE	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	10;"	d	file:
BASETYPE	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	9;"	d	file:
BASETYPE	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	21;"	d	file:
BASETYPE	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	14;"	d	file:
BASETYPE	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	12;"	d	file:
BASETYPE	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	14;"	d	file:
BASETYPE	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	17;"	d	file:
BASETYPE	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	15;"	d	file:
BASETYPE_128	src/inverters/templates/cg_128_invert_template_threaded.cpp	114;"	d	file:
BASETYPE_128	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	13;"	d	file:
BASETYPE_128	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	11;"	d	file:
BASETYPE_128	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	10;"	d	file:
BASETYPE_128	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	13;"	d	file:
BASETYPE_128	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	11;"	d	file:
BASETYPE_128	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	10;"	d	file:
BEGIN	build/projects/generate_confs/tokenizer.cpp	143;"	d	file:
BEGIN	build/projects/semileptonic/tokenize_corr.cpp	143;"	d	file:
BGQ_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_COMM_AND_BUFF_FILL	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	28;"	d
BGQ_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_COMM_AND_BUFF_FILL	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	489;"	d
BGQ_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_COMM_AND_BUFF_FILL	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	59;"	d
BGQ_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_LOCAL_TRANSPOSE	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	30;"	d
BGQ_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_LOCAL_TRANSPOSE	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	490;"	d
BGQ_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_LOCAL_TRANSPOSE	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	61;"	d
BGQ_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_COMM_AND_BUFF_FILL	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	29;"	d
BGQ_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_COMM_AND_BUFF_FILL	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	490;"	d
BGQ_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_COMM_AND_BUFF_FILL	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	62;"	d
BGQ_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_LOCAL_TRANSPOSE	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	31;"	d
BGQ_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_LOCAL_TRANSPOSE	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	491;"	d
BGQ_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_LOCAL_TRANSPOSE	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	64;"	d
BGQ_EMU	build/src/config.hpp	8;"	d
BGQ_QVLFCDUXA	src/bgq/intrinsic/load.hpp	366;"	d
BGQ_QVLFCDUXA	src/bgq/intrinsic/load.hpp	379;"	d
BGQ_QVLFDUXA	src/bgq/intrinsic/load.hpp	352;"	d
BGQ_QVLFDUXA	src/bgq/intrinsic/load.hpp	375;"	d
BGQ_QVLFSUXA	src/bgq/intrinsic/load.hpp	359;"	d
BGQ_QVLFSUXA	src/bgq/intrinsic/load.hpp	377;"	d
BGQ_QVSTFCDUXA	src/bgq/intrinsic/store.hpp	40;"	d
BGQ_QVSTFCDUXA	src/bgq/intrinsic/store.hpp	52;"	d
BGQ_QVSTFDUXA	src/bgq/intrinsic/store.hpp	26;"	d
BGQ_QVSTFDUXA	src/bgq/intrinsic/store.hpp	48;"	d
BGQ_QVSTFSUXA	src/bgq/intrinsic/store.hpp	33;"	d
BGQ_QVSTFSUXA	src/bgq/intrinsic/store.hpp	50;"	d
BICGSTAB_INVERT	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	22;"	d	file:
BI_COLOR_COPY	work_in_prog/bgq/src/bgq_macros.hpp	121;"	d
BI_COLOR_ISUBT	work_in_prog/bgq/src/bgq_macros.hpp	223;"	d
BI_COLOR_ISUBTASSIGN	work_in_prog/bgq/src/bgq_macros.hpp	254;"	d
BI_COLOR_ISUMM	work_in_prog/bgq/src/bgq_macros.hpp	230;"	d
BI_COLOR_ISUMMASSIGN	work_in_prog/bgq/src/bgq_macros.hpp	253;"	d
BI_COLOR_PROD_COMPLEX	work_in_prog/bgq/src/bgq_macros.hpp	237;"	d
BI_COLOR_PROD_DOUBLE	work_in_prog/bgq/src/bgq_macros.hpp	244;"	d
BI_COLOR_SUBT	work_in_prog/bgq/src/bgq_macros.hpp	209;"	d
BI_COLOR_SUBTASSIGN	work_in_prog/bgq/src/bgq_macros.hpp	252;"	d
BI_COLOR_SUMM	work_in_prog/bgq/src/bgq_macros.hpp	216;"	d
BI_COLOR_SUMMASSIGN	work_in_prog/bgq/src/bgq_macros.hpp	251;"	d
BI_COLOR_TO_COLOR	work_in_prog/bgq/src/bgq_macros.hpp	153;"	d
BI_COLOR_TRANSPOSE	work_in_prog/bgq/src/bgq_macros.hpp	407;"	d
BI_COMPLEX_CONJ1_PROD	work_in_prog/bgq/src/bgq_macros.hpp	277;"	d
BI_COMPLEX_COPY	work_in_prog/bgq/src/bgq_macros.hpp	116;"	d
BI_COMPLEX_ISUBT	work_in_prog/bgq/src/bgq_macros.hpp	197;"	d
BI_COMPLEX_ISUMM	work_in_prog/bgq/src/bgq_macros.hpp	203;"	d
BI_COMPLEX_PRINT	work_in_prog/bgq/src/bgq_macros.hpp	180;"	d
BI_COMPLEX_PROD	work_in_prog/bgq/src/bgq_macros.hpp	283;"	d
BI_COMPLEX_PROD_DOUBLE	work_in_prog/bgq/src/bgq_macros.hpp	289;"	d
BI_COMPLEX_SUBT	work_in_prog/bgq/src/bgq_macros.hpp	186;"	d
BI_COMPLEX_SUMM	work_in_prog/bgq/src/bgq_macros.hpp	191;"	d
BI_COMPLEX_SUMM_THE_CONJ1_PROD	work_in_prog/bgq/src/bgq_macros.hpp	295;"	d
BI_COMPLEX_SUMM_THE_PROD	work_in_prog/bgq/src/bgq_macros.hpp	301;"	d
BI_COMPLEX_TO_COMPLEX	work_in_prog/bgq/src/bgq_macros.hpp	148;"	d
BI_COMPLEX_TRANSPOSE	work_in_prog/bgq/src/bgq_macros.hpp	399;"	d
BI_HALFSPINCOLOR_COPY	work_in_prog/bgq/src/bgq_macros.hpp	133;"	d
BI_HALFSPINCOLOR_SUMM	work_in_prog/bgq/src/bgq_macros.hpp	258;"	d
BI_HALFSPINCOLOR_SUMMASSIGN	work_in_prog/bgq/src/bgq_macros.hpp	264;"	d
BI_HALFSPINCOLOR_TO_HALFSPINCOLOR	work_in_prog/bgq/src/bgq_macros.hpp	165;"	d
BI_HALFSPINCOLOR_TRANSPOSE	work_in_prog/bgq/src/bgq_macros.hpp	414;"	d
BI_SPINCOLOR_COPY	work_in_prog/bgq/src/bgq_macros.hpp	138;"	d
BI_SPINCOLOR_PROD_DOUBLE	work_in_prog/bgq/src/bgq_macros.hpp	267;"	d
BI_SPINCOLOR_TO_SPINCOLOR	work_in_prog/bgq/src/bgq_macros.hpp	170;"	d
BI_SU3_COPY	work_in_prog/bgq/src/bgq_macros.hpp	127;"	d
BI_SU3_DAG_PROD_BI_COLOR	work_in_prog/bgq/src/bgq_macros.hpp	307;"	d
BI_SU3_DAG_PROD_BI_HALFSPINCOLOR	work_in_prog/bgq/src/bgq_macros.hpp	335;"	d
BI_SU3_PROD_BI_COLOR	work_in_prog/bgq/src/bgq_macros.hpp	321;"	d
BI_SU3_PROD_BI_HALFSPINCOLOR	work_in_prog/bgq/src/bgq_macros.hpp	341;"	d
BI_SU3_TO_SU3	work_in_prog/bgq/src/bgq_macros.hpp	159;"	d
BKAK	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
BKBK	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
BK_eight_connected	projects/eight_BK/eight_BK.cpp	/^void BK_eight_connected(complex **otto, int *list_opQ,colorspinspin *sdL,colorspinspin *ssL, colorspinspin *sdR,colorspinspin *ssR,int ncontr,int fdL,int rdL,int fsL,int rsL,int fdR,int rdR,int fsR,int rsR ){$/;"	f
BK_eight_disconnected	projects/eight_BK/eight_BK.cpp	/^void BK_eight_disconnected(complex **mezzo, int *list_opQ,colorspinspin *sdL,colorspinspin *ssL, colorspinspin *sdR,colorspinspin *ssR,int ncontr,int fdL,int rdL,int fsL,int rsL,int fdR,int rdR,int fsR,int rsR ){$/;"	f
BLAS_LIBS	build/Makefile	/^BLAS_LIBS = $/;"	m
BLAS_LIBS	build/projects/Makefile	/^BLAS_LIBS = $/;"	m
BLAS_LIBS	build/src/Makefile	/^BLAS_LIBS = $/;"	m
BLAS_LIBS	build/tools/Makefile	/^BLAS_LIBS = $/;"	m
BORDERS_ALLOCATED	src/base/vectors.hpp	20;"	d
BORDERS_COMMUNICATED_AT_LEAST_ONCE	src/base/vectors.hpp	24;"	d
BORDERS_VALID	src/base/vectors.hpp	21;"	d
BORD_SIZE	src/inverters/templates/cg_128_invert_template_threaded.cpp	117;"	d	file:
BORD_SIZE	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	17;"	d	file:
BORD_SIZE	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	15;"	d	file:
BORD_SIZE	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	14;"	d	file:
BORD_SIZE	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	17;"	d	file:
BORD_SIZE	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	15;"	d	file:
BORD_SIZE	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	14;"	d	file:
BORD_VOL	src/inverters/Wclov/cg_invert_WclovQ2.cpp	14;"	d	file:
BORD_VOL	src/inverters/momenta/cg_invert_MFACC.cpp	14;"	d	file:
BORD_VOL	src/inverters/momenta/cgm_invert_MFACC.cpp	14;"	d	file:
BORD_VOL	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	14;"	d	file:
BORD_VOL	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	16;"	d	file:
BORD_VOL	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	14;"	d	file:
BORD_VOL	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	16;"	d	file:
BORD_VOL	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	13;"	d	file:
BORD_VOL	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	16;"	d	file:
BORD_VOL	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	13;"	d	file:
BORD_VOL	src/inverters/templates/cg_invert_template_threaded.cpp	142;"	d	file:
BORD_VOL	src/inverters/templates/cgm_invert_template_threaded.cpp	349;"	d	file:
BORD_VOL	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	24;"	d	file:
BORD_VOL	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	17;"	d	file:
BORD_VOL	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	12;"	d	file:
BORD_VOL	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	14;"	d	file:
BORD_VOL	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	19;"	d	file:
BORD_VOL	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	23;"	d	file:
BORD_VOL	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	18;"	d	file:
BORD_VOL	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	24;"	d	file:
BORD_VOL	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	17;"	d	file:
BORD_VOL	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	15;"	d	file:
BORD_VOL	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	17;"	d	file:
BORD_VOL	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	20;"	d	file:
BORD_VOL	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	18;"	d	file:
BOTH	src/operations/stag/stag.hpp	/^    enum shift_orie_t{UP,DW,BOTH};$/;"	e	enum:nissa::stag::shift_orie_t
BUILT_SOURCES	build/projects/Makefile	/^BUILT_SOURCES = $(generate_parser_built_sources) \\$/;"	m
BUILT_SOURCES	build/src/Makefile	/^BUILT_SOURCES = base\/git_info.hpp$/;"	m
BULK_SIZE	src/inverters/templates/cg_128_invert_template_threaded.cpp	116;"	d	file:
BULK_SIZE	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	16;"	d	file:
BULK_SIZE	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	14;"	d	file:
BULK_SIZE	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	13;"	d	file:
BULK_SIZE	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	16;"	d	file:
BULK_SIZE	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	14;"	d	file:
BULK_SIZE	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	13;"	d	file:
BULK_VOL	src/inverters/Wclov/cg_invert_WclovQ2.cpp	13;"	d	file:
BULK_VOL	src/inverters/momenta/cg_invert_MFACC.cpp	13;"	d	file:
BULK_VOL	src/inverters/momenta/cgm_invert_MFACC.cpp	13;"	d	file:
BULK_VOL	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	13;"	d	file:
BULK_VOL	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	15;"	d	file:
BULK_VOL	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	13;"	d	file:
BULK_VOL	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	15;"	d	file:
BULK_VOL	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	12;"	d	file:
BULK_VOL	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	15;"	d	file:
BULK_VOL	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	12;"	d	file:
BULK_VOL	src/inverters/templates/cg_invert_template_threaded.cpp	141;"	d	file:
BULK_VOL	src/inverters/templates/cgm_invert_template_threaded.cpp	348;"	d	file:
BULK_VOL	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	23;"	d	file:
BULK_VOL	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	16;"	d	file:
BULK_VOL	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	11;"	d	file:
BULK_VOL	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	13;"	d	file:
BULK_VOL	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	18;"	d	file:
BULK_VOL	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	22;"	d	file:
BULK_VOL	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	17;"	d	file:
BULK_VOL	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	23;"	d	file:
BULK_VOL	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	16;"	d	file:
BULK_VOL	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	14;"	d	file:
BULK_VOL	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	16;"	d	file:
BULK_VOL	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	19;"	d	file:
BULK_VOL	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	17;"	d	file:
Bk_eights	projects/eight_BK/smeared_BK_all_in_one.cpp	/^void Bk_eights(colorspinspin *SL1,colorspinspin *SL2,colorspinspin *SR1,colorspinspin *SR2)$/;"	f
C	src/operations/smearing/stout.hpp	/^    su3 C;$/;"	m	struct:nissa::stout_link_staples
C1	src/operations/su3_paths/gauge_sweeper.hpp	/^    double C1;$/;"	m	struct:nissa::gauge_sweeper_t
C1_IWASAKI	src/hmc/gauge/Symanzik_action.hpp	/^  const double C1_IWASAKI=-0.331;$/;"	m	namespace:nissa
C1_TLSYM	src/hmc/gauge/Symanzik_action.hpp	/^  const double C1_TLSYM=-1.0\/12;$/;"	m	namespace:nissa
C1_WILSON	src/hmc/gauge/Symanzik_action.hpp	/^  const double C1_WILSON=0;$/;"	m	namespace:nissa
C5	projects/nucleons/nucleons_smeared.cpp	/^spinspin C5; \/\/C*gamma5$/;"	v
CACHE_L1_ZERO	src/bgq/intrinsic/store.hpp	12;"	d
CACHE_L1_ZERO	src/bgq/intrinsic/store.hpp	16;"	d
CACHE_L1_ZERO	src/bgq/intrinsic/store.hpp	20;"	d
CACHE_LINE_FLUSH	src/bgq/intrinsic/store.hpp	13;"	d
CACHE_LINE_FLUSH	src/bgq/intrinsic/store.hpp	17;"	d
CACHE_LINE_FLUSH	src/bgq/intrinsic/store.hpp	21;"	d
CACHE_PREFETCH	src/bgq/intrinsic/load.hpp	21;"	d
CACHE_PREFETCH	src/bgq/intrinsic/load.hpp	24;"	d
CACHE_PREFETCH	src/bgq/intrinsic/load.hpp	26;"	d
CACHE_PREFETCH_FOR_WRITE	src/bgq/intrinsic/store.hpp	11;"	d
CACHE_PREFETCH_FOR_WRITE	src/bgq/intrinsic/store.hpp	15;"	d
CACHE_PREFETCH_FOR_WRITE	src/bgq/intrinsic/store.hpp	19;"	d
CC	build/Makefile	/^CC = gcc$/;"	m
CC	build/projects/Makefile	/^CC = gcc$/;"	m
CC	build/src/Makefile	/^CC = gcc$/;"	m
CC	build/tools/Makefile	/^CC = gcc$/;"	m
CCAST	src/new_types/su3_op.hpp	26;"	d
CCDEPMODE	build/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	build/projects/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	build/src/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	build/tools/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	build/projects/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	build/src/Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	build/Makefile	/^CFLAGS = -g -O2 -Wall $/;"	m
CFLAGS	build/projects/Makefile	/^CFLAGS = -g -O2 -Wall $/;"	m
CFLAGS	build/src/Makefile	/^CFLAGS = -g -O2 -Wall $/;"	m
CFLAGS	build/tools/Makefile	/^CFLAGS = -g -O2 -Wall $/;"	m
CGM_ADDITIONAL_PARAMETERS_CALL	src/inverters/momenta/cgm_invert_MFACC.cpp	37;"	d	file:
CGM_ADDITIONAL_PARAMETERS_CALL	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	37;"	d	file:
CGM_ADDITIONAL_PARAMETERS_CALL	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	34;"	d	file:
CGM_ADDITIONAL_PARAMETERS_CALL	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	37;"	d	file:
CGM_ADDITIONAL_PARAMETERS_CALL	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	34;"	d	file:
CGM_ADDITIONAL_PARAMETERS_CALL	src/inverters/templates/cgm_invert_template_threaded.cpp	363;"	d	file:
CGM_ADDITIONAL_PARAMETERS_CALL	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	53;"	d	file:
CGM_ADDITIONAL_PARAMETERS_CALL	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	46;"	d	file:
CGM_ADDITIONAL_PARAMETERS_CALL	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	43;"	d	file:
CGM_ADDITIONAL_PARAMETERS_CALL	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	43;"	d	file:
CGM_ADDITIONAL_PARAMETERS_CALL	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	41;"	d	file:
CGM_ADDITIONAL_PARAMETERS_PROTO	src/inverters/templates/cgm_invert_template_threaded.cpp	364;"	d	file:
CGM_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/momenta/cgm_invert_MFACC.cpp	27;"	d	file:
CGM_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	29;"	d	file:
CGM_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	26;"	d	file:
CGM_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	29;"	d	file:
CGM_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	26;"	d	file:
CGM_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/templates/cgm_invert_template_threaded.cpp	360;"	d	file:
CGM_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	32;"	d	file:
CGM_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	35;"	d	file:
CGM_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	32;"	d	file:
CGM_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	32;"	d	file:
CGM_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	32;"	d	file:
CGM_ADDITIONAL_VECTORS_FREE	src/inverters/momenta/cgm_invert_MFACC.cpp	28;"	d	file:
CGM_ADDITIONAL_VECTORS_FREE	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	30;"	d	file:
CGM_ADDITIONAL_VECTORS_FREE	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	27;"	d	file:
CGM_ADDITIONAL_VECTORS_FREE	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	30;"	d	file:
CGM_ADDITIONAL_VECTORS_FREE	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	27;"	d	file:
CGM_ADDITIONAL_VECTORS_FREE	src/inverters/templates/cgm_invert_template_threaded.cpp	361;"	d	file:
CGM_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	36;"	d	file:
CGM_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	36;"	d	file:
CGM_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	33;"	d	file:
CGM_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	33;"	d	file:
CGM_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	33;"	d	file:
CGM_FINISH_COMMUNICATING_BORDERS	src/inverters/momenta/cgm_invert_MFACC.cpp	25;"	d	file:
CGM_FINISH_COMMUNICATING_BORDERS	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	27;"	d	file:
CGM_FINISH_COMMUNICATING_BORDERS	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	24;"	d	file:
CGM_FINISH_COMMUNICATING_BORDERS	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	27;"	d	file:
CGM_FINISH_COMMUNICATING_BORDERS	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	24;"	d	file:
CGM_FINISH_COMMUNICATING_BORDERS	src/inverters/templates/cgm_invert_template_threaded.cpp	357;"	d	file:
CGM_FINISH_COMMUNICATING_BORDERS	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	30;"	d	file:
CGM_FINISH_COMMUNICATING_BORDERS	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	33;"	d	file:
CGM_FINISH_COMMUNICATING_BORDERS	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	30;"	d	file:
CGM_FINISH_COMMUNICATING_BORDERS	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	30;"	d	file:
CGM_FINISH_COMMUNICATING_BORDERS	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	30;"	d	file:
CGM_INVERT	src/inverters/momenta/cgm_invert_MFACC.cpp	19;"	d	file:
CGM_INVERT	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	21;"	d	file:
CGM_INVERT	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	18;"	d	file:
CGM_INVERT	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	21;"	d	file:
CGM_INVERT	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	18;"	d	file:
CGM_INVERT	src/inverters/templates/cgm_invert_template_threaded.cpp	355;"	d	file:
CGM_INVERT	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	24;"	d	file:
CGM_INVERT	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	28;"	d	file:
CGM_INVERT	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	25;"	d	file:
CGM_INVERT	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	25;"	d	file:
CGM_INVERT	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	25;"	d	file:
CGM_INVERT_RUN_HM_TO_COMM_PREC	src/inverters/templates/cgm_invert_template_threaded.cpp	353;"	d	file:
CGM_INVERT_RUN_HM_UP_TO_COMM_PREC	src/inverters/momenta/cgm_invert_MFACC.cpp	20;"	d	file:
CGM_INVERT_RUN_HM_UP_TO_COMM_PREC	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	22;"	d	file:
CGM_INVERT_RUN_HM_UP_TO_COMM_PREC	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	19;"	d	file:
CGM_INVERT_RUN_HM_UP_TO_COMM_PREC	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	22;"	d	file:
CGM_INVERT_RUN_HM_UP_TO_COMM_PREC	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	19;"	d	file:
CGM_INVERT_RUN_HM_UP_TO_COMM_PREC	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	25;"	d	file:
CGM_INVERT_RUN_HM_UP_TO_COMM_PREC	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	29;"	d	file:
CGM_INVERT_RUN_HM_UP_TO_COMM_PREC	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	26;"	d	file:
CGM_INVERT_RUN_HM_UP_TO_COMM_PREC	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	26;"	d	file:
CGM_INVERT_RUN_HM_UP_TO_COMM_PREC	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	26;"	d	file:
CGM_NARG	src/inverters/momenta/cgm_invert_MFACC.cpp	31;"	d	file:
CGM_NARG	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	33;"	d	file:
CGM_NARG	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	30;"	d	file:
CGM_NARG	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	33;"	d	file:
CGM_NARG	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	30;"	d	file:
CGM_NARG	src/inverters/templates/cgm_invert_template_threaded.cpp	369;"	d	file:
CGM_NARG	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	41;"	d	file:
CGM_NARG	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	39;"	d	file:
CGM_NARG	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	36;"	d	file:
CGM_NARG	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	36;"	d	file:
CGM_NARG	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	36;"	d	file:
CGM_NPOSSIBLE_REQUEST	src/inverters/templates/cgm_invert_template_threaded.cpp	358;"	d	file:
CGM_NPOSSIBLE_REQUESTS	src/inverters/momenta/cgm_invert_MFACC.cpp	22;"	d	file:
CGM_NPOSSIBLE_REQUESTS	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	24;"	d	file:
CGM_NPOSSIBLE_REQUESTS	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	21;"	d	file:
CGM_NPOSSIBLE_REQUESTS	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	24;"	d	file:
CGM_NPOSSIBLE_REQUESTS	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	21;"	d	file:
CGM_NPOSSIBLE_REQUESTS	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	27;"	d	file:
CGM_OPERATOR_PARAMETERS	src/inverters/momenta/cgm_invert_MFACC.cpp	17;"	d	file:
CGM_OPERATOR_PARAMETERS	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	19;"	d	file:
CGM_OPERATOR_PARAMETERS	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	16;"	d	file:
CGM_OPERATOR_PARAMETERS	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	19;"	d	file:
CGM_OPERATOR_PARAMETERS	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	16;"	d	file:
CGM_OPERATOR_PARAMETERS	src/inverters/templates/cgm_invert_template_threaded.cpp	365;"	d	file:
CGM_OPERATOR_PARAMETERS	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	22;"	d	file:
CGM_OPERATOR_PARAMETERS	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	26;"	d	file:
CGM_OPERATOR_PARAMETERS	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	23;"	d	file:
CGM_OPERATOR_PARAMETERS	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	23;"	d	file:
CGM_OPERATOR_PARAMETERS	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	23;"	d	file:
CGM_START_COMMUNICATING_BORDERS	src/inverters/momenta/cgm_invert_MFACC.cpp	24;"	d	file:
CGM_START_COMMUNICATING_BORDERS	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	26;"	d	file:
CGM_START_COMMUNICATING_BORDERS	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	23;"	d	file:
CGM_START_COMMUNICATING_BORDERS	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	26;"	d	file:
CGM_START_COMMUNICATING_BORDERS	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	23;"	d	file:
CGM_START_COMMUNICATING_BORDERS	src/inverters/templates/cgm_invert_template_threaded.cpp	356;"	d	file:
CGM_START_COMMUNICATING_BORDERS	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	29;"	d	file:
CGM_START_COMMUNICATING_BORDERS	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	32;"	d	file:
CGM_START_COMMUNICATING_BORDERS	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	29;"	d	file:
CGM_START_COMMUNICATING_BORDERS	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	29;"	d	file:
CGM_START_COMMUNICATING_BORDERS	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	29;"	d	file:
CG_128_ADDITIONAL_PARAMETERS_CALL	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	46;"	d	file:
CG_128_ADDITIONAL_PARAMETERS_CALL	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	46;"	d	file:
CG_128_ADDITIONAL_PARAMETERS_CALL	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	44;"	d	file:
CG_128_INNER_PARAMETERS_CALL	src/inverters/templates/cg_128_invert_template_threaded.cpp	122;"	d	file:
CG_128_INNER_PARAMETERS_CALL	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	41;"	d	file:
CG_128_INNER_PARAMETERS_CALL	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	37;"	d	file:
CG_128_INNER_PARAMETERS_CALL	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	36;"	d	file:
CG_128_INNER_PARAMETERS_CALL	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	36;"	d	file:
CG_128_INNER_PARAMETERS_CALL	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	37;"	d	file:
CG_128_INNER_PARAMETERS_CALL	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	36;"	d	file:
CG_128_INNER_SOLVER	src/inverters/templates/cg_128_invert_template_threaded.cpp	123;"	d	file:
CG_128_INNER_SOLVER	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	39;"	d	file:
CG_128_INNER_SOLVER	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	35;"	d	file:
CG_128_INNER_SOLVER	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	34;"	d	file:
CG_128_INNER_SOLVER	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	34;"	d	file:
CG_128_INNER_SOLVER	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	35;"	d	file:
CG_128_INNER_SOLVER	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	34;"	d	file:
CG_128_INVERT	src/inverters/templates/cg_128_invert_template_threaded.cpp	121;"	d	file:
CG_128_INVERT	src/inverters/templates/cgm_invert_template_threaded.cpp	367;"	d	file:
CG_128_INVERT	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	24;"	d	file:
CG_128_INVERT	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	23;"	d	file:
CG_128_INVERT	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	22;"	d	file:
CG_128_INVERT	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	45;"	d	file:
CG_128_INVERT	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	24;"	d	file:
CG_128_INVERT	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	23;"	d	file:
CG_128_INVERT	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	22;"	d	file:
CG_128_INVERT	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	45;"	d	file:
CG_128_INVERT	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	43;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATE	src/inverters/templates/cg_128_invert_template_threaded.cpp	125;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/Wclov/cg_invert_WclovQ2.cpp	30;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/momenta/cg_invert_MFACC.cpp	26;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	26;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	29;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	26;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/templates/cg_invert_template_threaded.cpp	148;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	43;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	39;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	38;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	36;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	29;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	19;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	25;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	38;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	39;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	38;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	36;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	29;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	27;"	d	file:
CG_ADDITIONAL_VECTORS_ALLOCATION	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	29;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/Wclov/cg_invert_WclovQ2.cpp	32;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/momenta/cg_invert_MFACC.cpp	27;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	28;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	30;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	28;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/templates/cg_128_invert_template_threaded.cpp	124;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/templates/cg_invert_template_threaded.cpp	147;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	46;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	41;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	40;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	40;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	32;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	21;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	28;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	41;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	42;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	39;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	40;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	31;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	29;"	d	file:
CG_ADDITIONAL_VECTORS_FREE	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	31;"	d	file:
CG_INVERT	src/inverters/Wclov/cg_invert_WclovQ2.cpp	18;"	d	file:
CG_INVERT	src/inverters/momenta/cg_invert_MFACC.cpp	19;"	d	file:
CG_INVERT	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	19;"	d	file:
CG_INVERT	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	21;"	d	file:
CG_INVERT	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	19;"	d	file:
CG_INVERT	src/inverters/templates/cg_invert_template_threaded.cpp	146;"	d	file:
CG_INVERT	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	29;"	d	file:
CG_INVERT	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	22;"	d	file:
CG_INVERT	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	17;"	d	file:
CG_INVERT	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	19;"	d	file:
CG_INVERT	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	29;"	d	file:
CG_INVERT	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	22;"	d	file:
CG_INVERT	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	20;"	d	file:
CG_INVERT	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	22;"	d	file:
CG_NARG	src/inverters/Wclov/cg_invert_WclovQ2.cpp	22;"	d	file:
CG_NARG	src/inverters/momenta/cg_invert_MFACC.cpp	30;"	d	file:
CG_NARG	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	32;"	d	file:
CG_NARG	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	33;"	d	file:
CG_NARG	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	32;"	d	file:
CG_NARG	src/inverters/templates/cg_invert_template_threaded.cpp	149;"	d	file:
CG_NARG	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	26;"	d	file:
CG_NARG	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	25;"	d	file:
CG_NARG	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	24;"	d	file:
CG_NARG	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	45;"	d	file:
CG_NARG	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	37;"	d	file:
CG_NARG	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	24;"	d	file:
CG_NARG	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	32;"	d	file:
CG_NARG	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	26;"	d	file:
CG_NARG	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	25;"	d	file:
CG_NARG	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	24;"	d	file:
CG_NARG	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	45;"	d	file:
CG_NARG	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	35;"	d	file:
CG_NARG	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	33;"	d	file:
CG_NARG	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	34;"	d	file:
CG_NPOSSIBLE_REQUESTS	src/inverters/momenta/cg_invert_MFACC.cpp	20;"	d	file:
CG_NPOSSIBLE_REQUESTS	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	20;"	d	file:
CG_NPOSSIBLE_REQUESTS	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	23;"	d	file:
CG_NPOSSIBLE_REQUESTS	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	20;"	d	file:
CG_NPOSSIBLE_REQUESTS	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	30;"	d	file:
CG_NPOSSIBLE_REQUESTS	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	23;"	d	file:
CG_NPOSSIBLE_REQUESTS	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	30;"	d	file:
CG_NPOSSIBLE_REQUESTS	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	23;"	d	file:
CG_NPOSSIBLE_REQUESTS	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	21;"	d	file:
CG_NPOSSIBLE_REQUESTS	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	23;"	d	file:
CG_OPERATOR_128_PARAMETERS	src/inverters/templates/cg_128_invert_template_threaded.cpp	120;"	d	file:
CG_OPERATOR_128_PARAMETERS	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	21;"	d	file:
CG_OPERATOR_128_PARAMETERS	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	20;"	d	file:
CG_OPERATOR_128_PARAMETERS	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	19;"	d	file:
CG_OPERATOR_128_PARAMETERS	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	21;"	d	file:
CG_OPERATOR_128_PARAMETERS	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	20;"	d	file:
CG_OPERATOR_128_PARAMETERS	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	19;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/Wclov/cg_invert_WclovQ2.cpp	19;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/momenta/cg_invert_MFACC.cpp	17;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	17;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	19;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	17;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/templates/cg_invert_template_threaded.cpp	145;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	27;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	20;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	15;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	17;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	27;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	20;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	18;"	d	file:
CG_OPERATOR_PARAMETERS	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	20;"	d	file:
CHECK_BI_SPINCOLOR_DIFF_FROM_ZERO	work_in_prog/bgq/src/bgq_macros.hpp	39;"	d
CHECK_BI_SU3_DIFF_FROM_ZERO	work_in_prog/bgq/src/bgq_macros.hpp	24;"	d
CHECK_SU3_DIFF_FROM_ZERO	work_in_prog/bgq/src/bgq_macros.hpp	11;"	d
CLEANFILES	build/projects/Makefile	/^CLEANFILES = $(generate_parser_built_sources) \\$/;"	m
COLD_START_COND	src/operations/gaugeconf.hpp	/^  enum start_conf_cond_t{UNSPEC_START_COND,HOT_START_COND,COLD_START_COND};$/;"	e	enum:nissa::start_conf_cond_t
COLOR_128_OF_VIR_COLOR_128	src/bgq/bgq_macros.hpp	167;"	d
COLOR_128_TO_VIR_COLOR_128	src/bgq/bgq_macros.hpp	88;"	d
COLOR_DILUTED_SOURCE	src/base/random.hpp	/^  enum source_t{POINT_SOURCE,UNDILUTED_SOURCE,COLOR_DILUTED_SOURCE,SPIN_DILUTED_SOURCE,SPINCOLOR_DILUTED_SOURCE};$/;"	e	enum:nissa::source_t
COLOR_OF_BI_COLOR	work_in_prog/bgq/src/bgq_macros.hpp	88;"	d
COLOR_OF_VIR_COLOR	src/bgq/bgq_macros.hpp	125;"	d
COLOR_TO_BI_COLOR	work_in_prog/bgq/src/bgq_macros.hpp	56;"	d
COLOR_TO_VIR_COLOR	src/bgq/bgq_macros.hpp	26;"	d
COLOR_TO_VIR_SINGLE_COLOR	src/bgq/bgq_macros.hpp	34;"	d
COMMENT	build/projects/generate_confs/tokenizer.cpp	1132;"	d	file:
COMMUNICATE_HPP	src/communicate/communicate.hpp	2;"	d
COMPILE	build/projects/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	build/src/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPLEX_128_OF_VIR_COMPLEX_128	src/bgq/bgq_macros.hpp	160;"	d
COMPLEX_128_TO_VIR_COMPLEX_128	src/bgq/bgq_macros.hpp	81;"	d
COMPLEX_OF_BI_COMPLEX	work_in_prog/bgq/src/bgq_macros.hpp	84;"	d
COMPLEX_OF_VIR_COMPLEX	src/bgq/bgq_macros.hpp	123;"	d
COMPLEX_TO_BI_COMPLEX	work_in_prog/bgq/src/bgq_macros.hpp	52;"	d
COMPLEX_TO_VIR_COMPLEX	src/bgq/bgq_macros.hpp	15;"	d
COMPLEX_TO_VIR_COMPLEX	src/bgq/bgq_macros.hpp	19;"	d
COMPLEX_TO_VIR_COMPLEX_CONJ	src/bgq/bgq_macros.hpp	24;"	d
COMPLEX_TO_VIR_SINGLE_COMPLEX	src/bgq/bgq_macros.hpp	16;"	d
COMPLEX_TO_VIR_SINGLE_COMPLEX	src/bgq/bgq_macros.hpp	20;"	d
COMPUTE_POINT_RECT_BW_STAPLES	src/operations/su3_paths/rectangular_staples.cpp	42;"	d	file:
COMPUTE_POINT_RECT_FW_STAPLES	src/operations/su3_paths/rectangular_staples.cpp	30;"	d	file:
COMPUTE_RECT_BW_STAPLE	src/operations/su3_paths/rectangular_staples.cpp	35;"	d	file:
COMPUTE_RECT_FW_STAPLE	src/operations/su3_paths/rectangular_staples.cpp	23;"	d	file:
CONCAT	build/src/config.hpp	14;"	d
CONCAT2	build/src/config.hpp	17;"	d
CONCAT3	build/src/config.hpp	20;"	d
CONFIG_CLEAN_FILES	build/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	build/projects/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	build/src/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	build/tools/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	build/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	build/projects/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	build/src/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	build/tools/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_FLAGS	build/src/config.hpp	23;"	d
CONFIG_HEADER	build/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/config.hpp$/;"	m
CONFIG_HEADER	build/projects/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/config.hpp$/;"	m
CONFIG_HEADER	build/src/Makefile	/^CONFIG_HEADER = config.hpp$/;"	m
CONFIG_HEADER	build/tools/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/config.hpp$/;"	m
CONFIG_TIME	build/src/config.hpp	26;"	d
COOLING	src/operations/smearing/smooth.hpp	/^    enum method_t{COOLING,STOUT,WFLOW,APE,HYP};$/;"	e	enum:nissa::smooth_pars_t::method_t
CORR_NAME	build/projects/semileptonic/tokenize_corr.cpp	482;"	d	file:
CORR_NAME_ADD	build/projects/semileptonic/tokenize_corr.cpp	485;"	d	file:
CPPFLAGS	build/Makefile	/^CPPFLAGS = -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include  -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include  $/;"	m
CPPFLAGS	build/projects/Makefile	/^CPPFLAGS = -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include  -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include  $/;"	m
CPPFLAGS	build/src/Makefile	/^CPPFLAGS = -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include  -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include  $/;"	m
CPPFLAGS	build/tools/Makefile	/^CPPFLAGS = -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include  -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include  $/;"	m
CRASH_IF_NOT_3COL	src/new_types/su3.hpp	11;"	d
CRASH_IF_NOT_3COL	src/new_types/su3.hpp	9;"	d
CRASH_IF_NOT_ALIGNED	src/base/vectors.hpp	41;"	d
CSCOPE	build/Makefile	/^CSCOPE = cscope$/;"	m
CTAGS	build/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	build/projects/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	build/src/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	build/tools/Makefile	/^CTAGS = ctags$/;"	m
CVEC	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
CVEC0	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
CVEC1	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
CVEC2	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
CVEC3	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
CXX	build/Makefile	/^CXX = g++$/;"	m
CXX	build/projects/Makefile	/^CXX = g++$/;"	m
CXX	build/src/Makefile	/^CXX = g++$/;"	m
CXX	build/tools/Makefile	/^CXX = g++$/;"	m
CXXCOMPILE	build/projects/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	build/src/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	build/tools/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCPP	build/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	build/projects/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	build/src/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	build/tools/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	build/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	build/projects/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	build/src/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	build/tools/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	build/Makefile	/^CXXFLAGS = -g -O2 -Wall -fopenmp$/;"	m
CXXFLAGS	build/projects/Makefile	/^CXXFLAGS = -g -O2 -Wall -fopenmp$/;"	m
CXXFLAGS	build/src/Makefile	/^CXXFLAGS = -g -O2 -Wall -fopenmp$/;"	m
CXXFLAGS	build/tools/Makefile	/^CXXFLAGS = -g -O2 -Wall -fopenmp$/;"	m
CXXLD	build/projects/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	build/src/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	build/tools/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	build/projects/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CXXLINK	build/src/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CXXLINK	build/tools/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CYGPATH_W	build/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	build/projects/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	build/src/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	build/tools/Makefile	/^CYGPATH_W = echo$/;"	m
C_loc_source	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *loc_source,*sme_source,*seq_source,*C_loc_source,*C_sme_source,*S1;$/;"	v
C_sme_source	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *loc_source,*sme_source,*seq_source,*C_loc_source,*C_sme_source,*S1;$/;"	v
Cg5	projects/ib/contr.hpp	/^  EXTERN_CONTR dirac_matr Cg5;$/;"	m	namespace:nissa
Cl	projects/ib/conf.hpp	/^  EXTERN_CONF clover_term_t *Cl;$/;"	m	namespace:nissa
Cl	projects/nucleons/nucleons_smeared.cpp	/^clover_term_t *Cl;$/;"	v
Cl	projects/reno_const/RIMOM.cpp	/^clover_term_t *Cl;$/;"	v
Cl	projects/semileptonic/semileptonic_smeared.cpp	/^clover_term_t *Cl;$/;"	v
Co	projects/ib/checks.cpp	/^double Co(int p,int q,tm_quark_info qu,int mu)$/;"	f
Coulomb	src/operations/gauge_fixing.hpp	/^    enum gauge_t{Landau=0,Coulomb=1};$/;"	e	enum:nissa::LC_gauge_fixing_pars_t::gauge_t
DAG_LINK_FLAG	src/operations/su3_paths/arbitrary.hpp	13;"	d
DD	src/base/DDalphaAMG_bridge.cpp	/^namespace DD$/;"	n	file:
DD	src/base/DDalphaAMG_bridge.hpp	/^namespace DD$/;"	n
DEBUG_PRINTF	build/projects/generate_confs/tokenizer.cpp	1102;"	d	file:
DECLARE_REG_VIR_COLOR	src/bgq/intrinsic/declare.hpp	4;"	d
DECLARE_REG_VIR_COMPLEX	src/bgq/bgq_macros.hpp	14;"	d
DECLARE_REG_VIR_COMPLEX	src/bgq/bgq_macros.hpp	18;"	d
DECLARE_REG_VIR_HALFSPIN	src/bgq/intrinsic/declare.hpp	15;"	d
DECLARE_REG_VIR_HALFSPINCOLOR	src/bgq/intrinsic/declare.hpp	19;"	d
DECLARE_REG_VIR_PARTIAL_SU3	src/bgq/intrinsic/declare.hpp	23;"	d
DECLARE_REG_VIR_SPINCOLOR	src/bgq/intrinsic/declare.hpp	9;"	d
DECLARE_REG_VIR_SU3	src/bgq/intrinsic/declare.hpp	31;"	d
DEFAULT_INCLUDES	build/projects/Makefile	/^DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)\/src$/;"	m
DEFAULT_INCLUDES	build/src/Makefile	/^DEFAULT_INCLUDES = -I. -I$(srcdir)$/;"	m
DEFAULT_INCLUDES	build/tools/Makefile	/^DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)\/src$/;"	m
DEFINE_BORDERS_ROUTINES	src/communicate/borders.hpp	92;"	d
DEFINE_COMM	src/communicate/communicate.hpp	124;"	d
DEFINE_EO_BORDERS_ROUTINES	src/communicate/borders.hpp	48;"	d
DEFINE_GAUSSIAN_SMEARING	src/operations/smearing/gaussian.cpp	47;"	d	file:
DEFINE_GAUSSIAN_SMEARING_APPLY_KAPPA_H	src/operations/smearing/gaussian.cpp	19;"	d	file:
DEFINE_LEBEO_BORDERS_ROUTINES	src/communicate/borders.hpp	70;"	d
DEFINE_LEBLX_BORDERS_ROUTINES	src/communicate/borders.hpp	84;"	d
DEFINE_LX_BORDERS_ROUTINES	src/communicate/borders.hpp	62;"	d
DEFINE_MESON_TWO_POINTS_WILSON_PROP	src/operations/contract/mesons_2pts.cpp	61;"	d	file:
DEFINE_MULTIPLY_FROM_LEFT_OR_RIGHT_BY_MOM_SPACE_TWISTED_PROPAGATOR	src/free_theory/twisted_propagator.cpp	275;"	d	file:
DEFINE_MULTIPLY_FROM_LEFT_OR_RIGHT_BY_X_SPACE_TWISTED_PROPAGATOR_BY_FFT	src/free_theory/twisted_propagator.hpp	58;"	d
DEFINE_MULTIPLY_MOM_SPACE_TWISTED_PROPAGATOR	src/free_theory/twisted_propagator.hpp	29;"	d
DEFINE_PASS	src/operations/fourier_transform.hpp	9;"	d
DEFINE_STAGGERED_HOPPING_MATRIX	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq.hpp	8;"	d
DEFINE_TWO_POINTS_MESON_ROUTINES_FOR_TYPE	src/operations/contract/mesons_2pts.cpp	20;"	d	file:
DEFINE_WILSON_HOPPING_MATRIX	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq.hpp	8;"	d
DEFS	build/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	build/projects/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	build/src/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	build/tools/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEF_TM_GAMMA	src/operations/covariant_derivative.cpp	56;"	d	file:
DELETE_FIELD_T	src/operations/stag/stag.hpp	100;"	d
DELETE_TIME_CORR	src/operations/stag/stag.hpp	116;"	d
DEPDIR	build/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	build/projects/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	build/src/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	build/tools/Makefile	/^DEPDIR = .deps$/;"	m
DER_TMQ_EXP_BGQ_32_64_HEADER	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	505;"	d
DER_TMQ_EXP_BGQ_32_64_HEADER	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	51;"	d
DER_TMQ_EXP_BGQ_32_64_HEADER	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	84;"	d
DER_TMQ_EXP_BGQ_HEADER	src/bgq/intrinsic/oper.hpp	674;"	d
DER_TMQ_EXP_BGQ_SINGLE_HEADER	src/bgq/intrinsic/oper.hpp	683;"	d
DIAG_TMQ	src/bgq/bgq_macros.hpp	702;"	d
DIAG_TMQ	work_in_prog/bgq/src/bgq_macros.hpp	422;"	d
DIRAC_OPERATOR_STD_BGQ_HPP	src/dirac_operators/stD/dirac_operator_stD_bgq.hpp	2;"	d
DISTFILES	build/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	build/projects/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	build/src/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	build/tools/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	build/Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	build/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_COMMON	build/projects/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(include_HEADERS) \\$/;"	m
DIST_COMMON	build/src/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__include_HEADERS_DIST) \\$/;"	m
DIST_COMMON	build/tools/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_SOURCES	build/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	build/projects/Makefile	/^DIST_SOURCES = $(__top_builddir__bin_RIMOM_SOURCES) \\$/;"	m
DIST_SOURCES	build/src/Makefile	/^DIST_SOURCES = $(am____top_builddir__lib_libnissa_a_SOURCES_DIST)$/;"	m
DIST_SOURCES	build/tools/Makefile	/^DIST_SOURCES = $(__top_builddir__tools_Gaussiansmear_test_SOURCES) \\$/;"	m
DIST_SUBDIRS	build/Makefile	/^DIST_SUBDIRS = ${SUBDIRS} tools$/;"	m
DIST_TARGETS	build/Makefile	/^DIST_TARGETS = dist-gzip$/;"	m
DMDMU	src/operations/stag/stag.hpp	105;"	d
DO1	src/io/checksum.cpp	69;"	d	file:
DO2	src/io/checksum.cpp	70;"	d	file:
DO4	src/io/checksum.cpp	71;"	d	file:
DO8	src/io/checksum.cpp	72;"	d	file:
DOUBLE_NUMB	build/projects/semileptonic/parse_corr.cpp	/^    DOUBLE_NUMB = 261,$/;"	e	enum:yytokentype	file:
DOUBLE_NUMB	build/projects/semileptonic/parse_corr.cpp	138;"	d	file:
DOUBLE_NUMB	build/projects/semileptonic/parse_corr.hpp	/^    DOUBLE_NUMB = 261,$/;"	e	enum:yytokentype
DOUBLE_NUMB	build/projects/semileptonic/parse_corr.hpp	61;"	d
DO_NOT_SET_FLAGS	src/base/vectors.hpp	25;"	d
DSFMT_N	src/new_types/dsfmt.hpp	4;"	d
DSFMT_N64	src/new_types/dsfmt.hpp	5;"	d
DSFMT_POS1	src/new_types/dsfmt.hpp	6;"	d
DW	src/operations/stag/stag.hpp	/^    enum shift_orie_t{UP,DW,BOTH};$/;"	e	enum:nissa::stag::shift_orie_t
Dee	work_in_prog/eo_inverter/invert2.cpp	/^void Dee(spincolor *out,spincolor *in,double mu,double kappa)    {dir_Dee_Doo(out,in,mu,kappa,0);}$/;"	f
Deo	work_in_prog/eo_inverter/invert2.cpp	/^void Deo(spincolor *out,spincolor *in,quad_su3*conf){Doe_or_Deo(out,in,conf,1);}$/;"	f
Dmax	src/operations/su3_paths/all_rectangles.hpp	/^    int Tmin,Tmax,Dmin,Dmax;$/;"	m	struct:nissa::all_rects_meas_pars_t
Dmin	src/operations/su3_paths/all_rectangles.hpp	/^    int Tmin,Tmax,Dmin,Dmax;$/;"	m	struct:nissa::all_rects_meas_pars_t
Doe	work_in_prog/eo_inverter/invert2.cpp	/^void Doe(spincolor *out,spincolor *in,quad_su3*conf){Doe_or_Deo(out,in,conf,0);}$/;"	f
Doe_or_Deo	work_in_prog/eo_inverter/invert2.cpp	/^void Doe_or_Deo(spincolor *out,spincolor *in,quad_su3 *conf,int parity)$/;"	f
Doo	work_in_prog/eo_inverter/invert2.cpp	/^void Doo(spincolor *out,spincolor *in,double mu,double kappa)    {dir_Dee_Doo(out,in,mu,kappa,1);}$/;"	f
E	src/hmc/backfield.hpp	/^    double E[3];$/;"	m	struct:nissa::em_field_pars_t
ECHO	build/projects/generate_confs/tokenizer.cpp	1277;"	d	file:
ECHO	build/projects/semileptonic/tokenize_corr.cpp	649;"	d	file:
ECHO_C	build/Makefile	/^ECHO_C = $/;"	m
ECHO_C	build/projects/Makefile	/^ECHO_C = $/;"	m
ECHO_C	build/src/Makefile	/^ECHO_C = $/;"	m
ECHO_C	build/tools/Makefile	/^ECHO_C = $/;"	m
ECHO_N	build/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	build/projects/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	build/src/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	build/tools/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	build/Makefile	/^ECHO_T = $/;"	m
ECHO_T	build/projects/Makefile	/^ECHO_T = $/;"	m
ECHO_T	build/src/Makefile	/^ECHO_T = $/;"	m
ECHO_T	build/tools/Makefile	/^ECHO_T = $/;"	m
EDGES_ALLOCATED	src/base/vectors.hpp	22;"	d
EDGES_VALID	src/base/vectors.hpp	23;"	d
EGREP	build/Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
EGREP	build/projects/Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
EGREP	build/src/Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
EGREP	build/tools/Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
ENDL	build/projects/semileptonic/parse_corr.cpp	/^    ENDL = 258,$/;"	e	enum:yytokentype	file:
ENDL	build/projects/semileptonic/parse_corr.cpp	135;"	d	file:
ENDL	build/projects/semileptonic/parse_corr.hpp	/^    ENDL = 258,$/;"	e	enum:yytokentype
ENDL	build/projects/semileptonic/parse_corr.hpp	58;"	d
EOB_ACT_CONTINUE_SCAN	build/projects/generate_confs/tokenizer.cpp	179;"	d	file:
EOB_ACT_CONTINUE_SCAN	build/projects/semileptonic/tokenize_corr.cpp	179;"	d	file:
EOB_ACT_END_OF_FILE	build/projects/generate_confs/tokenizer.cpp	180;"	d	file:
EOB_ACT_END_OF_FILE	build/projects/semileptonic/tokenize_corr.cpp	180;"	d	file:
EOB_ACT_LAST_MATCH	build/projects/generate_confs/tokenizer.cpp	181;"	d	file:
EOB_ACT_LAST_MATCH	build/projects/semileptonic/tokenize_corr.cpp	181;"	d	file:
EO_32_64_COLOR_COMM	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	27;"	d
EO_32_64_COLOR_COMM	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	488;"	d
EO_32_64_COLOR_COMM	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	58;"	d
EO_32_64_HALFSPINCOLOR_COMM	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	28;"	d
EO_32_64_HALFSPINCOLOR_COMM	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	489;"	d
EO_32_64_HALFSPINCOLOR_COMM	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	61;"	d
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN double bgq_stdD_app_time EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN double cgm_inv_over_time,cg_inv_over_time EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN double conf_evolve_time EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN double gluon_force_time EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN double portable_stD_app_time EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN double quark_force_over_time EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN double remap_time EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN double sto_remap_time EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN double sto_time EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN double tot_comm_time EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN double tot_time EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN double unitarize_time EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN int nbgq_stdD_app EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN int ncgm_inv,ncg_inv EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN int nconf_evolve EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN int ngluon_force EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN int nportable_stD_app EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN int nquark_force_over EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN int nremap EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN int nsto EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN int nsto_remap EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN int ntot_comm EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	/^  EXTERN int nunitarize EQUAL_ZERO;$/;"	m	namespace:nissa
EQUAL_ZERO	src/base/bench.hpp	10;"	d
EQUAL_ZERO	src/base/bench.hpp	12;"	d
EQUAL_ZERO	src/base/bench.hpp	63;"	d
ETA	src/operations/stag/spinpol.cpp	/^    const int nPHIETA=2,PHI=0,ETA=1;$/;"	m	namespace:nissa::__anon12	file:
ETAGS	build/Makefile	/^ETAGS = etags$/;"	m
ETAGS	build/projects/Makefile	/^ETAGS = etags$/;"	m
ETAGS	build/src/Makefile	/^ETAGS = etags$/;"	m
ETAGS	build/tools/Makefile	/^ETAGS = etags$/;"	m
EU1_EU2_EU4_EU6alt	projects/ib/disco.cpp	/^namespace EU1_EU2_EU4_EU6alt$/;"	n	file:
EU_descr_t	projects/ib/disco.cpp	/^typedef std::tuple<std::string,double,double,int> EU_descr_t;$/;"	t	file:
EVN	src/geometry/geometry_eo.hpp	9;"	d
EVOLUTION_MODE	projects/generate_confs/driver.hpp	/^    enum run_mode_t{EVOLUTION_MODE,ANALYSIS_MODE};$/;"	e	enum:nissa::driver_t::run_mode_t
EXEEXT	build/Makefile	/^EXEEXT = $/;"	m
EXEEXT	build/projects/Makefile	/^EXEEXT = $/;"	m
EXEEXT	build/src/Makefile	/^EXEEXT = $/;"	m
EXEEXT	build/tools/Makefile	/^EXEEXT = $/;"	m
EXIT_SUCCESS	build/projects/generate_confs/parser.cpp	615;"	d	file:
EXIT_SUCCESS	build/projects/semileptonic/parse_corr.cpp	318;"	d	file:
EXIT_SUCCESS	build/projects/semileptonic/parse_corr.cpp	346;"	d	file:
EXPORT_ARG	src/base/thread_macros.hpp	93;"	d
EXTERN	src/base/bench.cpp	19;"	d	file:
EXTERN	src/base/bench.hpp	62;"	d
EXTERN	src/base/bench.hpp	9;"	d
EXTERN	src/operations/su3_paths/gauge_sweeper.cpp	21;"	d	file:
EXTERN	src/operations/su3_paths/gauge_sweeper.hpp	19;"	d
EXTERN	src/operations/su3_paths/gauge_sweeper.hpp	207;"	d
EXTERN	work_in_prog/bgq/src/new_vars_and_types.cpp	20;"	d	file:
EXTERN	work_in_prog/bgq/src/new_vars_and_types.hpp	4;"	d
EXTERN	work_in_prog/bgq/src/new_vars_and_types.hpp	6;"	d
EXTERNAL_ARG	src/base/thread_macros.hpp	92;"	d
EXTERN_ARPACK	src/eigenvalues/eigenvalues_arpack.cpp	5;"	d	file:
EXTERN_ARPACK	src/eigenvalues/eigenvalues_arpack.hpp	154;"	d
EXTERN_ARPACK	src/eigenvalues/eigenvalues_arpack.hpp	17;"	d
EXTERN_COMMUNICATE	src/communicate/communicate.cpp	5;"	d	file:
EXTERN_COMMUNICATE	src/communicate/communicate.hpp	144;"	d
EXTERN_COMMUNICATE	src/communicate/communicate.hpp	69;"	d
EXTERN_CONF	projects/ib/conf.cpp	3;"	d	file:
EXTERN_CONF	projects/ib/conf.hpp	46;"	d
EXTERN_CONF	projects/ib/conf.hpp	8;"	d
EXTERN_CONTR	projects/ib/contr.cpp	3;"	d	file:
EXTERN_CONTR	projects/ib/contr.hpp	15;"	d
EXTERN_DD_BRIDGE	src/base/DDalphaAMG_bridge.cpp	17;"	d	file:
EXTERN_DD_BRIDGE	src/base/DDalphaAMG_bridge.hpp	27;"	d
EXTERN_DD_BRIDGE	src/base/DDalphaAMG_bridge.hpp	7;"	d
EXTERN_DIRAC	src/new_types/dirac.cpp	5;"	d	file:
EXTERN_DIRAC	src/new_types/dirac.hpp	11;"	d
EXTERN_DIRAC	src/new_types/dirac.hpp	205;"	d
EXTERN_ENDIANNESS	src/io/endianness.cpp	5;"	d	file:
EXTERN_ENDIANNESS	src/io/endianness.hpp	34;"	d
EXTERN_ENDIANNESS	src/io/endianness.hpp	7;"	d
EXTERN_FLOAT_128	src/new_types/float_128.cpp	5;"	d	file:
EXTERN_FLOAT_128	src/new_types/float_128.hpp	585;"	d
EXTERN_FLOAT_128	src/new_types/float_128.hpp	5;"	d
EXTERN_GEOMETRY_EO	src/geometry/geometry_eo.cpp	14;"	d	file:
EXTERN_GEOMETRY_EO	src/geometry/geometry_eo.hpp	41;"	d
EXTERN_GEOMETRY_EO	src/geometry/geometry_eo.hpp	5;"	d
EXTERN_GEOMETRY_LEB	src/geometry/geometry_Leb.cpp	5;"	d	file:
EXTERN_GEOMETRY_LEB	src/geometry/geometry_Leb.hpp	5;"	d
EXTERN_GEOMETRY_LX	src/geometry/geometry_lx.cpp	8;"	d	file:
EXTERN_GEOMETRY_LX	src/geometry/geometry_lx.hpp	156;"	d
EXTERN_GEOMETRY_LX	src/geometry/geometry_lx.hpp	16;"	d
EXTERN_GEOMETRY_VIR	src/geometry/geometry_vir.cpp	5;"	d	file:
EXTERN_GEOMETRY_VIR	src/geometry/geometry_vir.hpp	5;"	d
EXTERN_GEOMETRY_VIR	src/geometry/geometry_vir.hpp	76;"	d
EXTERN_HOPPING_MATRIX_BGQ_LX	src/bgq/Wilson_hopping_matrix_lx_bgq.cpp	5;"	d	file:
EXTERN_HOPPING_MATRIX_BGQ_LX	src/bgq/Wilson_hopping_matrix_lx_bgq.hpp	22;"	d
EXTERN_HOPPING_MATRIX_BGQ_LX	src/bgq/Wilson_hopping_matrix_lx_bgq.hpp	8;"	d
EXTERN_ILDG	src/io/ILDG_File.cpp	26;"	d	file:
EXTERN_ILDG	src/io/ILDG_File.hpp	158;"	d
EXTERN_ILDG	src/io/ILDG_File.hpp	20;"	d
EXTERN_INPUT	src/io/input.cpp	31;"	d	file:
EXTERN_INPUT	src/io/input.hpp	5;"	d
EXTERN_IOS	src/routines/ios.cpp	5;"	d	file:
EXTERN_IOS	src/routines/ios.hpp	205;"	d
EXTERN_IOS	src/routines/ios.hpp	20;"	d
EXTERN_MESLEP	projects/ib/meslep.cpp	3;"	d	file:
EXTERN_MESLEP	projects/ib/meslep.hpp	7;"	d
EXTERN_MPI	src/routines/mpi_routines.cpp	17;"	d	file:
EXTERN_MPI	src/routines/mpi_routines.hpp	13;"	d
EXTERN_PARS	projects/ib/pars.cpp	3;"	d	file:
EXTERN_PARS	projects/ib/pars.hpp	250;"	d
EXTERN_PARS	projects/ib/pars.hpp	9;"	d
EXTERN_PROP	projects/ib/prop.cpp	3;"	d	file:
EXTERN_PROP	projects/ib/prop.hpp	11;"	d
EXTERN_REMAP	src/operations/remap_vector.cpp	7;"	d	file:
EXTERN_REMAP	src/operations/remap_vector.hpp	5;"	d
EXTERN_SPI	src/bgq/spi.cpp	8;"	d	file:
EXTERN_SPI	src/bgq/spi.hpp	18;"	d
EXTERN_SPI	src/bgq/spi.hpp	79;"	d
EXTERN_SPIN	src/new_types/spin.cpp	5;"	d	file:
EXTERN_SPIN	src/new_types/spin.hpp	13;"	d
EXTERN_SPIN	src/new_types/spin.hpp	449;"	d
EXTERN_THREAD	src/routines/thread.cpp	10;"	d	file:
EXTERN_THREAD	src/routines/thread.hpp	13;"	d
EXTERN_TMLQCD_BRIDGE	src/base/tmLQCD_bridge.cpp	5;"	d	file:
EXTERN_TMLQCD_BRIDGE	src/base/tmLQCD_bridge.hpp	14;"	d
EXTERN_TMLQCD_BRIDGE	src/base/tmLQCD_bridge.hpp	36;"	d
EXTERN_VECTORS	src/base/vectors.cpp	22;"	d	file:
EXTERN_VECTORS	src/base/vectors.hpp	115;"	d
EXTERN_VECTORS	src/base/vectors.hpp	16;"	d
EXTRA_DIST	build/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	build/src/Makefile	/^EXTRA_DIST = base\/git_info.hpp \\$/;"	m
EXTRA_DIST	build/tools/Makefile	/^EXTRA_DIST = find_best_vir_partitioning\/prepare_mapping.sh$/;"	m
F	src/operations/stag/qed_corr.cpp	/^    enum ins_t{S,T,F,V};$/;"	e	enum:nissa::__anon13::ins_t	file:
F77	build/Makefile	/^F77 = ifort$/;"	m
F77	build/projects/Makefile	/^F77 = ifort$/;"	m
F77	build/src/Makefile	/^F77 = ifort$/;"	m
F77	build/tools/Makefile	/^F77 = ifort$/;"	m
FC	build/Makefile	/^FC = gfortran$/;"	m
FC	build/projects/Makefile	/^FC = gfortran$/;"	m
FC	build/src/Makefile	/^FC = gfortran$/;"	m
FC	build/tools/Makefile	/^FC = gfortran$/;"	m
FCFLAGS	build/Makefile	/^FCFLAGS = -g -O2$/;"	m
FCFLAGS	build/projects/Makefile	/^FCFLAGS = -g -O2$/;"	m
FCFLAGS	build/src/Makefile	/^FCFLAGS = -g -O2$/;"	m
FCFLAGS	build/tools/Makefile	/^FCFLAGS = -g -O2$/;"	m
FEYNMAN_ALPHA	src/free_theory/free_theory_types.hpp	/^  const double FEYNMAN_ALPHA=1,LANDAU_ALPHA=0;$/;"	m	namespace:nissa
FFLAGS	build/Makefile	/^FFLAGS = $/;"	m
FFLAGS	build/projects/Makefile	/^FFLAGS = $/;"	m
FFLAGS	build/src/Makefile	/^FFLAGS = $/;"	m
FFLAGS	build/tools/Makefile	/^FFLAGS = $/;"	m
FFTW_FFT	build/src/config.hpp	36;"	d
FFT_MINUS	src/operations/fft.hpp	11;"	d
FFT_NORMALIZE	src/operations/fft.hpp	/^  enum{FFT_NO_NORMALIZE=0,FFT_NORMALIZE=1};$/;"	e	enum:nissa::__anon10
FFT_NO_NORMALIZE	src/operations/fft.hpp	/^  enum{FFT_NO_NORMALIZE=0,FFT_NORMALIZE=1};$/;"	e	enum:nissa::__anon10
FFT_PLUS	src/operations/fft.hpp	10;"	d
FFT_TYPE	build/src/config.hpp	39;"	d
FINISH_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	34;"	d
FINISH_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	492;"	d
FINISH_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	65;"	d
FINISH_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	35;"	d
FINISH_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	493;"	d
FINISH_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	68;"	d
FLEXINT_H	build/projects/generate_confs/tokenizer.cpp	30;"	d	file:
FLEXINT_H	build/projects/semileptonic/tokenize_corr.cpp	30;"	d	file:
FLEX_BETA	build/projects/generate_confs/tokenizer.cpp	14;"	d	file:
FLEX_BETA	build/projects/semileptonic/tokenize_corr.cpp	14;"	d	file:
FLEX_SCANNER	build/projects/generate_confs/tokenizer.cpp	9;"	d	file:
FLEX_SCANNER	build/projects/semileptonic/tokenize_corr.cpp	9;"	d	file:
FLIBS	build/Makefile	/^FLIBS = $/;"	m
FLIBS	build/projects/Makefile	/^FLIBS = $/;"	m
FLIBS	build/src/Makefile	/^FLIBS = $/;"	m
FLIBS	build/tools/Makefile	/^FLIBS = $/;"	m
FORM_TWO_THREAD_TEAMS	src/base/thread_macros.hpp	542;"	d
Fourier_accelerate_derivative	src/operations/gauge_fixing.cpp	/^  void Fourier_accelerate_derivative(su3 *der)$/;"	f	namespace:nissa
GCG	src/operations/gauge_fixing.cpp	/^  namespace GCG$/;"	n	namespace:nissa	file:
GCG_improve_gauge_fixer	src/operations/gauge_fixing.cpp	/^  void GCG_improve_gauge_fixer(su3 *der,bool &use_GCG,int iter)$/;"	f	namespace:nissa
GET_THREAD_ID	src/base/thread_macros.hpp	47;"	d
GET_THREAD_ID	src/base/thread_macros.hpp	49;"	d
GET_THREAD_ID	src/base/thread_macros.hpp	76;"	d
GIP5	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
GIS0	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
GIT_HASH	build/src/base/git_info.hpp	3;"	d
GIT_LOG	build/src/base/git_info.hpp	5;"	d
GIT_TIME	build/src/base/git_info.hpp	4;"	d
GMP_HIGH_PREC	build/src/config.hpp	42;"	d
GREP	build/Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GREP	build/projects/Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GREP	build/src/Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GREP	build/tools/Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GZIP_ENV	build/Makefile	/^GZIP_ENV = --best$/;"	m
Gauss_kappa	projects/nucleons/nucleons_smeared.cpp	/^double Gauss_kappa,ape_alpha;$/;"	v
Gauss_niter	projects/nucleons/nucleons_smeared.cpp	/^int Gauss_niter,ape_niter;$/;"	v
HALFSPINCOLOR_128_OF_VIR_HALFSPINCOLOR_128	src/bgq/bgq_macros.hpp	183;"	d
HALFSPINCOLOR_128_TO_VIR_HALFSPINCOLOR_128	src/bgq/bgq_macros.hpp	104;"	d
HALFSPINCOLOR_OF_BI_HALFSPINCOLOR	work_in_prog/bgq/src/bgq_macros.hpp	101;"	d
HALFSPINCOLOR_OF_VIR_HALFSPINCOLOR	src/bgq/bgq_macros.hpp	141;"	d
HALFSPINCOLOR_TO_BI_HALFSPINCOLOR	work_in_prog/bgq/src/bgq_macros.hpp	69;"	d
HALFSPINCOLOR_TO_VIR_HALFSPINCOLOR	src/bgq/bgq_macros.hpp	62;"	d
HAVE_INTTYPES_H	build/src/config.hpp	48;"	d
HAVE_MEMORY_H	build/src/config.hpp	54;"	d
HAVE_MPI	build/src/config.hpp	57;"	d
HAVE_STDINT_H	build/src/config.hpp	60;"	d
HAVE_STDLIB_H	build/src/config.hpp	63;"	d
HAVE_STRINGS_H	build/src/config.hpp	66;"	d
HAVE_STRING_H	build/src/config.hpp	69;"	d
HAVE_SYS_STAT_H	build/src/config.hpp	72;"	d
HAVE_SYS_TYPES_H	build/src/config.hpp	75;"	d
HAVE_UNISTD_H	build/src/config.hpp	78;"	d
HEADERS	build/projects/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	build/src/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HIGH_PREC_TYPE	build/src/config.hpp	81;"	d
HOPMATR_TBW_PROJ	src/bgq/bgq_macros.hpp	608;"	d
HOPMATR_TBW_PROJ	work_in_prog/bgq/src/bgq_macros.hpp	349;"	d
HOPMATR_TFW_PROJ	src/bgq/bgq_macros.hpp	639;"	d
HOPMATR_TFW_PROJ	work_in_prog/bgq/src/bgq_macros.hpp	373;"	d
HOPMATR_XBW_PROJ	src/bgq/bgq_macros.hpp	615;"	d
HOPMATR_XBW_PROJ	work_in_prog/bgq/src/bgq_macros.hpp	355;"	d
HOPMATR_XFW_PROJ	src/bgq/bgq_macros.hpp	647;"	d
HOPMATR_XFW_PROJ	work_in_prog/bgq/src/bgq_macros.hpp	379;"	d
HOPMATR_YBW_PROJ	src/bgq/bgq_macros.hpp	623;"	d
HOPMATR_YBW_PROJ	work_in_prog/bgq/src/bgq_macros.hpp	361;"	d
HOPMATR_YFW_PROJ	src/bgq/bgq_macros.hpp	655;"	d
HOPMATR_YFW_PROJ	work_in_prog/bgq/src/bgq_macros.hpp	385;"	d
HOPMATR_ZBW_PROJ	src/bgq/bgq_macros.hpp	631;"	d
HOPMATR_ZBW_PROJ	work_in_prog/bgq/src/bgq_macros.hpp	367;"	d
HOPMATR_ZFW_PROJ	src/bgq/bgq_macros.hpp	663;"	d
HOPMATR_ZFW_PROJ	work_in_prog/bgq/src/bgq_macros.hpp	391;"	d
HOPPING_MATRIX_APPLICATION_BARRIER	work_in_prog/bgq/src/new_vars_and_types.cpp	24;"	d	file:
HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_STAGGERED_D	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  void HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_STAGGERED_D(VIR_32_64_COLOR *out)$/;"	f	namespace:nissa
HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_STAGGERED_D	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	36;"	d
HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_STAGGERED_D	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	493;"	d
HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_STAGGERED_D	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	67;"	d
HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_STAGGERED_D_SUBTRACT_FROM_MASS2_TIMES_IN	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	38;"	d
HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_STAGGERED_D_SUBTRACT_FROM_MASS2_TIMES_IN	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	494;"	d
HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_STAGGERED_D_SUBTRACT_FROM_MASS2_TIMES_IN	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	69;"	d
HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_WILSON_2D	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	37;"	d
HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_WILSON_2D	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	494;"	d
HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_WILSON_2D	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	70;"	d
HOP_HEADER	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	83;"	d
HOT_START_COND	src/operations/gaugeconf.hpp	/^  enum start_conf_cond_t{UNSPEC_START_COND,HOT_START_COND,COLD_START_COND};$/;"	e	enum:nissa::start_conf_cond_t
HYP	src/operations/smearing/smooth.hpp	/^    enum method_t{COOLING,STOUT,WFLOW,APE,HYP};$/;"	e	enum:nissa::smooth_pars_t::method_t
IF_VECT_NOT_INITIALIZED	src/base/vectors.hpp	42;"	d
ILDG_File	src/io/ILDG_File.hpp	/^  typedef MPI_File ILDG_File;$/;"	t	namespace:nissa
ILDG_File	tools/conf_transform/edit/ILDG_File_light.hpp	/^typedef FILE* ILDG_File;$/;"	t
ILDG_File_build_record_header	src/io/ILDG_File.cpp	/^  ILDG_header ILDG_File_build_record_header(int MB_flag,int ME_flag,const char *type,uint64_t data_length)$/;"	f	namespace:nissa
ILDG_File_close	src/io/ILDG_File.cpp	/^  void ILDG_File_close(ILDG_File &file)$/;"	f	namespace:nissa
ILDG_File_close	tools/conf_transform/edit/ILDG_File_light.cpp	/^void ILDG_File_close(ILDG_File &file)$/;"	f
ILDG_File_create_scidac_mapped_view	src/io/ILDG_File.cpp	/^  ILDG_File_view ILDG_File_create_scidac_mapped_view(ILDG_File &file,ILDG_Offset nbytes_per_site)$/;"	f	namespace:nissa
ILDG_File_get_current_view	src/io/ILDG_File.cpp	/^  ILDG_File_view ILDG_File_get_current_view(ILDG_File &file)$/;"	f	namespace:nissa
ILDG_File_get_next_record_header	src/io/ILDG_File.cpp	/^  ILDG_header ILDG_File_get_next_record_header(ILDG_File &file)$/;"	f	namespace:nissa
ILDG_File_get_next_record_header	tools/conf_transform/edit/ILDG_File_light.cpp	/^ILDG_header ILDG_File_get_next_record_header(ILDG_File &file)$/;"	f
ILDG_File_get_position	src/io/ILDG_File.cpp	/^  ILDG_Offset ILDG_File_get_position(ILDG_File &file)$/;"	f	namespace:nissa
ILDG_File_get_position	tools/conf_transform/edit/ILDG_File_light.cpp	/^ILDG_Offset ILDG_File_get_position(ILDG_File &file)$/;"	f
ILDG_File_get_size	src/io/ILDG_File.cpp	/^  ILDG_Offset ILDG_File_get_size(ILDG_File &file)$/;"	f	namespace:nissa
ILDG_File_get_size	tools/conf_transform/edit/ILDG_File_light.cpp	/^ILDG_Offset ILDG_File_get_size(ILDG_File &file)$/;"	f
ILDG_File_master_write	src/io/ILDG_File.cpp	/^  void ILDG_File_master_write(ILDG_File &file,void *data,size_t nbytes_req)$/;"	f	namespace:nissa
ILDG_File_open	src/io/ILDG_File.cpp	/^  ILDG_File ILDG_File_open(const std::string &path,int amode)$/;"	f	namespace:nissa
ILDG_File_open	tools/conf_transform/edit/ILDG_File_light.cpp	/^ILDG_File ILDG_File_open(const char *path,const char *mode)$/;"	f
ILDG_File_open_for_read	src/io/ILDG_File.cpp	/^  ILDG_File ILDG_File_open_for_read(const std::string &path)$/;"	f	namespace:nissa
ILDG_File_open_for_write	src/io/ILDG_File.cpp	/^  ILDG_File ILDG_File_open_for_write(const std::string &path)$/;"	f	namespace:nissa
ILDG_File_reached_EOF	src/io/ILDG_File.cpp	/^  bool ILDG_File_reached_EOF(ILDG_File &file)$/;"	f	namespace:nissa
ILDG_File_reached_EOF	tools/conf_transform/edit/ILDG_File_light.cpp	/^bool ILDG_File_reached_EOF(ILDG_File &file)$/;"	f
ILDG_File_read	tools/conf_transform/edit/ILDG_File_light.cpp	/^void ILDG_File_read(void *data,ILDG_File &file,int nbytes_req)$/;"	f
ILDG_File_read_all	src/io/ILDG_File.cpp	/^  void ILDG_File_read_all(void *data,ILDG_File &file,size_t nbytes_req)$/;"	f	namespace:nissa
ILDG_File_read_checksum	src/io/ILDG_File.cpp	/^  void ILDG_File_read_checksum(checksum check_read,ILDG_File &file)$/;"	f	namespace:nissa
ILDG_File_read_ildg_data_all	src/io/ILDG_File.cpp	/^  void ILDG_File_read_ildg_data_all(void *data,ILDG_File &file,ILDG_header &header)$/;"	f	namespace:nissa
ILDG_File_search_record	src/io/ILDG_File.cpp	/^  int ILDG_File_search_record(ILDG_header &header,ILDG_File &file,const char *record_name,ILDG_message *mess)$/;"	f	namespace:nissa
ILDG_File_search_record	tools/conf_transform/edit/ILDG_File_light.cpp	/^int ILDG_File_search_record(ILDG_header &header,ILDG_File &file,const char *record_name)$/;"	f
ILDG_File_seek_to_next_eight_multiple	src/io/ILDG_File.cpp	/^  void ILDG_File_seek_to_next_eight_multiple(ILDG_File &file)$/;"	f	namespace:nissa
ILDG_File_seek_to_next_eight_multiple	tools/conf_transform/edit/ILDG_File_light.cpp	/^void ILDG_File_seek_to_next_eight_multiple(ILDG_File &file)$/;"	f
ILDG_File_set_position	src/io/ILDG_File.cpp	/^  void ILDG_File_set_position(ILDG_File &file,ILDG_Offset pos,int amode)$/;"	f	namespace:nissa
ILDG_File_set_position	tools/conf_transform/edit/ILDG_File_light.cpp	/^void ILDG_File_set_position(ILDG_File &file,ILDG_Offset pos,int amode)$/;"	f
ILDG_File_set_view	src/io/ILDG_File.cpp	/^  void ILDG_File_set_view(ILDG_File &file,ILDG_File_view &view)$/;"	f	namespace:nissa
ILDG_File_skip_nbytes	src/io/ILDG_File.cpp	/^  void ILDG_File_skip_nbytes(ILDG_File &file,ILDG_Offset nbytes)$/;"	f	namespace:nissa
ILDG_File_skip_nbytes	tools/conf_transform/edit/ILDG_File_light.cpp	/^void ILDG_File_skip_nbytes(ILDG_File &file,ILDG_Offset nbytes)$/;"	f
ILDG_File_skip_record	src/io/ILDG_File.cpp	/^  void ILDG_File_skip_record(ILDG_File &file,ILDG_header header)$/;"	f	namespace:nissa
ILDG_File_skip_record	tools/conf_transform/edit/ILDG_File_light.cpp	/^void ILDG_File_skip_record(ILDG_File &file,ILDG_header header)$/;"	f
ILDG_File_view	src/io/ILDG_File.hpp	/^  struct ILDG_File_view$/;"	s	namespace:nissa
ILDG_File_write	tools/conf_transform/edit/ILDG_File_light.cpp	/^void ILDG_File_write(ILDG_File &file,void *data,int nbytes_req)$/;"	f
ILDG_File_write_all_messages	src/io/ILDG_File.cpp	/^  void ILDG_File_write_all_messages(ILDG_File &file,ILDG_message *mess)$/;"	f	namespace:nissa
ILDG_File_write_checksum	src/io/ILDG_File.cpp	/^  void ILDG_File_write_checksum(ILDG_File &file,checksum check)$/;"	f	namespace:nissa
ILDG_File_write_ildg_data_all	src/io/ILDG_File.cpp	/^  void ILDG_File_write_ildg_data_all(ILDG_File &file,void *data,ILDG_Offset nbytes_per_site,const char *type)$/;"	f	namespace:nissa
ILDG_File_write_record	src/io/ILDG_File.cpp	/^  void ILDG_File_write_record(ILDG_File &file,const char *type,const char *ext_buf,uint64_t ext_len)$/;"	f	namespace:nissa
ILDG_File_write_record_header	src/io/ILDG_File.cpp	/^  void ILDG_File_write_record_header(ILDG_File &file,ILDG_header &header_to_write)$/;"	f	namespace:nissa
ILDG_File_write_text_record	src/io/ILDG_File.cpp	/^  void ILDG_File_write_text_record(ILDG_File &file,const char *type,const char *text)$/;"	f	namespace:nissa
ILDG_MAGIC_NO	src/io/ILDG_File.hpp	26;"	d
ILDG_MAGIC_NO	tools/conf_transform/edit/ILDG_File_light.cpp	9;"	d	file:
ILDG_MB_MASK	src/io/ILDG_File.hpp	27;"	d
ILDG_ME_MASK	src/io/ILDG_File.hpp	28;"	d
ILDG_Offset	src/io/ILDG_File.hpp	/^  typedef MPI_Offset ILDG_Offset;$/;"	t	namespace:nissa
ILDG_Offset	tools/conf_transform/edit/ILDG_File_light.hpp	/^typedef off_t ILDG_Offset;$/;"	t
ILDG_bin_message_append_to_last	src/io/ILDG_File.cpp	/^  ILDG_message* ILDG_bin_message_append_to_last(ILDG_message *first_mess,const char *name,const char *data,uint64_t length)$/;"	f	namespace:nissa
ILDG_header	src/io/ILDG_File.hpp	/^  struct ILDG_header$/;"	s	namespace:nissa
ILDG_header	tools/conf_transform/edit/ILDG_File_light.hpp	/^struct ILDG_header$/;"	s
ILDG_message	src/io/ILDG_File.hpp	/^  struct ILDG_message$/;"	s	namespace:nissa
ILDG_message_find_last	src/io/ILDG_File.cpp	/^  ILDG_message *ILDG_message_find_last(ILDG_message *mess)$/;"	f	namespace:nissa
ILDG_message_free_all	src/io/ILDG_File.cpp	/^  void ILDG_message_free_all(ILDG_message *mess)$/;"	f	namespace:nissa
ILDG_message_init_to_last	src/io/ILDG_File.cpp	/^  void ILDG_message_init_to_last(ILDG_message *mess)$/;"	f	namespace:nissa
ILDG_string_message_append_to_last	src/io/ILDG_File.cpp	/^  ILDG_message* ILDG_string_message_append_to_last(ILDG_message *mess,const char *name,const char *data)$/;"	f	namespace:nissa
IM	src/new_types/complex.hpp	13;"	d
IMAG_CORR	build/projects/semileptonic/parse_corr.cpp	/^    IMAG_CORR = 260,$/;"	e	enum:yytokentype	file:
IMAG_CORR	build/projects/semileptonic/parse_corr.cpp	137;"	d	file:
IMAG_CORR	build/projects/semileptonic/parse_corr.hpp	/^    IMAG_CORR = 260,$/;"	e	enum:yytokentype
IMAG_CORR	build/projects/semileptonic/parse_corr.hpp	60;"	d
IMPORT_ARG	src/base/thread_macros.hpp	94;"	d
INITIAL	build/projects/generate_confs/tokenizer.cpp	1131;"	d	file:
INITIAL	build/projects/semileptonic/tokenize_corr.cpp	504;"	d	file:
INIT_ARPACK_TO	src/eigenvalues/eigenvalues_arpack.hpp	155;"	d
INIT_ARPACK_TO	src/eigenvalues/eigenvalues_arpack.hpp	18;"	d
INIT_ARPACK_TO	src/eigenvalues/eigenvalues_arpack.hpp	20;"	d
INIT_EXTERN_TO	src/io/input.hpp	6;"	d
INIT_EXTERN_TO	src/io/input.hpp	8;"	d
INIT_TO	projects/ib/conf.hpp	11;"	d
INIT_TO	projects/ib/conf.hpp	47;"	d
INIT_TO	projects/ib/conf.hpp	9;"	d
INIT_TO	projects/ib/contr.hpp	149;"	d
INIT_TO	projects/ib/contr.hpp	16;"	d
INIT_TO	projects/ib/contr.hpp	18;"	d
INIT_TO	projects/ib/meslep.hpp	10;"	d
INIT_TO	projects/ib/meslep.hpp	54;"	d
INIT_TO	projects/ib/meslep.hpp	8;"	d
INIT_TO	projects/ib/pars.hpp	10;"	d
INIT_TO	projects/ib/pars.hpp	12;"	d
INIT_TO	projects/ib/pars.hpp	251;"	d
INIT_TO	projects/ib/prop.hpp	12;"	d
INIT_TO	projects/ib/prop.hpp	14;"	d
INIT_TO	projects/ib/prop.hpp	168;"	d
INIT_TO	src/base/DDalphaAMG_bridge.hpp	10;"	d
INIT_TO	src/base/DDalphaAMG_bridge.hpp	28;"	d
INIT_TO	src/base/DDalphaAMG_bridge.hpp	8;"	d
INIT_TO	src/base/tmLQCD_bridge.hpp	15;"	d
INIT_TO	src/base/tmLQCD_bridge.hpp	37;"	d
INIT_TO	src/io/ILDG_File.hpp	159;"	d
INIT_TO	src/io/ILDG_File.hpp	21;"	d
INIT_TO	src/io/ILDG_File.hpp	23;"	d
INIT_TO	src/routines/thread.hpp	14;"	d
INIT_TO	src/routines/thread.hpp	17;"	d
INIT_TO	src/routines/thread.hpp	56;"	d
INSERT_VECTOR_VERTEX	src/operations/covariant_derivative.cpp	58;"	d	file:
INSTALL	build/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	build/projects/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	build/src/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	build/tools/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	build/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	build/projects/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	build/src/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	build/tools/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	build/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	build/projects/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	build/src/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	build/tools/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	build/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	build/projects/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	build/src/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	build/tools/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	build/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	build/projects/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	build/src/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	build/tools/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	build/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	build/projects/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	build/src/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	build/tools/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INT16_MAX	build/projects/generate_confs/tokenizer.cpp	72;"	d	file:
INT16_MAX	build/projects/semileptonic/tokenize_corr.cpp	72;"	d	file:
INT16_MIN	build/projects/generate_confs/tokenizer.cpp	63;"	d	file:
INT16_MIN	build/projects/semileptonic/tokenize_corr.cpp	63;"	d	file:
INT32_MAX	build/projects/generate_confs/tokenizer.cpp	75;"	d	file:
INT32_MAX	build/projects/semileptonic/tokenize_corr.cpp	75;"	d	file:
INT32_MIN	build/projects/generate_confs/tokenizer.cpp	66;"	d	file:
INT32_MIN	build/projects/semileptonic/tokenize_corr.cpp	66;"	d	file:
INT8_MAX	build/projects/generate_confs/tokenizer.cpp	69;"	d	file:
INT8_MAX	build/projects/semileptonic/tokenize_corr.cpp	69;"	d	file:
INT8_MIN	build/projects/generate_confs/tokenizer.cpp	60;"	d	file:
INT8_MIN	build/projects/semileptonic/tokenize_corr.cpp	60;"	d	file:
INTERPOLATOR	build/projects/semileptonic/parse_corr.cpp	/^    INTERPOLATOR = 262,$/;"	e	enum:yytokentype	file:
INTERPOLATOR	build/projects/semileptonic/parse_corr.cpp	139;"	d	file:
INTERPOLATOR	build/projects/semileptonic/parse_corr.hpp	/^    INTERPOLATOR = 262,$/;"	e	enum:yytokentype
INTERPOLATOR	build/projects/semileptonic/parse_corr.hpp	62;"	d
IN_SHIFT	src/inverters/templates/cgm_32_invert_template_threaded.cpp	46;"	d	file:
IN_SHIFT	src/inverters/templates/cgm_invert_template_threaded.cpp	62;"	d	file:
IS_MASTER_THREAD	src/base/thread_macros.hpp	61;"	d
IS_MASTER_THREAD	src/base/thread_macros.hpp	80;"	d
IS_PARALLEL	src/base/thread_macros.hpp	31;"	d
IWASAKI_GAUGE_ACTION	src/hmc/gauge/gluonic_action.hpp	/^  enum gauge_action_name_t{UNSPEC_GAUGE_ACTION,WILSON_GAUGE_ACTION,TLSYM_GAUGE_ACTION,IWASAKI_GAUGE_ACTION};$/;"	e	enum:nissa::gauge_action_name_t
Iwasaki_action	src/hmc/gauge/Symanzik_action.hpp	/^  template <class T> void Iwasaki_action(double *action,T lx_conf,double beta)$/;"	f	namespace:nissa
J	projects/ib/disco.cpp	/^  enum field_t{J,j,xi,J_tot};$/;"	e	enum:curr::field_t	file:
J_tot	projects/ib/disco.cpp	/^  enum field_t{J,j,xi,J_tot};$/;"	e	enum:curr::field_t	file:
K	work_in_prog/eo_inverter/invert2.cpp	/^void K(spincolor *out,spincolor *in,quad_su3* conf,double mu,double kappa)$/;"	f
K2	work_in_prog/eo_inverter/invert2.cpp	/^void K2(spincolor *out,spincolor *in,quad_su3 *conf,double mu,double kappa)$/;"	f
L	projects/ib/checks.cpp	/^int T=8,L=4;$/;"	v
L	projects/ib/mel.cpp	/^spinspin **L,*temp_lep;$/;"	v
L	projects/ib/prop.hpp	/^  EXTERN_PROP spinspin **L;$/;"	m	namespace:nissa
L	projects/semileptonic/gevp.cpp	/^int T,L,seed;$/;"	v
L	projects/semileptonic/gevp_3pts.cpp	/^int T,L,seed;$/;"	v
L	projects/semileptonic/test_proj.cpp	/^int T,L,seed,tsource,npassed_conf,ntot_conf,rprop,binary_ascii;$/;"	v
L	projects/x/tests/test_meson_exchange_correction.cpp	/^int L=8;$/;"	v
L	projects/x/tests/test_meson_self_energy_stochastic_correction.cpp	/^int L=4;$/;"	v
L	projects/x/tests/test_meson_tad_pole_correction.cpp	/^int L=4;$/;"	v
L	projects/x/tests/test_meson_tree_level_correction.cpp	/^int L=4;$/;"	v
L	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^int L;$/;"	v
L	projects/x/tests/test_twisted_propagator_self.cpp	/^int L;$/;"	v
L	projects/x/tests/test_twisted_propagator_tadpole.cpp	/^int L;$/;"	v
L	tools/conf_measure/magn.cpp	/^int L,T;$/;"	v
L	tools/conf_measure/topo.cpp	/^int L,T;$/;"	v
L	tools/conf_transform/convert/Claudio_to_ildg.cpp	/^int L,T;$/;"	v
L	tools/conf_transform/convert/eo_to_ildg.cpp	/^int T,L;$/;"	v
L	tools/conf_transform/convert/gpu_to_ildg.cpp	/^int L,T;$/;"	v
L	tools/conf_transform/convert/ildg_to_eo.cpp	/^int T,L;$/;"	v
L	tools/conf_transform/convert/ildg_to_gpu.cpp	/^int L,T;$/;"	v
L	tools/conf_transform/convert/usqcd_to_ildg.cpp	/^int L=24,T=48;$/;"	v
L	tools/conf_transform/smear/stout.cpp	/^int L,T;$/;"	v
L	tools/find_best_vir_partitioning/find.cpp	/^  int L[4],NR;$/;"	m	struct:valid_partition_lister_t	file:
LANDAU_ALPHA	src/free_theory/free_theory_types.hpp	/^  const double FEYNMAN_ALPHA=1,LANDAU_ALPHA=0;$/;"	m	namespace:nissa
LAPACK_LIBS	build/Makefile	/^LAPACK_LIBS = $/;"	m
LAPACK_LIBS	build/projects/Makefile	/^LAPACK_LIBS = $/;"	m
LAPACK_LIBS	build/src/Makefile	/^LAPACK_LIBS = $/;"	m
LAPACK_LIBS	build/tools/Makefile	/^LAPACK_LIBS = $/;"	m
LC_gauge_fixing_pars_t	src/operations/gauge_fixing.hpp	/^    LC_gauge_fixing_pars_t() :$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
LC_gauge_fixing_pars_t	src/operations/gauge_fixing.hpp	/^  struct LC_gauge_fixing_pars_t$/;"	s	namespace:nissa
LDADD	build/projects/Makefile	/^LDADD = $(top_builddir)\/lib\/libnissa.a$/;"	m
LDADD	build/tools/Makefile	/^LDADD = $(top_builddir)\/lib\/libnissa.a$/;"	m
LDFLAGS	build/Makefile	/^LDFLAGS = -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib $/;"	m
LDFLAGS	build/projects/Makefile	/^LDFLAGS = -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib $/;"	m
LDFLAGS	build/src/Makefile	/^LDFLAGS = -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib $/;"	m
LDFLAGS	build/tools/Makefile	/^LDFLAGS = -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib $/;"	m
LEX	build/Makefile	/^LEX = flex$/;"	m
LEX	build/projects/Makefile	/^LEX = flex$/;"	m
LEX	build/src/Makefile	/^LEX = flex$/;"	m
LEX	build/tools/Makefile	/^LEX = flex$/;"	m
LEXCOMPILE	build/projects/Makefile	/^LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)$/;"	m
LEXLIB	build/Makefile	/^LEXLIB = $/;"	m
LEXLIB	build/projects/Makefile	/^LEXLIB = $/;"	m
LEXLIB	build/src/Makefile	/^LEXLIB = $/;"	m
LEXLIB	build/tools/Makefile	/^LEXLIB = $/;"	m
LEX_OUTPUT_ROOT	build/Makefile	/^LEX_OUTPUT_ROOT = lex.yy$/;"	m
LEX_OUTPUT_ROOT	build/projects/Makefile	/^LEX_OUTPUT_ROOT = lex.yy$/;"	m
LEX_OUTPUT_ROOT	build/src/Makefile	/^LEX_OUTPUT_ROOT = lex.yy$/;"	m
LEX_OUTPUT_ROOT	build/tools/Makefile	/^LEX_OUTPUT_ROOT = lex.yy$/;"	m
LIBOBJS	build/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	build/projects/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	build/src/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	build/tools/Makefile	/^LIBOBJS = $/;"	m
LIBRARIES	build/src/Makefile	/^LIBRARIES = $(lib_LIBRARIES)$/;"	m
LIBS	build/Makefile	/^LIBS = -lgmp -lfftw3 -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread  -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread $/;"	m
LIBS	build/projects/Makefile	/^LIBS = -lgmp -lfftw3 -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread  -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread $/;"	m
LIBS	build/src/Makefile	/^LIBS = -lgmp -lfftw3 -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread  -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread $/;"	m
LIBS	build/tools/Makefile	/^LIBS = -lgmp -lfftw3 -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread  -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread $/;"	m
LINK	build/projects/Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	build/src/Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LOAD	projects/ib/disco.cpp	/^  enum{STORE,LOAD};$/;"	e	enum:hits::__anon3	file:
LOAD_AND_SUBT_NEXT_TERM	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	93;"	d
LOAD_AND_SUMM_NEXT_TERM	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	88;"	d
LTLIBOBJS	build/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	build/projects/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	build/src/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	build/tools/Makefile	/^LTLIBOBJS = $/;"	m
LX	projects/generate_confs/driver.hpp	/^    int LX,LY,LZ;$/;"	m	class:nissa::driver_t
LY	projects/generate_confs/driver.hpp	/^    int LX,LY,LZ;$/;"	m	class:nissa::driver_t
LZ	projects/generate_confs/driver.hpp	/^    int LX,LY,LZ;$/;"	m	class:nissa::driver_t
Landau	src/operations/gauge_fixing.hpp	/^    enum gauge_t{Landau=0,Coulomb=1};$/;"	e	enum:nissa::LC_gauge_fixing_pars_t::gauge_t
Landau_or_Coulomb_gauge_fixing_exponentiate	src/operations/gauge_fixing.cpp	/^  void Landau_or_Coulomb_gauge_fixing_exponentiate(quad_su3 *fixed_conf,su3 *fixer,LC_gauge_fixing_pars_t::gauge_t gauge,$/;"	f	namespace:nissa
Landau_or_Coulomb_gauge_fixing_overrelax	src/operations/gauge_fixing.cpp	/^  void Landau_or_Coulomb_gauge_fixing_overrelax(quad_su3 *fixed_conf,LC_gauge_fixing_pars_t::gauge_t gauge,double overrelax_prob,su3 *fixer,quad_su3 *ori_conf)$/;"	f	namespace:nissa
Leb_factors_t	src/geometry/geometry_Leb.hpp	/^  typedef std::vector<std::vector<int> > Leb_factors_t;$/;"	t	namespace:nissa
Leb_geom_inited	src/geometry/geometry_Leb.hpp	/^  EXTERN_GEOMETRY_LEB int Leb_geom_inited;$/;"	m	namespace:nissa
Lebeo_neighdw	src/geometry/geometry_Leb.hpp	/^  EXTERN_GEOMETRY_LEB coords *Lebeo_neighdw[2];$/;"	m	namespace:nissa
Lebeo_neighup	src/geometry/geometry_Leb.hpp	/^  EXTERN_GEOMETRY_LEB coords *Lebeo_neighup[2];$/;"	m	namespace:nissa
Lebeo_of_loceo	src/geometry/geometry_Leb.hpp	/^  EXTERN_GEOMETRY_LEB int *Lebeo_of_loceo[2];$/;"	m	namespace:nissa
Leblx_neighdw	src/geometry/geometry_Leb.hpp	/^  EXTERN_GEOMETRY_LEB coords *Leblx_neighdw;$/;"	m	namespace:nissa
Leblx_neighup	src/geometry/geometry_Leb.hpp	/^  EXTERN_GEOMETRY_LEB coords *Leblx_neighup;$/;"	m	namespace:nissa
Leblx_of_loclx	src/geometry/geometry_Leb.hpp	/^  EXTERN_GEOMETRY_LEB int *Leblx_of_loclx;$/;"	m	namespace:nissa
Leblx_parity	src/geometry/geometry_Leb.hpp	/^  EXTERN_GEOMETRY_LEB int *Leblx_parity;$/;"	m	namespace:nissa
MACRO_GUARD	build/src/config.hpp	84;"	d
MAKEINFO	build/Makefile	/^MAKEINFO = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing makeinfo$/;"	m
MAKEINFO	build/projects/Makefile	/^MAKEINFO = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing makeinfo$/;"	m
MAKEINFO	build/src/Makefile	/^MAKEINFO = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing makeinfo$/;"	m
MAKEINFO	build/tools/Makefile	/^MAKEINFO = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/missing makeinfo$/;"	m
MANDATORY_NOT_PARALLEL	src/base/thread_macros.hpp	24;"	d
MANDATORY_NOT_PARALLEL	src/base/thread_macros.hpp	28;"	d
MANDATORY_PARALLEL	src/base/thread_macros.hpp	23;"	d
MANDATORY_PARALLEL	src/base/thread_macros.hpp	27;"	d
MAX_TWIST_BASE	src/free_theory/free_theory_types.hpp	/^  enum tm_basis_t{WILSON_BASE,MAX_TWIST_BASE};$/;"	e	enum:nissa::tm_basis_t
MAX_VERBOSITY_LV	build/src/config.hpp	87;"	d
MFACC_fields_action	src/hmc/gauge/MFACC_fields.cpp	/^  double MFACC_fields_action(su3 **phi,int naux_fields)$/;"	f	namespace:nissa
MFACC_momenta_action	src/hmc/momenta/momenta_action.hpp	/^  inline double MFACC_momenta_action(su3 **pi,int naux_fields,quad_su3 *conf,double kappa)$/;"	f	namespace:nissa
MINV	src/operations/stag/stag.hpp	103;"	d
MKDIR_P	build/Makefile	/^MKDIR_P = \/usr\/bin\/mkdir -p$/;"	m
MKDIR_P	build/projects/Makefile	/^MKDIR_P = \/usr\/bin\/mkdir -p$/;"	m
MKDIR_P	build/src/Makefile	/^MKDIR_P = \/usr\/bin\/mkdir -p$/;"	m
MKDIR_P	build/tools/Makefile	/^MKDIR_P = \/usr\/bin\/mkdir -p$/;"	m
MPICXX	build/Makefile	/^MPICXX = \/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/bin64\/mpiicpc$/;"	m
MPICXX	build/projects/Makefile	/^MPICXX = \/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/bin64\/mpiicpc$/;"	m
MPICXX	build/src/Makefile	/^MPICXX = \/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/bin64\/mpiicpc$/;"	m
MPICXX	build/tools/Makefile	/^MPICXX = \/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/bin64\/mpiicpc$/;"	m
MPIFC	build/Makefile	/^MPIFC = mpiifort$/;"	m
MPIFC	build/projects/Makefile	/^MPIFC = mpiifort$/;"	m
MPIFC	build/src/Makefile	/^MPIFC = mpiifort$/;"	m
MPIFC	build/tools/Makefile	/^MPIFC = mpiifort$/;"	m
MPI_AS2T_SU3	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_AS2T_SU3;$/;"	m	namespace:nissa
MPI_COLOR	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_COLOR;$/;"	m	namespace:nissa
MPI_CXXFLAGS	build/Makefile	/^MPI_CXXFLAGS = -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include  -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include$/;"	m
MPI_CXXFLAGS	build/projects/Makefile	/^MPI_CXXFLAGS = -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include  -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include$/;"	m
MPI_CXXFLAGS	build/src/Makefile	/^MPI_CXXFLAGS = -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include  -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include$/;"	m
MPI_CXXFLAGS	build/tools/Makefile	/^MPI_CXXFLAGS = -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include  -I\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/include$/;"	m
MPI_CXXLDFLAGS	build/Makefile	/^MPI_CXXLDFLAGS = -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib$/;"	m
MPI_CXXLDFLAGS	build/projects/Makefile	/^MPI_CXXLDFLAGS = -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib$/;"	m
MPI_CXXLDFLAGS	build/src/Makefile	/^MPI_CXXLDFLAGS = -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib$/;"	m
MPI_CXXLDFLAGS	build/tools/Makefile	/^MPI_CXXLDFLAGS = -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib\/release_mt  -L\/cineca\/prod\/opt\/compilers\/intel\/pe-xe-2017\/binary\/impi\/2017.3.196\/intel64\/lib$/;"	m
MPI_CXXLIBS	build/Makefile	/^MPI_CXXLIBS = -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread  -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread$/;"	m
MPI_CXXLIBS	build/projects/Makefile	/^MPI_CXXLIBS = -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread  -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread$/;"	m
MPI_CXXLIBS	build/src/Makefile	/^MPI_CXXLIBS = -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread  -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread$/;"	m
MPI_CXXLIBS	build/tools/Makefile	/^MPI_CXXLIBS = -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread  -lmpicxx  -lmpifort  -lmpi  -lmpigi  -ldl  -lrt  -lpthread$/;"	m
MPI_EO_QUAD_SU3_EDGES_RECE	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_EO_QUAD_SU3_EDGES_SEND[96],MPI_EO_QUAD_SU3_EDGES_RECE[NDIM*(NDIM-1)\/2];$/;"	m	namespace:nissa
MPI_EO_QUAD_SU3_EDGES_SEND	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_EO_QUAD_SU3_EDGES_SEND[96],MPI_EO_QUAD_SU3_EDGES_RECE[NDIM*(NDIM-1)\/2];$/;"	m	namespace:nissa
MPI_FFLAGS	build/Makefile	/^MPI_FFLAGS = $/;"	m
MPI_FFLAGS	build/projects/Makefile	/^MPI_FFLAGS = $/;"	m
MPI_FFLAGS	build/src/Makefile	/^MPI_FFLAGS = $/;"	m
MPI_FFLAGS	build/tools/Makefile	/^MPI_FFLAGS = $/;"	m
MPI_FLDFLAGS	build/Makefile	/^MPI_FLDFLAGS = $/;"	m
MPI_FLDFLAGS	build/projects/Makefile	/^MPI_FLDFLAGS = $/;"	m
MPI_FLDFLAGS	build/src/Makefile	/^MPI_FLDFLAGS = $/;"	m
MPI_FLDFLAGS	build/tools/Makefile	/^MPI_FLDFLAGS = $/;"	m
MPI_FLIBS	build/Makefile	/^MPI_FLIBS = $/;"	m
MPI_FLIBS	build/projects/Makefile	/^MPI_FLIBS = $/;"	m
MPI_FLIBS	build/src/Makefile	/^MPI_FLIBS = $/;"	m
MPI_FLIBS	build/tools/Makefile	/^MPI_FLIBS = $/;"	m
MPI_FLOAT_128	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_FLOAT_128;$/;"	m	namespace:nissa
MPI_FLOAT_128_SUM	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Op MPI_FLOAT_128_SUM;$/;"	m	namespace:nissa
MPI_FLOAT_128_SUM_routine	src/routines/mpi_routines.cpp	/^  void MPI_FLOAT_128_SUM_routine(void *in,void *out,int *len,MPI_Datatype *type)$/;"	f	namespace:nissa
MPI_Get_count_size_t	src/routines/mpi_routines.cpp	/^  size_t MPI_Get_count_size_t(MPI_Status &status)$/;"	f	namespace:nissa
MPI_LX_AS2T_SU3_EDGES_RECE	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_LX_AS2T_SU3_EDGES_SEND[NDIM*(NDIM-1)\/2],MPI_LX_AS2T_SU3_EDGES_RECE[NDIM*(NDIM-1)\/2];$/;"	m	namespace:nissa
MPI_LX_AS2T_SU3_EDGES_SEND	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_LX_AS2T_SU3_EDGES_SEND[NDIM*(NDIM-1)\/2],MPI_LX_AS2T_SU3_EDGES_RECE[NDIM*(NDIM-1)\/2];$/;"	m	namespace:nissa
MPI_LX_QUAD_SU3_EDGES_RECE	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_LX_QUAD_SU3_EDGES_SEND[NDIM*(NDIM-1)\/2],MPI_LX_QUAD_SU3_EDGES_RECE[NDIM*(NDIM-1)\/2];$/;"	m	namespace:nissa
MPI_LX_QUAD_SU3_EDGES_SEND	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_LX_QUAD_SU3_EDGES_SEND[NDIM*(NDIM-1)\/2],MPI_LX_QUAD_SU3_EDGES_RECE[NDIM*(NDIM-1)\/2];$/;"	m	namespace:nissa
MPI_LX_SU3_EDGES_RECE	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_LX_SU3_EDGES_SEND[NDIM*(NDIM-1)\/2],MPI_LX_SU3_EDGES_RECE[NDIM*(NDIM-1)\/2];$/;"	m	namespace:nissa
MPI_LX_SU3_EDGES_SEND	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_LX_SU3_EDGES_SEND[NDIM*(NDIM-1)\/2],MPI_LX_SU3_EDGES_RECE[NDIM*(NDIM-1)\/2];$/;"	m	namespace:nissa
MPI_QUAD_SU3	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_QUAD_SU3;$/;"	m	namespace:nissa
MPI_REDSPINCOLOR	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_REDSPINCOLOR;$/;"	m	namespace:nissa
MPI_SPIN	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_SPIN;$/;"	m	namespace:nissa
MPI_SPINCOLOR	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_SPINCOLOR;$/;"	m	namespace:nissa
MPI_SPINCOLOR_128	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_SPINCOLOR_128;$/;"	m	namespace:nissa
MPI_SPINSPIN	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_SPINSPIN;$/;"	m	namespace:nissa
MPI_SU3	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Datatype MPI_SU3;$/;"	m	namespace:nissa
M_PI	src/routines/math_routines.hpp	10;"	d
M_of_mom	projects/ib/checks.cpp	/^double M_of_mom(tm_quark_info qu,double sin2_momh)$/;"	f
M_of_mom	projects/ib/checks.cpp	/^double M_of_mom(tm_quark_info qu,int imom)$/;"	f
N	projects/cpn/cpn.cpp	2;"	d	file:
N	projects/x/progs/combine.cpp	/^int N;$/;"	v
NACTIVE_THREADS	src/base/thread_macros.hpp	22;"	d
NACTIVE_THREADS	src/base/thread_macros.hpp	26;"	d
NAME2	build/src/config.hpp	90;"	d
NAME3	build/src/config.hpp	93;"	d
NAME4	build/src/config.hpp	96;"	d
NATIVE_FFT	build/src/config.hpp	99;"	d
NATIVE_HIGH_PREC	build/src/config.hpp	102;"	d
NCOL	build/src/config.hpp	105;"	d
NDIM	build/src/config.hpp	108;"	d
NDIRAC	src/new_types/dirac.hpp	15;"	d
NDOUBLES_PER_SITE	src/inverters/Wclov/cg_invert_WclovQ2.cpp	12;"	d	file:
NDOUBLES_PER_SITE	src/inverters/momenta/cg_invert_MFACC.cpp	12;"	d	file:
NDOUBLES_PER_SITE	src/inverters/momenta/cgm_invert_MFACC.cpp	12;"	d	file:
NDOUBLES_PER_SITE	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.cpp	12;"	d	file:
NDOUBLES_PER_SITE	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.cpp	14;"	d	file:
NDOUBLES_PER_SITE	src/inverters/staggered/cg_invert_stD2ee_m2_portable.cpp	12;"	d	file:
NDOUBLES_PER_SITE	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	14;"	d	file:
NDOUBLES_PER_SITE	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	11;"	d	file:
NDOUBLES_PER_SITE	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	14;"	d	file:
NDOUBLES_PER_SITE	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	11;"	d	file:
NDOUBLES_PER_SITE	src/inverters/templates/cg_128_invert_template_threaded.cpp	115;"	d	file:
NDOUBLES_PER_SITE	src/inverters/templates/cg_invert_template_threaded.cpp	140;"	d	file:
NDOUBLES_PER_SITE	src/inverters/templates/cgm_invert_template_threaded.cpp	347;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.cpp	15;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	13;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	12;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	22;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.cpp	15;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.cpp	10;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.cpp	12;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	17;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	21;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	16;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.cpp	15;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	13;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	12;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	22;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.cpp	15;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_mass/cg_64_invert_tmQ2.cpp	13;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.cpp	15;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	18;"	d	file:
NDOUBLES_PER_SITE	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	16;"	d	file:
NEG	build/projects/generate_confs/parser.cpp	/^    NEG = 267,$/;"	e	enum:yytokentype	file:
NEG	build/projects/generate_confs/parser.cpp	278;"	d	file:
NEG	build/projects/generate_confs/parser.hpp	/^    NEG = 267,$/;"	e	enum:yytokentype
NEG	build/projects/generate_confs/parser.hpp	195;"	d
NEG	build/projects/semileptonic/parse_corr.cpp	/^    NEG = 264$/;"	e	enum:yytokentype	file:
NEG	build/projects/semileptonic/parse_corr.cpp	141;"	d	file:
NEG	build/projects/semileptonic/parse_corr.hpp	/^    NEG = 264$/;"	e	enum:yytokentype
NEG	build/projects/semileptonic/parse_corr.hpp	64;"	d
NEW_FIELD_T	src/operations/stag/stag.hpp	96;"	d
NEW_TIME_CORR	src/operations/stag/stag.hpp	111;"	d
NEW_TRACE_RES	src/operations/stag/stag.hpp	107;"	d
NEW_TRACE_RES_VEC	src/operations/stag/stag.hpp	109;"	d
NGAMMA	projects/semileptonic/test_proj.cpp	4;"	d	file:
NISSA_CHUNK_LOOP	src/base/thread_macros.hpp	39;"	d
NISSA_CHUNK_WORKLOAD	src/base/thread_macros.hpp	33;"	d
NISSA_DEFAULT_MPF_PRECISION	src/new_types/high_prec.hpp	23;"	d
NISSA_DEFAULT_USE_128_BIT_PRECISION	src/new_types/float_128.hpp	13;"	d
NISSA_DEFAULT_USE_ARPACK	src/eigenvalues/eigenvalues.hpp	18;"	d
NISSA_DEFAULT_USE_ASYNC_COMMUNICATIONS	src/communicate/communicate.hpp	13;"	d
NISSA_DEFAULT_USE_EO_GEOM	src/geometry/geometry_eo.hpp	12;"	d
NISSA_DEFAULT_USE_HUGEPAGES	src/communicate/communicate.hpp	80;"	d
NISSA_DEFAULT_USE_LEB_GEOM	src/geometry/geometry_Leb.hpp	8;"	d
NISSA_DEFAULT_VERBOSITY_LV	src/routines/ios.hpp	42;"	d
NISSA_DEFAULT_VNODE_PARAL_DIR	src/geometry/geometry_vir.hpp	11;"	d
NISSA_DEFAULT_WARN_IF_NOT_COMMUNICATED	src/communicate/communicate.hpp	12;"	d
NISSA_DEFAULT_WARN_IF_NOT_DISALLOCATED	src/base/vectors.hpp	29;"	d
NISSA_LOC_VOLH_LOOP	src/geometry/geometry_eo.hpp	14;"	d
NISSA_LOC_VOL_LOOP	src/geometry/geometry_lx.hpp	20;"	d
NISSA_PARALLEL_LOOP	src/base/thread_macros.hpp	63;"	d
NISSA_PARALLEL_LOOP	src/base/thread_macros.hpp	81;"	d
NISSA_VECT_ALIGNMENT	src/base/vectors.hpp	33;"	d
NISSA_VECT_ALIGNMENT	src/base/vectors.hpp	35;"	d
NISSA_VECT_STRING_LENGTH	src/base/vectors.hpp	31;"	d
NONLOC_LINK_FLAG	src/operations/su3_paths/arbitrary.hpp	14;"	d
NORMAL_INSTALL	build/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	build/projects/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	build/src/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	build/tools/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	build/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	build/projects/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	build/src/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	build/tools/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NR	tools/find_best_vir_partitioning/find.cpp	/^  int L[4],NR;$/;"	m	struct:valid_partition_lister_t	file:
NSPI_FIFO	src/bgq/spi.hpp	22;"	d
NVNODES	src/geometry/geometry_vir.hpp	14;"	d
OBJEXT	build/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	build/projects/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	build/src/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	build/tools/Makefile	/^OBJEXT = o$/;"	m
ODD	src/geometry/geometry_eo.hpp	10;"	d
ONLY_100	src/free_theory/free_theory_types.hpp	/^  enum zero_mode_sub_t{PECIONA,UNNO_ALEMANNA,ONLY_100};$/;"	e	enum:nissa::zero_mode_sub_t
ONLY_INSTANTIATION	src/geometry/geometry_lx.hpp	17;"	d
ONLY_INSTANTIATION	src/new_types/dirac.hpp	12;"	d
ONLY_INSTANTIATION	src/routines/thread.hpp	15;"	d
ON_t	projects/cpn/cpn.cpp	/^typedef complex ON_t[N];$/;"	t	file:
OPENMP_CXXFLAGS	build/Makefile	/^OPENMP_CXXFLAGS = -fopenmp$/;"	m
OPENMP_CXXFLAGS	build/projects/Makefile	/^OPENMP_CXXFLAGS = -fopenmp$/;"	m
OPENMP_CXXFLAGS	build/src/Makefile	/^OPENMP_CXXFLAGS = -fopenmp$/;"	m
OPENMP_CXXFLAGS	build/tools/Makefile	/^OPENMP_CXXFLAGS = -fopenmp$/;"	m
OPEN_BOUNDARY_COND	src/operations/gaugeconf.hpp	/^  enum boundary_cond_t{UNSPEC_BOUNDARY_COND,PERIODIC_BOUNDARY_COND,OPEN_BOUNDARY_COND};$/;"	e	enum:nissa::boundary_cond_t
ORIGINAL	projects/ib/mel.cpp	/^enum insertion_t{                    ORIGINAL,  SCALAR,  PSEUDO,  PHOTON,   TADPOLE};\/\/,  VECTOR};$/;"	e	enum:insertion_t	file:
Omega	src/operations/smearing/stout.hpp	/^    su3 Omega;$/;"	m	struct:nissa::stout_link_staples
Omelyan_pure_gauge_evolver_eo_conf	src/hmc/multipseudo/Omelyan_integrator.cpp	/^  void Omelyan_pure_gauge_evolver_eo_conf(quad_su3 **H_eo,quad_su3 **conf_eo,theory_pars_t *theory_pars,hmc_evol_pars_t *simul)$/;"	f	namespace:nissa
P	projects/generate_confs/generate_quenched.cpp	/^su3spinspin *P;$/;"	v
P0	src/operations/stag/qed_corr.cpp	/^    enum prop_t{P0,PS,PT,P1,P2,PV};$/;"	e	enum:nissa::__anon13::prop_t	file:
P1	src/operations/stag/qed_corr.cpp	/^    enum prop_t{P0,PS,PT,P1,P2,PV};$/;"	e	enum:nissa::__anon13::prop_t	file:
P2	src/operations/stag/qed_corr.cpp	/^    enum prop_t{P0,PS,PT,P1,P2,PV};$/;"	e	enum:nissa::__anon13::prop_t	file:
P5GI	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
P5P5	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
PACKAGE	build/Makefile	/^PACKAGE = nissa$/;"	m
PACKAGE	build/projects/Makefile	/^PACKAGE = nissa$/;"	m
PACKAGE	build/src/Makefile	/^PACKAGE = nissa$/;"	m
PACKAGE	build/tools/Makefile	/^PACKAGE = nissa$/;"	m
PACKAGE_BUGREPORT	build/Makefile	/^PACKAGE_BUGREPORT = fr.sanfilippo@gmail.com$/;"	m
PACKAGE_BUGREPORT	build/projects/Makefile	/^PACKAGE_BUGREPORT = fr.sanfilippo@gmail.com$/;"	m
PACKAGE_BUGREPORT	build/src/Makefile	/^PACKAGE_BUGREPORT = fr.sanfilippo@gmail.com$/;"	m
PACKAGE_BUGREPORT	build/src/config.hpp	111;"	d
PACKAGE_BUGREPORT	build/tools/Makefile	/^PACKAGE_BUGREPORT = fr.sanfilippo@gmail.com$/;"	m
PACKAGE_NAME	build/Makefile	/^PACKAGE_NAME = nissa$/;"	m
PACKAGE_NAME	build/projects/Makefile	/^PACKAGE_NAME = nissa$/;"	m
PACKAGE_NAME	build/src/Makefile	/^PACKAGE_NAME = nissa$/;"	m
PACKAGE_NAME	build/src/config.hpp	114;"	d
PACKAGE_NAME	build/tools/Makefile	/^PACKAGE_NAME = nissa$/;"	m
PACKAGE_STRING	build/Makefile	/^PACKAGE_STRING = nissa 1.0$/;"	m
PACKAGE_STRING	build/projects/Makefile	/^PACKAGE_STRING = nissa 1.0$/;"	m
PACKAGE_STRING	build/src/Makefile	/^PACKAGE_STRING = nissa 1.0$/;"	m
PACKAGE_STRING	build/src/config.hpp	117;"	d
PACKAGE_STRING	build/tools/Makefile	/^PACKAGE_STRING = nissa 1.0$/;"	m
PACKAGE_TARNAME	build/Makefile	/^PACKAGE_TARNAME = nissa$/;"	m
PACKAGE_TARNAME	build/projects/Makefile	/^PACKAGE_TARNAME = nissa$/;"	m
PACKAGE_TARNAME	build/src/Makefile	/^PACKAGE_TARNAME = nissa$/;"	m
PACKAGE_TARNAME	build/src/config.hpp	120;"	d
PACKAGE_TARNAME	build/tools/Makefile	/^PACKAGE_TARNAME = nissa$/;"	m
PACKAGE_URL	build/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	build/projects/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	build/src/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	build/src/config.hpp	123;"	d
PACKAGE_URL	build/tools/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	build/Makefile	/^PACKAGE_VERSION = 1.0$/;"	m
PACKAGE_VERSION	build/projects/Makefile	/^PACKAGE_VERSION = 1.0$/;"	m
PACKAGE_VERSION	build/src/Makefile	/^PACKAGE_VERSION = 1.0$/;"	m
PACKAGE_VERSION	build/src/config.hpp	126;"	d
PACKAGE_VERSION	build/tools/Makefile	/^PACKAGE_VERSION = 1.0$/;"	m
PATH_SEPARATOR	build/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	build/projects/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	build/src/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	build/tools/Makefile	/^PATH_SEPARATOR = :$/;"	m
PECIONA	src/free_theory/free_theory_types.hpp	/^  enum zero_mode_sub_t{PECIONA,UNNO_ALEMANNA,ONLY_100};$/;"	e	enum:nissa::zero_mode_sub_t
PERIODIC	projects/reno_const/RIMOM.cpp	/^enum time_bc_t{PERIODIC,ANTIPERIODIC};$/;"	e	enum:time_bc_t	file:
PERIODIC_BC	projects/ib/pars.hpp	17;"	d
PERIODIC_BOUNDARY_COND	src/operations/gaugeconf.hpp	/^  enum boundary_cond_t{UNSPEC_BOUNDARY_COND,PERIODIC_BOUNDARY_COND,OPEN_BOUNDARY_COND};$/;"	e	enum:nissa::boundary_cond_t
PHASING	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
PHI	src/operations/stag/spinpol.cpp	/^    const int nPHIETA=2,PHI=0,ETA=1;$/;"	m	namespace:nissa::__anon12	file:
PHOTON	projects/ib/mel.cpp	/^enum insertion_t{                    ORIGINAL,  SCALAR,  PSEUDO,  PHOTON,   TADPOLE};\/\/,  VECTOR};$/;"	e	enum:insertion_t	file:
PHOTON	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
PHOTON0	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
PHOTON1	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
PHOTON2	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
PHOTON3	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
PHOTON_ETA	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
PHOTON_PHI	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
POINT_SOURCE	src/base/random.hpp	/^  enum source_t{POINT_SOURCE,UNDILUTED_SOURCE,COLOR_DILUTED_SOURCE,SPIN_DILUTED_SOURCE,SPINCOLOR_DILUTED_SOURCE};$/;"	e	enum:nissa::source_t
POST_INSTALL	build/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	build/projects/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	build/src/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	build/tools/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	build/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	build/projects/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	build/src/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	build/tools/Makefile	/^POST_UNINSTALL = :$/;"	m
PP	projects/x/progs/correct.cpp	/^const int PP=0,SS=1,VV=2,AA=3;$/;"	v
PREC	src/dirac_operators/stD/dirac_operator_stD_bgq.cpp	18;"	d	file:
PREC	src/dirac_operators/stD/dirac_operator_stD_bgq.cpp	26;"	d	file:
PREC	src/dirac_operators/stD/dirac_operator_stD_bgq_template.cpp	41;"	d	file:
PREC_TYPE	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	22;"	d
PREC_TYPE	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	483;"	d
PREC_TYPE	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	55;"	d
PREC_TYPE	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	22;"	d
PREC_TYPE	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	483;"	d
PREC_TYPE	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	53;"	d
PREC_TYPE	src/dirac_operators/stD/dirac_operator_stD_bgq.cpp	19;"	d	file:
PREC_TYPE	src/dirac_operators/stD/dirac_operator_stD_bgq.cpp	27;"	d	file:
PREC_TYPE	src/dirac_operators/stD/dirac_operator_stD_bgq_template.cpp	42;"	d	file:
PRE_INSTALL	build/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	build/projects/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	build/src/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	build/tools/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	build/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	build/projects/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	build/src/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	build/tools/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRINT	src/operations/stag/stag.hpp	119;"	d
PROGRAMS	build/projects/Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
PROGRAMS	build/tools/Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
PROJ_HEADER	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	102;"	d
PROJ_HEADER	src/bgq/Wilson_hopping_matrix_lx_bgq.cpp	31;"	d	file:
PROP	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
PROP_0	projects/ib/mel.cpp	/^enum qprop_t{                           PROP_0,  PROP_S,  PROP_P,  PROP_T,  PROP_PHOTON,  PROP_PHOTON2};\/\/,  PROP_VECTOR};$/;"	e	enum:qprop_t	file:
PROP_P	projects/ib/mel.cpp	/^enum qprop_t{                           PROP_0,  PROP_S,  PROP_P,  PROP_T,  PROP_PHOTON,  PROP_PHOTON2};\/\/,  PROP_VECTOR};$/;"	e	enum:qprop_t	file:
PROP_PHOTON	projects/ib/mel.cpp	/^enum qprop_t{                           PROP_0,  PROP_S,  PROP_P,  PROP_T,  PROP_PHOTON,  PROP_PHOTON2};\/\/,  PROP_VECTOR};$/;"	e	enum:qprop_t	file:
PROP_PHOTON2	projects/ib/mel.cpp	/^enum qprop_t{                           PROP_0,  PROP_S,  PROP_P,  PROP_T,  PROP_PHOTON,  PROP_PHOTON2};\/\/,  PROP_VECTOR};$/;"	e	enum:qprop_t	file:
PROP_S	projects/ib/mel.cpp	/^enum qprop_t{                           PROP_0,  PROP_S,  PROP_P,  PROP_T,  PROP_PHOTON,  PROP_PHOTON2};\/\/,  PROP_VECTOR};$/;"	e	enum:qprop_t	file:
PROP_T	projects/ib/mel.cpp	/^enum qprop_t{                           PROP_0,  PROP_S,  PROP_P,  PROP_T,  PROP_PHOTON,  PROP_PHOTON2};\/\/,  PROP_VECTOR};$/;"	e	enum:qprop_t	file:
PROP_TYPE	projects/ib/mel.cpp	106;"	d	file:
PROP_TYPE	projects/ib/mel.cpp	108;"	d	file:
PROP_TYPE	projects/semileptonic/semileptonic_smeared.cpp	64;"	d	file:
PS	src/operations/stag/qed_corr.cpp	/^    enum prop_t{P0,PS,PT,P1,P2,PV};$/;"	e	enum:nissa::__anon13::prop_t	file:
PSEUDO	projects/ib/mel.cpp	/^enum insertion_t{                    ORIGINAL,  SCALAR,  PSEUDO,  PHOTON,   TADPOLE};\/\/,  VECTOR};$/;"	e	enum:insertion_t	file:
PSEUDO	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
PT	src/operations/stag/qed_corr.cpp	/^    enum prop_t{P0,PS,PT,P1,P2,PV};$/;"	e	enum:nissa::__anon13::prop_t	file:
PV	src/operations/stag/qed_corr.cpp	/^    enum prop_t{P0,PS,PT,P1,P2,PV};$/;"	e	enum:nissa::__anon13::prop_t	file:
P_interv	projects/reno_const/RIMOM.cpp	/^interv *X_interv[2],*P_interv[2];$/;"	v
Pline_serial	tools/pline/pline.cpp	/^void Pline_serial(su3 *Pline, quad_su3 *conf)$/;"	f
Pline_serial_backward	tools/pline/pline.cpp	/^void Pline_serial_backward(su3 *Pline, quad_su3 *conf)$/;"	f
Pline_serial_forward	tools/pline/pline.cpp	/^void Pline_serial_forward(su3 *Pline, quad_su3 *conf)$/;"	f
Pminus	src/new_types/dirac.hpp	/^  EXTERN_DIRAC dirac_matr Pplus,Pminus;$/;"	m	namespace:nissa
Pmunu	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^as2t_su3 *Pmunu;$/;"	v
Pmunu	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^as2t_su3 *Pmunu;$/;"	v
Pplus	src/new_types/dirac.hpp	/^  EXTERN_DIRAC dirac_matr Pplus,Pminus;$/;"	m	namespace:nissa
Q	projects/ib/mel.cpp	/^  PROP_TYPE **Q;$/;"	m	namespace:__anon5	file:
Q	projects/ib/prop.hpp	/^  EXTERN_PROP std::map<std::string,qprop_t> Q;$/;"	m	namespace:nissa
Q	src/new_types/su3_op.hpp	/^    su3 Q,Q2;$/;"	m	struct:nissa::hermitian_exp_ingredients
Q	src/operations/smearing/stout.hpp	/^    su3 Q;$/;"	m	struct:nissa::stout_link_staples
Q2	src/new_types/su3_op.hpp	/^    su3 Q,Q2;$/;"	m	struct:nissa::hermitian_exp_ingredients
QUOTED_TEXT	build/projects/semileptonic/parse_corr.cpp	/^    QUOTED_TEXT = 263,$/;"	e	enum:yytokentype	file:
QUOTED_TEXT	build/projects/semileptonic/parse_corr.cpp	140;"	d	file:
QUOTED_TEXT	build/projects/semileptonic/parse_corr.hpp	/^    QUOTED_TEXT = 263,$/;"	e	enum:yytokentype
QUOTED_TEXT	build/projects/semileptonic/parse_corr.hpp	63;"	d
R	tools/find_best_vir_partitioning/find.cpp	/^  coords4D_t R;$/;"	m	struct:valid_partition_lister_t	file:
RAD2	src/routines/math_routines.hpp	13;"	d
RAN2_NTAB	src/base/random.hpp	11;"	d
RANGE_FERMIONIC_MEAS	projects/generate_confs/driver.hpp	83;"	d
RANGE_FERMIONIC_MEAS_EXTENDED	projects/generate_confs/driver.hpp	87;"	d
RANGE_FERMIONIC_MEAS_IF	projects/generate_confs/driver.hpp	79;"	d
RANGE_GAUGE_MEAS	projects/generate_confs/generate.cpp	456;"	d	file:
RANLIB	build/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	build/projects/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	build/src/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	build/tools/Makefile	/^RANLIB = ranlib$/;"	m
RAT_APPR_PF_GEN	src/hmc/hmc.hpp	/^  enum rat_approx_hmc_t{RAT_APPR_PF_GEN,RAT_APPR_QUARK_ACTION,RAT_APPR_QUARK_FORCE};$/;"	e	enum:nissa::rat_approx_hmc_t
RAT_APPR_QUARK_ACTION	src/hmc/hmc.hpp	/^  enum rat_approx_hmc_t{RAT_APPR_PF_GEN,RAT_APPR_QUARK_ACTION,RAT_APPR_QUARK_FORCE};$/;"	e	enum:nissa::rat_approx_hmc_t
RAT_APPR_QUARK_FORCE	src/hmc/hmc.hpp	/^  enum rat_approx_hmc_t{RAT_APPR_PF_GEN,RAT_APPR_QUARK_ACTION,RAT_APPR_QUARK_FORCE};$/;"	e	enum:nissa::rat_approx_hmc_t
RE	src/new_types/complex.hpp	12;"	d
REAL_CORR	build/projects/semileptonic/parse_corr.cpp	/^    REAL_CORR = 259,$/;"	e	enum:yytokentype	file:
REAL_CORR	build/projects/semileptonic/parse_corr.cpp	136;"	d	file:
REAL_CORR	build/projects/semileptonic/parse_corr.hpp	/^    REAL_CORR = 259,$/;"	e	enum:yytokentype
REAL_CORR	build/projects/semileptonic/parse_corr.hpp	59;"	d
RECURSIVE_CLEAN_TARGETS	build/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	build/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
REG_LOAD_COMPLEX_AFTER_ADVANCING	src/bgq/intrinsic/load.hpp	391;"	d
REG_LOAD_COMPLEX_WITHOUT_ADVANCING	src/bgq/intrinsic/load.hpp	386;"	d
REG_LOAD_SU3	src/bgq/intrinsic/load.hpp	554;"	d
REG_LOAD_VIR_32_64_COLOR	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	44;"	d
REG_LOAD_VIR_32_64_COLOR	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	498;"	d
REG_LOAD_VIR_32_64_COLOR	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	75;"	d
REG_LOAD_VIR_32_64_COLOR_ADVANCING	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	43;"	d
REG_LOAD_VIR_32_64_COLOR_ADVANCING	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	497;"	d
REG_LOAD_VIR_32_64_COLOR_ADVANCING	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	74;"	d
REG_LOAD_VIR_32_64_HALFSPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	44;"	d
REG_LOAD_VIR_32_64_HALFSPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	501;"	d
REG_LOAD_VIR_32_64_HALFSPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	77;"	d
REG_LOAD_VIR_32_64_SPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	43;"	d
REG_LOAD_VIR_32_64_SPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	498;"	d
REG_LOAD_VIR_32_64_SPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	76;"	d
REG_LOAD_VIR_32_64_SPINCOLOR_ADVANCING	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	42;"	d
REG_LOAD_VIR_32_64_SPINCOLOR_ADVANCING	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	497;"	d
REG_LOAD_VIR_32_64_SPINCOLOR_ADVANCING	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	75;"	d
REG_LOAD_VIR_COLOR	src/bgq/intrinsic/load.hpp	428;"	d
REG_LOAD_VIR_COLOR_ADVANCING	src/bgq/intrinsic/load.hpp	438;"	d
REG_LOAD_VIR_COMPLEX	src/bgq/intrinsic/load.hpp	345;"	d
REG_LOAD_VIR_COMPLEX	src/bgq/intrinsic/load.hpp	347;"	d
REG_LOAD_VIR_COMPLEX_AFTER_ADVANCING	src/bgq/intrinsic/load.hpp	389;"	d
REG_LOAD_VIR_COMPLEX_WITHOUT_ADVANCING	src/bgq/intrinsic/load.hpp	384;"	d
REG_LOAD_VIR_HALFSPIN	src/bgq/intrinsic/load.hpp	468;"	d
REG_LOAD_VIR_HALFSPINCOLOR	src/bgq/intrinsic/load.hpp	414;"	d
REG_LOAD_VIR_PARTIAL_SU3	src/bgq/intrinsic/load.hpp	527;"	d
REG_LOAD_VIR_SINGLE_COLOR	src/bgq/intrinsic/load.hpp	448;"	d
REG_LOAD_VIR_SINGLE_COLOR_ADVANCING	src/bgq/intrinsic/load.hpp	458;"	d
REG_LOAD_VIR_SINGLE_COMPLEX_AFTER_ADVANCING	src/bgq/intrinsic/load.hpp	390;"	d
REG_LOAD_VIR_SINGLE_COMPLEX_WITHOUT_ADVANCING	src/bgq/intrinsic/load.hpp	385;"	d
REG_LOAD_VIR_SINGLE_HALFSPINCOLOR	src/bgq/intrinsic/load.hpp	478;"	d
REG_LOAD_VIR_SINGLE_SPINCOLOR	src/bgq/intrinsic/load.hpp	492;"	d
REG_LOAD_VIR_SINGLE_SU3	src/bgq/intrinsic/load.hpp	539;"	d
REG_LOAD_VIR_SPINCOLOR	src/bgq/intrinsic/load.hpp	394;"	d
REG_LOAD_VIR_SU3	src/bgq/intrinsic/load.hpp	512;"	d
REG_SPLAT_VIR_COLOR	src/bgq/intrinsic/load.hpp	323;"	d
REG_SPLAT_VIR_COMPLEX	src/bgq/intrinsic/load.hpp	312;"	d
REG_SPLAT_VIR_COMPLEX	src/bgq/intrinsic/load.hpp	314;"	d
REG_SPLAT_VIR_HALFSPIN	src/bgq/intrinsic/load.hpp	317;"	d
REG_SPLAT_VIR_HALFSPINCOLOR	src/bgq/intrinsic/load.hpp	330;"	d
REG_SPLAT_VIR_SPINCOLOR	src/bgq/intrinsic/load.hpp	336;"	d
REG_STORE_COMPLEX_AFTER_ADVANCING	src/bgq/intrinsic/store.hpp	70;"	d
REG_STORE_COMPLEX_WITHOUT_ADVANCING	src/bgq/intrinsic/store.hpp	65;"	d
REG_STORE_VIR_COMPLEX_AFTER_ADVANCING	src/bgq/intrinsic/store.hpp	68;"	d
REG_STORE_VIR_COMPLEX_WITHOUT_ADVANCING	src/bgq/intrinsic/store.hpp	63;"	d
REG_STORE_VIR_SINGLE_COMPLEX_AFTER_ADVANCING	src/bgq/intrinsic/store.hpp	69;"	d
REG_STORE_VIR_SINGLE_COMPLEX_WITHOUT_ADVANCING	src/bgq/intrinsic/store.hpp	64;"	d
REG_VIR_32_64_SU3_DAG_PROD_VIR_32_64_COLOR_LOAD_STORE	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	49;"	d
REG_VIR_32_64_SU3_DAG_PROD_VIR_32_64_COLOR_LOAD_STORE	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	503;"	d
REG_VIR_32_64_SU3_DAG_PROD_VIR_32_64_COLOR_LOAD_STORE	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	80;"	d
REG_VIR_32_64_SU3_DAG_PROD_VIR_32_64_HALFSPINCOLOR_LOAD_STORE	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	506;"	d
REG_VIR_32_64_SU3_DAG_PROD_VIR_32_64_HALFSPINCOLOR_LOAD_STORE	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	50;"	d
REG_VIR_32_64_SU3_DAG_PROD_VIR_32_64_HALFSPINCOLOR_LOAD_STORE	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	83;"	d
REG_VIR_32_64_SU3_PROD_VIR_32_64_COLOR_LOAD_STORE	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	48;"	d
REG_VIR_32_64_SU3_PROD_VIR_32_64_COLOR_LOAD_STORE	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	502;"	d
REG_VIR_32_64_SU3_PROD_VIR_32_64_COLOR_LOAD_STORE	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	79;"	d
REG_VIR_32_64_SU3_PROD_VIR_32_64_HALFSPINCOLOR_LOAD_STORE	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	49;"	d
REG_VIR_32_64_SU3_PROD_VIR_32_64_HALFSPINCOLOR_LOAD_STORE	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	504;"	d
REG_VIR_32_64_SU3_PROD_VIR_32_64_HALFSPINCOLOR_LOAD_STORE	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	82;"	d
REG_VIR_COLOR_ISUBT	src/bgq/intrinsic/oper.hpp	70;"	d
REG_VIR_COLOR_ISUMM	src/bgq/intrinsic/oper.hpp	61;"	d
REG_VIR_COLOR_PERM	src/bgq/intrinsic/mergesplit.hpp	41;"	d
REG_VIR_COLOR_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	99;"	d
REG_VIR_COLOR_PROD_COMPLEX	src/bgq/intrinsic/oper.hpp	79;"	d
REG_VIR_COLOR_PROD_CONJ2_COMPLEX	src/bgq/intrinsic/oper.hpp	88;"	d
REG_VIR_COLOR_SUBT	src/bgq/intrinsic/oper.hpp	52;"	d
REG_VIR_COLOR_SUMM	src/bgq/intrinsic/oper.hpp	43;"	d
REG_VIR_COLOR_SUMM_THE_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	158;"	d
REG_VIR_COLOR_SUMM_THE_PROD_COMPLEX	src/bgq/intrinsic/oper.hpp	223;"	d
REG_VIR_COLOR_TRANSPOSE	src/bgq/intrinsic/mergesplit.hpp	60;"	d
REG_VIR_COLOR_V01_MERGE	src/bgq/intrinsic/mergesplit.hpp	59;"	d
REG_VIR_COLOR_V0_MERGE	src/bgq/intrinsic/mergesplit.hpp	56;"	d
REG_VIR_COLOR_V10_MERGE	src/bgq/intrinsic/mergesplit.hpp	58;"	d
REG_VIR_COLOR_V1_MERGE	src/bgq/intrinsic/mergesplit.hpp	57;"	d
REG_VIR_COMPLEX_CONJ1_PROD	src/bgq/intrinsic/oper.hpp	17;"	d
REG_VIR_COMPLEX_CONJ1_PROD	src/bgq/intrinsic/oper.hpp	32;"	d
REG_VIR_COMPLEX_CONJ2_PROD	src/bgq/intrinsic/oper.hpp	40;"	d
REG_VIR_COMPLEX_ISUBT	src/bgq/intrinsic/oper.hpp	13;"	d
REG_VIR_COMPLEX_ISUBT	src/bgq/intrinsic/oper.hpp	28;"	d
REG_VIR_COMPLEX_ISUMM	src/bgq/intrinsic/oper.hpp	12;"	d
REG_VIR_COMPLEX_ISUMM	src/bgq/intrinsic/oper.hpp	27;"	d
REG_VIR_COMPLEX_PERM	src/bgq/intrinsic/mergesplit.hpp	28;"	d
REG_VIR_COMPLEX_PERM	src/bgq/intrinsic/mergesplit.hpp	37;"	d
REG_VIR_COMPLEX_PROD	src/bgq/intrinsic/oper.hpp	14;"	d
REG_VIR_COMPLEX_PROD	src/bgq/intrinsic/oper.hpp	29;"	d
REG_VIR_COMPLEX_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	15;"	d
REG_VIR_COMPLEX_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	30;"	d
REG_VIR_COMPLEX_SUBT	src/bgq/intrinsic/oper.hpp	11;"	d
REG_VIR_COMPLEX_SUBT	src/bgq/intrinsic/oper.hpp	26;"	d
REG_VIR_COMPLEX_SUBT_THE_CONJ1_PROD	src/bgq/intrinsic/oper.hpp	21;"	d
REG_VIR_COMPLEX_SUBT_THE_CONJ1_PROD	src/bgq/intrinsic/oper.hpp	36;"	d
REG_VIR_COMPLEX_SUBT_THE_PROD	src/bgq/intrinsic/oper.hpp	19;"	d
REG_VIR_COMPLEX_SUBT_THE_PROD	src/bgq/intrinsic/oper.hpp	34;"	d
REG_VIR_COMPLEX_SUMM	src/bgq/intrinsic/oper.hpp	10;"	d
REG_VIR_COMPLEX_SUMM	src/bgq/intrinsic/oper.hpp	25;"	d
REG_VIR_COMPLEX_SUMM_THE_CONJ1_PROD	src/bgq/intrinsic/oper.hpp	20;"	d
REG_VIR_COMPLEX_SUMM_THE_CONJ1_PROD	src/bgq/intrinsic/oper.hpp	35;"	d
REG_VIR_COMPLEX_SUMM_THE_CONJ2_PROD	src/bgq/intrinsic/oper.hpp	41;"	d
REG_VIR_COMPLEX_SUMM_THE_PROD	src/bgq/intrinsic/oper.hpp	18;"	d
REG_VIR_COMPLEX_SUMM_THE_PROD	src/bgq/intrinsic/oper.hpp	33;"	d
REG_VIR_COMPLEX_SUMM_THE_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	16;"	d
REG_VIR_COMPLEX_SUMM_THE_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	31;"	d
REG_VIR_HALFSPINCOLOR_PERM	src/bgq/intrinsic/mergesplit.hpp	46;"	d
REG_VIR_HALFSPINCOLOR_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	116;"	d
REG_VIR_HALFSPINCOLOR_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	140;"	d
REG_VIR_HALFSPINCOLOR_PROD_COMPLEX	src/bgq/intrinsic/oper.hpp	124;"	d
REG_VIR_HALFSPINCOLOR_PROD_CONJ2_COMPLEX	src/bgq/intrinsic/oper.hpp	132;"	d
REG_VIR_HALFSPINCOLOR_SUMM	src/bgq/intrinsic/oper.hpp	183;"	d
REG_VIR_HALFSPINCOLOR_SUMM_THE_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	175;"	d
REG_VIR_HALFSPINCOLOR_SUMM_THE_PROD_COMPLEX	src/bgq/intrinsic/oper.hpp	232;"	d
REG_VIR_HALFSPINCOLOR_TRANSPOSE	src/bgq/intrinsic/mergesplit.hpp	54;"	d
REG_VIR_HALFSPINCOLOR_V01_MERGE	src/bgq/intrinsic/mergesplit.hpp	53;"	d
REG_VIR_HALFSPINCOLOR_V0_MERGE	src/bgq/intrinsic/mergesplit.hpp	50;"	d
REG_VIR_HALFSPINCOLOR_V10_MERGE	src/bgq/intrinsic/mergesplit.hpp	52;"	d
REG_VIR_HALFSPINCOLOR_V1_MERGE	src/bgq/intrinsic/mergesplit.hpp	51;"	d
REG_VIR_HALFSPIN_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	108;"	d
REG_VIR_HALFSPIN_SUMM_THE_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	167;"	d
REG_VIR_PARTIAL_SU3_PROD_VIR_SU3	src/bgq/intrinsic/oper.hpp	339;"	d
REG_VIR_SINGLE_SU3_DAG_PROD_VIR_SINGLE_COLOR_LOAD_STORE	src/bgq/intrinsic/oper.hpp	564;"	d
REG_VIR_SINGLE_SU3_DAG_PROD_VIR_SINGLE_HALFSPINCOLOR_LOAD_STORE	src/bgq/intrinsic/oper.hpp	575;"	d
REG_VIR_SINGLE_SU3_PROD_VIR_SINGLE_COLOR_LOAD_STORE	src/bgq/intrinsic/oper.hpp	409;"	d
REG_VIR_SINGLE_SU3_PROD_VIR_SINGLE_HALFSPINCOLOR_LOAD_STORE	src/bgq/intrinsic/oper.hpp	420;"	d
REG_VIR_SPINCOLOR_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	148;"	d
REG_VIR_SPINCOLOR_SUMM	src/bgq/intrinsic/oper.hpp	211;"	d
REG_VIR_SPINCOLOR_SUMM_THE_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	201;"	d
REG_VIR_SPINCOLOR_SUMM_THE_PROD_COMPLEX	src/bgq/intrinsic/oper.hpp	240;"	d
REG_VIR_SPIN_SUMM_THE_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	191;"	d
REG_VIR_SU3_DAG_PROD_VIR_COLOR	src/bgq/intrinsic/oper.hpp	468;"	d
REG_VIR_SU3_DAG_PROD_VIR_COLOR_INTERNAL	src/bgq/intrinsic/oper.hpp	431;"	d
REG_VIR_SU3_DAG_PROD_VIR_COLOR_LOAD_STORE	src/bgq/intrinsic/oper.hpp	553;"	d
REG_VIR_SU3_DAG_PROD_VIR_HALFSPINCOLOR	src/bgq/intrinsic/oper.hpp	534;"	d
REG_VIR_SU3_DAG_PROD_VIR_HALFSPINCOLOR_LOAD_STORE	src/bgq/intrinsic/oper.hpp	542;"	d
REG_VIR_SU3_DAG_PROD_VIR_SU3	src/bgq/intrinsic/oper.hpp	502;"	d
REG_VIR_SU3_DAG_PROD_VIR_SU3_INTERNAL	src/bgq/intrinsic/oper.hpp	478;"	d
REG_VIR_SU3_DAG_SUBT_THE_PROD_VIR_COLOR	src/bgq/intrinsic/oper.hpp	453;"	d
REG_VIR_SU3_DAG_SUMM_THE_PROD_VIR_COLOR	src/bgq/intrinsic/oper.hpp	443;"	d
REG_VIR_SU3_DAG_SUMM_THE_PROD_VIR_SU3	src/bgq/intrinsic/oper.hpp	518;"	d
REG_VIR_SU3_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	657;"	d
REG_VIR_SU3_PROD_VIR_COLOR	src/bgq/intrinsic/oper.hpp	264;"	d
REG_VIR_SU3_PROD_VIR_COLOR_INTERNAL	src/bgq/intrinsic/oper.hpp	252;"	d
REG_VIR_SU3_PROD_VIR_COLOR_LOAD_STORE	src/bgq/intrinsic/oper.hpp	398;"	d
REG_VIR_SU3_PROD_VIR_HALFSPINCOLOR	src/bgq/intrinsic/oper.hpp	379;"	d
REG_VIR_SU3_PROD_VIR_HALFSPINCOLOR_LOAD_STORE	src/bgq/intrinsic/oper.hpp	387;"	d
REG_VIR_SU3_PROD_VIR_SU3	src/bgq/intrinsic/oper.hpp	323;"	d
REG_VIR_SU3_PROD_VIR_SU3_DAG	src/bgq/intrinsic/oper.hpp	610;"	d
REG_VIR_SU3_PROD_VIR_SU3_DAG_INTERNAL	src/bgq/intrinsic/oper.hpp	586;"	d
REG_VIR_SU3_PROD_VIR_SU3_INTERNAL	src/bgq/intrinsic/oper.hpp	299;"	d
REG_VIR_SU3_SUBT_THE_PROD_VIR_COLOR	src/bgq/intrinsic/oper.hpp	284;"	d
REG_VIR_SU3_SUMM_THE_PROD_4DOUBLE	src/bgq/intrinsic/oper.hpp	642;"	d
REG_VIR_SU3_SUMM_THE_PROD_VIR_COLOR	src/bgq/intrinsic/oper.hpp	274;"	d
REG_VIR_SU3_SUMM_THE_PROD_VIR_SU3	src/bgq/intrinsic/oper.hpp	363;"	d
REG_VIR_SU3_SUMM_THE_PROD_VIR_SU3_DAG	src/bgq/intrinsic/oper.hpp	626;"	d
REIM	projects/x/tests/test_nazario2.cpp	/^int REIM=0;$/;"	v
REIM	tools/clusterize2.cpp	/^int REIM,use_new_contraction_layout,binary_out;$/;"	v
REJECT	build/projects/generate_confs/tokenizer.cpp	1083;"	d	file:
REJECT	build/projects/semileptonic/tokenize_corr.cpp	471;"	d	file:
REMAP_BARRIER	work_in_prog/bgq/src/new_vars_and_types.cpp	23;"	d	file:
REM_2	src/base/init.cpp	59;"	d	file:
REM_2	src/geometry/geometry_eo.cpp	23;"	d	file:
REORDER_BARRIER	build/src/config.hpp	129;"	d
RESET_TIMING	src/base/bench.hpp	46;"	d
RND_ALL_MINUS_ONE	src/base/random.hpp	/^  enum rnd_t{RND_ALL_PLUS_ONE,RND_ALL_MINUS_ONE,RND_UNIF,RND_Z2,RND_Z3,RND_Z4,RND_GAUSS};$/;"	e	enum:nissa::rnd_t
RND_ALL_PLUS_ONE	src/base/random.hpp	/^  enum rnd_t{RND_ALL_PLUS_ONE,RND_ALL_MINUS_ONE,RND_UNIF,RND_Z2,RND_Z3,RND_Z4,RND_GAUSS};$/;"	e	enum:nissa::rnd_t
RND_GAUSS	src/base/random.hpp	/^  enum rnd_t{RND_ALL_PLUS_ONE,RND_ALL_MINUS_ONE,RND_UNIF,RND_Z2,RND_Z3,RND_Z4,RND_GAUSS};$/;"	e	enum:nissa::rnd_t
RND_UNIF	src/base/random.hpp	/^  enum rnd_t{RND_ALL_PLUS_ONE,RND_ALL_MINUS_ONE,RND_UNIF,RND_Z2,RND_Z3,RND_Z4,RND_GAUSS};$/;"	e	enum:nissa::rnd_t
RND_Z2	src/base/random.hpp	/^  enum rnd_t{RND_ALL_PLUS_ONE,RND_ALL_MINUS_ONE,RND_UNIF,RND_Z2,RND_Z3,RND_Z4,RND_GAUSS};$/;"	e	enum:nissa::rnd_t
RND_Z3	src/base/random.hpp	/^  enum rnd_t{RND_ALL_PLUS_ONE,RND_ALL_MINUS_ONE,RND_UNIF,RND_Z2,RND_Z3,RND_Z4,RND_GAUSS};$/;"	e	enum:nissa::rnd_t
RND_Z4	src/base/random.hpp	/^  enum rnd_t{RND_ALL_PLUS_ONE,RND_ALL_MINUS_ONE,RND_UNIF,RND_Z2,RND_Z3,RND_Z4,RND_GAUSS};$/;"	e	enum:nissa::rnd_t
ROOT_STAG	src/hmc/quark_pars.hpp	/^    enum name_t{ROOT_STAG,ROOT_TM_CLOV};$/;"	e	enum:nissa::ferm_discretiz::name_t
ROOT_TM_CLOV	src/hmc/quark_pars.hpp	/^    enum name_t{ROOT_STAG,ROOT_TM_CLOV};$/;"	e	enum:nissa::ferm_discretiz::name_t
R_BOTH	projects/semileptonic/new_version/new_types.hpp	/^enum TMR{R_ZERO,R_ONE,R_BOTH};$/;"	e	enum:TMR
R_ONE	projects/semileptonic/new_version/new_types.hpp	/^enum TMR{R_ZERO,R_ONE,R_BOTH};$/;"	e	enum:TMR
R_ZERO	projects/semileptonic/new_version/new_types.hpp	/^enum TMR{R_ZERO,R_ONE,R_BOTH};$/;"	e	enum:TMR
S	projects/eight_BK/smeared_BK_all_in_one.cpp	/^colorspinspin **S;$/;"	v
S	projects/semileptonic/new_version/new_types.hpp	/^  colorspinspin **S;$/;"	m	struct:prop_group_t
S	src/operations/stag/qed_corr.cpp	/^    enum ins_t{S,T,F,V};$/;"	e	enum:nissa::__anon13::ins_t	file:
S0	projects/reno_const/RIMOM.cpp	/^su3spinspin **S0[2];$/;"	v
S0	projects/semileptonic/gevp.cpp	/^colorspinspin *ori_source,*temp_transp,*S0[2][4][4];$/;"	v
S0	projects/semileptonic/semileptonic_smeared.cpp	/^PROP_TYPE **S0[2];$/;"	v
S0	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^su3spinspin **S0[2];$/;"	v
S0	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^colorspinspin **S0[2];$/;"	v
S0GI	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
S0H	projects/g/g.cpp	/^colorspinspin **S0L,**S0H;$/;"	v
S0L	projects/g/g.cpp	/^colorspinspin **S0L,**S0H;$/;"	v
S0S0	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
S0V0	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
S0_SL	projects/nucleons/nucleons_smeared.cpp	/^su3spinspin ***S0_SL,***S0_SS;$/;"	v
S0_SS	projects/nucleons/nucleons_smeared.cpp	/^su3spinspin ***S0_SL,***S0_SS;$/;"	v
S0_der	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^su3spinspin **S0_der[2][3][3]; \/\/propagateur "derive" su3spinspin$/;"	v
S0_der	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^colorspinspin **S0_der[2][3][3];$/;"	v
S0_mov_lcsi_smso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_lcsi_smso,*S0_mov_lcsi_smso;$/;"	v
S0_mov_smsi_smso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_smsi_smso,*S0_mov_smsi_smso;$/;"	v
S0_std_C_lcsi_lcso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_C_lcsi_lcso,*S0_std_C_smsi_lcso;$/;"	v
S0_std_C_lcsi_smso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_C_lcsi_smso,*S0_std_C_smsi_smso;$/;"	v
S0_std_C_smsi_lcso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_C_lcsi_lcso,*S0_std_C_smsi_lcso;$/;"	v
S0_std_C_smsi_smso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_C_lcsi_smso,*S0_std_C_smsi_smso;$/;"	v
S0_std_lcsi_C_lcso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_lcsi_C_lcso,*S0_std_smsi_C_lcso;$/;"	v
S0_std_lcsi_C_smso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_lcsi_C_smso,*S0_std_smsi_C_smso;$/;"	v
S0_std_lcsi_lcso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_lcsi_lcso,*S0_std_smsi_lcso;$/;"	v
S0_std_lcsi_smso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_lcsi_smso,*S0_mov_lcsi_smso;$/;"	v
S0_std_smsi_C_lcso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_lcsi_C_lcso,*S0_std_smsi_C_lcso;$/;"	v
S0_std_smsi_C_smso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_lcsi_C_smso,*S0_std_smsi_C_smso;$/;"	v
S0_std_smsi_lcso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_lcsi_lcso,*S0_std_smsi_lcso;$/;"	v
S0_std_smsi_smso	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *S0_std_smsi_smso,*S0_mov_smsi_smso;$/;"	v
S1	projects/nucleons/nucleons_smeared.cpp	/^su3spinspin **S1;$/;"	v
S1	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *loc_source,*sme_source,*seq_source,*C_loc_source,*C_sme_source,*S1;$/;"	v
S1	projects/semileptonic/semileptonic_smeared.cpp	/^PROP_TYPE **S1;$/;"	v
S1	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^su3spinspin **S1;$/;"	v
S1	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^colorspinspin **S1;$/;"	v
S1HL	projects/g/g.cpp	/^colorspinspin **S1LH,**S1HL;$/;"	v
S1LH	projects/g/g.cpp	/^colorspinspin **S1LH,**S1HL;$/;"	v
SCALAR	projects/ib/mel.cpp	/^enum insertion_t{                    ORIGINAL,  SCALAR,  PSEUDO,  PHOTON,   TADPOLE};\/\/,  VECTOR};$/;"	e	enum:insertion_t	file:
SCALAR	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
SEND_BACKWARD_BORD	src/base/vectors.hpp	26;"	d
SEND_FORWARD_BORD	src/base/vectors.hpp	27;"	d
SET_MAKE	build/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	build/projects/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	build/src/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	build/tools/Makefile	/^SET_MAKE = $/;"	m
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/projects/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/tools/Makefile	/^SHELL = \/bin\/sh$/;"	m
SINGLE	projects/ib/disco.cpp	/^  enum{SINGLE,ALL};$/;"	e	enum:hits::__anon2	file:
SITE_COPY	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	88;"	d
SITE_COPY	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	99;"	d
SITE_COPY	src/bgq/Wilson_hopping_matrix_lx_bgq.cpp	37;"	d	file:
SITE_COPY	src/bgq/Wilson_hopping_matrix_lx_bgq.cpp	46;"	d	file:
SITE_COPY	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	108;"	d
SITE_COPY	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	99;"	d
SMEARING	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
SOURCES	build/Makefile	/^SOURCES =$/;"	m
SOURCES	build/projects/Makefile	/^SOURCES = $(__top_builddir__bin_RIMOM_SOURCES) \\$/;"	m
SOURCES	build/src/Makefile	/^SOURCES = $(__top_builddir__lib_libnissa_a_SOURCES)$/;"	m
SOURCES	build/tools/Makefile	/^SOURCES = $(__top_builddir__tools_Gaussiansmear_test_SOURCES) \\$/;"	m
SPACE	src/operations/smearing/smooth.hpp	/^    enum space_or_time_t{SPACE,TIME,SPACETIME};$/;"	e	enum:nissa::smooth_pars_t::space_or_time_t
SPACETIME	src/operations/smearing/smooth.hpp	/^    enum space_or_time_t{SPACE,TIME,SPACETIME};$/;"	e	enum:nissa::smooth_pars_t::space_or_time_t
SPINCOLOR_128_OF_VIR_SPINCOLOR_128	src/bgq/bgq_macros.hpp	190;"	d
SPINCOLOR_128_TO_VIR_SPINCOLOR_128	src/bgq/bgq_macros.hpp	111;"	d
SPINCOLOR_DILUTED_SOURCE	src/base/random.hpp	/^  enum source_t{POINT_SOURCE,UNDILUTED_SOURCE,COLOR_DILUTED_SOURCE,SPIN_DILUTED_SOURCE,SPINCOLOR_DILUTED_SOURCE};$/;"	e	enum:nissa::source_t
SPINCOLOR_OF_BI_SPINCOLOR	work_in_prog/bgq/src/bgq_macros.hpp	106;"	d
SPINCOLOR_OF_VIR_SPINCOLOR	src/bgq/bgq_macros.hpp	148;"	d
SPINCOLOR_TO_BI_SPINCOLOR	work_in_prog/bgq/src/bgq_macros.hpp	74;"	d
SPINCOLOR_TO_VIR_SPINCOLOR	src/bgq/bgq_macros.hpp	69;"	d
SPIN_DILUTED_SOURCE	src/base/random.hpp	/^  enum source_t{POINT_SOURCE,UNDILUTED_SOURCE,COLOR_DILUTED_SOURCE,SPIN_DILUTED_SOURCE,SPINCOLOR_DILUTED_SOURCE};$/;"	e	enum:nissa::source_t
SQRT_SHIFT	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	20;"	d	file:
SQRT_SHIFT	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	20;"	d	file:
SS	projects/x/progs/correct.cpp	/^const int PP=0,SS=1,VV=2,AA=3;$/;"	v
START_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	32;"	d
START_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	491;"	d
START_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	63;"	d
START_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	33;"	d
START_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	492;"	d
START_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	66;"	d
START_PATH_FLAG	src/operations/su3_paths/arbitrary.hpp	12;"	d
START_TIMING	src/base/bench.hpp	47;"	d
STDC_HEADERS	build/src/config.hpp	138;"	d
STOP_TIMING	src/base/bench.hpp	48;"	d
STORE	projects/ib/disco.cpp	/^  enum{STORE,LOAD};$/;"	e	enum:hits::__anon3	file:
STORE_REG_SU3	src/bgq/intrinsic/store.hpp	210;"	d
STORE_REG_VIR_32_64_COLOR	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	45;"	d
STORE_REG_VIR_32_64_COLOR	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	499;"	d
STORE_REG_VIR_32_64_COLOR	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	76;"	d
STORE_REG_VIR_32_64_COLOR_ADVANCING	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	46;"	d
STORE_REG_VIR_32_64_COLOR_ADVANCING	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	500;"	d
STORE_REG_VIR_32_64_COLOR_ADVANCING	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	77;"	d
STORE_REG_VIR_32_64_HALFSPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	47;"	d
STORE_REG_VIR_32_64_HALFSPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	502;"	d
STORE_REG_VIR_32_64_HALFSPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	80;"	d
STORE_REG_VIR_32_64_SPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	45;"	d
STORE_REG_VIR_32_64_SPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	499;"	d
STORE_REG_VIR_32_64_SPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	78;"	d
STORE_REG_VIR_32_64_SPINCOLOR_ADVANCING	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	46;"	d
STORE_REG_VIR_32_64_SPINCOLOR_ADVANCING	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	500;"	d
STORE_REG_VIR_32_64_SPINCOLOR_ADVANCING	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	79;"	d
STORE_REG_VIR_COLOR	src/bgq/intrinsic/store.hpp	94;"	d
STORE_REG_VIR_COLOR_ADVANCING	src/bgq/intrinsic/store.hpp	147;"	d
STORE_REG_VIR_COMPLEX	src/bgq/intrinsic/store.hpp	57;"	d
STORE_REG_VIR_COMPLEX	src/bgq/intrinsic/store.hpp	59;"	d
STORE_REG_VIR_HALFSPIN	src/bgq/intrinsic/store.hpp	85;"	d
STORE_REG_VIR_HALFSPINCOLOR	src/bgq/intrinsic/store.hpp	72;"	d
STORE_REG_VIR_PARTIAL_SU3	src/bgq/intrinsic/store.hpp	198;"	d
STORE_REG_VIR_SINGLE_COLOR	src/bgq/intrinsic/store.hpp	104;"	d
STORE_REG_VIR_SINGLE_COLOR_ADVANCING	src/bgq/intrinsic/store.hpp	155;"	d
STORE_REG_VIR_SINGLE_HALFSPINCOLOR	src/bgq/intrinsic/store.hpp	114;"	d
STORE_REG_VIR_SINGLE_SPINCOLOR	src/bgq/intrinsic/store.hpp	127;"	d
STORE_REG_VIR_SPINCOLOR	src/bgq/intrinsic/store.hpp	164;"	d
STORE_REG_VIR_SU3	src/bgq/intrinsic/store.hpp	183;"	d
STOUT	src/operations/smearing/smooth.hpp	/^    enum method_t{COOLING,STOUT,WFLOW,APE,HYP};$/;"	e	enum:nissa::smooth_pars_t::method_t
STRIP	build/Makefile	/^STRIP = $/;"	m
STRIP	build/projects/Makefile	/^STRIP = $/;"	m
STRIP	build/src/Makefile	/^STRIP = $/;"	m
STRIP	build/tools/Makefile	/^STRIP = $/;"	m
SU3_128_OF_VIR_SU3_128	src/bgq/bgq_macros.hpp	175;"	d
SU3_128_TO_VIR_SU3_128	src/bgq/bgq_macros.hpp	96;"	d
SU3_ECAST	src/new_types/su3_op.hpp	25;"	d
SU3_OF_BI_SU3	work_in_prog/bgq/src/bgq_macros.hpp	94;"	d
SU3_OF_VIR_SU3	src/bgq/bgq_macros.hpp	133;"	d
SU3_PREFETCH	src/bgq/intrinsic/load.hpp	216;"	d
SU3_TO_BI_SU3	work_in_prog/bgq/src/bgq_macros.hpp	62;"	d
SU3_TO_VIR_SINGLE_SU3	src/bgq/bgq_macros.hpp	54;"	d
SU3_TO_VIR_SU3	src/bgq/bgq_macros.hpp	42;"	d
SU3_TO_VIR_SU3_DAG	src/bgq/bgq_macros.hpp	50;"	d
SUBDIRS	build/Makefile	/^SUBDIRS = \\$/;"	m
SUMM_RECT_BW_STAPLE	src/operations/su3_paths/rectangular_staples.cpp	38;"	d	file:
SUMM_RECT_FW_STAPLE	src/operations/su3_paths/rectangular_staples.cpp	26;"	d	file:
SUMM_SRC_AND_ALL_INV_CGM	src/inverters/momenta/cgm_invert_MFACC.cpp	21;"	d	file:
SUMM_SRC_AND_ALL_INV_CGM	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.cpp	23;"	d	file:
SUMM_SRC_AND_ALL_INV_CGM	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.cpp	20;"	d	file:
SUMM_SRC_AND_ALL_INV_CGM	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.cpp	23;"	d	file:
SUMM_SRC_AND_ALL_INV_CGM	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.cpp	20;"	d	file:
SUMM_SRC_AND_ALL_INV_CGM	src/inverters/templates/cgm_invert_template_threaded.cpp	354;"	d	file:
SUMM_SRC_AND_ALL_INV_CGM	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	26;"	d	file:
SUMM_SRC_AND_ALL_INV_CGM	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	30;"	d	file:
SUMM_SRC_AND_ALL_INV_CGM	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.cpp	27;"	d	file:
SUMM_SRC_AND_ALL_INV_CGM	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	27;"	d	file:
SUMM_SRC_AND_ALL_INV_CGM	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.cpp	27;"	d	file:
SUMM_THE_TRACE_PRINT_AT_LAST_HIT	src/operations/stag/stag.hpp	121;"	d
SUMM_TO_PREVIOUS_PATH_FLAG	src/operations/su3_paths/arbitrary.hpp	15;"	d
Si	projects/ib/checks.cpp	/^double Si(int p,int q,tm_quark_info qu,int mu)$/;"	f
Symanzik_action	src/hmc/gauge/Symanzik_action.cpp	/^  void Symanzik_action(double *action,double *glb_shapes,double beta,double C1)$/;"	f	namespace:nissa
Symanzik_action	src/hmc/gauge/Symanzik_action.cpp	/^  void Symanzik_action(double *action,quad_su3 **conf,double beta,double C1)$/;"	f	namespace:nissa
Symanzik_action	src/hmc/gauge/Symanzik_action.cpp	/^  void Symanzik_action(double *action,quad_su3 *conf,double beta,double C1)$/;"	f	namespace:nissa
Symanzik_par	src/operations/su3_paths/gauge_sweeper.cpp	/^  int Symanzik_par(coords ivol_coord,int dir)$/;"	f	namespace:nissa
Symanzik_sweeper	src/operations/su3_paths/gauge_sweeper.hpp	/^  EXTERN gauge_sweeper_t *Symanzik_sweeper,*Wilson_sweeper;$/;"	m	namespace:nissa
T	projects/generate_confs/driver.hpp	/^    int T;$/;"	m	class:nissa::driver_t
T	projects/ib/checks.cpp	/^int T=8,L=4;$/;"	v
T	projects/semileptonic/gevp.cpp	/^int T,L,seed;$/;"	v
T	projects/semileptonic/gevp_3pts.cpp	/^int T,L,seed;$/;"	v
T	projects/semileptonic/test_proj.cpp	/^int T,L,seed,tsource,npassed_conf,ntot_conf,rprop,binary_ascii;$/;"	v
T	projects/x/tests/test_meson_self_energy_stochastic_correction.cpp	/^int T=8;$/;"	v
T	src/operations/stag/qed_corr.cpp	/^    enum ins_t{S,T,F,V};$/;"	e	enum:nissa::__anon13::ins_t	file:
T	tools/clusterize2.cpp	/^int T,ncorr,ncombo,ncorr_type,ntriple;$/;"	v
T	tools/conf_measure/magn.cpp	/^int L,T;$/;"	v
T	tools/conf_measure/topo.cpp	/^int L,T;$/;"	v
T	tools/conf_transform/convert/Claudio_to_ildg.cpp	/^int L,T;$/;"	v
T	tools/conf_transform/convert/eo_to_ildg.cpp	/^int T,L;$/;"	v
T	tools/conf_transform/convert/gpu_to_ildg.cpp	/^int L,T;$/;"	v
T	tools/conf_transform/convert/ildg_to_eo.cpp	/^int T,L;$/;"	v
T	tools/conf_transform/convert/ildg_to_gpu.cpp	/^int L,T;$/;"	v
T	tools/conf_transform/convert/usqcd_to_ildg.cpp	/^int L=24,T=48;$/;"	v
T	tools/conf_transform/smear/stout.cpp	/^int L,T;$/;"	v
T	tools/pack.c	/^int T;$/;"	v
TADPOLE	projects/ib/mel.cpp	/^enum insertion_t{                    ORIGINAL,  SCALAR,  PSEUDO,  PHOTON,   TADPOLE};\/\/,  VECTOR};$/;"	e	enum:insertion_t	file:
TADPOLE	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	e	enum:nissa::insertion_t
TBW_DER_TMQ_EXP	src/bgq/bgq_macros.hpp	752;"	d
TBW_DER_TMQ_EXP	work_in_prog/bgq/src/bgq_macros.hpp	462;"	d
TFW_DER_TMQ_EXP	src/bgq/bgq_macros.hpp	712;"	d
TFW_DER_TMQ_EXP	work_in_prog/bgq/src/bgq_macros.hpp	430;"	d
THREADABLE_FUNCTION_0ARG	projects/cpn/cpn.cpp	/^THREADABLE_FUNCTION_0ARG(generate_momenta)$/;"	f
THREADABLE_FUNCTION_0ARG	projects/ib/contr.cpp	/^  THREADABLE_FUNCTION_0ARG(compute_bar2pts_contr)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	projects/ib/contr.cpp	/^  THREADABLE_FUNCTION_0ARG(compute_handcuffs_contr)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	projects/ib/disco.cpp	/^THREADABLE_FUNCTION_0ARG(compute_EU1_EU2_EU4_EU6alt)$/;"	f
THREADABLE_FUNCTION_0ARG	projects/ib/disco.cpp	/^THREADABLE_FUNCTION_0ARG(compute_EU6_alt2)$/;"	f
THREADABLE_FUNCTION_0ARG	projects/ib/disco.cpp	/^THREADABLE_FUNCTION_0ARG(compute_all_E_f1_f2)$/;"	f
THREADABLE_FUNCTION_0ARG	projects/ib/disco.cpp	/^THREADABLE_FUNCTION_0ARG(compute_all_quark_currents)$/;"	f
THREADABLE_FUNCTION_0ARG	projects/ib/mel.cpp	/^THREADABLE_FUNCTION_0ARG(generate_lepton_propagators)$/;"	f
THREADABLE_FUNCTION_0ARG	projects/ib/meslep.cpp	/^  THREADABLE_FUNCTION_0ARG(generate_lepton_propagators)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	projects/ib/test_prop.cpp	/^THREADABLE_FUNCTION_0ARG(compute_lepton_free_loop)$/;"	f
THREADABLE_FUNCTION_0ARG	projects/nucleons/nucleons_smeared.cpp	/^THREADABLE_FUNCTION_0ARG(calculate_S0)$/;"	f
THREADABLE_FUNCTION_0ARG	projects/semileptonic/test_bgq.cpp	/^THREADABLE_FUNCTION_0ARG(bench_thread_barrier)$/;"	f
THREADABLE_FUNCTION_0ARG	src/base/thread_macros.hpp	465;"	d
THREADABLE_FUNCTION_0ARG	src/base/thread_macros.hpp	523;"	d
THREADABLE_FUNCTION_0ARG	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  THREADABLE_FUNCTION_0ARG(BGQ_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_COMM_AND_BUFF_FILL)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  THREADABLE_FUNCTION_0ARG(BGQ_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_LOCAL_TRANSPOSE)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  THREADABLE_FUNCTION_0ARG(START_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	src/bgq/Wilson_hopping_matrix_lx_bgq.cpp	/^  THREADABLE_FUNCTION_0ARG(bgq_Wilson_hopping_matrix_lx_vdir_VN_comm_and_buff_fill)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	src/bgq/Wilson_hopping_matrix_lx_bgq.cpp	/^  THREADABLE_FUNCTION_0ARG(bgq_Wilson_hopping_matrix_lx_vdir_VN_transpose)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	src/bgq/Wilson_hopping_matrix_lx_bgq.cpp	/^  THREADABLE_FUNCTION_0ARG(finish_Wilson_hopping_matrix_lx_bgq_communications)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	src/bgq/Wilson_hopping_matrix_lx_bgq.cpp	/^  THREADABLE_FUNCTION_0ARG(start_Wilson_hopping_matrix_lx_bgq_communications)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  THREADABLE_FUNCTION_0ARG(BGQ_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_COMM_AND_BUFF_FILL)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  THREADABLE_FUNCTION_0ARG(BGQ_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_VDIR_VN_LOCAL_TRANSPOSE)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  THREADABLE_FUNCTION_0ARG(START_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	src/routines/thread.cpp	/^  THREADABLE_FUNCTION_0ARG(thread_sanity_check)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_0ARG	tools/benchmarks/stag.cpp	/^THREADABLE_FUNCTION_0ARG(bench_Wils)$/;"	f
THREADABLE_FUNCTION_0ARG	tools/benchmarks/stag.cpp	/^THREADABLE_FUNCTION_0ARG(bench_stag)$/;"	f
THREADABLE_FUNCTION_0ARG	tools/x_clusterize/x_clusterize.cpp	/^THREADABLE_FUNCTION_0ARG(clusterize)$/;"	f
THREADABLE_FUNCTION_0ARG_EXPORT	src/base/thread_macros.hpp	141;"	d
THREADABLE_FUNCTION_0ARG_EXTERNAL_ARGS	src/base/thread_macros.hpp	103;"	d
THREADABLE_FUNCTION_0ARG_INSIDE	src/base/thread_macros.hpp	368;"	d
THREADABLE_FUNCTION_0ARG_SUMMONER	src/base/thread_macros.hpp	238;"	d
THREADABLE_FUNCTION_0ARG_TRIGGER	src/base/thread_macros.hpp	187;"	d
THREADABLE_FUNCTION_10ARG	projects/ib/disco2.cpp	/^THREADABLE_FUNCTION_10ARG(compute_orthogonal_part, spincolor**,phi, spincolor**,eta, int,nhits, spincolor**,eigvec, int,neig, quad_su3*,conf, double,kappa, double,am, int,r, double,solver_precision)$/;"	f
THREADABLE_FUNCTION_10ARG	src/base/thread_macros.hpp	485;"	d
THREADABLE_FUNCTION_10ARG	src/base/thread_macros.hpp	533;"	d
THREADABLE_FUNCTION_10ARG	src/inverters/twisted_clover/cg_invert_tmclovD_eoprec.cpp	/^  THREADABLE_FUNCTION_10ARG(inv_tmclovD_cg_eoprec_native, spincolor*,solution_lx, spincolor*,guess_Koo, quad_su3*,conf_lx, double,kappa, clover_term_t*,Cl_lx, inv_clover_term_t*,ext_invCl_lx, double,mass, int,nitermax, double,residue, spincolor*,source_lx)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_10ARG	src/operations/contract/mesons_eight.cpp	/^  THREADABLE_FUNCTION_10ARG(trace_g_css_dag_g_ss_g_css_dag_g_ss, complex**,glb_c, dirac_matr*,g1L, colorspinspin*,s1L, dirac_matr*,g2L, colorspinspin*,s2L, dirac_matr*,g1R,colorspinspin*,s1R, dirac_matr*,g2R, colorspinspin*,s2R, int,ncontr)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_10ARG	src/operations/contract/mesons_eight.cpp	/^  THREADABLE_FUNCTION_10ARG(trace_g_sdag_g_s_times_trace_g_sdag_g_s, complex**,glb_c, dirac_matr*,g1L, colorspinspin*,s1L, dirac_matr*,g2L, colorspinspin*,s2L, dirac_matr*,g1R,colorspinspin*,s1R, dirac_matr*,g2R, colorspinspin*,s2R, int,ncontr)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_10ARG	src/operations/stag/magnetization.cpp	/^  THREADABLE_FUNCTION_10ARG(magnetization, complex*,magn, complex*,magn_proj_x, quad_su3**,conf, quark_content_t*,quark, color**,rnd, color**,chi, complex*,point_magn, coords*,arg, int,mu, int,nu)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_10ARG	src/operations/stag/stag.cpp	/^    THREADABLE_FUNCTION_10ARG(summ_dens, complex*,dens, color**,quark, color**,temp0, color**,temp1, quad_su3**,conf, quad_u1**,backfield, int,shift, int,mask, color**,chi, color**,eta)$/;"	f	namespace:nissa::stag
THREADABLE_FUNCTION_10ARG_EXPORT	src/base/thread_macros.hpp	169;"	d
THREADABLE_FUNCTION_10ARG_EXTERNAL_ARGS	src/base/thread_macros.hpp	131;"	d
THREADABLE_FUNCTION_10ARG_INSIDE	src/base/thread_macros.hpp	448;"	d
THREADABLE_FUNCTION_10ARG_SUMMONER	src/base/thread_macros.hpp	333;"	d
THREADABLE_FUNCTION_10ARG_TRIGGER	src/base/thread_macros.hpp	227;"	d
THREADABLE_FUNCTION_11ARG	src/base/thread_macros.hpp	487;"	d
THREADABLE_FUNCTION_11ARG	src/base/thread_macros.hpp	534;"	d
THREADABLE_FUNCTION_11ARG_EXPORT	src/base/thread_macros.hpp	172;"	d
THREADABLE_FUNCTION_11ARG_EXTERNAL_ARGS	src/base/thread_macros.hpp	134;"	d
THREADABLE_FUNCTION_11ARG_INSIDE	src/base/thread_macros.hpp	456;"	d
THREADABLE_FUNCTION_11ARG_SUMMONER	src/base/thread_macros.hpp	348;"	d
THREADABLE_FUNCTION_11ARG_TRIGGER	src/base/thread_macros.hpp	231;"	d
THREADABLE_FUNCTION_1ARG	projects/cpn/cpn.cpp	/^THREADABLE_FUNCTION_1ARG(hmc_integrate, double,tl)$/;"	f
THREADABLE_FUNCTION_1ARG	projects/cpn/cpn.cpp	/^THREADABLE_FUNCTION_1ARG(lambda_momenta_action, double*,act)$/;"	f
THREADABLE_FUNCTION_1ARG	projects/cpn/cpn.cpp	/^THREADABLE_FUNCTION_1ARG(zeta_momenta_action, double*,act)$/;"	f
THREADABLE_FUNCTION_1ARG	projects/generate_confs/generate_quenched.cpp	/^THREADABLE_FUNCTION_1ARG(impose_open_boundary_cond, quad_su3*,conf)$/;"	f
THREADABLE_FUNCTION_1ARG	projects/ib/contr.cpp	/^  THREADABLE_FUNCTION_1ARG(compute_mes2pts_contr, int,normalize)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	projects/ib/prop.cpp	/^  THREADABLE_FUNCTION_1ARG(generate_original_source, qprop_t*,sou)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/base/bench.cpp	/^  THREADABLE_FUNCTION_1ARG(bench_memory_bandwidth, int,mem_size)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/base/thread_macros.hpp	467;"	d
THREADABLE_FUNCTION_1ARG	src/base/thread_macros.hpp	524;"	d
THREADABLE_FUNCTION_1ARG	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  THREADABLE_FUNCTION_1ARG(FINISH_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS, int,oe_or_eo)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  THREADABLE_FUNCTION_1ARG(HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_WILSON_2D, VIR_32_64_SPINCOLOR*,out)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  THREADABLE_FUNCTION_1ARG(FINISH_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_BGQ_COMMUNICATIONS, int,oe_or_eo)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/dirac_operators/tmQ/dirac_operator_tmQ_bgq.cpp	/^  THREADABLE_FUNCTION_1ARG(hopping_matrix_lx_expand_to_Q_bgq, vir_spincolor*,out)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/free_theory/tlSym_gauge_propagator.cpp	/^  THREADABLE_FUNCTION_1ARG(generate_stochastic_tlSym_gauge_propagator_source, spin1field*,eta)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/hmc/backfield.cpp	/^  THREADABLE_FUNCTION_1ARG(init_backfield_to_id, quad_u1**,S)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/hmc/gauge/MFACC_fields.cpp	/^  THREADABLE_FUNCTION_1ARG(generate_MFACC_field, su3*,pi)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/hmc/momenta/momenta_generation.cpp	/^  THREADABLE_FUNCTION_1ARG(generate_hmc_momenta, quad_su3**,H)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/hmc/momenta/momenta_generation.cpp	/^  THREADABLE_FUNCTION_1ARG(generate_hmc_momenta, quad_su3*,H)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_1ARG(quad_su3_ildg_to_nissa_reord_in_place, quad_su3*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_1ARG(quad_su3_nissa_to_ildg_reord_in_place, quad_su3*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/operations/gaugeconf.cpp	/^  THREADABLE_FUNCTION_1ARG(unitarize_eo_conf_maximal_trace_projecting, quad_su3**,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/operations/gaugeconf.cpp	/^  THREADABLE_FUNCTION_1ARG(unitarize_lx_conf_maximal_trace_projecting, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/operations/gaugeconf.cpp	/^  THREADABLE_FUNCTION_1ARG(unitarize_lx_conf_orthonormalizing, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/operations/su3_paths/gauge_sweeper.cpp	/^  THREADABLE_FUNCTION_1ARG(reorder_packing_link_source_dest, gauge_sweeper_t*,gs)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	src/operations/su3_paths/topological_charge.cpp	/^  THREADABLE_FUNCTION_1ARG(compute_topo_corr, double*,charge)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG	tools/conf_measure/topo.cpp	/^THREADABLE_FUNCTION_1ARG(unitarize_conf_max, quad_su3*,conf)$/;"	f
THREADABLE_FUNCTION_1ARG	tools/conf_transform/convert/gpu_stagphase.cpp	/^  THREADABLE_FUNCTION_1ARG(addrem_stagphases_to_lx_conf, quad_su3*,lx_conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_1ARG_EXPORT	src/base/thread_macros.hpp	142;"	d
THREADABLE_FUNCTION_1ARG_EXTERNAL_ARGS	src/base/thread_macros.hpp	104;"	d
THREADABLE_FUNCTION_1ARG_INSIDE	src/base/thread_macros.hpp	376;"	d
THREADABLE_FUNCTION_1ARG_SUMMONER	src/base/thread_macros.hpp	243;"	d
THREADABLE_FUNCTION_1ARG_TRIGGER	src/base/thread_macros.hpp	191;"	d
THREADABLE_FUNCTION_2ARG	projects/cpn/cpn.cpp	/^THREADABLE_FUNCTION_2ARG(geometric_topology_simplified, double*,topo, ON_t*,z)$/;"	f
THREADABLE_FUNCTION_2ARG	projects/generate_confs/generate_quenched.cpp	/^THREADABLE_FUNCTION_2ARG(compute_corr, double*,corr, su3spinspin*,Q)$/;"	f
THREADABLE_FUNCTION_2ARG	projects/ib/prop.cpp	/^  THREADABLE_FUNCTION_2ARG(add_photon_field_to_conf, quad_su3*,conf, double,charge)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	projects/ib/prop.cpp	/^  THREADABLE_FUNCTION_2ARG(put_fft_source_phase, spincolor*,qtilde, double,fft_sign)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	projects/nucleons/nucleons_smeared.cpp	/^THREADABLE_FUNCTION_2ARG(local_diquark, diquark*,diq, su3spinspin*,S)$/;"	f
THREADABLE_FUNCTION_2ARG	projects/semileptonic/gevp.cpp	/^THREADABLE_FUNCTION_2ARG(prepare_prop_for_new_contraction, colorspinspin*,prop, colorspinspin*,aux)$/;"	f
THREADABLE_FUNCTION_2ARG	projects/semileptonic/semileptonic_smeared.cpp	/^THREADABLE_FUNCTION_2ARG(prepare_prop_for_new_contraction, PROP_TYPE*,prop, PROP_TYPE*,aux)$/;"	f
THREADABLE_FUNCTION_2ARG	src/base/random.cpp	/^  THREADABLE_FUNCTION_2ARG(generate_delta_eo_source, su3**,source, int*,x)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/base/random.cpp	/^  THREADABLE_FUNCTION_2ARG(generate_delta_source, su3spinspin*,source, int*,x)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/base/random.cpp	/^  THREADABLE_FUNCTION_2ARG(rnd_fill_pm_one_loc_vector, double*,v, int,nps)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/base/thread_macros.hpp	469;"	d
THREADABLE_FUNCTION_2ARG	src/base/thread_macros.hpp	525;"	d
THREADABLE_FUNCTION_2ARG	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  THREADABLE_FUNCTION_2ARG(HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_STAGGERED_D, VIR_32_64_COLOR*,out, double,coeff)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_128.cpp	/^  THREADABLE_FUNCTION_2ARG(tmDkern_eoprec_eos_put_together_and_include_gamma5_128, spincolor_128*,out, spincolor_128*,temp)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_portable.cpp	/^  THREADABLE_FUNCTION_2ARG(tmDkern_eoprec_eos_put_together_and_include_gamma5, spincolor*,out, spincolor*,temp)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/free_theory/tlSym_gauge_propagator.cpp	/^  THREADABLE_FUNCTION_2ARG(compute_mom_space_tlSym_gauge_propagator, spin1prop*,prop, gauge_info,gl)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(eo_conf_remap_to_single_vireo, vir_single_oct_su3**,out, quad_su3**,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(eo_conf_remap_to_vireo, vir_oct_su3**,out, quad_su3**,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(lx_color_remap_to_single_vireo, vir_single_color**,out, color*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(lx_color_remap_to_vireo, vir_color**,out, color*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(lx_conf_remap_to_single_vireo, vir_single_oct_su3**,out, quad_su3*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(lx_conf_remap_to_vireo, vir_oct_su3**,out, quad_su3*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(lx_conf_remap_to_virlx, vir_oct_su3*,out, quad_su3*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(lx_conf_remap_to_virlx_blocked, vir_su3*,out, quad_su3*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(lx_quad_su3_remap_to_virlx, vir_quad_su3*,out, quad_su3*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(lx_spincolor_128_remap_to_virlx, vir_spincolor_128*,ext_out, spincolor_128*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(lx_spincolor_remap_to_vireo, vir_spincolor**,out, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(lx_spincolor_remap_to_virlx, vir_spincolor*,ext_out, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(vireo_color_remap_to_lx, color*,out, vir_color**,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(vireo_spincolor_remap_to_lx, spincolor*,out, vir_spincolor**,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(virlx_conf_remap_to_lx, quad_su3*,ext_out, vir_oct_su3*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(virlx_quad_su3_remap_to_lx, quad_su3*,out, vir_quad_su3*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(virlx_spincolor_128_remap_to_lx, spincolor_128*,ext_out, vir_spincolor_128*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_2ARG(virlx_spincolor_remap_to_lx, spincolor*,ext_out, vir_spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/hmc/backfield.cpp	/^  THREADABLE_FUNCTION_2ARG(add_antiperiodic_condition_to_backfield, quad_u1**,S, int,mu)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/hmc/backfield.cpp	/^  THREADABLE_FUNCTION_2ARG(add_im_pot_to_backfield, quad_u1**,S, quark_content_t*,quark_content)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/hmc/gauge/gluonic_force.cpp	/^  THREADABLE_FUNCTION_2ARG(gluonic_force_finish_computation, quad_su3*,F, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/hmc/multipseudo/quark_force.cpp	/^  THREADABLE_FUNCTION_2ARG(compute_quark_force_finish_computation, quad_su3**,F, quad_su3**,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/gauge_fixing.cpp	/^  THREADABLE_FUNCTION_2ARG(perform_random_gauge_transform, quad_su3**,conf_out, quad_su3**,conf_in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/gauge_fixing.cpp	/^  THREADABLE_FUNCTION_2ARG(perform_random_gauge_transform, quad_su3*,conf_out, quad_su3*,conf_in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/gaugeconf.cpp	/^  THREADABLE_FUNCTION_2ARG(average_gauge_energy, double*,energy, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/gaugeconf.cpp	/^  THREADABLE_FUNCTION_2ARG(cool_lx_conf, quad_su3*,conf, gauge_sweeper_t*,sweeper)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/smearing/stout_eo.cpp	/^  THREADABLE_FUNCTION_2ARG(stout_smear_conf_stack_free, quad_su3****,out, int,nlev)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/smearing/stout_lx.cpp	/^  THREADABLE_FUNCTION_2ARG(stout_smear_conf_stack_free, quad_su3***,out, int,nlev)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/stag/stag.cpp	/^    THREADABLE_FUNCTION_2ARG(put_stag_phases, color**,source, int,mask)$/;"	f	namespace:nissa::stag
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/arbitrary.cpp	/^  THREADABLE_FUNCTION_2ARG(init_su3_path, path_drawing_t*,c, su3*,out)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/clover_term.cpp	/^  THREADABLE_FUNCTION_2ARG(chromo_operator, clover_term_t**,Cl_eo, quad_su3**,conf_eo)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/clover_term.cpp	/^  THREADABLE_FUNCTION_2ARG(chromo_operator, clover_term_t*,Cl, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/gauge_sweeper.cpp	/^  THREADABLE_FUNCTION_2ARG(add_staples_required_links_to_gauge_sweep, gauge_sweeper_t*,gs, all_to_all_gathering_list_t**,gl)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/plaquette.cpp	/^  THREADABLE_FUNCTION_2ARG(global_plaquette_eo_conf, double*,totplaq, quad_su3**,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/plaquette.cpp	/^  THREADABLE_FUNCTION_2ARG(global_plaquette_lx_conf, double*,totplaq, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/plaquette.cpp	/^  THREADABLE_FUNCTION_2ARG(global_plaquette_lx_conf_per_timeslice, double*,glb_plaq, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/rectangles.cpp	/^  THREADABLE_FUNCTION_2ARG(global_plaquette_and_rectangles_eo_conf, double*,glb_shapes, quad_su3**,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/rectangles.cpp	/^  THREADABLE_FUNCTION_2ARG(global_plaquette_and_rectangles_lx_conf, double*,glb_shapes, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/rectangles.cpp	/^  THREADABLE_FUNCTION_2ARG(global_plaquette_and_rectangles_lx_conf_per_timeslice, double*,glb_shapes, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/rectangles.cpp	/^  THREADABLE_FUNCTION_2ARG(point_plaquette_and_rectangles_lx_conf, complex*,point_shapes, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/squared_staples.cpp	/^  THREADABLE_FUNCTION_2ARG(compute_squared_staples_lx_conf, squared_staples_t*,out, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/squared_staples.cpp	/^  THREADABLE_FUNCTION_2ARG(compute_summed_squared_staples_eo_conf, quad_su3**,F, quad_su3**,eo_conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/squared_staples.cpp	/^  THREADABLE_FUNCTION_2ARG(compute_summed_squared_staples_lx_conf, quad_su3*,out, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/topological_charge.cpp	/^  THREADABLE_FUNCTION_2ARG(four_leaves, as2t_su3*,leaves_summ, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/topological_charge.cpp	/^  THREADABLE_FUNCTION_2ARG(local_topological_charge, double*,charge, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/topological_charge.cpp	/^  THREADABLE_FUNCTION_2ARG(topological_staples, quad_su3*,staples, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/topological_charge.cpp	/^  THREADABLE_FUNCTION_2ARG(total_topological_charge_eo_conf, double*,tot_charge, quad_su3**,eo_conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	src/operations/su3_paths/topological_charge.cpp	/^  THREADABLE_FUNCTION_2ARG(total_topological_charge_lx_conf, double*,tot_charge, quad_su3*,conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_2ARG	work_in_prog/bgq/src/geometry_bgq.cpp	/^THREADABLE_FUNCTION_2ARG(lx_conf_remap_to_bgqlx, bi_oct_su3*,out, quad_su3*,in)$/;"	f
THREADABLE_FUNCTION_2ARG_EXPORT	src/base/thread_macros.hpp	145;"	d
THREADABLE_FUNCTION_2ARG_EXTERNAL_ARGS	src/base/thread_macros.hpp	107;"	d
THREADABLE_FUNCTION_2ARG_INSIDE	src/base/thread_macros.hpp	384;"	d
THREADABLE_FUNCTION_2ARG_SUMMONER	src/base/thread_macros.hpp	249;"	d
THREADABLE_FUNCTION_2ARG_TRIGGER	src/base/thread_macros.hpp	195;"	d
THREADABLE_FUNCTION_3ARG	projects/cpn/cpn.cpp	/^THREADABLE_FUNCTION_3ARG(energy, double*,en, ON_t*,z, quad_u1*,l)$/;"	f
THREADABLE_FUNCTION_3ARG	projects/generate_confs/generate_quenched.cpp	/^THREADABLE_FUNCTION_3ARG(compute_corr_stoch, double*,corr, su3spinspin**,phi, su3spinspin**,eta)$/;"	f
THREADABLE_FUNCTION_3ARG	projects/ib/contr.cpp	/^  THREADABLE_FUNCTION_3ARG(compute_prop_scalprod, double*,res, std::string,pr_dag, std::string, pr)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	projects/ib/disco2.cpp	/^  THREADABLE_FUNCTION_3ARG(global_product, double*,out, spin1field*,a, spin1field*,b)$/;"	f	namespace:mel
THREADABLE_FUNCTION_3ARG	projects/ib/mel.cpp	/^THREADABLE_FUNCTION_3ARG(hadronic_part_leptonic_correlation, spinspin*,hadr, PROP_TYPE*,S1, PROP_TYPE*,S2)$/;"	f
THREADABLE_FUNCTION_3ARG	projects/ib/prop.cpp	/^  THREADABLE_FUNCTION_3ARG(build_source, spincolor*,out, std::vector<source_term_t>*,source_terms, int,isou)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	projects/nucleons/nucleons_smeared.cpp	/^THREADABLE_FUNCTION_3ARG(close_diquark, ssssss*,prot6, diquark*,diq, su3spinspin*,S)$/;"	f
THREADABLE_FUNCTION_3ARG	src/base/random.cpp	/^  THREADABLE_FUNCTION_3ARG(generate_colorspindiluted_source, su3spinspin*,source, enum rnd_t,rtype, int,twall)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/base/random.cpp	/^  THREADABLE_FUNCTION_3ARG(generate_spindiluted_source, colorspinspin*,source, enum rnd_t,rtype, int,twall)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/base/random.cpp	/^  THREADABLE_FUNCTION_3ARG(generate_undiluted_source, spincolor*,source, enum rnd_t,rtype, int,twall)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/base/thread_macros.hpp	471;"	d
THREADABLE_FUNCTION_3ARG	src/base/thread_macros.hpp	526;"	d
THREADABLE_FUNCTION_3ARG	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  THREADABLE_FUNCTION_3ARG(HOPPING_MATRIX_OE_OR_EO_EXPAND_TO_32_64_STAGGERED_D_SUBTRACT_FROM_MASS2_TIMES_IN, VIR_32_64_COLOR*,out, PREC_TYPE,mass2, VIR_32_64_COLOR*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/dirac_operators/stD/dirac_operator_stDLeb_portable.cpp	/^  THREADABLE_FUNCTION_3ARG(apply_st2DLeb_oe, color*,out, quad_su3**,conf, color*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/dirac_operators/stD/dirac_operator_stDLeb_portable.cpp	/^  THREADABLE_FUNCTION_3ARG(apply_stDLeb_eo_half, color*,out, quad_su3**,conf, color*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/dirac_operators/stD/dirac_operator_stDLeb_portable.cpp	/^  THREADABLE_FUNCTION_3ARG(apply_stDLeb_oe, color*,out, quad_su3**,conf, color*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/dirac_operators/stD/dirac_operator_stD_portable.cpp	/^  THREADABLE_FUNCTION_3ARG(apply_st2Doe, color*,out, quad_su3**,conf, color*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/dirac_operators/stD/dirac_operator_stD_portable.cpp	/^  THREADABLE_FUNCTION_3ARG(apply_stDeo_half, color*,out, quad_su3**,conf, color*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/dirac_operators/stD/dirac_operator_stD_portable.cpp	/^  THREADABLE_FUNCTION_3ARG(apply_stDoe, color*,out, quad_su3**,conf, color*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/free_theory/tlSym_gauge_propagator.cpp	/^  THREADABLE_FUNCTION_3ARG(multiply_by_sqrt_tlSym_gauge_propagator, spin1field*,photon, spin1field*,eta, gauge_info,gl)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/free_theory/tlSym_gauge_propagator.cpp	/^  THREADABLE_FUNCTION_3ARG(multiply_by_tlSym_gauge_propagator, spin1field*,out, spin1field*,in, gauge_info,gl)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/free_theory/tlSym_gauge_propagator.cpp	/^  THREADABLE_FUNCTION_3ARG(multiply_mom_space_sqrt_tlSym_gauge_propagator, spin1field*,out, spin1field*,in, gauge_info,gl)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/free_theory/tlSym_gauge_propagator.cpp	/^  THREADABLE_FUNCTION_3ARG(multiply_mom_space_tlSym_gauge_propagator, spin1field*,out, spin1field*,in, gauge_info,gl)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/free_theory/tlSym_gauge_propagator.cpp	/^  THREADABLE_FUNCTION_3ARG(multiply_x_space_tlSym_gauge_propagator_by_fft, spin1prop*,out, spin1prop*,in, gauge_info,gl)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/free_theory/twisted_propagator.cpp	/^  THREADABLE_FUNCTION_3ARG(compute_mom_space_twisted_propagator, spinspin*,prop, tm_quark_info,qu, tm_basis_t,base)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/free_theory/twisted_propagator.cpp	/^  THREADABLE_FUNCTION_3ARG(compute_x_space_twisted_squared_propagator_by_fft, spinspin*,sq_prop, tm_quark_info,qu, tm_basis_t,base)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/geometry/geometry_mix.cpp	/^  THREADABLE_FUNCTION_3ARG(paste_eo_parts_into_lx_vector_internal, char*,out_lx, char**,in_eo, size_t,bps)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/geometry/geometry_mix.cpp	/^  THREADABLE_FUNCTION_3ARG(remap_loceo_conf_to_Lebeo_oct, oct_su3*,out, quad_su3**,in, int,par)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/geometry/geometry_mix.cpp	/^  THREADABLE_FUNCTION_3ARG(split_lx_vector_into_eo_parts_internal, char**,out_eo, char*,in_lx, size_t,bps)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_3ARG(evn_or_odd_color_remap_to_single_virevn_or_odd, vir_single_color*,out, color*,in, int,par)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_3ARG(evn_or_odd_color_remap_to_virevn_or_odd, vir_color*,out, color*,in, int,par)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_3ARG(evn_or_odd_quad_su3_remap_to_virevn_or_odd, vir_quad_su3*,out, quad_su3*,in, int,par)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_3ARG(evn_or_odd_spincolor_remap_to_virevn_or_odd, vir_spincolor*,out, spincolor*,in, int,par)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_3ARG(virevn_or_odd_color_remap_to_evn_or_odd, color*,out, vir_color*,in, int,par)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_3ARG(virevn_or_odd_quad_su3_remap_to_evn_or_odd, quad_su3*,out, vir_quad_su3*,in, int,par)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_3ARG(virevn_or_odd_single_color_remap_to_evn_or_odd, color*,out, vir_single_color*,in, int,par)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_3ARG(virevn_or_odd_spincolor_remap_to_evn_or_odd, spincolor*,out, vir_spincolor*,in, int,par)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/hmc/backfield.cpp	/^  THREADABLE_FUNCTION_3ARG(add_em_field_to_backfield, quad_u1**,S, quark_content_t*,quark_content, em_field_pars_t*,em_field_pars)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/hmc/gauge/Wilson_force.cpp	/^  THREADABLE_FUNCTION_3ARG(Wilson_force_eo_conf, quad_su3**,F, quad_su3**,eo_conf, double,beta)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/hmc/gauge/Wilson_force.cpp	/^  THREADABLE_FUNCTION_3ARG(Wilson_force_lx_conf, quad_su3*,F, quad_su3*,conf, double,beta)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/hmc/gauge/Wilson_force.cpp	/^  THREADABLE_FUNCTION_3ARG(Wilson_force_lx_conf_vir, quad_su3*,F, quad_su3*,conf, double,beta)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/hmc/gauge/gluonic_force.cpp	/^  THREADABLE_FUNCTION_3ARG(compute_gluonic_force_lx_conf, quad_su3*,F, quad_su3*,conf, theory_pars_t*,physics)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/hmc/gauge/topological_force.cpp	/^  THREADABLE_FUNCTION_3ARG(compute_topological_force_lx_conf, quad_su3*,F, quad_su3*,conf, topotential_pars_t*,pars)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/hmc/momenta/momenta_evolve.cpp	/^  THREADABLE_FUNCTION_3ARG(evolve_lx_conf_with_momenta, quad_su3*,lx_conf, quad_su3*,H, double,dt)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/hmc/momenta/momenta_evolve.cpp	/^  THREADABLE_FUNCTION_3ARG(evolve_lx_momenta_with_force, quad_su3*,H, quad_su3*,F, double,dt)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/io/ILDG_File.cpp	/^  THREADABLE_FUNCTION_3ARG(remap_to_write_ildg_data, char*,buf, char*,data, int,nbytes_per_site)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^    THREADABLE_FUNCTION_3ARG(put_color_into_su3, su3**,out, color**,in, int,ic_source)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(complex_vector_conj, complex*,res, complex*,in, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(complex_vector_glb_collapse, double*,glb_res, complex*,a, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(double_vector_copy, double*,a, double*,b, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(double_vector_from_quadruple_vector, double*,a, float_128*,b, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(double_vector_glb_collapse, double*,glb_res, double*,a, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(double_vector_to_single, float*,a, double*,b, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(get_color_from_spincolor, color*,out, spincolor*,in, int,id)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(get_color_from_su3, color**,out, su3**,in, int,ic_source)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(get_spincolor_from_colorspinspin, spincolor*,out, colorspinspin*,in, int,id)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(parallel_memcpy,void*,out, void*,in, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(put_color_into_spincolor, spincolor*,out, color*,in, int,id)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(put_spincolor_into_colorspinspin, colorspinspin*,out, spincolor*,in, int,id)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(quadruple_vector_from_double_vector, float_128*,a, double*,b, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(quadruple_vector_summassign_double_vector, float_128*,a, double*,b, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(rotate_vol_colorspinspin_to_physical_basis, colorspinspin*,s, int,rsi, int,rso)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(rotate_vol_su3spinspin_to_physical_basis, su3spinspin*,s, int,rsi, int,rso)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(safe_dirac_prod_colorspinspin, colorspinspin*,out, dirac_matr*,m, colorspinspin*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(safe_dirac_prod_spincolor, spincolor*,out, dirac_matr*,m, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_3ARG(single_vector_to_double, double*,a, float*,b, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/gauge_fixing.cpp	/^  THREADABLE_FUNCTION_3ARG(Landau_or_Coulomb_gauge_fix, quad_su3*,fixed_conf, LC_gauge_fixing_pars_t*,pars, quad_su3*,ext_conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/gauge_fixing.cpp	/^  THREADABLE_FUNCTION_3ARG(gauge_transform_color, color**,out, su3**,g, color**,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/gauge_fixing.cpp	/^  THREADABLE_FUNCTION_3ARG(gauge_transform_conf, quad_su3**,uout, su3**,g, quad_su3**,uin)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/gauge_fixing.cpp	/^  THREADABLE_FUNCTION_3ARG(gauge_transform_conf, quad_su3*,uout, su3*,g, const quad_su3*,uin)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/gaugeconf.cpp	/^  THREADABLE_FUNCTION_3ARG(overrelax_lx_conf, quad_su3*,conf, gauge_sweeper_t*,sweeper, int,nhits)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/shift.cpp	/^  THREADABLE_FUNCTION_3ARG(su3_vec_single_shift, su3*,u, int,mu, int,sign)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/smearing/Wflow.cpp	/^  THREADABLE_FUNCTION_3ARG(Wflow_lx_conf, quad_su3*,conf, double,dt, bool*,dirs)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/smearing/stout_eo.cpp	/^  THREADABLE_FUNCTION_3ARG(stout_smear_conf_stack_allocate, quad_su3****,out, quad_su3**,in, int,nlev)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/smearing/stout_eo.cpp	/^  THREADABLE_FUNCTION_3ARG(stouted_force_remap, quad_su3**,F, quad_su3***,sme_conf, stout_pars_t*,stout_pars)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/smearing/stout_eo.cpp	/^  THREADABLE_FUNCTION_3ARG(stouted_force_remap_step, quad_su3**,F, quad_su3**,conf, double,rho)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/smearing/stout_lx.cpp	/^  THREADABLE_FUNCTION_3ARG(stout_smear_conf_stack_allocate, quad_su3***,out, quad_su3*,in, int,nlev)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/smearing/stout_lx.cpp	/^  THREADABLE_FUNCTION_3ARG(stouted_force_remap, quad_su3*,F, quad_su3**,sme_conf, stout_pars_t*,stout_pars)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/smearing/stout_lx.cpp	/^  THREADABLE_FUNCTION_3ARG(stouted_force_remap_step, quad_su3*,F, quad_su3*,conf, double,rho)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/stag/Laplace_op_2links.cpp	/^  THREADABLE_FUNCTION_3ARG(Laplace_operator_2_links, color*,out, quad_su3*,conf, color*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/stag/stag.cpp	/^    THREADABLE_FUNCTION_3ARG(two_links_laplacian, color**,out, quad_su3**,conf, color**,in)$/;"	f	namespace:nissa::stag
THREADABLE_FUNCTION_3ARG	src/operations/su3_paths/clover_term.cpp	/^  THREADABLE_FUNCTION_3ARG(unsafe_apply_chromo_operator_to_colorspinspin, colorspinspin*,out, clover_term_t*,Cl, colorspinspin*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/su3_paths/clover_term.cpp	/^  THREADABLE_FUNCTION_3ARG(unsafe_apply_chromo_operator_to_spincolor, spincolor*,out, clover_term_t*,Cl, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/su3_paths/clover_term.cpp	/^  THREADABLE_FUNCTION_3ARG(unsafe_apply_chromo_operator_to_spincolor_128, spincolor_128*,out, clover_term_t*,Cl, spincolor_128*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/su3_paths/clover_term.cpp	/^  THREADABLE_FUNCTION_3ARG(unsafe_apply_chromo_operator_to_su3spinspin, su3spinspin*,out, clover_term_t*,Cl, su3spinspin*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/su3_paths/pline.cpp	/^  THREADABLE_FUNCTION_3ARG(field_untraced_polyakov_loop_lx_conf, su3*,u, quad_su3*,conf, int,mu)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/su3_paths/rectangular_staples.cpp	/^  THREADABLE_FUNCTION_3ARG(compute_rectangular_staples_lx_conf, rectangular_staples_t*,out, quad_su3*,conf, squared_staples_t*,sq_staples)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	src/operations/su3_paths/rectangular_staples.cpp	/^  THREADABLE_FUNCTION_3ARG(compute_summed_rectangular_staples_lx_conf, quad_su3*,out, quad_su3*,conf, squared_staples_t*,squared_staples)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_3ARG	tools/conf_transform/smear/stout.cpp	/^THREADABLE_FUNCTION_3ARG(new_cool_eo_conf, quad_su3**,eo_conf, int,over_flag, double,over_exp)$/;"	f
THREADABLE_FUNCTION_3ARG_EXPORT	src/base/thread_macros.hpp	148;"	d
THREADABLE_FUNCTION_3ARG_EXTERNAL_ARGS	src/base/thread_macros.hpp	110;"	d
THREADABLE_FUNCTION_3ARG_INSIDE	src/base/thread_macros.hpp	392;"	d
THREADABLE_FUNCTION_3ARG_SUMMONER	src/base/thread_macros.hpp	256;"	d
THREADABLE_FUNCTION_3ARG_TRIGGER	src/base/thread_macros.hpp	199;"	d
THREADABLE_FUNCTION_4ARG	projects/ib/disco2.cpp	/^  THREADABLE_FUNCTION_4ARG(local_mel, double*,out, spincolor*,source, int,igamma, spincolor*,prop)$/;"	f	namespace:mel
THREADABLE_FUNCTION_4ARG	projects/ib/prop.cpp	/^  THREADABLE_FUNCTION_4ARG(phase_prop, spincolor*,out, spincolor*,ori, int,t, double*,th)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	projects/reno_const/RIMOM.cpp	/^THREADABLE_FUNCTION_4ARG(write_data, MPI_File*,fout, int,imass, int,ilp, int,offset)$/;"	f
THREADABLE_FUNCTION_4ARG	src/base/random.cpp	/^  THREADABLE_FUNCTION_4ARG(generate_fully_undiluted_lx_source, color*,source, enum rnd_t,rtype, int,twall, int,dir)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/base/random.cpp	/^  THREADABLE_FUNCTION_4ARG(rnd_fill_unif_loc_vector, double*,v, int,dps, double,min, double,max)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/base/thread_macros.hpp	473;"	d
THREADABLE_FUNCTION_4ARG	src/base/thread_macros.hpp	527;"	d
THREADABLE_FUNCTION_4ARG	src/base/vectors.cpp	/^  THREADABLE_FUNCTION_4ARG(reorder_vector, char*,vect, int*,order, int,nel, int,sel)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/bgq/Wilson_hopping_matrix_lx_bgq.cpp	/^  THREADABLE_FUNCTION_4ARG(apply_Wilson_hopping_matrix_lx_bgq_nocomm, vir_oct_su3*,conf, int,istart, int,iend, vir_spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/dirac_operators/stD/dirac_operator_stD_bgq_template.cpp	/^  THREADABLE_FUNCTION_4ARG(APPLY_STD2EE_M2_BGQ, VIR_32_64_COLOR*,vir_out, VIR_32_64_OCT_SU3**,vir_conf, PREC_TYPE,mass2, VIR_32_64_COLOR*,vir_in)$/;"	f
THREADABLE_FUNCTION_4ARG	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_128.cpp	/^  THREADABLE_FUNCTION_4ARG(inv_tmDee_or_oo_eos_128, spincolor_128*,out, double,kappa, double,mu, spincolor_128*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_128.cpp	/^  THREADABLE_FUNCTION_4ARG(tmDee_or_oo_eos_128, spincolor_128*,out, double,kappa, double,mu, spincolor_128*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_128.cpp	/^  THREADABLE_FUNCTION_4ARG(tmn2Deo_or_tmn2Doe_eos_128, spincolor_128*,out, quad_su3**,conf, int,eooe, spincolor_128*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_portable.cpp	/^  THREADABLE_FUNCTION_4ARG(inv_tmDee_or_oo_eos, spincolor*,out, double,kappa, double,mu, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_portable.cpp	/^  THREADABLE_FUNCTION_4ARG(tmDee_or_oo_eos, spincolor*,out, double,kappa, double,mu, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_portable.cpp	/^  THREADABLE_FUNCTION_4ARG(tmn2Deo_or_tmn2Doe_eos, spincolor*,out, quad_su3**,conf, int,eooe, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/dirac_operators/tmQ/dirac_operator_tmQ_bgq.cpp	/^  THREADABLE_FUNCTION_4ARG(hopping_matrix_lx_tmQ_diag_term_bgq, vir_spincolor*,out, double,kappa, double,mu, vir_spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_128.cpp	/^  THREADABLE_FUNCTION_4ARG(inv_tmclovDee_or_oo_eos_128, spincolor_128*,out, inv_clover_term_t*,invCl, bool,dag, spincolor_128*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_portable.cpp	/^  THREADABLE_FUNCTION_4ARG(inv_tmclovDee_or_oo_eos, spincolor*,out, inv_clover_term_t*,invCl, bool,dag, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/geometry/geometry_mix.cpp	/^  THREADABLE_FUNCTION_4ARG(get_evn_or_odd_part_of_lx_vector_internal, char*,out_ev_or_od, char*,in_lx, size_t,bps, int,par)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/geometry/geometry_vir.cpp	/^  THREADABLE_FUNCTION_4ARG(evn_or_odd_complex_vect_remap_to_virevn_or_odd, vir_complex*,out, complex*,in, int,par, int,vl)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/hmc/backfield.cpp	/^  THREADABLE_FUNCTION_4ARG(add_or_rem_backfield_with_or_without_stagphases_to_conf, quad_su3**,conf, bool,add_rem, quad_u1**,u1, bool,with_without)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/hmc/backfield.cpp	/^  THREADABLE_FUNCTION_4ARG(add_or_rem_backfield_with_or_without_stagphases_to_conf, quad_su3*,conf, bool,add_rem, quad_u1**,u1, bool,with_without)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/hmc/gauge/MFACC_fields.cpp	/^  THREADABLE_FUNCTION_4ARG(evolve_MFACC_momenta, su3**,pi, su3**,phi, int,naux_fields, double,dt)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/hmc/gauge/Symanzik_force.cpp	/^  THREADABLE_FUNCTION_4ARG(Symanzik_force_lx_conf, quad_su3*,out, quad_su3*,conf, double,beta, double,C1)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/hmc/gauge/pure_gauge_Omelyan_integrator.cpp	/^  THREADABLE_FUNCTION_4ARG(Omelyan_pure_gauge_evolver, quad_su3*,H, quad_su3*,conf, theory_pars_t*,theory_pars, pure_gauge_evol_pars_t*,simul)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/hmc/multipseudo/Omelyan_integrator.cpp	/^  THREADABLE_FUNCTION_4ARG(Omelyan_pure_gauge_evolver_lx_conf, quad_su3*,H, quad_su3*,lx_conf, theory_pars_t*,theory_pars, hmc_evol_pars_t*,simul)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/hmc/multipseudo/Omelyan_integrator.cpp	/^  THREADABLE_FUNCTION_4ARG(evolve_eo_momenta_with_topological_force, quad_su3**,eo_H, quad_su3**,eo_conf, topotential_pars_t*,topars, double,dt)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/hmc/multipseudo/set_expansions.cpp	/^  THREADABLE_FUNCTION_4ARG(set_expansions, std::vector<rat_approx_t>*,rat_appr, quad_su3**,eo_conf, theory_pars_t*,theory_pars, hmc_evol_pars_t*,evol_pars)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(complex_vector_glb_scalar_prod, double*,glb_res, complex*,a, complex*,b, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(complex_vector_summassign_complex_vector_prod_complex, complex*,a, complex*,b, double*,c, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(double_vector_glb_scalar_prod, double*,glb_res, double*,a, double*,b, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(double_vector_prod_double, double*,out, double*,in, double,r, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(double_vector_subt, double*,out, double*,in1, double*,in2, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(double_vector_summ, double*,out, double*,in1, double*,in2, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(float_128_vector_prod_double, float_128*,out, float_128*,in, double,r, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(get_color_from_colorspinspin, color*,out, colorspinspin*,in, int,id1, int,id2)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(get_spincolor_from_su3spinspin, spincolor*,out, su3spinspin*,in, int,id, int,ic)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(put_color_into_colorspinspin, colorspinspin*,out, color*,in, int,id1, int,id2)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(put_spincolor_into_su3spinspin, su3spinspin*,out, spincolor*,in, int,id, int,ic)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(quadruple_accumulate_double_vector_glb_scalar_prod, float_128*,a, double*,b, double*,c ,int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(quadruple_vector_glb_scalar_prod, float_128*,glb_res, float_128*,a, float_128*,b, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(quadruple_vector_subt_from_double_vector, float_128*,a, double*,b, float_128*,c, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_4ARG(single_vector_glb_scalar_prod, float*,glb_res, float*,a, float*,b, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/operations/gaugeconf.cpp	/^  THREADABLE_FUNCTION_4ARG(heatbath_lx_conf, quad_su3*,conf, gauge_sweeper_t*,sweeper, double,beta, int,nhits)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/operations/smearing/stout_eo.cpp	/^  THREADABLE_FUNCTION_4ARG(stout_smear, quad_su3**,ext_out, quad_su3**,ext_in, stout_pars_t*,stout_pars, bool*,dirs)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/operations/smearing/stout_eo.cpp	/^  THREADABLE_FUNCTION_4ARG(stout_smear_single_level, quad_su3**,out, quad_su3**,ext_in, double,rho, bool*,dirs)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/operations/smearing/stout_eo.cpp	/^  THREADABLE_FUNCTION_4ARG(stout_smear_whole_stack, quad_su3***,out, quad_su3**,in, stout_pars_t*,stout_pars, bool*,dirs)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/operations/smearing/stout_lx.cpp	/^  THREADABLE_FUNCTION_4ARG(stout_smear, quad_su3*,ext_out, quad_su3*,ext_in, stout_pars_t*,stout_pars, bool*,dirs)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/operations/smearing/stout_lx.cpp	/^  THREADABLE_FUNCTION_4ARG(stout_smear_single_level, quad_su3*,out, quad_su3*,ext_in, double,rho, bool*,dirs)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/operations/smearing/stout_lx.cpp	/^  THREADABLE_FUNCTION_4ARG(stout_smear_whole_stack, quad_su3**,out, quad_su3*,in, stout_pars_t*,stout_pars, bool*,dirs)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/operations/stag/mesons.cpp	/^  THREADABLE_FUNCTION_4ARG(compute_meson_corr, complex*,corr, quad_su3**,conf, theory_pars_t*,tp, meson_corr_meas_pars_t*,meas_pars)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/operations/stag/stag.cpp	/^    THREADABLE_FUNCTION_4ARG(summ_the_trace, double*,out, complex*,point_result, color**, A, color**, B)$/;"	f	namespace:nissa::stag
THREADABLE_FUNCTION_4ARG	src/operations/su3_paths/all_rectangles.cpp	/^  THREADABLE_FUNCTION_4ARG(measure_all_rectangular_paths, all_rects_meas_pars_t*,pars, quad_su3*,ori_conf, int,iconf, int,create_output_file)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/operations/su3_paths/all_rectangles.cpp	/^  THREADABLE_FUNCTION_4ARG(measure_all_rectangular_paths_old, all_rects_meas_pars_t*,pars, quad_su3*,ori_conf, int,iconf, int,create_output_file)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/operations/su3_paths/arbitrary.cpp	/^  THREADABLE_FUNCTION_4ARG(elong_su3_path, path_drawing_t*,c, su3*,out, quad_su3*,conf, path_list_steps_t,steps)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/operations/su3_paths/clover_term.cpp	/^   THREADABLE_FUNCTION_4ARG(invert_twisted_clover_term, inv_clover_term_t*,invCl, double,mass, double,kappa, clover_term_t*,Cl)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	src/operations/su3_paths/watusso.cpp	/^  THREADABLE_FUNCTION_4ARG(measure_watusso, watusso_meas_pars_t*,pars, quad_su3**,eo_conf, int,iconf, int,create_output_file)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_4ARG	tools/Gaussiansmear_test.cpp	/^THREADABLE_FUNCTION_4ARG(compute_gaussianity_pars, double*,x, color*,source, int,maxpow, coords*,source_pos)$/;"	f
THREADABLE_FUNCTION_4ARG	tools/conf_measure/magn.cpp	/^THREADABLE_FUNCTION_4ARG(compute_mag, quark_content_t*,qc, int,iconf, int,ihit, int,iflav)$/;"	f
THREADABLE_FUNCTION_4ARG	tools/x_clusterize/x_clusterize.cpp	/^THREADABLE_FUNCTION_4ARG(add_cluster, double*,out_buffer, double*,in_buffer, int,iconf, int,r)$/;"	f
THREADABLE_FUNCTION_4ARG	work_in_prog/bgq/src/dirac_operator_tmQ2_bgq.cpp	/^THREADABLE_FUNCTION_4ARG(hopping_matrix_expand_to_Q_and_summ_diag_term_bgq_binded, bi_spincolor*,out, double,kappa, double,mu, bi_spincolor*,in)$/;"	f
THREADABLE_FUNCTION_4ARG	work_in_prog/bgq/src/hopping_matrix_bgq.cpp	/^THREADABLE_FUNCTION_4ARG(apply_Wilson_hopping_matrix_bgq_binded_nocomm_nobarrier, bi_oct_su3*,conf, int,istart, int,iend, bi_spincolor*,in)$/;"	f
THREADABLE_FUNCTION_4ARG_EXPORT	src/base/thread_macros.hpp	151;"	d
THREADABLE_FUNCTION_4ARG_EXTERNAL_ARGS	src/base/thread_macros.hpp	113;"	d
THREADABLE_FUNCTION_4ARG_INSIDE	src/base/thread_macros.hpp	400;"	d
THREADABLE_FUNCTION_4ARG_SUMMONER	src/base/thread_macros.hpp	264;"	d
THREADABLE_FUNCTION_4ARG_TRIGGER	src/base/thread_macros.hpp	203;"	d
THREADABLE_FUNCTION_5ARG	projects/ib/disco2.cpp	/^  THREADABLE_FUNCTION_5ARG(conserved_vector_current_mel, spin1field*,out, spincolor*,source, quad_su3*,conf, int,r, spincolor*,prop)$/;"	f	namespace:mel
THREADABLE_FUNCTION_5ARG	projects/ib/mel.cpp	/^THREADABLE_FUNCTION_5ARG(insert_photon_on_the_source, spinspin*,prop, spin1field*,A, bool*,dirs, tm_quark_info,le, int,twall)$/;"	f
THREADABLE_FUNCTION_5ARG	projects/ib/meslep.cpp	/^  THREADABLE_FUNCTION_5ARG(insert_photon_on_the_source, spinspin*,prop, spin1field*,A, int*,dirs, tm_quark_info,le, int,twall)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/base/random.cpp	/^  THREADABLE_FUNCTION_5ARG(generate_fully_undiluted_eo_source, color*,source, enum rnd_t,rtype, int,twall, int,par, int,dir)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/base/random.cpp	/^  THREADABLE_FUNCTION_5ARG(generate_fully_undiluted_eo_source, spincolor*,source, enum rnd_t,rtype, int,twall, int,par, int,dir)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/base/thread_macros.hpp	475;"	d
THREADABLE_FUNCTION_5ARG	src/base/thread_macros.hpp	528;"	d
THREADABLE_FUNCTION_5ARG	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  THREADABLE_FUNCTION_5ARG(APPLY_32_64_WILSON_HOPPING_MATRIX_OE_OR_EO_BGQ_NOCOMM, VIR_32_64_OCT_SU3**,conf, int,istart, int,iend, VIR_32_64_SPINCOLOR*,in, int,oe_or_eo)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^  THREADABLE_FUNCTION_5ARG(APPLY_32_64_STAGGERED_HOPPING_MATRIX_OE_OR_EO_BGQ_NOCOMM, VIR_32_64_OCT_SU3**,conf, int,istart, int,iend, VIR_32_64_COLOR*,in, int,oe_or_eo)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/dirac_operators/WclovQ/dirac_operator_WclovQ_portable.cpp	/^  THREADABLE_FUNCTION_5ARG(apply_WclovQ, spincolor*,out, quad_su3*,conf, double,kappa, clover_term_t*,Cl, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/dirac_operators/Wstat/dirac_operator_Wstat.cpp	/^  THREADABLE_FUNCTION_5ARG(apply_Wstat, spincolor*,out, quad_su3*,conf, spincolor*,in, int,mu, int,xmu_start)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/dirac_operators/momenta/MFACC.cpp	/^  THREADABLE_FUNCTION_5ARG(apply_MFACC, quad_su3*,out, quad_su3*,conf, double,kappa, double,offset, quad_su3*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/dirac_operators/momenta/MFACC.cpp	/^  THREADABLE_FUNCTION_5ARG(apply_MFACC, su3*,out, quad_su3*,conf, double,kappa, double,offset, su3*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/dirac_operators/stD/dirac_operator_stDLeb_portable.cpp	/^  THREADABLE_FUNCTION_5ARG(apply_stD2Leb_ee_m2, color*,out, oct_su3**,conf, color*,temp, double,mass2, color*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/dirac_operators/stD/dirac_operator_stD_32_portable.cpp	/^  THREADABLE_FUNCTION_5ARG(apply_stD2ee_m2_32, single_color*,out, single_quad_su3**,conf, single_color*,temp, float,mass2, single_color*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/dirac_operators/stD/dirac_operator_stD_portable.cpp	/^  THREADABLE_FUNCTION_5ARG(apply_stD2ee_m2, color*,out, quad_su3**,conf, color*,temp, double,mass2, color*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/dirac_operators/tmQ/dirac_operator_tmQ_128.cpp	/^  THREADABLE_FUNCTION_5ARG(apply_tmQ_128, spincolor_128*,out, quad_su3*,conf, double,kappa, double,mu, spincolor_128*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/dirac_operators/tmQ/dirac_operator_tmQ_bgq.cpp	/^  THREADABLE_FUNCTION_5ARG(apply_tmQ_bgq, vir_spincolor*,out, vir_oct_su3*,conf, double,kappa, double,mu, vir_spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/dirac_operators/tmQ/dirac_operator_tmQ_portable.cpp	/^  THREADABLE_FUNCTION_5ARG(apply_tmQ, spincolor*,out, quad_su3*,conf, double,kappa, double,mu, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/dirac_operators/tmQ_left/dirac_operator_tmQ_left_portable.cpp	/^  THREADABLE_FUNCTION_5ARG(apply_tmQ_left, spincolor*,out, quad_su3*,conf, double,kappa, double,mu, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/dirac_operators/tmclovQ/dirac_operator_tmclovQ_bgq.cpp	/^  THREADABLE_FUNCTION_5ARG(hopping_matrix_lx_tmclovQ_diag_term_bgq, vir_spincolor*,out, double,kappa, double,mu, vir_clover_term_t*, Cl, vir_spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/geometry/geometry_mix.cpp	/^  THREADABLE_FUNCTION_5ARG(remap_vector_internal, char*,out, char*,in, size_t,bps, int*,dest_of_source, int,length)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/hmc/gauge/MFACC_fields.cpp	/^  THREADABLE_FUNCTION_5ARG(summ_the_MFACC_momenta_QCD_force, quad_su3*,F, quad_su3*,conf, double,kappa, su3**,pi, int,naux_fields)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/hmc/gauge/pure_gauge_Omelyan_integrator.cpp	/^  THREADABLE_FUNCTION_5ARG(evolve_momenta_with_pure_gauge_force, quad_su3*,H, quad_su3*,conf, theory_pars_t*,theory_pars, double,dt, quad_su3*,ext_F)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/hmc/momenta/momenta_action.cpp	/^  THREADABLE_FUNCTION_5ARG(MFACC_momenta_action, double*,tot_action, su3**,pi, int,naux_fields, quad_su3*,conf, double,kappa)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/hmc/momenta/momenta_generation.cpp	/^  THREADABLE_FUNCTION_5ARG(generate_hmc_momenta_with_FACC, quad_su3*,H, quad_su3*,conf, rat_approx_t*,rat_exp_H, double,kappa, double,residue)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/hmc/multipseudo/Omelyan_integrator.cpp	/^  THREADABLE_FUNCTION_5ARG(evolve_lx_momenta_with_topological_force, quad_su3*,H, quad_su3*,conf, topotential_pars_t*,topars, double,dt, quad_su3*,ext_F)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/inverters/templates/bicgstab_invert_template_threaded.cpp	/^  THREADABLE_FUNCTION_5ARG(BICGSTAB_INVERT, BASETYPE*,sol, BASETYPE*,guess, int,niter, double,residue, BASETYPE*,source)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/inverters/templates/cg_128_invert_template_threaded.cpp	/^  THREADABLE_FUNCTION_5ARG(CG_128_INVERT, BASETYPE*,sol, BASETYPE*,guess, int,niter, double,external_solver_residue, BASETYPE*,external_source)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/inverters/templates/cg_invert_template_threaded.cpp	/^  THREADABLE_FUNCTION_5ARG(CG_INVERT, BASETYPE*,sol, BASETYPE*,guess, int,niter, double,residue, BASETYPE*,source)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/inverters/templates/cgm_invert_template_summsol_threaded.hpp	/^THREADABLE_FUNCTION_5ARG(SUMM_SRC_AND_ALL_INV_CGM, BASETYPE*,sol, rat_approx_t*,appr, int,niter_max, double,req_res, BASETYPE*,source)$/;"	f
THREADABLE_FUNCTION_5ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_5ARG(double_vector_normalize, double*,ratio, double*,out, double*,in, double,norm, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_5ARG(double_vector_prod_the_summ_double, double*,out, double,r, double*,in1, double*,in2, int,n)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/operations/stag/nucleon.cpp	/^  THREADABLE_FUNCTION_5ARG(measure_nucleon_corr, quad_su3**,conf, theory_pars_t,theory_pars, nucleon_corr_meas_pars_t,meas_pars, int,iconf, int,conf_created)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/operations/stag/qed_corr.cpp	/^  THREADABLE_FUNCTION_5ARG(measure_qed_corr, quad_su3**,conf, theory_pars_t,theory_pars, qed_corr_meas_pars_t,meas_pars, int,iconf, int,conf_created)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/operations/stag/spinpol.cpp	/^  THREADABLE_FUNCTION_5ARG(measure_spinpol, theory_pars_t*,tp, spinpol_meas_pars_t*,mp,int,iconf, int,conf_created, quad_su3**,glu_conf)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/operations/su3_paths/arbitrary.cpp	/^  THREADABLE_FUNCTION_5ARG(elong_su3_path_BW, path_drawing_t*,c, su3*,out, quad_su3*,conf, int,mu, bool,both_sides)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG	src/operations/su3_paths/arbitrary.cpp	/^  THREADABLE_FUNCTION_5ARG(elong_su3_path_FW, path_drawing_t*,c, su3*,out, quad_su3*,conf, int,mu, bool,both_sides)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_5ARG_EXPORT	src/base/thread_macros.hpp	154;"	d
THREADABLE_FUNCTION_5ARG_EXTERNAL_ARGS	src/base/thread_macros.hpp	116;"	d
THREADABLE_FUNCTION_5ARG_INSIDE	src/base/thread_macros.hpp	408;"	d
THREADABLE_FUNCTION_5ARG_SUMMONER	src/base/thread_macros.hpp	273;"	d
THREADABLE_FUNCTION_5ARG_TRIGGER	src/base/thread_macros.hpp	207;"	d
THREADABLE_FUNCTION_6ARG	projects/ib/contr.cpp	/^  THREADABLE_FUNCTION_6ARG(vector_current_mel, spin1field*,si, dirac_matr*,ext_g, int,r, const char*,id_Qbw, const char*,id_Qfw, bool,revert)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	projects/ib/mel.cpp	/^THREADABLE_FUNCTION_6ARG(attach_leptonic_correlation, spinspin*,hadr, int,iprop, int,ilepton, int,orie, int,rl, int,ext_ind)$/;"	f
THREADABLE_FUNCTION_6ARG	projects/ib/meslep.cpp	/^  THREADABLE_FUNCTION_6ARG(attach_leptonic_contr, spinspin*,hadr, int,iprop, int,ilepton, int,orie, int,rl, int,ext_ind)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	projects/ib/meslep.cpp	/^  THREADABLE_FUNCTION_6ARG(meson_part_leptonic_contr, spinspin*,hadr, int,iq1, int,prop1_type, int,iq2, int,prop2_type, int,irev)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/base/thread_macros.hpp	477;"	d
THREADABLE_FUNCTION_6ARG	src/base/thread_macros.hpp	529;"	d
THREADABLE_FUNCTION_6ARG	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_128.cpp	/^  THREADABLE_FUNCTION_6ARG(tmDkern_eoprec_eos_128, spincolor_128*,out, spincolor_128*,temp, quad_su3**,conf, double,kappa, double,mu, spincolor_128*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.cpp	/^  THREADABLE_FUNCTION_6ARG(tmD_or_Qkern_eoprec_eos_bgq, vir_spincolor*,out, vir_oct_su3**,conf, double,kappa, double,mass, vir_spincolor*,in, int,D_or_Q)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_portable.cpp	/^  THREADABLE_FUNCTION_6ARG(tmDkern_eoprec_eos, spincolor*,out, spincolor*,temp, quad_su3**,conf, double,kappa, double,mu, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/dirac_operators/tmQ/reconstruct_tm_doublet.cpp	/^  THREADABLE_FUNCTION_6ARG(reconstruct_tm_doublet, spincolor*,outminus, spincolor*,outplus, quad_su3*,conf, double,kappa, double,mu, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_128.cpp	/^  THREADABLE_FUNCTION_6ARG(tmclovDee_or_oo_eos_128, spincolor_128*,out, double,kappa, clover_term_t*,Cl, bool,dag, double,mu, spincolor_128*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_portable.cpp	/^  THREADABLE_FUNCTION_6ARG(tmclovDee_or_oo_eos, spincolor*,out, double,kappa, clover_term_t*,Cl, bool,dag, double,mu, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/dirac_operators/tmclovQ/dirac_operator_tmclovQ.cpp	/^  THREADABLE_FUNCTION_6ARG(apply_tmclovQ, spincolor*,out, quad_su3*,conf, double,kappa, clover_term_t*,Cl, double,mu, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/dirac_operators/tmclovQ/dirac_operator_tmclovQ_128.cpp	/^  THREADABLE_FUNCTION_6ARG(apply_tmclovQ_128, spincolor_128*,out, quad_su3*,conf, double,kappa, clover_term_t*,Cl, double,mu, spincolor_128*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/dirac_operators/tmclovQ/dirac_operator_tmclovQ_bgq.cpp	/^  THREADABLE_FUNCTION_6ARG(apply_tmclovQ_bgq, vir_spincolor*,out, vir_oct_su3*,conf, double,kappa, vir_clover_term_t*,Cl, double,mu, vir_spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/hmc/backfield.cpp	/^  THREADABLE_FUNCTION_6ARG(add_em_field_to_backfield, quad_u1**,S, quark_content_t*,quark_content, double,em_str, int,quantization, int,mu, int,nu)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/hmc/gauge/MFACC_fields.cpp	/^  THREADABLE_FUNCTION_6ARG(evolve_MFACC_fields, su3**,phi, int,naux_fields, quad_su3*,conf, double,kappa, su3**,pi, double,dt)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/hmc/gauge/MFACC_fields.cpp	/^  THREADABLE_FUNCTION_6ARG(summ_the_MFACC_QCD_momenta_QCD_force, quad_su3*,F, quad_su3*,conf, double,kappa, int,niter, double,residue, quad_su3*,H)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/hmc/gauge/pure_gauge_Omelyan_integrator.cpp	/^  THREADABLE_FUNCTION_6ARG(Omelyan_pure_gauge_FACC_evolver, quad_su3*,H, quad_su3*,conf, su3**,pi, su3**,phi, theory_pars_t*,theory_pars, pure_gauge_evol_pars_t*,simul)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/hmc/gauge/pure_gauge_implicit_integrator.cpp	/^  THREADABLE_FUNCTION_6ARG(implicit_pure_gauge_evolver, quad_su3*,H, quad_su3*,conf, su3**,pi, su3**,phi, theory_pars_t*,theory_pars, pure_gauge_evol_pars_t*,simul)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/hmc/gauge/pure_gauge_implicit_integrator.cpp	/^  THREADABLE_FUNCTION_6ARG(implicit_pure_gauge_leapfrog_evolver, quad_su3*,H, quad_su3*,conf, su3**,pi, su3**,phi, theory_pars_t*,theory_pars, pure_gauge_evol_pars_t*,simul)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/hmc/momenta/momenta_generation.cpp	/^  THREADABLE_FUNCTION_6ARG(generate_MFACC_momenta, su3**,pi, int,naux_fields, quad_su3*,conf, rat_approx_t*,rat_exp_H, double,kappa, double,residue)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/hmc/multipseudo/Omelyan_integrator.cpp	/^  THREADABLE_FUNCTION_6ARG(Omelyan_integrator, quad_su3**,H, quad_su3**,conf, std::vector<std::vector<pseudofermion_t> >*,pf, theory_pars_t*,theory_pars, hmc_evol_pars_t*,simul_pars, std::vector<rat_approx_t>*,rat_appr)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/hmc/multipseudo/quark_force.cpp	/^  THREADABLE_FUNCTION_6ARG(compute_quark_force, quad_su3**,F, quad_su3**,conf, std::vector<std::vector<pseudofermion_t> >*,pf, theory_pars_t*,physics, std::vector<rat_approx_t>*,appr, double,residue)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/hmc/multipseudo/quark_force.cpp	/^  THREADABLE_FUNCTION_6ARG(compute_quark_force_no_stout_remapping, quad_su3**,F, quad_su3**,conf, std::vector<std::vector<pseudofermion_t> >*,pf, theory_pars_t*,tp, std::vector<rat_approx_t>*,appr, double,residue)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/hmc/multipseudo/set_expansions.cpp	/^  THREADABLE_FUNCTION_6ARG(max_eigenval, double*,eig_max, quark_content_t*,quark, quad_su3**,eo_conf, clover_term_t**,Cl, quad_u1**,backfield, int,niters)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/inverters/templates/cgm_32_invert_template_threaded.cpp	/^  THREADABLE_FUNCTION_6ARG(CGM_INVERT, BASETYPE**,sol, double*,shift, int,nshift, int,niter_max, double*,req_res, BASETYPE*,source)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/inverters/templates/cgm_32_invert_template_threaded.cpp	/^  THREADABLE_FUNCTION_6ARG(CGM_INVERT_RUN_HM_UP_TO_COMM_PREC, BASETYPE**,sol, double*,shift, int,nshift, int,niter_max, double,req_res, BASETYPE*,source)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/inverters/templates/cgm_invert_template_threaded.cpp	/^  THREADABLE_FUNCTION_6ARG(CGM_INVERT, BASETYPE**,sol, double*,shift, int,nshift, int,niter_max, double*,ext_req_res, BASETYPE*,source)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/inverters/templates/cgm_invert_template_threaded.cpp	/^THREADABLE_FUNCTION_6ARG(CGM_INVERT_RUN_HM_UP_TO_COMM_PREC, BASETYPE**,sol, double*,shift, int,nshift, int,niter_max, double,req_res, BASETYPE*,source)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_6ARG(double_vector_summ_double_vector_prod_double, double*,a, double*,b, double*,c, double,d, int,n, int,OPT)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_6ARG(single_vector_summ_single_vector_prod_single, float*,a, float*,b, float*,c, float,d, int,n, int,OPT)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/fourier_transform.cpp	/^  THREADABLE_FUNCTION_6ARG(pass_spin1field_from_mom_to_x_space, spin1field*,out, spin1field*,in, bool*,dirs, double*,bc, int,source_or_sink, bool,include_phases)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/fourier_transform.cpp	/^  THREADABLE_FUNCTION_6ARG(pass_spin1field_from_x_to_mom_space, spin1field*,out, spin1field*,in, bool*,dirs, double*,bc, int,source_or_sink, bool,include_phases)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/fourier_transform.cpp	/^  THREADABLE_FUNCTION_6ARG(pass_spin1prop_from_mom_to_x_space, spin1prop*,out, spin1prop*,in, bool*,dirs, double*,bc, int,source_or_sink, bool,include_phases)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/fourier_transform.cpp	/^  THREADABLE_FUNCTION_6ARG(pass_spin1prop_from_x_to_mom_space, spin1prop*,out, spin1prop*,in, bool*,dirs, double*,bc, int,source_or_sink, bool,include_phases)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/fourier_transform.cpp	/^  THREADABLE_FUNCTION_6ARG(pass_spin_from_mom_to_x_space, spin*,out, spin*,in, bool*,dirs, double*,bc, int,source_or_sink, bool,include_phases)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/fourier_transform.cpp	/^  THREADABLE_FUNCTION_6ARG(pass_spin_from_x_to_mom_space, spin*,out, spin*,in, bool*,dirs, double*,bc, int,source_or_sink, bool,include_phases)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/fourier_transform.cpp	/^  THREADABLE_FUNCTION_6ARG(pass_spincolor_from_mom_to_x_space, spincolor*,out, spincolor*,in, bool*,dirs, double*,bc, int,source_or_sink, bool,include_phases)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/fourier_transform.cpp	/^  THREADABLE_FUNCTION_6ARG(pass_spincolor_from_x_to_mom_space, spincolor*,out, spincolor*,in, bool*,dirs, double*,bc, int,source_or_sink, bool,include_phases)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/fourier_transform.cpp	/^  THREADABLE_FUNCTION_6ARG(pass_spinspin_from_mom_to_x_space, spinspin*,out, spinspin*,in, bool*,dirs, double*,bc, int,source_or_sink, bool,include_phases)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/fourier_transform.cpp	/^  THREADABLE_FUNCTION_6ARG(pass_spinspin_from_x_to_mom_space, spinspin*,out, spinspin*,in, bool*,dirs, double*,bc, int,source_or_sink, bool,include_phases)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/smearing/APE.cpp	/^  THREADABLE_FUNCTION_6ARG(ape_smear_conf, quad_su3*,smear_conf, quad_su3*,origi_conf, double,alpha, int,nstep, bool*,dirs, int,min_staple_dir)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/smearing/HYP.cpp	/^  THREADABLE_FUNCTION_6ARG(hyp_smear_conf, quad_su3*,sm_conf, quad_su3*,conf, double,alpha0, double,alpha1, double,alpha2, bool*,dirs)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/stag/qed_corr.cpp	/^    THREADABLE_FUNCTION_6ARG(insert_time_conserved_vector_current, color**,out, quad_su3**,conf, theory_pars_t*,theory_pars, int,iflav, color**,in, int,t)$/;"	f	namespace:nissa::stag
THREADABLE_FUNCTION_6ARG	src/operations/stag/stag.cpp	/^    THREADABLE_FUNCTION_6ARG(mult_Minv, color**,prop, quad_su3**,conf, quad_u1**,u1b, double,m, double,residue, color**,source)$/;"	f	namespace:nissa::stag
THREADABLE_FUNCTION_6ARG	src/operations/stag/stag.cpp	/^    THREADABLE_FUNCTION_6ARG(mult_dMdmu, color**,out, theory_pars_t*,theory_pars, quad_su3**,conf, int,iflav, int,ord, color**,in)$/;"	f	namespace:nissa::stag
THREADABLE_FUNCTION_6ARG	src/operations/su3_paths/arbitrary.cpp	/^  THREADABLE_FUNCTION_6ARG(elong_su3_path, path_drawing_t*,c, su3*,out, quad_su3*,conf, int,mu, int,len, bool,both_sides)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG	src/operations/su3_paths/pline.cpp	/^  THREADABLE_FUNCTION_6ARG(average_and_corr_polyakov_loop_lx_conf_internal, double*,loop_trace, double*,loop_dag_trace, complex*,ll_dag_corr, complex*,ll_corr, quad_su3*,conf, int,mu)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_6ARG_EXPORT	src/base/thread_macros.hpp	157;"	d
THREADABLE_FUNCTION_6ARG_EXTERNAL_ARGS	src/base/thread_macros.hpp	119;"	d
THREADABLE_FUNCTION_6ARG_INSIDE	src/base/thread_macros.hpp	416;"	d
THREADABLE_FUNCTION_6ARG_SUMMONER	src/base/thread_macros.hpp	283;"	d
THREADABLE_FUNCTION_6ARG_TRIGGER	src/base/thread_macros.hpp	211;"	d
THREADABLE_FUNCTION_7ARG	projects/ib/contr.cpp	/^  THREADABLE_FUNCTION_7ARG(conserved_vector_current_mel, quad_su3*,conf, spin1field*,si, dirac_matr*,ext_g, int,r, const char*,name_bw, const char*,name_fw, bool,revert)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_7ARG	src/base/thread_macros.hpp	479;"	d
THREADABLE_FUNCTION_7ARG	src/base/thread_macros.hpp	530;"	d
THREADABLE_FUNCTION_7ARG	src/dirac_operators/tmQ2/dirac_operator_tmQ2.cpp	/^  THREADABLE_FUNCTION_7ARG(apply_tmQ2_RL, spincolor*,out, quad_su3*,conf, double,kappa, spincolor*,ext_temp, int,RL, double,mu, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_7ARG	src/dirac_operators/tmclovQ/reconstruct_tmclov_doublet.cpp	/^  THREADABLE_FUNCTION_7ARG(reconstruct_tmclov_doublet, spincolor*,outminus, spincolor*,outplus, quad_su3*,conf, double,kappa, clover_term_t*,Cl, double,mu, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_7ARG	src/hmc/multipseudo/Omelyan_integrator.cpp	/^  THREADABLE_FUNCTION_7ARG(evolve_momenta_with_quark_force, quad_su3**,H, quad_su3**,conf, std::vector<std::vector<pseudofermion_t> >*,pf, theory_pars_t*,theory_pars, hmc_evol_pars_t*,simul_pars, std::vector<rat_approx_t>*,rat_appr, double,dt)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_7ARG	src/hmc/multipseudo/theory_action.cpp	/^  THREADABLE_FUNCTION_7ARG(compute_quark_action, double*,glb_action, quad_su3**,eo_conf, std::vector<quad_u1**>,u1b, std::vector<std::vector<pseudofermion_t> >*,pf, std::vector<quark_content_t>,quark_content, hmc_evol_pars_t*,simul_pars, std::vector<rat_approx_t>*,rat_appr)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_7ARG	src/inverters/momenta/cg_invert_MFACC.cpp	/^  THREADABLE_FUNCTION_7ARG(inv_MFACC_cg, quad_su3*,sol, quad_su3*,guess, quad_su3*,conf, double,kappa, int,niter, double,residue, quad_su3*,source)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_7ARG	src/inverters/momenta/cgm_invert_MFACC.cpp	/^  THREADABLE_FUNCTION_7ARG(summ_src_and_all_inv_MFACC_cgm, quad_su3*,sol, quad_su3*,conf, double,kappa, rat_approx_t*,appr, int,niter_max, double,req_res, quad_su3*,source)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_7ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_7ARG(double_vector_linear_comb, double*,a, double*,b, double,c, double*,d, double,e, int,n, int,OPT)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_7ARG	src/linalgs/linalgs.cpp	/^  THREADABLE_FUNCTION_7ARG(single_vector_linear_comb, float*,a, float*,b, float,c, float*,d, float,e, int,n, int,OPT)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_7ARG	src/operations/stag/putpourri.cpp	/^  THREADABLE_FUNCTION_7ARG(fermionic_putpourri, fermionic_putpourri_t*,putpourri, rnd_t,rnd_type,quad_su3**,conf, quad_u1**,u1b, quark_content_t*,quark, double,residue, int,comp_susc)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_7ARG	src/operations/stag/qed_corr.cpp	/^    THREADABLE_FUNCTION_7ARG(insert_external_source, color**,out, quad_su3**,conf, theory_pars_t*,theory_pars, int,iflav, spin1field**,curr, color**,in, int,t)$/;"	f	namespace:nissa::stag
THREADABLE_FUNCTION_7ARG	src/operations/stag/qed_corr.cpp	/^    THREADABLE_FUNCTION_7ARG(insert_tadpole, color**,out, quad_su3**,conf, theory_pars_t*,theory_pars, int,iflav, color**,in, double*,tad, int,t)$/;"	f	namespace:nissa::stag
THREADABLE_FUNCTION_7ARG_EXPORT	src/base/thread_macros.hpp	160;"	d
THREADABLE_FUNCTION_7ARG_EXTERNAL_ARGS	src/base/thread_macros.hpp	122;"	d
THREADABLE_FUNCTION_7ARG_INSIDE	src/base/thread_macros.hpp	424;"	d
THREADABLE_FUNCTION_7ARG_SUMMONER	src/base/thread_macros.hpp	294;"	d
THREADABLE_FUNCTION_7ARG_TRIGGER	src/base/thread_macros.hpp	215;"	d
THREADABLE_FUNCTION_8ARG	projects/ib/disco2.cpp	/^THREADABLE_FUNCTION_8ARG(fill_eigenpart, spincolor**,eigvec_conv, spincolor**,eigvec, int,neig, quad_su3*,conf, double,kappa, double,am, int,r, double,eig_precision)$/;"	f
THREADABLE_FUNCTION_8ARG	src/base/thread_macros.hpp	481;"	d
THREADABLE_FUNCTION_8ARG	src/base/thread_macros.hpp	531;"	d
THREADABLE_FUNCTION_8ARG	src/hmc/fermions/rootst_eoimpr_quark_force.cpp	/^  THREADABLE_FUNCTION_8ARG(summ_the_rootst_eoimpr_quark_force, quad_su3**,F, double,charge, quad_su3**,eo_conf, color*,pf, int,quantization, quad_u1**,u1b, rat_approx_t*,appr, double,residue)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_8ARG	src/hmc/gauge/pure_gauge_Omelyan_integrator.cpp	/^  THREADABLE_FUNCTION_8ARG(evolve_momenta_and_FACC_momenta, quad_su3*,H, su3**,pi, quad_su3*,conf, su3**,phi, theory_pars_t*,theory_pars, pure_gauge_evol_pars_t*,simul, double,dt, quad_su3*,ext_F)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_8ARG	src/inverters/twisted_mass/cg_invert_tmD_eoprec.cpp	/^  THREADABLE_FUNCTION_8ARG(inv_tmD_cg_eoprec_native, spincolor*,solution_lx, spincolor*,guess_Koo, quad_su3*,conf_lx, double,kappa, double,mass, int,nitermax, double,residue, spincolor*,source_lx)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_8ARG	src/operations/contract/mesons_eight.cpp	/^  THREADABLE_FUNCTION_8ARG(trace_id_css_dag_g_css_id_css_dag_g_css, complex*,glb_c, colorspinspin*,s1L, dirac_matr*,g2L, colorspinspin*,s2L, colorspinspin*,s1R, dirac_matr*,g2R, colorspinspin*,s2R, int,ncontr)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_8ARG	src/operations/contract/mesons_eight.cpp	/^  THREADABLE_FUNCTION_8ARG(trace_id_css_dag_g_css_times_trace_id_css_dag_g_css, complex*,glb_c, colorspinspin*,s1L, dirac_matr*,g2L, colorspinspin*,s2L, colorspinspin*,s1R, dirac_matr*,g2R, colorspinspin*,s2R, int,ncontr)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_8ARG	src/operations/stag/magnetization.cpp	/^  THREADABLE_FUNCTION_8ARG(magnetization, complex*,magn, complex*,magn_proj_x, quad_su3**,conf, int,quantization, quad_u1**,u1b, quark_content_t*,quark, double,residue, color**,rnd)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_8ARG_EXPORT	src/base/thread_macros.hpp	163;"	d
THREADABLE_FUNCTION_8ARG_EXTERNAL_ARGS	src/base/thread_macros.hpp	125;"	d
THREADABLE_FUNCTION_8ARG_INSIDE	src/base/thread_macros.hpp	432;"	d
THREADABLE_FUNCTION_8ARG_SUMMONER	src/base/thread_macros.hpp	306;"	d
THREADABLE_FUNCTION_8ARG_TRIGGER	src/base/thread_macros.hpp	219;"	d
THREADABLE_FUNCTION_9ARG	src/base/thread_macros.hpp	483;"	d
THREADABLE_FUNCTION_9ARG	src/base/thread_macros.hpp	532;"	d
THREADABLE_FUNCTION_9ARG	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_128.cpp	/^  THREADABLE_FUNCTION_9ARG(tmclovDkern_eoprec_eos_128, spincolor_128*,out, spincolor_128*,temp, quad_su3**,conf, double,kappa, clover_term_t*,Cl_odd, inv_clover_term_t*,invCl_evn, bool,dag, double,mu, spincolor_128*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_9ARG	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_bgq.cpp	/^  THREADABLE_FUNCTION_9ARG(tmclovDkern_eoprec_eos_bgq, vir_spincolor*,out, vir_spincolor*,temp, vir_oct_su3**,conf, double,kappa, vir_clover_term_t*,Cl_odd, vir_inv_clover_term_t*,invCl_evn, bool,dag, double,mass, vir_spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_9ARG	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_portable.cpp	/^  THREADABLE_FUNCTION_9ARG(tmclovDkern_eoprec_eos, spincolor*,out, spincolor*,temp, quad_su3**,conf, double,kappa, clover_term_t*,Cl_odd, inv_clover_term_t*,invCl_evn, bool,dag, double,mu, spincolor*,in)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_9ARG	src/hmc/fermions/pseudofermions_generation.cpp	/^  THREADABLE_FUNCTION_9ARG(generate_pseudo_fermion, double*,action, pseudofermion_t*,pf, quad_su3**,conf, clover_term_t*,Cl_odd, inv_clover_term_t*,invCl_evn, quad_u1**,u1b, rat_approx_t*,rat, double,residue, quark_content_t,q)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_9ARG	src/hmc/multipseudo/theory_action.cpp	/^  THREADABLE_FUNCTION_9ARG(full_theory_action, double*,tot_action, quad_su3**,eo_conf, quad_su3**,sme_conf, quad_su3**,H, std::vector<std::vector<pseudofermion_t> > *,pf, theory_pars_t*,theory_pars, hmc_evol_pars_t*,simul_pars, std::vector<rat_approx_t>*,rat_appr, double,external_quark_action)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_9ARG	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	/^  THREADABLE_FUNCTION_9ARG(inv_tmDQ_RL_cgm, spincolor**,sol, quad_su3*,conf, double,kappa, int,RL, double*,m, int,nmass, int,niter_max, double*,req_res, spincolor*,source)$/;"	f	namespace:nissa
THREADABLE_FUNCTION_9ARG_EXPORT	src/base/thread_macros.hpp	166;"	d
THREADABLE_FUNCTION_9ARG_EXTERNAL_ARGS	src/base/thread_macros.hpp	128;"	d
THREADABLE_FUNCTION_9ARG_INSIDE	src/base/thread_macros.hpp	440;"	d
THREADABLE_FUNCTION_9ARG_SUMMONER	src/base/thread_macros.hpp	319;"	d
THREADABLE_FUNCTION_9ARG_TRIGGER	src/base/thread_macros.hpp	223;"	d
THREADABLE_FUNCTION_END	src/base/thread_macros.hpp	540;"	d
THREADABLE_FUNCTION_END	src/operations/su3_paths/arbitrary.cpp	/^  THREADABLE_FUNCTION_END;$/;"	m	namespace:nissa	file:
THREADABLE_FUNCTION_TRIGGER_PT1	src/base/thread_macros.hpp	179;"	d
THREADABLE_FUNCTION_TRIGGER_PT2	src/base/thread_macros.hpp	182;"	d
THREAD_ATOMIC_EXEC	src/base/thread_macros.hpp	66;"	d
THREAD_ATOMIC_EXEC	src/base/thread_macros.hpp	82;"	d
THREAD_BARRIER	src/base/thread_macros.hpp	55;"	d
THREAD_BARRIER	src/base/thread_macros.hpp	58;"	d
THREAD_BARRIER	src/base/thread_macros.hpp	79;"	d
THREAD_BARRIER_FORCE	src/base/thread_macros.hpp	54;"	d
THREAD_BARRIER_FORCE	src/base/thread_macros.hpp	57;"	d
THREAD_BARRIER_FORCE	src/base/thread_macros.hpp	78;"	d
THREAD_BROADCAST	src/base/thread_macros.hpp	67;"	d
THREAD_BROADCAST	src/base/thread_macros.hpp	83;"	d
THREAD_BROADCAST_PTR	src/base/thread_macros.hpp	70;"	d
THREAD_BROADCAST_PTR	src/base/thread_macros.hpp	84;"	d
THREAD_ID	src/base/thread_macros.hpp	51;"	d
THREAD_ID	src/base/thread_macros.hpp	77;"	d
TIME	src/operations/smearing/smooth.hpp	/^    enum space_or_time_t{SPACE,TIME,SPACETIME};$/;"	e	enum:nissa::smooth_pars_t::space_or_time_t
TKTK	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
TKVK	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
TK_ACT_RESIDUE	build/projects/generate_confs/parser.cpp	/^    TK_ACT_RESIDUE = 377,$/;"	e	enum:yytokentype	file:
TK_ACT_RESIDUE	build/projects/generate_confs/parser.cpp	388;"	d	file:
TK_ACT_RESIDUE	build/projects/generate_confs/parser.hpp	/^    TK_ACT_RESIDUE = 377,$/;"	e	enum:yytokentype
TK_ACT_RESIDUE	build/projects/generate_confs/parser.hpp	305;"	d
TK_AFTER	build/projects/generate_confs/parser.cpp	/^    TK_AFTER = 282,$/;"	e	enum:yytokentype	file:
TK_AFTER	build/projects/generate_confs/parser.cpp	293;"	d	file:
TK_AFTER	build/projects/generate_confs/parser.hpp	/^    TK_AFTER = 282,$/;"	e	enum:yytokentype
TK_AFTER	build/projects/generate_confs/parser.hpp	210;"	d
TK_ALPHA	build/projects/generate_confs/parser.cpp	/^    TK_ALPHA = 327,$/;"	e	enum:yytokentype	file:
TK_ALPHA	build/projects/generate_confs/parser.cpp	338;"	d	file:
TK_ALPHA	build/projects/generate_confs/parser.hpp	/^    TK_ALPHA = 327,$/;"	e	enum:yytokentype
TK_ALPHA	build/projects/generate_confs/parser.hpp	255;"	d
TK_ALPHAS	build/projects/generate_confs/parser.cpp	/^    TK_ALPHAS = 329,$/;"	e	enum:yytokentype	file:
TK_ALPHAS	build/projects/generate_confs/parser.cpp	340;"	d	file:
TK_ALPHAS	build/projects/generate_confs/parser.hpp	/^    TK_ALPHAS = 329,$/;"	e	enum:yytokentype
TK_ALPHAS	build/projects/generate_confs/parser.hpp	257;"	d
TK_ANALYSIS	build/projects/generate_confs/parser.cpp	/^    TK_ANALYSIS = 388,$/;"	e	enum:yytokentype	file:
TK_ANALYSIS	build/projects/generate_confs/parser.cpp	399;"	d	file:
TK_ANALYSIS	build/projects/generate_confs/parser.hpp	/^    TK_ANALYSIS = 388,$/;"	e	enum:yytokentype
TK_ANALYSIS	build/projects/generate_confs/parser.hpp	316;"	d
TK_APE	build/projects/generate_confs/parser.cpp	/^    TK_APE = 326,$/;"	e	enum:yytokentype	file:
TK_APE	build/projects/generate_confs/parser.cpp	337;"	d	file:
TK_APE	build/projects/generate_confs/parser.hpp	/^    TK_APE = 326,$/;"	e	enum:yytokentype
TK_APE	build/projects/generate_confs/parser.hpp	254;"	d
TK_BARR	build/projects/generate_confs/parser.cpp	/^    TK_BARR = 293,$/;"	e	enum:yytokentype	file:
TK_BARR	build/projects/generate_confs/parser.cpp	304;"	d	file:
TK_BARR	build/projects/generate_confs/parser.hpp	/^    TK_BARR = 293,$/;"	e	enum:yytokentype
TK_BARR	build/projects/generate_confs/parser.hpp	221;"	d
TK_BEND	build/projects/generate_confs/parser.cpp	/^    TK_BEND = 296,$/;"	e	enum:yytokentype	file:
TK_BEND	build/projects/generate_confs/parser.cpp	307;"	d	file:
TK_BEND	build/projects/generate_confs/parser.hpp	/^    TK_BEND = 296,$/;"	e	enum:yytokentype
TK_BEND	build/projects/generate_confs/parser.hpp	224;"	d
TK_BETA	build/projects/generate_confs/parser.cpp	/^    TK_BETA = 278,$/;"	e	enum:yytokentype	file:
TK_BETA	build/projects/generate_confs/parser.cpp	289;"	d	file:
TK_BETA	build/projects/generate_confs/parser.hpp	/^    TK_BETA = 278,$/;"	e	enum:yytokentype
TK_BETA	build/projects/generate_confs/parser.hpp	206;"	d
TK_BKGRD_EM_FIELD	build/projects/generate_confs/parser.cpp	/^    TK_BKGRD_EM_FIELD = 338,$/;"	e	enum:yytokentype	file:
TK_BKGRD_EM_FIELD	build/projects/generate_confs/parser.cpp	349;"	d	file:
TK_BKGRD_EM_FIELD	build/projects/generate_confs/parser.hpp	/^    TK_BKGRD_EM_FIELD = 338,$/;"	e	enum:yytokentype
TK_BKGRD_EM_FIELD	build/projects/generate_confs/parser.hpp	266;"	d
TK_B_COMP	build/projects/generate_confs/parser.cpp	/^    TK_B_COMP = 339,$/;"	e	enum:yytokentype	file:
TK_B_COMP	build/projects/generate_confs/parser.cpp	350;"	d	file:
TK_B_COMP	build/projects/generate_confs/parser.hpp	/^    TK_B_COMP = 339,$/;"	e	enum:yytokentype
TK_B_COMP	build/projects/generate_confs/parser.hpp	267;"	d
TK_COEFF	build/projects/generate_confs/parser.cpp	/^    TK_COEFF = 291,$/;"	e	enum:yytokentype	file:
TK_COEFF	build/projects/generate_confs/parser.cpp	302;"	d	file:
TK_COEFF	build/projects/generate_confs/parser.hpp	/^    TK_COEFF = 291,$/;"	e	enum:yytokentype
TK_COEFF	build/projects/generate_confs/parser.hpp	219;"	d
TK_COLD	build/projects/generate_confs/parser.cpp	/^    TK_COLD = 387,$/;"	e	enum:yytokentype	file:
TK_COLD	build/projects/generate_confs/parser.cpp	398;"	d	file:
TK_COLD	build/projects/generate_confs/parser.hpp	/^    TK_COLD = 387,$/;"	e	enum:yytokentype
TK_COLD	build/projects/generate_confs/parser.hpp	315;"	d
TK_COMPUTE_SUSC	build/projects/generate_confs/parser.cpp	/^    TK_COMPUTE_SUSC = 348,$/;"	e	enum:yytokentype	file:
TK_COMPUTE_SUSC	build/projects/generate_confs/parser.cpp	359;"	d	file:
TK_COMPUTE_SUSC	build/projects/generate_confs/parser.hpp	/^    TK_COMPUTE_SUSC = 348,$/;"	e	enum:yytokentype
TK_COMPUTE_SUSC	build/projects/generate_confs/parser.hpp	276;"	d
TK_CONF_LIST	build/projects/generate_confs/parser.cpp	/^    TK_CONF_LIST = 389,$/;"	e	enum:yytokentype	file:
TK_CONF_LIST	build/projects/generate_confs/parser.cpp	400;"	d	file:
TK_CONF_LIST	build/projects/generate_confs/parser.hpp	/^    TK_CONF_LIST = 389,$/;"	e	enum:yytokentype
TK_CONF_LIST	build/projects/generate_confs/parser.hpp	317;"	d
TK_COOLING	build/projects/generate_confs/parser.cpp	/^    TK_COOLING = 324,$/;"	e	enum:yytokentype	file:
TK_COOLING	build/projects/generate_confs/parser.cpp	335;"	d	file:
TK_COOLING	build/projects/generate_confs/parser.hpp	/^    TK_COOLING = 324,$/;"	e	enum:yytokentype
TK_COOLING	build/projects/generate_confs/parser.hpp	252;"	d
TK_CORR_PATH	build/projects/generate_confs/parser.cpp	/^    TK_CORR_PATH = 318,$/;"	e	enum:yytokentype	file:
TK_CORR_PATH	build/projects/generate_confs/parser.cpp	329;"	d	file:
TK_CORR_PATH	build/projects/generate_confs/parser.hpp	/^    TK_CORR_PATH = 318,$/;"	e	enum:yytokentype
TK_CORR_PATH	build/projects/generate_confs/parser.hpp	246;"	d
TK_CSW	build/projects/generate_confs/parser.cpp	/^    TK_CSW = 307,$/;"	e	enum:yytokentype	file:
TK_CSW	build/projects/generate_confs/parser.cpp	318;"	d	file:
TK_CSW	build/projects/generate_confs/parser.hpp	/^    TK_CSW = 307,$/;"	e	enum:yytokentype
TK_CSW	build/projects/generate_confs/parser.hpp	235;"	d
TK_DEGENERACY	build/projects/generate_confs/parser.cpp	/^    TK_DEGENERACY = 302,$/;"	e	enum:yytokentype	file:
TK_DEGENERACY	build/projects/generate_confs/parser.cpp	313;"	d	file:
TK_DEGENERACY	build/projects/generate_confs/parser.hpp	/^    TK_DEGENERACY = 302,$/;"	e	enum:yytokentype
TK_DEGENERACY	build/projects/generate_confs/parser.hpp	230;"	d
TK_DISCRETIZ	build/projects/generate_confs/parser.cpp	/^    TK_DISCRETIZ = 303,$/;"	e	enum:yytokentype	file:
TK_DISCRETIZ	build/projects/generate_confs/parser.cpp	314;"	d	file:
TK_DISCRETIZ	build/projects/generate_confs/parser.hpp	/^    TK_DISCRETIZ = 303,$/;"	e	enum:yytokentype
TK_DISCRETIZ	build/projects/generate_confs/parser.hpp	231;"	d
TK_DIV	build/projects/generate_confs/parser.cpp	/^    TK_DIV = 266,$/;"	e	enum:yytokentype	file:
TK_DIV	build/projects/generate_confs/parser.cpp	277;"	d	file:
TK_DIV	build/projects/generate_confs/parser.hpp	/^    TK_DIV = 266,$/;"	e	enum:yytokentype
TK_DIV	build/projects/generate_confs/parser.hpp	194;"	d
TK_DMAX	build/projects/generate_confs/parser.cpp	/^    TK_DMAX = 369,$/;"	e	enum:yytokentype	file:
TK_DMAX	build/projects/generate_confs/parser.cpp	380;"	d	file:
TK_DMAX	build/projects/generate_confs/parser.hpp	/^    TK_DMAX = 369,$/;"	e	enum:yytokentype
TK_DMAX	build/projects/generate_confs/parser.hpp	297;"	d
TK_DMIN	build/projects/generate_confs/parser.cpp	/^    TK_DMIN = 368,$/;"	e	enum:yytokentype	file:
TK_DMIN	build/projects/generate_confs/parser.cpp	379;"	d	file:
TK_DMIN	build/projects/generate_confs/parser.hpp	/^    TK_DMIN = 368,$/;"	e	enum:yytokentype
TK_DMIN	build/projects/generate_confs/parser.hpp	296;"	d
TK_DOUBLE	build/projects/generate_confs/parser.cpp	/^    TK_DOUBLE = 260,$/;"	e	enum:yytokentype	file:
TK_DOUBLE	build/projects/generate_confs/parser.cpp	271;"	d	file:
TK_DOUBLE	build/projects/generate_confs/parser.hpp	/^    TK_DOUBLE = 260,$/;"	e	enum:yytokentype
TK_DOUBLE	build/projects/generate_confs/parser.hpp	188;"	d
TK_EACH	build/projects/generate_confs/parser.cpp	/^    TK_EACH = 280,$/;"	e	enum:yytokentype	file:
TK_EACH	build/projects/generate_confs/parser.cpp	291;"	d	file:
TK_EACH	build/projects/generate_confs/parser.hpp	/^    TK_EACH = 280,$/;"	e	enum:yytokentype
TK_EACH	build/projects/generate_confs/parser.hpp	208;"	d
TK_ELEC_CHARGE	build/projects/generate_confs/parser.cpp	/^    TK_ELEC_CHARGE = 311,$/;"	e	enum:yytokentype	file:
TK_ELEC_CHARGE	build/projects/generate_confs/parser.cpp	322;"	d	file:
TK_ELEC_CHARGE	build/projects/generate_confs/parser.hpp	/^    TK_ELEC_CHARGE = 311,$/;"	e	enum:yytokentype
TK_ELEC_CHARGE	build/projects/generate_confs/parser.hpp	239;"	d
TK_EVOLUTION	build/projects/generate_confs/parser.cpp	/^    TK_EVOLUTION = 372,$/;"	e	enum:yytokentype	file:
TK_EVOLUTION	build/projects/generate_confs/parser.cpp	383;"	d	file:
TK_EVOLUTION	build/projects/generate_confs/parser.hpp	/^    TK_EVOLUTION = 372,$/;"	e	enum:yytokentype
TK_EVOLUTION	build/projects/generate_confs/parser.hpp	300;"	d
TK_E_COMP	build/projects/generate_confs/parser.cpp	/^    TK_E_COMP = 340,$/;"	e	enum:yytokentype	file:
TK_E_COMP	build/projects/generate_confs/parser.cpp	351;"	d	file:
TK_E_COMP	build/projects/generate_confs/parser.hpp	/^    TK_E_COMP = 340,$/;"	e	enum:yytokentype
TK_E_COMP	build/projects/generate_confs/parser.hpp	268;"	d
TK_FLOW_STEP	build/projects/generate_confs/parser.cpp	/^    TK_FLOW_STEP = 333,$/;"	e	enum:yytokentype	file:
TK_FLOW_STEP	build/projects/generate_confs/parser.cpp	344;"	d	file:
TK_FLOW_STEP	build/projects/generate_confs/parser.hpp	/^    TK_FLOW_STEP = 333,$/;"	e	enum:yytokentype
TK_FLOW_STEP	build/projects/generate_confs/parser.hpp	261;"	d
TK_FORCE_OUT	build/projects/generate_confs/parser.cpp	/^    TK_FORCE_OUT = 294,$/;"	e	enum:yytokentype	file:
TK_FORCE_OUT	build/projects/generate_confs/parser.cpp	305;"	d	file:
TK_FORCE_OUT	build/projects/generate_confs/parser.hpp	/^    TK_FORCE_OUT = 294,$/;"	e	enum:yytokentype
TK_FORCE_OUT	build/projects/generate_confs/parser.hpp	222;"	d
TK_GAUGE_ACTION	build/projects/generate_confs/parser.cpp	/^    TK_GAUGE_ACTION = 334,$/;"	e	enum:yytokentype	file:
TK_GAUGE_ACTION	build/projects/generate_confs/parser.cpp	345;"	d	file:
TK_GAUGE_ACTION	build/projects/generate_confs/parser.hpp	/^    TK_GAUGE_ACTION = 334,$/;"	e	enum:yytokentype
TK_GAUGE_ACTION	build/projects/generate_confs/parser.hpp	262;"	d
TK_GAUGE_CONF	build/projects/generate_confs/parser.cpp	/^    TK_GAUGE_CONF = 381,$/;"	e	enum:yytokentype	file:
TK_GAUGE_CONF	build/projects/generate_confs/parser.cpp	392;"	d	file:
TK_GAUGE_CONF	build/projects/generate_confs/parser.hpp	/^    TK_GAUGE_CONF = 381,$/;"	e	enum:yytokentype
TK_GAUGE_CONF	build/projects/generate_confs/parser.hpp	309;"	d
TK_GAUGE_PARS	build/projects/generate_confs/parser.cpp	/^    TK_GAUGE_PARS = 277,$/;"	e	enum:yytokentype	file:
TK_GAUGE_PARS	build/projects/generate_confs/parser.cpp	288;"	d	file:
TK_GAUGE_PARS	build/projects/generate_confs/parser.hpp	/^    TK_GAUGE_PARS = 277,$/;"	e	enum:yytokentype
TK_GAUGE_PARS	build/projects/generate_confs/parser.hpp	205;"	d
TK_GEOMETRY	build/projects/generate_confs/parser.cpp	/^    TK_GEOMETRY = 269,$/;"	e	enum:yytokentype	file:
TK_GEOMETRY	build/projects/generate_confs/parser.cpp	280;"	d	file:
TK_GEOMETRY	build/projects/generate_confs/parser.hpp	/^    TK_GEOMETRY = 269,$/;"	e	enum:yytokentype
TK_GEOMETRY	build/projects/generate_confs/parser.hpp	197;"	d
TK_HOT	build/projects/generate_confs/parser.cpp	/^    TK_HOT = 386,$/;"	e	enum:yytokentype	file:
TK_HOT	build/projects/generate_confs/parser.cpp	397;"	d	file:
TK_HOT	build/projects/generate_confs/parser.hpp	/^    TK_HOT = 386,$/;"	e	enum:yytokentype
TK_HOT	build/projects/generate_confs/parser.hpp	314;"	d
TK_HYP	build/projects/generate_confs/parser.cpp	/^    TK_HYP = 328,$/;"	e	enum:yytokentype	file:
TK_HYP	build/projects/generate_confs/parser.cpp	339;"	d	file:
TK_HYP	build/projects/generate_confs/parser.hpp	/^    TK_HYP = 328,$/;"	e	enum:yytokentype
TK_HYP	build/projects/generate_confs/parser.hpp	256;"	d
TK_ID_SEA_THEORY	build/projects/generate_confs/parser.cpp	/^    TK_ID_SEA_THEORY = 373,$/;"	e	enum:yytokentype	file:
TK_ID_SEA_THEORY	build/projects/generate_confs/parser.cpp	384;"	d	file:
TK_ID_SEA_THEORY	build/projects/generate_confs/parser.hpp	/^    TK_ID_SEA_THEORY = 373,$/;"	e	enum:yytokentype
TK_ID_SEA_THEORY	build/projects/generate_confs/parser.hpp	301;"	d
TK_IM_POT_CH	build/projects/generate_confs/parser.cpp	/^    TK_IM_POT_CH = 310,$/;"	e	enum:yytokentype	file:
TK_IM_POT_CH	build/projects/generate_confs/parser.cpp	321;"	d	file:
TK_IM_POT_CH	build/projects/generate_confs/parser.hpp	/^    TK_IM_POT_CH = 310,$/;"	e	enum:yytokentype
TK_IM_POT_CH	build/projects/generate_confs/parser.hpp	238;"	d
TK_INT	build/projects/generate_confs/parser.cpp	/^    TK_INT = 261,$/;"	e	enum:yytokentype	file:
TK_INT	build/projects/generate_confs/parser.cpp	272;"	d	file:
TK_INT	build/projects/generate_confs/parser.hpp	/^    TK_INT = 261,$/;"	e	enum:yytokentype
TK_INT	build/projects/generate_confs/parser.hpp	189;"	d
TK_INVALID_CHAR	build/projects/generate_confs/parser.cpp	/^    TK_INVALID_CHAR = 259,$/;"	e	enum:yytokentype	file:
TK_INVALID_CHAR	build/projects/generate_confs/parser.cpp	270;"	d	file:
TK_INVALID_CHAR	build/projects/generate_confs/parser.hpp	/^    TK_INVALID_CHAR = 259,$/;"	e	enum:yytokentype
TK_INVALID_CHAR	build/projects/generate_confs/parser.hpp	187;"	d
TK_INVALID_STRING	build/projects/generate_confs/parser.cpp	/^    TK_INVALID_STRING = 258,$/;"	e	enum:yytokentype	file:
TK_INVALID_STRING	build/projects/generate_confs/parser.cpp	269;"	d	file:
TK_INVALID_STRING	build/projects/generate_confs/parser.hpp	/^    TK_INVALID_STRING = 258,$/;"	e	enum:yytokentype
TK_INVALID_STRING	build/projects/generate_confs/parser.hpp	186;"	d
TK_ITHEORY	build/projects/generate_confs/parser.cpp	/^    TK_ITHEORY = 341,$/;"	e	enum:yytokentype	file:
TK_ITHEORY	build/projects/generate_confs/parser.cpp	352;"	d	file:
TK_ITHEORY	build/projects/generate_confs/parser.hpp	/^    TK_ITHEORY = 341,$/;"	e	enum:yytokentype
TK_ITHEORY	build/projects/generate_confs/parser.hpp	269;"	d
TK_IWASAKI	build/projects/generate_confs/parser.cpp	/^    TK_IWASAKI = 337,$/;"	e	enum:yytokentype	file:
TK_IWASAKI	build/projects/generate_confs/parser.cpp	348;"	d	file:
TK_IWASAKI	build/projects/generate_confs/parser.hpp	/^    TK_IWASAKI = 337,$/;"	e	enum:yytokentype
TK_IWASAKI	build/projects/generate_confs/parser.hpp	265;"	d
TK_KAPPA	build/projects/generate_confs/parser.cpp	/^    TK_KAPPA = 306,$/;"	e	enum:yytokentype	file:
TK_KAPPA	build/projects/generate_confs/parser.cpp	317;"	d	file:
TK_KAPPA	build/projects/generate_confs/parser.hpp	/^    TK_KAPPA = 306,$/;"	e	enum:yytokentype
TK_KAPPA	build/projects/generate_confs/parser.hpp	234;"	d
TK_L	build/projects/generate_confs/parser.cpp	/^    TK_L = 273,$/;"	e	enum:yytokentype	file:
TK_L	build/projects/generate_confs/parser.cpp	284;"	d	file:
TK_L	build/projects/generate_confs/parser.hpp	/^    TK_L = 273,$/;"	e	enum:yytokentype
TK_L	build/projects/generate_confs/parser.hpp	201;"	d
TK_LX	build/projects/generate_confs/parser.cpp	/^    TK_LX = 270,$/;"	e	enum:yytokentype	file:
TK_LX	build/projects/generate_confs/parser.cpp	281;"	d	file:
TK_LX	build/projects/generate_confs/parser.hpp	/^    TK_LX = 270,$/;"	e	enum:yytokentype
TK_LX	build/projects/generate_confs/parser.hpp	198;"	d
TK_LY	build/projects/generate_confs/parser.cpp	/^    TK_LY = 271,$/;"	e	enum:yytokentype	file:
TK_LY	build/projects/generate_confs/parser.cpp	282;"	d	file:
TK_LY	build/projects/generate_confs/parser.hpp	/^    TK_LY = 271,$/;"	e	enum:yytokentype
TK_LY	build/projects/generate_confs/parser.hpp	199;"	d
TK_LZ	build/projects/generate_confs/parser.cpp	/^    TK_LZ = 272,$/;"	e	enum:yytokentype	file:
TK_LZ	build/projects/generate_confs/parser.cpp	283;"	d	file:
TK_LZ	build/projects/generate_confs/parser.hpp	/^    TK_LZ = 272,$/;"	e	enum:yytokentype
TK_LZ	build/projects/generate_confs/parser.hpp	200;"	d
TK_MASS	build/projects/generate_confs/parser.cpp	/^    TK_MASS = 308,$/;"	e	enum:yytokentype	file:
TK_MASS	build/projects/generate_confs/parser.cpp	319;"	d	file:
TK_MASS	build/projects/generate_confs/parser.hpp	/^    TK_MASS = 308,$/;"	e	enum:yytokentype
TK_MASS	build/projects/generate_confs/parser.hpp	236;"	d
TK_MAX_ORDER	build/projects/generate_confs/parser.cpp	/^    TK_MAX_ORDER = 349,$/;"	e	enum:yytokentype	file:
TK_MAX_ORDER	build/projects/generate_confs/parser.cpp	360;"	d	file:
TK_MAX_ORDER	build/projects/generate_confs/parser.hpp	/^    TK_MAX_ORDER = 349,$/;"	e	enum:yytokentype
TK_MAX_ORDER	build/projects/generate_confs/parser.hpp	277;"	d
TK_MD_RESIDUE	build/projects/generate_confs/parser.cpp	/^    TK_MD_RESIDUE = 378,$/;"	e	enum:yytokentype	file:
TK_MD_RESIDUE	build/projects/generate_confs/parser.cpp	389;"	d	file:
TK_MD_RESIDUE	build/projects/generate_confs/parser.hpp	/^    TK_MD_RESIDUE = 378,$/;"	e	enum:yytokentype
TK_MD_RESIDUE	build/projects/generate_confs/parser.hpp	306;"	d
TK_MEAS_ALL_RECTS	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_ALL_RECTS = 365,$/;"	e	enum:yytokentype	file:
TK_MEAS_ALL_RECTS	build/projects/generate_confs/parser.cpp	376;"	d	file:
TK_MEAS_ALL_RECTS	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_ALL_RECTS = 365,$/;"	e	enum:yytokentype
TK_MEAS_ALL_RECTS	build/projects/generate_confs/parser.hpp	293;"	d
TK_MEAS_CORR	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_CORR = 317,$/;"	e	enum:yytokentype	file:
TK_MEAS_CORR	build/projects/generate_confs/parser.cpp	328;"	d	file:
TK_MEAS_CORR	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_CORR = 317,$/;"	e	enum:yytokentype
TK_MEAS_CORR	build/projects/generate_confs/parser.hpp	245;"	d
TK_MEAS_EACH_NSMOOTH	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_EACH_NSMOOTH = 281,$/;"	e	enum:yytokentype	file:
TK_MEAS_EACH_NSMOOTH	build/projects/generate_confs/parser.cpp	292;"	d	file:
TK_MEAS_EACH_NSMOOTH	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_EACH_NSMOOTH = 281,$/;"	e	enum:yytokentype
TK_MEAS_EACH_NSMOOTH	build/projects/generate_confs/parser.hpp	209;"	d
TK_MEAS_ENERGY	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_ENERGY = 360,$/;"	e	enum:yytokentype	file:
TK_MEAS_ENERGY	build/projects/generate_confs/parser.cpp	371;"	d	file:
TK_MEAS_ENERGY	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_ENERGY = 360,$/;"	e	enum:yytokentype
TK_MEAS_ENERGY	build/projects/generate_confs/parser.hpp	288;"	d
TK_MEAS_LUPPOLI	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_LUPPOLI = 363,$/;"	e	enum:yytokentype	file:
TK_MEAS_LUPPOLI	build/projects/generate_confs/parser.cpp	374;"	d	file:
TK_MEAS_LUPPOLI	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_LUPPOLI = 363,$/;"	e	enum:yytokentype
TK_MEAS_LUPPOLI	build/projects/generate_confs/parser.hpp	291;"	d
TK_MEAS_MAGNETIZ	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_MAGNETIZ = 356,$/;"	e	enum:yytokentype	file:
TK_MEAS_MAGNETIZ	build/projects/generate_confs/parser.cpp	367;"	d	file:
TK_MEAS_MAGNETIZ	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_MAGNETIZ = 356,$/;"	e	enum:yytokentype
TK_MEAS_MAGNETIZ	build/projects/generate_confs/parser.hpp	284;"	d
TK_MEAS_MESON_CORRS	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_MESON_CORRS = 344,$/;"	e	enum:yytokentype	file:
TK_MEAS_MESON_CORRS	build/projects/generate_confs/parser.cpp	355;"	d	file:
TK_MEAS_MESON_CORRS	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_MESON_CORRS = 344,$/;"	e	enum:yytokentype
TK_MEAS_MESON_CORRS	build/projects/generate_confs/parser.hpp	272;"	d
TK_MEAS_NUCLEON_CORRS	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_NUCLEON_CORRS = 346,$/;"	e	enum:yytokentype	file:
TK_MEAS_NUCLEON_CORRS	build/projects/generate_confs/parser.cpp	357;"	d	file:
TK_MEAS_NUCLEON_CORRS	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_NUCLEON_CORRS = 346,$/;"	e	enum:yytokentype
TK_MEAS_NUCLEON_CORRS	build/projects/generate_confs/parser.hpp	274;"	d
TK_MEAS_PLAQ	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_PLAQ = 359,$/;"	e	enum:yytokentype	file:
TK_MEAS_PLAQ	build/projects/generate_confs/parser.cpp	370;"	d	file:
TK_MEAS_PLAQ	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_PLAQ = 359,$/;"	e	enum:yytokentype
TK_MEAS_PLAQ	build/projects/generate_confs/parser.hpp	287;"	d
TK_MEAS_PLAQ_POL	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_PLAQ_POL = 358,$/;"	e	enum:yytokentype	file:
TK_MEAS_PLAQ_POL	build/projects/generate_confs/parser.cpp	369;"	d	file:
TK_MEAS_PLAQ_POL	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_PLAQ_POL = 358,$/;"	e	enum:yytokentype
TK_MEAS_PLAQ_POL	build/projects/generate_confs/parser.hpp	286;"	d
TK_MEAS_POLY	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_POLY = 361,$/;"	e	enum:yytokentype	file:
TK_MEAS_POLY	build/projects/generate_confs/parser.cpp	372;"	d	file:
TK_MEAS_POLY	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_POLY = 361,$/;"	e	enum:yytokentype
TK_MEAS_POLY	build/projects/generate_confs/parser.hpp	289;"	d
TK_MEAS_PUTPOURRI	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_PUTPOURRI = 347,$/;"	e	enum:yytokentype	file:
TK_MEAS_PUTPOURRI	build/projects/generate_confs/parser.cpp	358;"	d	file:
TK_MEAS_PUTPOURRI	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_PUTPOURRI = 347,$/;"	e	enum:yytokentype
TK_MEAS_PUTPOURRI	build/projects/generate_confs/parser.hpp	275;"	d
TK_MEAS_QED_CORRS	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_QED_CORRS = 355,$/;"	e	enum:yytokentype	file:
TK_MEAS_QED_CORRS	build/projects/generate_confs/parser.cpp	366;"	d	file:
TK_MEAS_QED_CORRS	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_QED_CORRS = 355,$/;"	e	enum:yytokentype
TK_MEAS_QED_CORRS	build/projects/generate_confs/parser.hpp	283;"	d
TK_MEAS_RENDENS	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_RENDENS = 350,$/;"	e	enum:yytokentype	file:
TK_MEAS_RENDENS	build/projects/generate_confs/parser.cpp	361;"	d	file:
TK_MEAS_RENDENS	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_RENDENS = 350,$/;"	e	enum:yytokentype
TK_MEAS_RENDENS	build/projects/generate_confs/parser.hpp	278;"	d
TK_MEAS_SPINPOL	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_SPINPOL = 352,$/;"	e	enum:yytokentype	file:
TK_MEAS_SPINPOL	build/projects/generate_confs/parser.cpp	363;"	d	file:
TK_MEAS_SPINPOL	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_SPINPOL = 352,$/;"	e	enum:yytokentype
TK_MEAS_SPINPOL	build/projects/generate_confs/parser.hpp	280;"	d
TK_MEAS_TOP	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_TOP = 362,$/;"	e	enum:yytokentype	file:
TK_MEAS_TOP	build/projects/generate_confs/parser.cpp	373;"	d	file:
TK_MEAS_TOP	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_TOP = 362,$/;"	e	enum:yytokentype
TK_MEAS_TOP	build/projects/generate_confs/parser.hpp	290;"	d
TK_MEAS_WATUSSO	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_WATUSSO = 364,$/;"	e	enum:yytokentype	file:
TK_MEAS_WATUSSO	build/projects/generate_confs/parser.cpp	375;"	d	file:
TK_MEAS_WATUSSO	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_WATUSSO = 364,$/;"	e	enum:yytokentype
TK_MEAS_WATUSSO	build/projects/generate_confs/parser.hpp	292;"	d
TK_MEAS_ZUMBA	build/projects/generate_confs/parser.cpp	/^    TK_MEAS_ZUMBA = 351,$/;"	e	enum:yytokentype	file:
TK_MEAS_ZUMBA	build/projects/generate_confs/parser.cpp	362;"	d	file:
TK_MEAS_ZUMBA	build/projects/generate_confs/parser.hpp	/^    TK_MEAS_ZUMBA = 351,$/;"	e	enum:yytokentype
TK_MEAS_ZUMBA	build/projects/generate_confs/parser.hpp	279;"	d
TK_META	build/projects/generate_confs/parser.cpp	/^    TK_META = 287,$/;"	e	enum:yytokentype	file:
TK_META	build/projects/generate_confs/parser.cpp	298;"	d	file:
TK_META	build/projects/generate_confs/parser.hpp	/^    TK_META = 287,$/;"	e	enum:yytokentype
TK_META	build/projects/generate_confs/parser.hpp	215;"	d
TK_META_PRINT	build/projects/generate_confs/parser.cpp	/^    TK_META_PRINT = 300,$/;"	e	enum:yytokentype	file:
TK_META_PRINT	build/projects/generate_confs/parser.cpp	311;"	d	file:
TK_META_PRINT	build/projects/generate_confs/parser.hpp	/^    TK_META_PRINT = 300,$/;"	e	enum:yytokentype
TK_META_PRINT	build/projects/generate_confs/parser.hpp	228;"	d
TK_META_PRINT_FULL_INPUT	build/projects/generate_confs/parser.cpp	/^    TK_META_PRINT_FULL_INPUT = 299,$/;"	e	enum:yytokentype	file:
TK_META_PRINT_FULL_INPUT	build/projects/generate_confs/parser.cpp	310;"	d	file:
TK_META_PRINT_FULL_INPUT	build/projects/generate_confs/parser.hpp	/^    TK_META_PRINT_FULL_INPUT = 299,$/;"	e	enum:yytokentype
TK_META_PRINT_FULL_INPUT	build/projects/generate_confs/parser.hpp	227;"	d
TK_META_PRINT_SCANNED_INPUT	build/projects/generate_confs/parser.cpp	/^    TK_META_PRINT_SCANNED_INPUT = 298,$/;"	e	enum:yytokentype	file:
TK_META_PRINT_SCANNED_INPUT	build/projects/generate_confs/parser.cpp	309;"	d	file:
TK_META_PRINT_SCANNED_INPUT	build/projects/generate_confs/parser.hpp	/^    TK_META_PRINT_SCANNED_INPUT = 298,$/;"	e	enum:yytokentype
TK_META_PRINT_SCANNED_INPUT	build/projects/generate_confs/parser.hpp	226;"	d
TK_MINUS	build/projects/generate_confs/parser.cpp	/^    TK_MINUS = 263,$/;"	e	enum:yytokentype	file:
TK_MINUS	build/projects/generate_confs/parser.cpp	274;"	d	file:
TK_MINUS	build/projects/generate_confs/parser.hpp	/^    TK_MINUS = 263,$/;"	e	enum:yytokentype
TK_MINUS	build/projects/generate_confs/parser.hpp	191;"	d
TK_NCOPIES	build/projects/generate_confs/parser.cpp	/^    TK_NCOPIES = 342,$/;"	e	enum:yytokentype	file:
TK_NCOPIES	build/projects/generate_confs/parser.cpp	353;"	d	file:
TK_NCOPIES	build/projects/generate_confs/parser.hpp	/^    TK_NCOPIES = 342,$/;"	e	enum:yytokentype
TK_NCOPIES	build/projects/generate_confs/parser.hpp	270;"	d
TK_NFLOWS	build/projects/generate_confs/parser.cpp	/^    TK_NFLOWS = 331,$/;"	e	enum:yytokentype	file:
TK_NFLOWS	build/projects/generate_confs/parser.cpp	342;"	d	file:
TK_NFLOWS	build/projects/generate_confs/parser.hpp	/^    TK_NFLOWS = 331,$/;"	e	enum:yytokentype
TK_NFLOWS	build/projects/generate_confs/parser.hpp	259;"	d
TK_NHITS	build/projects/generate_confs/parser.cpp	/^    TK_NHITS = 343,$/;"	e	enum:yytokentype	file:
TK_NHITS	build/projects/generate_confs/parser.cpp	354;"	d	file:
TK_NHITS	build/projects/generate_confs/parser.hpp	/^    TK_NHITS = 343,$/;"	e	enum:yytokentype
TK_NHITS	build/projects/generate_confs/parser.hpp	271;"	d
TK_NLEVELS	build/projects/generate_confs/parser.cpp	/^    TK_NLEVELS = 322,$/;"	e	enum:yytokentype	file:
TK_NLEVELS	build/projects/generate_confs/parser.cpp	333;"	d	file:
TK_NLEVELS	build/projects/generate_confs/parser.hpp	/^    TK_NLEVELS = 322,$/;"	e	enum:yytokentype
TK_NLEVELS	build/projects/generate_confs/parser.hpp	250;"	d
TK_NO	build/projects/generate_confs/parser.cpp	/^    TK_NO = 285,$/;"	e	enum:yytokentype	file:
TK_NO	build/projects/generate_confs/parser.cpp	296;"	d	file:
TK_NO	build/projects/generate_confs/parser.hpp	/^    TK_NO = 285,$/;"	e	enum:yytokentype
TK_NO	build/projects/generate_confs/parser.hpp	213;"	d
TK_NOISE_TYPE	build/projects/generate_confs/parser.cpp	/^    TK_NOISE_TYPE = 319,$/;"	e	enum:yytokentype	file:
TK_NOISE_TYPE	build/projects/generate_confs/parser.cpp	330;"	d	file:
TK_NOISE_TYPE	build/projects/generate_confs/parser.hpp	/^    TK_NOISE_TYPE = 319,$/;"	e	enum:yytokentype
TK_NOISE_TYPE	build/projects/generate_confs/parser.hpp	247;"	d
TK_NONE	build/projects/generate_confs/parser.cpp	/^    TK_NONE = 283,$/;"	e	enum:yytokentype	file:
TK_NONE	build/projects/generate_confs/parser.cpp	294;"	d	file:
TK_NONE	build/projects/generate_confs/parser.hpp	/^    TK_NONE = 283,$/;"	e	enum:yytokentype
TK_NONE	build/projects/generate_confs/parser.hpp	211;"	d
TK_NPSEUDO_FERMS	build/projects/generate_confs/parser.cpp	/^    TK_NPSEUDO_FERMS = 380,$/;"	e	enum:yytokentype	file:
TK_NPSEUDO_FERMS	build/projects/generate_confs/parser.cpp	391;"	d	file:
TK_NPSEUDO_FERMS	build/projects/generate_confs/parser.hpp	/^    TK_NPSEUDO_FERMS = 380,$/;"	e	enum:yytokentype
TK_NPSEUDO_FERMS	build/projects/generate_confs/parser.hpp	308;"	d
TK_NRECU	build/projects/generate_confs/parser.cpp	/^    TK_NRECU = 332,$/;"	e	enum:yytokentype	file:
TK_NRECU	build/projects/generate_confs/parser.cpp	343;"	d	file:
TK_NRECU	build/projects/generate_confs/parser.hpp	/^    TK_NRECU = 332,$/;"	e	enum:yytokentype
TK_NRECU	build/projects/generate_confs/parser.hpp	260;"	d
TK_NSTEPS	build/projects/generate_confs/parser.cpp	/^    TK_NSTEPS = 325,$/;"	e	enum:yytokentype	file:
TK_NSTEPS	build/projects/generate_confs/parser.cpp	336;"	d	file:
TK_NSTEPS	build/projects/generate_confs/parser.hpp	/^    TK_NSTEPS = 325,$/;"	e	enum:yytokentype
TK_NSTEPS	build/projects/generate_confs/parser.hpp	253;"	d
TK_NSUBSTEPS	build/projects/generate_confs/parser.cpp	/^    TK_NSUBSTEPS = 379,$/;"	e	enum:yytokentype	file:
TK_NSUBSTEPS	build/projects/generate_confs/parser.cpp	390;"	d	file:
TK_NSUBSTEPS	build/projects/generate_confs/parser.hpp	/^    TK_NSUBSTEPS = 379,$/;"	e	enum:yytokentype
TK_NSUBSTEPS	build/projects/generate_confs/parser.hpp	307;"	d
TK_NTRAJ_TOT	build/projects/generate_confs/parser.cpp	/^    TK_NTRAJ_TOT = 374,$/;"	e	enum:yytokentype	file:
TK_NTRAJ_TOT	build/projects/generate_confs/parser.cpp	385;"	d	file:
TK_NTRAJ_TOT	build/projects/generate_confs/parser.hpp	/^    TK_NTRAJ_TOT = 374,$/;"	e	enum:yytokentype
TK_NTRAJ_TOT	build/projects/generate_confs/parser.hpp	302;"	d
TK_OPERATORS	build/projects/generate_confs/parser.cpp	/^    TK_OPERATORS = 345,$/;"	e	enum:yytokentype	file:
TK_OPERATORS	build/projects/generate_confs/parser.cpp	356;"	d	file:
TK_OPERATORS	build/projects/generate_confs/parser.hpp	/^    TK_OPERATORS = 345,$/;"	e	enum:yytokentype
TK_OPERATORS	build/projects/generate_confs/parser.hpp	273;"	d
TK_ORDINARY	build/projects/generate_confs/parser.cpp	/^    TK_ORDINARY = 288,$/;"	e	enum:yytokentype	file:
TK_ORDINARY	build/projects/generate_confs/parser.cpp	299;"	d	file:
TK_ORDINARY	build/projects/generate_confs/parser.hpp	/^    TK_ORDINARY = 288,$/;"	e	enum:yytokentype
TK_ORDINARY	build/projects/generate_confs/parser.hpp	216;"	d
TK_PATH	build/projects/generate_confs/parser.cpp	/^    TK_PATH = 297,$/;"	e	enum:yytokentype	file:
TK_PATH	build/projects/generate_confs/parser.cpp	308;"	d	file:
TK_PATH	build/projects/generate_confs/parser.hpp	/^    TK_PATH = 297,$/;"	e	enum:yytokentype
TK_PATH	build/projects/generate_confs/parser.hpp	225;"	d
TK_PLUS	build/projects/generate_confs/parser.cpp	/^    TK_PLUS = 264,$/;"	e	enum:yytokentype	file:
TK_PLUS	build/projects/generate_confs/parser.cpp	275;"	d	file:
TK_PLUS	build/projects/generate_confs/parser.hpp	/^    TK_PLUS = 264,$/;"	e	enum:yytokentype
TK_PLUS	build/projects/generate_confs/parser.hpp	192;"	d
TK_POW	build/projects/generate_confs/parser.cpp	/^    TK_POW = 268,$/;"	e	enum:yytokentype	file:
TK_POW	build/projects/generate_confs/parser.cpp	279;"	d	file:
TK_POW	build/projects/generate_confs/parser.hpp	/^    TK_POW = 268,$/;"	e	enum:yytokentype
TK_POW	build/projects/generate_confs/parser.hpp	196;"	d
TK_QUANTITY	build/projects/generate_confs/parser.cpp	/^    TK_QUANTITY = 262,$/;"	e	enum:yytokentype	file:
TK_QUANTITY	build/projects/generate_confs/parser.cpp	273;"	d	file:
TK_QUANTITY	build/projects/generate_confs/parser.hpp	/^    TK_QUANTITY = 262,$/;"	e	enum:yytokentype
TK_QUANTITY	build/projects/generate_confs/parser.hpp	190;"	d
TK_QUARK	build/projects/generate_confs/parser.cpp	/^    TK_QUARK = 301,$/;"	e	enum:yytokentype	file:
TK_QUARK	build/projects/generate_confs/parser.cpp	312;"	d	file:
TK_QUARK	build/projects/generate_confs/parser.hpp	/^    TK_QUARK = 301,$/;"	e	enum:yytokentype
TK_QUARK	build/projects/generate_confs/parser.hpp	229;"	d
TK_QUOTED_TEXT	build/projects/generate_confs/parser.cpp	/^    TK_QUOTED_TEXT = 279,$/;"	e	enum:yytokentype	file:
TK_QUOTED_TEXT	build/projects/generate_confs/parser.cpp	290;"	d	file:
TK_QUOTED_TEXT	build/projects/generate_confs/parser.hpp	/^    TK_QUOTED_TEXT = 279,$/;"	e	enum:yytokentype
TK_QUOTED_TEXT	build/projects/generate_confs/parser.hpp	207;"	d
TK_RESIDUE	build/projects/generate_confs/parser.cpp	/^    TK_RESIDUE = 286,$/;"	e	enum:yytokentype	file:
TK_RESIDUE	build/projects/generate_confs/parser.cpp	297;"	d	file:
TK_RESIDUE	build/projects/generate_confs/parser.hpp	/^    TK_RESIDUE = 286,$/;"	e	enum:yytokentype
TK_RESIDUE	build/projects/generate_confs/parser.hpp	214;"	d
TK_RE_POT_CH	build/projects/generate_confs/parser.cpp	/^    TK_RE_POT_CH = 309,$/;"	e	enum:yytokentype	file:
TK_RE_POT_CH	build/projects/generate_confs/parser.cpp	320;"	d	file:
TK_RE_POT_CH	build/projects/generate_confs/parser.hpp	/^    TK_RE_POT_CH = 309,$/;"	e	enum:yytokentype
TK_RE_POT_CH	build/projects/generate_confs/parser.hpp	237;"	d
TK_RHO	build/projects/generate_confs/parser.cpp	/^    TK_RHO = 323,$/;"	e	enum:yytokentype	file:
TK_RHO	build/projects/generate_confs/parser.cpp	334;"	d	file:
TK_RHO	build/projects/generate_confs/parser.hpp	/^    TK_RHO = 323,$/;"	e	enum:yytokentype
TK_RHO	build/projects/generate_confs/parser.hpp	251;"	d
TK_RND_T	build/projects/generate_confs/parser.cpp	/^    TK_RND_T = 320,$/;"	e	enum:yytokentype	file:
TK_RND_T	build/projects/generate_confs/parser.cpp	331;"	d	file:
TK_RND_T	build/projects/generate_confs/parser.hpp	/^    TK_RND_T = 320,$/;"	e	enum:yytokentype
TK_RND_T	build/projects/generate_confs/parser.hpp	248;"	d
TK_ROOT_STAG	build/projects/generate_confs/parser.cpp	/^    TK_ROOT_STAG = 304,$/;"	e	enum:yytokentype	file:
TK_ROOT_STAG	build/projects/generate_confs/parser.cpp	315;"	d	file:
TK_ROOT_STAG	build/projects/generate_confs/parser.hpp	/^    TK_ROOT_STAG = 304,$/;"	e	enum:yytokentype
TK_ROOT_STAG	build/projects/generate_confs/parser.hpp	232;"	d
TK_ROOT_TM_CLOV	build/projects/generate_confs/parser.cpp	/^    TK_ROOT_TM_CLOV = 305,$/;"	e	enum:yytokentype	file:
TK_ROOT_TM_CLOV	build/projects/generate_confs/parser.cpp	316;"	d	file:
TK_ROOT_TM_CLOV	build/projects/generate_confs/parser.hpp	/^    TK_ROOT_TM_CLOV = 305,$/;"	e	enum:yytokentype
TK_ROOT_TM_CLOV	build/projects/generate_confs/parser.hpp	233;"	d
TK_RUN	build/projects/generate_confs/parser.cpp	/^    TK_RUN = 390,$/;"	e	enum:yytokentype	file:
TK_RUN	build/projects/generate_confs/parser.cpp	401;"	d	file:
TK_RUN	build/projects/generate_confs/parser.hpp	/^    TK_RUN = 390,$/;"	e	enum:yytokentype
TK_RUN	build/projects/generate_confs/parser.hpp	318;"	d
TK_SEED	build/projects/generate_confs/parser.cpp	/^    TK_SEED = 392$/;"	e	enum:yytokentype	file:
TK_SEED	build/projects/generate_confs/parser.cpp	403;"	d	file:
TK_SEED	build/projects/generate_confs/parser.hpp	/^    TK_SEED = 392$/;"	e	enum:yytokentype
TK_SEED	build/projects/generate_confs/parser.hpp	320;"	d
TK_SKIP_METRO	build/projects/generate_confs/parser.cpp	/^    TK_SKIP_METRO = 375,$/;"	e	enum:yytokentype	file:
TK_SKIP_METRO	build/projects/generate_confs/parser.cpp	386;"	d	file:
TK_SKIP_METRO	build/projects/generate_confs/parser.hpp	/^    TK_SKIP_METRO = 375,$/;"	e	enum:yytokentype
TK_SKIP_METRO	build/projects/generate_confs/parser.hpp	303;"	d
TK_SMOOTH_METHOD	build/projects/generate_confs/parser.cpp	/^    TK_SMOOTH_METHOD = 312,$/;"	e	enum:yytokentype	file:
TK_SMOOTH_METHOD	build/projects/generate_confs/parser.cpp	323;"	d	file:
TK_SMOOTH_METHOD	build/projects/generate_confs/parser.hpp	/^    TK_SMOOTH_METHOD = 312,$/;"	e	enum:yytokentype
TK_SMOOTH_METHOD	build/projects/generate_confs/parser.hpp	240;"	d
TK_SPACE	build/projects/generate_confs/parser.cpp	/^    TK_SPACE = 314,$/;"	e	enum:yytokentype	file:
TK_SPACE	build/projects/generate_confs/parser.cpp	325;"	d	file:
TK_SPACE	build/projects/generate_confs/parser.hpp	/^    TK_SPACE = 314,$/;"	e	enum:yytokentype
TK_SPACE	build/projects/generate_confs/parser.hpp	242;"	d
TK_SPACETIME	build/projects/generate_confs/parser.cpp	/^    TK_SPACETIME = 316,$/;"	e	enum:yytokentype	file:
TK_SPACETIME	build/projects/generate_confs/parser.cpp	327;"	d	file:
TK_SPACETIME	build/projects/generate_confs/parser.hpp	/^    TK_SPACETIME = 316,$/;"	e	enum:yytokentype
TK_SPACETIME	build/projects/generate_confs/parser.hpp	244;"	d
TK_SPACE_OR_TIME	build/projects/generate_confs/parser.cpp	/^    TK_SPACE_OR_TIME = 313,$/;"	e	enum:yytokentype	file:
TK_SPACE_OR_TIME	build/projects/generate_confs/parser.cpp	324;"	d	file:
TK_SPACE_OR_TIME	build/projects/generate_confs/parser.hpp	/^    TK_SPACE_OR_TIME = 313,$/;"	e	enum:yytokentype
TK_SPACE_OR_TIME	build/projects/generate_confs/parser.hpp	241;"	d
TK_SPATIAL	build/projects/generate_confs/parser.cpp	/^    TK_SPATIAL = 366,$/;"	e	enum:yytokentype	file:
TK_SPATIAL	build/projects/generate_confs/parser.cpp	377;"	d	file:
TK_SPATIAL	build/projects/generate_confs/parser.hpp	/^    TK_SPATIAL = 366,$/;"	e	enum:yytokentype
TK_SPATIAL	build/projects/generate_confs/parser.hpp	294;"	d
TK_START_COND	build/projects/generate_confs/parser.cpp	/^    TK_START_COND = 385,$/;"	e	enum:yytokentype	file:
TK_START_COND	build/projects/generate_confs/parser.cpp	396;"	d	file:
TK_START_COND	build/projects/generate_confs/parser.hpp	/^    TK_START_COND = 385,$/;"	e	enum:yytokentype
TK_START_COND	build/projects/generate_confs/parser.hpp	313;"	d
TK_STORE_EACH	build/projects/generate_confs/parser.cpp	/^    TK_STORE_EACH = 383,$/;"	e	enum:yytokentype	file:
TK_STORE_EACH	build/projects/generate_confs/parser.cpp	394;"	d	file:
TK_STORE_EACH	build/projects/generate_confs/parser.hpp	/^    TK_STORE_EACH = 383,$/;"	e	enum:yytokentype
TK_STORE_EACH	build/projects/generate_confs/parser.hpp	311;"	d
TK_STORE_PATH	build/projects/generate_confs/parser.cpp	/^    TK_STORE_PATH = 382,$/;"	e	enum:yytokentype	file:
TK_STORE_PATH	build/projects/generate_confs/parser.cpp	393;"	d	file:
TK_STORE_PATH	build/projects/generate_confs/parser.hpp	/^    TK_STORE_PATH = 382,$/;"	e	enum:yytokentype
TK_STORE_PATH	build/projects/generate_confs/parser.hpp	310;"	d
TK_STORE_RUNNING	build/projects/generate_confs/parser.cpp	/^    TK_STORE_RUNNING = 384,$/;"	e	enum:yytokentype	file:
TK_STORE_RUNNING	build/projects/generate_confs/parser.cpp	395;"	d	file:
TK_STORE_RUNNING	build/projects/generate_confs/parser.hpp	/^    TK_STORE_RUNNING = 384,$/;"	e	enum:yytokentype
TK_STORE_RUNNING	build/projects/generate_confs/parser.hpp	312;"	d
TK_STOUT	build/projects/generate_confs/parser.cpp	/^    TK_STOUT = 321,$/;"	e	enum:yytokentype	file:
TK_STOUT	build/projects/generate_confs/parser.cpp	332;"	d	file:
TK_STOUT	build/projects/generate_confs/parser.hpp	/^    TK_STOUT = 321,$/;"	e	enum:yytokentype
TK_STOUT	build/projects/generate_confs/parser.hpp	249;"	d
TK_T	build/projects/generate_confs/parser.cpp	/^    TK_T = 274,$/;"	e	enum:yytokentype	file:
TK_T	build/projects/generate_confs/parser.cpp	285;"	d	file:
TK_T	build/projects/generate_confs/parser.hpp	/^    TK_T = 274,$/;"	e	enum:yytokentype
TK_T	build/projects/generate_confs/parser.hpp	202;"	d
TK_TAG	build/projects/generate_confs/parser.cpp	/^    TK_TAG = 275,$/;"	e	enum:yytokentype	file:
TK_TAG	build/projects/generate_confs/parser.cpp	286;"	d	file:
TK_TAG	build/projects/generate_confs/parser.hpp	/^    TK_TAG = 275,$/;"	e	enum:yytokentype
TK_TAG	build/projects/generate_confs/parser.hpp	203;"	d
TK_TEMPORAL	build/projects/generate_confs/parser.cpp	/^    TK_TEMPORAL = 367,$/;"	e	enum:yytokentype	file:
TK_TEMPORAL	build/projects/generate_confs/parser.cpp	378;"	d	file:
TK_TEMPORAL	build/projects/generate_confs/parser.hpp	/^    TK_TEMPORAL = 367,$/;"	e	enum:yytokentype
TK_TEMPORAL	build/projects/generate_confs/parser.hpp	295;"	d
TK_THEORY	build/projects/generate_confs/parser.cpp	/^    TK_THEORY = 276,$/;"	e	enum:yytokentype	file:
TK_THEORY	build/projects/generate_confs/parser.cpp	287;"	d	file:
TK_THEORY	build/projects/generate_confs/parser.hpp	/^    TK_THEORY = 276,$/;"	e	enum:yytokentype
TK_THEORY	build/projects/generate_confs/parser.hpp	204;"	d
TK_THETA	build/projects/generate_confs/parser.cpp	/^    TK_THETA = 290,$/;"	e	enum:yytokentype	file:
TK_THETA	build/projects/generate_confs/parser.cpp	301;"	d	file:
TK_THETA	build/projects/generate_confs/parser.hpp	/^    TK_THETA = 290,$/;"	e	enum:yytokentype
TK_THETA	build/projects/generate_confs/parser.hpp	218;"	d
TK_TIME	build/projects/generate_confs/parser.cpp	/^    TK_TIME = 315,$/;"	e	enum:yytokentype	file:
TK_TIME	build/projects/generate_confs/parser.cpp	326;"	d	file:
TK_TIME	build/projects/generate_confs/parser.hpp	/^    TK_TIME = 315,$/;"	e	enum:yytokentype
TK_TIME	build/projects/generate_confs/parser.hpp	243;"	d
TK_TIMES	build/projects/generate_confs/parser.cpp	/^    TK_TIMES = 265,$/;"	e	enum:yytokentype	file:
TK_TIMES	build/projects/generate_confs/parser.cpp	276;"	d	file:
TK_TIMES	build/projects/generate_confs/parser.hpp	/^    TK_TIMES = 265,$/;"	e	enum:yytokentype
TK_TIMES	build/projects/generate_confs/parser.hpp	193;"	d
TK_TLSYM	build/projects/generate_confs/parser.cpp	/^    TK_TLSYM = 336,$/;"	e	enum:yytokentype	file:
TK_TLSYM	build/projects/generate_confs/parser.cpp	347;"	d	file:
TK_TLSYM	build/projects/generate_confs/parser.hpp	/^    TK_TLSYM = 336,$/;"	e	enum:yytokentype
TK_TLSYM	build/projects/generate_confs/parser.hpp	264;"	d
TK_TMAX	build/projects/generate_confs/parser.cpp	/^    TK_TMAX = 371,$/;"	e	enum:yytokentype	file:
TK_TMAX	build/projects/generate_confs/parser.cpp	382;"	d	file:
TK_TMAX	build/projects/generate_confs/parser.hpp	/^    TK_TMAX = 371,$/;"	e	enum:yytokentype
TK_TMAX	build/projects/generate_confs/parser.hpp	299;"	d
TK_TMIN	build/projects/generate_confs/parser.cpp	/^    TK_TMIN = 370,$/;"	e	enum:yytokentype	file:
TK_TMIN	build/projects/generate_confs/parser.cpp	381;"	d	file:
TK_TMIN	build/projects/generate_confs/parser.hpp	/^    TK_TMIN = 370,$/;"	e	enum:yytokentype
TK_TMIN	build/projects/generate_confs/parser.hpp	298;"	d
TK_TOPO_POTENTIAL	build/projects/generate_confs/parser.cpp	/^    TK_TOPO_POTENTIAL = 289,$/;"	e	enum:yytokentype	file:
TK_TOPO_POTENTIAL	build/projects/generate_confs/parser.cpp	300;"	d	file:
TK_TOPO_POTENTIAL	build/projects/generate_confs/parser.hpp	/^    TK_TOPO_POTENTIAL = 289,$/;"	e	enum:yytokentype
TK_TOPO_POTENTIAL	build/projects/generate_confs/parser.hpp	217;"	d
TK_TRAJ_LENGTH	build/projects/generate_confs/parser.cpp	/^    TK_TRAJ_LENGTH = 376,$/;"	e	enum:yytokentype	file:
TK_TRAJ_LENGTH	build/projects/generate_confs/parser.cpp	387;"	d	file:
TK_TRAJ_LENGTH	build/projects/generate_confs/parser.hpp	/^    TK_TRAJ_LENGTH = 376,$/;"	e	enum:yytokentype
TK_TRAJ_LENGTH	build/projects/generate_confs/parser.hpp	304;"	d
TK_USE_ADJOINT_FLOW	build/projects/generate_confs/parser.cpp	/^    TK_USE_ADJOINT_FLOW = 354,$/;"	e	enum:yytokentype	file:
TK_USE_ADJOINT_FLOW	build/projects/generate_confs/parser.cpp	365;"	d	file:
TK_USE_ADJOINT_FLOW	build/projects/generate_confs/parser.hpp	/^    TK_USE_ADJOINT_FLOW = 354,$/;"	e	enum:yytokentype
TK_USE_ADJOINT_FLOW	build/projects/generate_confs/parser.hpp	282;"	d
TK_USE_FERM_CONF_FOR_GLUONS	build/projects/generate_confs/parser.cpp	/^    TK_USE_FERM_CONF_FOR_GLUONS = 353,$/;"	e	enum:yytokentype	file:
TK_USE_FERM_CONF_FOR_GLUONS	build/projects/generate_confs/parser.cpp	364;"	d	file:
TK_USE_FERM_CONF_FOR_GLUONS	build/projects/generate_confs/parser.hpp	/^    TK_USE_FERM_CONF_FOR_GLUONS = 353,$/;"	e	enum:yytokentype
TK_USE_FERM_CONF_FOR_GLUONS	build/projects/generate_confs/parser.hpp	281;"	d
TK_USE_SMOOTH	build/projects/generate_confs/parser.cpp	/^    TK_USE_SMOOTH = 357,$/;"	e	enum:yytokentype	file:
TK_USE_SMOOTH	build/projects/generate_confs/parser.cpp	368;"	d	file:
TK_USE_SMOOTH	build/projects/generate_confs/parser.hpp	/^    TK_USE_SMOOTH = 357,$/;"	e	enum:yytokentype
TK_USE_SMOOTH	build/projects/generate_confs/parser.hpp	285;"	d
TK_WALLTIME	build/projects/generate_confs/parser.cpp	/^    TK_WALLTIME = 391,$/;"	e	enum:yytokentype	file:
TK_WALLTIME	build/projects/generate_confs/parser.cpp	402;"	d	file:
TK_WALLTIME	build/projects/generate_confs/parser.hpp	/^    TK_WALLTIME = 391,$/;"	e	enum:yytokentype
TK_WALLTIME	build/projects/generate_confs/parser.hpp	319;"	d
TK_WELL_TEMPERING	build/projects/generate_confs/parser.cpp	/^    TK_WELL_TEMPERING = 295,$/;"	e	enum:yytokentype	file:
TK_WELL_TEMPERING	build/projects/generate_confs/parser.cpp	306;"	d	file:
TK_WELL_TEMPERING	build/projects/generate_confs/parser.hpp	/^    TK_WELL_TEMPERING = 295,$/;"	e	enum:yytokentype
TK_WELL_TEMPERING	build/projects/generate_confs/parser.hpp	223;"	d
TK_WFLOW	build/projects/generate_confs/parser.cpp	/^    TK_WFLOW = 330,$/;"	e	enum:yytokentype	file:
TK_WFLOW	build/projects/generate_confs/parser.cpp	341;"	d	file:
TK_WFLOW	build/projects/generate_confs/parser.hpp	/^    TK_WFLOW = 330,$/;"	e	enum:yytokentype
TK_WFLOW	build/projects/generate_confs/parser.hpp	258;"	d
TK_WIDTH	build/projects/generate_confs/parser.cpp	/^    TK_WIDTH = 292,$/;"	e	enum:yytokentype	file:
TK_WIDTH	build/projects/generate_confs/parser.cpp	303;"	d	file:
TK_WIDTH	build/projects/generate_confs/parser.hpp	/^    TK_WIDTH = 292,$/;"	e	enum:yytokentype
TK_WIDTH	build/projects/generate_confs/parser.hpp	220;"	d
TK_WILSON	build/projects/generate_confs/parser.cpp	/^    TK_WILSON = 335,$/;"	e	enum:yytokentype	file:
TK_WILSON	build/projects/generate_confs/parser.cpp	346;"	d	file:
TK_WILSON	build/projects/generate_confs/parser.hpp	/^    TK_WILSON = 335,$/;"	e	enum:yytokentype
TK_WILSON	build/projects/generate_confs/parser.hpp	263;"	d
TK_YES	build/projects/generate_confs/parser.cpp	/^    TK_YES = 284,$/;"	e	enum:yytokentype	file:
TK_YES	build/projects/generate_confs/parser.cpp	295;"	d	file:
TK_YES	build/projects/generate_confs/parser.hpp	/^    TK_YES = 284,$/;"	e	enum:yytokentype
TK_YES	build/projects/generate_confs/parser.hpp	212;"	d
TLSYM_C1	src/free_theory/free_theory_types.hpp	/^  const double WILSON_C1=0,TLSYM_C1=-1.0\/12;$/;"	m	namespace:nissa
TLSYM_GAUGE_ACTION	src/hmc/gauge/gluonic_action.hpp	/^  enum gauge_action_name_t{UNSPEC_GAUGE_ACTION,WILSON_GAUGE_ACTION,TLSYM_GAUGE_ACTION,IWASAKI_GAUGE_ACTION};$/;"	e	enum:nissa::gauge_action_name_t
TMR	projects/semileptonic/new_version/new_types.hpp	/^enum TMR{R_ZERO,R_ONE,R_BOTH};$/;"	g
TOPO_EVOLUTION	src/hmc/multipseudo/Omelyan_integrator.cpp	27;"	d	file:
TOPO_MACRO	src/hmc/multipseudo/Omelyan_integrator.cpp	25;"	d	file:
TOPO_MICRO	src/hmc/multipseudo/Omelyan_integrator.cpp	24;"	d	file:
Tmax	src/operations/su3_paths/all_rectangles.hpp	/^    int Tmin,Tmax,Dmin,Dmax;$/;"	m	struct:nissa::all_rects_meas_pars_t
Tmin	src/operations/su3_paths/all_rectangles.hpp	/^    int Tmin,Tmax,Dmin,Dmax;$/;"	m	struct:nissa::all_rects_meas_pars_t
U	projects/semileptonic/new_version/new_types.hpp	/^  quad_su3 *U;$/;"	m	struct:gauge_conf_t
UINT16_MAX	build/projects/generate_confs/tokenizer.cpp	81;"	d	file:
UINT16_MAX	build/projects/semileptonic/tokenize_corr.cpp	81;"	d	file:
UINT32_MAX	build/projects/generate_confs/tokenizer.cpp	84;"	d	file:
UINT32_MAX	build/projects/semileptonic/tokenize_corr.cpp	84;"	d	file:
UINT8_MAX	build/projects/generate_confs/tokenizer.cpp	78;"	d	file:
UINT8_MAX	build/projects/semileptonic/tokenize_corr.cpp	78;"	d	file:
UNDILUTED_SOURCE	src/base/random.hpp	/^  enum source_t{POINT_SOURCE,UNDILUTED_SOURCE,COLOR_DILUTED_SOURCE,SPIN_DILUTED_SOURCE,SPINCOLOR_DILUTED_SOURCE};$/;"	e	enum:nissa::source_t
UNNO_ALEMANNA	src/free_theory/free_theory_types.hpp	/^  enum zero_mode_sub_t{PECIONA,UNNO_ALEMANNA,ONLY_100};$/;"	e	enum:nissa::zero_mode_sub_t
UNPAUSE_TIMING	src/base/bench.hpp	45;"	d
UNSPEC_BOUNDARY_COND	src/operations/gaugeconf.hpp	/^  enum boundary_cond_t{UNSPEC_BOUNDARY_COND,PERIODIC_BOUNDARY_COND,OPEN_BOUNDARY_COND};$/;"	e	enum:nissa::boundary_cond_t
UNSPEC_GAUGE_ACTION	src/hmc/gauge/gluonic_action.hpp	/^  enum gauge_action_name_t{UNSPEC_GAUGE_ACTION,WILSON_GAUGE_ACTION,TLSYM_GAUGE_ACTION,IWASAKI_GAUGE_ACTION};$/;"	e	enum:nissa::gauge_action_name_t
UNSPEC_START_COND	src/operations/gaugeconf.hpp	/^  enum start_conf_cond_t{UNSPEC_START_COND,HOT_START_COND,COLD_START_COND};$/;"	e	enum:nissa::start_conf_cond_t
UP	src/operations/stag/stag.hpp	/^    enum shift_orie_t{UP,DW,BOTH};$/;"	e	enum:nissa::stag::shift_orie_t
USE_FFTW	build/src/config.hpp	153;"	d
USE_GMP	build/src/config.hpp	156;"	d
USE_MPI	build/src/config.hpp	165;"	d
USE_MPI_IO	build/src/config.hpp	168;"	d
USE_THREADS	build/src/config.hpp	174;"	d
V	src/operations/stag/qed_corr.cpp	/^    enum ins_t{S,T,F,V};$/;"	e	enum:nissa::__anon13::ins_t	file:
V01_MERGE	src/bgq/intrinsic/mergesplit.hpp	16;"	d
V01_MERGE	src/bgq/intrinsic/mergesplit.hpp	22;"	d
V0P5	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
V0S0	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
V0V0	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
V0_MERGE	src/bgq/intrinsic/mergesplit.hpp	13;"	d
V0_MERGE	src/bgq/intrinsic/mergesplit.hpp	19;"	d
V10_MERGE	src/bgq/intrinsic/mergesplit.hpp	15;"	d
V10_MERGE	src/bgq/intrinsic/mergesplit.hpp	21;"	d
V1_MERGE	src/bgq/intrinsic/mergesplit.hpp	14;"	d
V1_MERGE	src/bgq/intrinsic/mergesplit.hpp	20;"	d
VEC_GPCI	src/bgq/intrinsic/mergesplit.hpp	36;"	d
VERBOSITY_LV1	src/routines/ios.hpp	27;"	d
VERBOSITY_LV1	src/routines/ios.hpp	29;"	d
VERBOSITY_LV2	src/routines/ios.hpp	32;"	d
VERBOSITY_LV2	src/routines/ios.hpp	34;"	d
VERBOSITY_LV3	src/routines/ios.hpp	37;"	d
VERBOSITY_LV3	src/routines/ios.hpp	39;"	d
VERBOSITY_MASTER_PRINTF	src/operations/gauge_fixing.cpp	28;"	d	file:
VERSION	build/Makefile	/^VERSION = 1.0$/;"	m
VERSION	build/projects/Makefile	/^VERSION = 1.0$/;"	m
VERSION	build/src/Makefile	/^VERSION = 1.0$/;"	m
VERSION	build/tools/Makefile	/^VERSION = 1.0$/;"	m
VERSION_32	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq.cpp	11;"	d	file:
VERSION_32	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq.cpp	9;"	d	file:
VERSION_32	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq.cpp	11;"	d	file:
VERSION_32	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq.cpp	9;"	d	file:
VERSION_64	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq.cpp	5;"	d	file:
VERSION_64	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq.cpp	7;"	d	file:
VERSION_64	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq.cpp	5;"	d	file:
VERSION_64	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq.cpp	7;"	d	file:
VIR_32_64_COLOR	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	24;"	d
VIR_32_64_COLOR	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	485;"	d
VIR_32_64_COLOR	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	55;"	d
VIR_32_64_COLOR	src/dirac_operators/stD/dirac_operator_stD_bgq.cpp	21;"	d	file:
VIR_32_64_COLOR	src/dirac_operators/stD/dirac_operator_stD_bgq.cpp	29;"	d	file:
VIR_32_64_COLOR	src/dirac_operators/stD/dirac_operator_stD_bgq_template.cpp	44;"	d	file:
VIR_32_64_COLOR_PREFETCH_NEXT	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	47;"	d
VIR_32_64_COLOR_PREFETCH_NEXT	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	501;"	d
VIR_32_64_COLOR_PREFETCH_NEXT	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	78;"	d
VIR_32_64_COMPLEX	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	23;"	d
VIR_32_64_COMPLEX	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	484;"	d
VIR_32_64_COMPLEX	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	56;"	d
VIR_32_64_COMPLEX	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	23;"	d
VIR_32_64_COMPLEX	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	484;"	d
VIR_32_64_COMPLEX	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	54;"	d
VIR_32_64_HALFSPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	24;"	d
VIR_32_64_HALFSPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	486;"	d
VIR_32_64_HALFSPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	57;"	d
VIR_32_64_HALFSPINCOLOR_PREFETCH_NEXT	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	48;"	d
VIR_32_64_HALFSPINCOLOR_PREFETCH_NEXT	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	503;"	d
VIR_32_64_HALFSPINCOLOR_PREFETCH_NEXT	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	81;"	d
VIR_32_64_OCT_SU3	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	27;"	d
VIR_32_64_OCT_SU3	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	488;"	d
VIR_32_64_OCT_SU3	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	60;"	d
VIR_32_64_OCT_SU3	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	26;"	d
VIR_32_64_OCT_SU3	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	487;"	d
VIR_32_64_OCT_SU3	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	57;"	d
VIR_32_64_OCT_SU3	src/dirac_operators/stD/dirac_operator_stD_bgq.cpp	20;"	d	file:
VIR_32_64_OCT_SU3	src/dirac_operators/stD/dirac_operator_stD_bgq.cpp	28;"	d	file:
VIR_32_64_OCT_SU3	src/dirac_operators/stD/dirac_operator_stD_bgq_template.cpp	43;"	d	file:
VIR_32_64_SPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	25;"	d
VIR_32_64_SPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	485;"	d
VIR_32_64_SPINCOLOR	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	58;"	d
VIR_32_64_SU3	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	26;"	d
VIR_32_64_SU3	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	487;"	d
VIR_32_64_SU3	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	59;"	d
VIR_32_64_SU3	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	25;"	d
VIR_32_64_SU3	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	486;"	d
VIR_32_64_SU3	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	56;"	d
VIR_32_64_SU3_PREFETCH_NEXT	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	41;"	d
VIR_32_64_SU3_PREFETCH_NEXT	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	496;"	d
VIR_32_64_SU3_PREFETCH_NEXT	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	74;"	d
VIR_32_64_SU3_PREFETCH_NEXT	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	42;"	d
VIR_32_64_SU3_PREFETCH_NEXT	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	496;"	d
VIR_32_64_SU3_PREFETCH_NEXT	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	73;"	d
VIR_COLOR_128_TO_COLOR_128	src/bgq/bgq_macros.hpp	328;"	d
VIR_COLOR_COPY	src/bgq/bgq_macros.hpp	226;"	d
VIR_COLOR_ISUBT	src/bgq/bgq_macros.hpp	420;"	d
VIR_COLOR_ISUBTASSIGN	src/bgq/bgq_macros.hpp	469;"	d
VIR_COLOR_ISUMM	src/bgq/bgq_macros.hpp	429;"	d
VIR_COLOR_ISUMMASSIGN	src/bgq/bgq_macros.hpp	468;"	d
VIR_COLOR_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	264;"	d
VIR_COLOR_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	97;"	d
VIR_COLOR_PROD_COMPLEX	src/bgq/bgq_macros.hpp	438;"	d
VIR_COLOR_PROD_DOUBLE	src/bgq/bgq_macros.hpp	447;"	d
VIR_COLOR_SUBT	src/bgq/bgq_macros.hpp	402;"	d
VIR_COLOR_SUBTASSIGN	src/bgq/bgq_macros.hpp	467;"	d
VIR_COLOR_SUMM	src/bgq/bgq_macros.hpp	411;"	d
VIR_COLOR_SUMMASSIGN	src/bgq/bgq_macros.hpp	466;"	d
VIR_COLOR_TO_COLOR	src/bgq/bgq_macros.hpp	275;"	d
VIR_COLOR_TRANSPOSE	src/bgq/bgq_macros.hpp	683;"	d
VIR_COMPLEX_128_TO_COMPLEX_128	src/bgq/bgq_macros.hpp	319;"	d
VIR_COMPLEX_CONJ1_PROD	src/bgq/bgq_macros.hpp	496;"	d
VIR_COMPLEX_COPY	src/bgq/bgq_macros.hpp	204;"	d
VIR_COMPLEX_COPY_FROM_VIR_SINGLE_COMPLEX	src/bgq/bgq_macros.hpp	212;"	d
VIR_COMPLEX_ISUBT	src/bgq/bgq_macros.hpp	386;"	d
VIR_COMPLEX_ISUMM	src/bgq/bgq_macros.hpp	394;"	d
VIR_COMPLEX_PREFETCH	src/bgq/intrinsic/load.hpp	231;"	d
VIR_COMPLEX_PREFETCH	src/bgq/intrinsic/load.hpp	32;"	d
VIR_COMPLEX_PRINT	src/bgq/bgq_macros.hpp	363;"	d
VIR_COMPLEX_PROD	src/bgq/bgq_macros.hpp	504;"	d
VIR_COMPLEX_PROD_4DOUBLE	src/bgq/bgq_macros.hpp	456;"	d
VIR_COMPLEX_PROD_DOUBLE	src/bgq/bgq_macros.hpp	512;"	d
VIR_COMPLEX_SPLAT	src/bgq/bgq_macros.hpp	202;"	d
VIR_COMPLEX_SUBT	src/bgq/bgq_macros.hpp	371;"	d
VIR_COMPLEX_SUBT_THE_CONJ1_PROD	src/bgq/bgq_macros.hpp	528;"	d
VIR_COMPLEX_SUBT_THE_PROD	src/bgq/bgq_macros.hpp	544;"	d
VIR_COMPLEX_SUMM	src/bgq/bgq_macros.hpp	378;"	d
VIR_COMPLEX_SUMM_THE_CONJ1_PROD	src/bgq/bgq_macros.hpp	520;"	d
VIR_COMPLEX_SUMM_THE_PROD	src/bgq/bgq_macros.hpp	536;"	d
VIR_COMPLEX_SUMM_THE_PROD_4DOUBLE	src/bgq/bgq_macros.hpp	552;"	d
VIR_COMPLEX_TO_COMPLEX	src/bgq/bgq_macros.hpp	261;"	d
VIR_COMPLEX_TRANSPOSE	src/bgq/bgq_macros.hpp	673;"	d
VIR_HALFSPINCOLOR_128_TO_HALFSPINCOLOR_128	src/bgq/bgq_macros.hpp	344;"	d
VIR_HALFSPINCOLOR_COPY	src/bgq/bgq_macros.hpp	242;"	d
VIR_HALFSPINCOLOR_PREFETCH	src/bgq/intrinsic/load.hpp	247;"	d
VIR_HALFSPINCOLOR_PREFETCH	src/bgq/intrinsic/load.hpp	58;"	d
VIR_HALFSPINCOLOR_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	253;"	d
VIR_HALFSPINCOLOR_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	71;"	d
VIR_HALFSPINCOLOR_SUMM	src/bgq/bgq_macros.hpp	473;"	d
VIR_HALFSPINCOLOR_SUMMASSIGN	src/bgq/bgq_macros.hpp	481;"	d
VIR_HALFSPINCOLOR_TO_HALFSPINCOLOR	src/bgq/bgq_macros.hpp	299;"	d
VIR_HALFSPINCOLOR_TRANSPOSE	src/bgq/bgq_macros.hpp	692;"	d
VIR_HALFSPIN_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	119;"	d
VIR_HALFSPIN_PREFETCH_NEXT_NEXT	src/bgq/intrinsic/load.hpp	128;"	d
VIR_HALFSPIN_PREFETCH_NEXT_NEXT	src/bgq/intrinsic/load.hpp	306;"	d
VIR_PARTIAL_SU3_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	186;"	d
VIR_PARTIAL_SU3_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	292;"	d
VIR_SINGLE_COLOR_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	107;"	d
VIR_SINGLE_COLOR_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	267;"	d
VIR_SINGLE_COLOR_TO_COLOR	src/bgq/bgq_macros.hpp	283;"	d
VIR_SINGLE_COMPLEX_COPY_FROM_VIR_COMPLEX	src/bgq/bgq_macros.hpp	219;"	d
VIR_SINGLE_COMPLEX_TO_COMPLEX	src/bgq/bgq_macros.hpp	268;"	d
VIR_SINGLE_HALFSPINCOLOR_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	259;"	d
VIR_SINGLE_HALFSPINCOLOR_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	85;"	d
VIR_SINGLE_SPINCOLOR_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	157;"	d
VIR_SINGLE_SPINCOLOR_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	280;"	d
VIR_SINGLE_SU3_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	198;"	d
VIR_SINGLE_SU3_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	296;"	d
VIR_SPINCOLOR_128_TO_SPINCOLOR_128	src/bgq/bgq_macros.hpp	351;"	d
VIR_SPINCOLOR_COPY	src/bgq/bgq_macros.hpp	249;"	d
VIR_SPINCOLOR_PREFETCH	src/bgq/intrinsic/load.hpp	236;"	d
VIR_SPINCOLOR_PREFETCH	src/bgq/intrinsic/load.hpp	39;"	d
VIR_SPINCOLOR_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	138;"	d
VIR_SPINCOLOR_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	272;"	d
VIR_SPINCOLOR_PROD_DOUBLE	src/bgq/bgq_macros.hpp	484;"	d
VIR_SPINCOLOR_TO_SPINCOLOR	src/bgq/bgq_macros.hpp	306;"	d
VIR_SU3_128_TO_SU3_128	src/bgq/bgq_macros.hpp	336;"	d
VIR_SU3_COPY	src/bgq/bgq_macros.hpp	234;"	d
VIR_SU3_DAG_PROD_VIR_COLOR	src/bgq/bgq_macros.hpp	562;"	d
VIR_SU3_DAG_PROD_VIR_HALFSPINCOLOR	src/bgq/bgq_macros.hpp	592;"	d
VIR_SU3_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	170;"	d
VIR_SU3_PREFETCH_NEXT	src/bgq/intrinsic/load.hpp	286;"	d
VIR_SU3_PROD_VIR_COLOR	src/bgq/bgq_macros.hpp	577;"	d
VIR_SU3_PROD_VIR_HALFSPINCOLOR	src/bgq/bgq_macros.hpp	599;"	d
VIR_SU3_PUT_TO_ZERO	src/bgq/bgq_macros.hpp	9;"	d
VIR_SU3_TO_SU3	src/bgq/bgq_macros.hpp	291;"	d
VKP5	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
VKTK	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
VKVK	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	e	enum:nissa::mes2pts_known_t	file:
VPATH	build/Makefile	/^VPATH = ..$/;"	m
VPATH	build/projects/Makefile	/^VPATH = ..\/..\/projects$/;"	m
VPATH	build/src/Makefile	/^VPATH = ..\/..\/src$/;"	m
VPATH	build/tools/Makefile	/^VPATH = ..\/..\/tools$/;"	m
VV	projects/x/progs/correct.cpp	/^const int PP=0,SS=1,VV=2,AA=3;$/;"	v
V_TRANSPOSE	src/bgq/intrinsic/mergesplit.hpp	17;"	d
V_TRANSPOSE	src/bgq/intrinsic/mergesplit.hpp	23;"	d
W	src/free_theory/twisted_propagator.cpp	/^  double W=1\/sqrt(2);$/;"	m	namespace:nissa	file:
WFLOW	src/operations/smearing/smooth.hpp	/^    enum method_t{COOLING,STOUT,WFLOW,APE,HYP};$/;"	e	enum:nissa::smooth_pars_t::method_t
WILSON_BASE	src/free_theory/free_theory_types.hpp	/^  enum tm_basis_t{WILSON_BASE,MAX_TWIST_BASE};$/;"	e	enum:nissa::tm_basis_t
WILSON_C1	src/free_theory/free_theory_types.hpp	/^  const double WILSON_C1=0,TLSYM_C1=-1.0\/12;$/;"	m	namespace:nissa
WILSON_GAUGE_ACTION	src/hmc/gauge/gluonic_action.hpp	/^  enum gauge_action_name_t{UNSPEC_GAUGE_ACTION,WILSON_GAUGE_ACTION,TLSYM_GAUGE_ACTION,IWASAKI_GAUGE_ACTION};$/;"	e	enum:nissa::gauge_action_name_t
Wclov_tm	projects/semileptonic/semileptonic_smeared.cpp	/^int Wclov_tm;$/;"	v
Wflow	src/operations/smearing/Wflow.cpp	/^  namespace Wflow$/;"	n	namespace:nissa	file:
Wflow	src/operations/smearing/Wflow.hpp	/^  namespace Wflow$/;"	n	namespace:nissa
Wflow	src/operations/smearing/smooth.hpp	/^    Wflow_pars_t Wflow;$/;"	m	struct:nissa::smooth_pars_t
Wflow_lev_t	src/operations/smearing/recursive_Wflower.hpp	/^    struct Wflow_lev_t$/;"	s	struct:nissa::recursive_Wflower_t
Wflow_pars	build/projects/generate_confs/parser.cpp	/^    nissa::Wflow_pars_t *Wflow_pars;$/;"	m	union:YYSTYPE	file:
Wflow_pars	build/projects/generate_confs/parser.hpp	/^    nissa::Wflow_pars_t *Wflow_pars;$/;"	m	union:YYSTYPE
Wflow_pars_t	src/operations/smearing/Wflow.hpp	/^    Wflow_pars_t() :$/;"	f	struct:nissa::Wflow_pars_t
Wflow_pars_t	src/operations/smearing/Wflow.hpp	/^  struct Wflow_pars_t$/;"	s	namespace:nissa
Wflower	src/operations/smearing/recursive_Wflower.hpp	/^    const Wflow_pars_t &Wflower;$/;"	m	struct:nissa::recursive_Wflower_t
Wils	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    spincolor *Wils;$/;"	m	struct:nissa::pseudofermion_t
Wilson_action	src/hmc/gauge/Wilson_action.cpp	/^  void Wilson_action(double *action,double plaq,double beta)$/;"	f	namespace:nissa
Wilson_action	src/hmc/gauge/Wilson_action.cpp	/^  void Wilson_action(double *action,quad_su3 **eo_conf,double beta)$/;"	f	namespace:nissa
Wilson_action	src/hmc/gauge/Wilson_action.cpp	/^  void Wilson_action(double *action,quad_su3 *lx_conf,double beta)$/;"	f	namespace:nissa
Wilson_par	src/operations/su3_paths/gauge_sweeper.cpp	/^  int Wilson_par(coords ivol_coord,int dir)$/;"	f	namespace:nissa
Wilson_sweeper	src/operations/su3_paths/gauge_sweeper.hpp	/^  EXTERN gauge_sweeper_t *Symanzik_sweeper,*Wilson_sweeper;$/;"	m	namespace:nissa
XBW_DER_TMQ_EXP	src/bgq/bgq_macros.hpp	762;"	d
XBW_DER_TMQ_EXP	work_in_prog/bgq/src/bgq_macros.hpp	470;"	d
XFW_DER_TMQ_EXP	src/bgq/bgq_macros.hpp	722;"	d
XFW_DER_TMQ_EXP	work_in_prog/bgq/src/bgq_macros.hpp	438;"	d
X_interv	projects/reno_const/RIMOM.cpp	/^interv *X_interv[2],*P_interv[2];$/;"	v
YACC	build/Makefile	/^YACC = bison -y$/;"	m
YACC	build/projects/Makefile	/^YACC = bison -y$/;"	m
YACC	build/src/Makefile	/^YACC = bison -y$/;"	m
YACC	build/tools/Makefile	/^YACC = bison -y$/;"	m
YACCCOMPILE	build/projects/Makefile	/^YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)$/;"	m
YBW_DER_TMQ_EXP	src/bgq/bgq_macros.hpp	772;"	d
YBW_DER_TMQ_EXP	work_in_prog/bgq/src/bgq_macros.hpp	478;"	d
YFLAGS	build/Makefile	/^YFLAGS = $/;"	m
YFLAGS	build/projects/Makefile	/^YFLAGS = $/;"	m
YFLAGS	build/src/Makefile	/^YFLAGS = $/;"	m
YFLAGS	build/tools/Makefile	/^YFLAGS = $/;"	m
YFW_DER_TMQ_EXP	src/bgq/bgq_macros.hpp	732;"	d
YFW_DER_TMQ_EXP	work_in_prog/bgq/src/bgq_macros.hpp	446;"	d
YLWRAP	build/projects/Makefile	/^YLWRAP = $(top_srcdir)\/config\/ylwrap$/;"	m
YYABORT	build/projects/generate_confs/parser.cpp	1282;"	d	file:
YYABORT	build/projects/semileptonic/parse_corr.cpp	614;"	d	file:
YYACCEPT	build/projects/generate_confs/parser.cpp	1281;"	d	file:
YYACCEPT	build/projects/semileptonic/parse_corr.cpp	613;"	d	file:
YYBACKUP	build/projects/generate_confs/parser.cpp	1288;"	d	file:
YYBACKUP	build/projects/semileptonic/parse_corr.cpp	620;"	d	file:
YYBISON	build/projects/generate_confs/parser.cpp	44;"	d	file:
YYBISON	build/projects/semileptonic/parse_corr.cpp	44;"	d	file:
YYBISON_VERSION	build/projects/generate_confs/parser.cpp	47;"	d	file:
YYBISON_VERSION	build/projects/semileptonic/parse_corr.cpp	47;"	d	file:
YYCOPY	build/projects/generate_confs/parser.cpp	682;"	d	file:
YYCOPY	build/projects/generate_confs/parser.cpp	685;"	d	file:
YYCOPY	build/projects/semileptonic/parse_corr.cpp	412;"	d	file:
YYCOPY	build/projects/semileptonic/parse_corr.cpp	415;"	d	file:
YYCOPY_NEEDED	build/projects/generate_confs/parser.cpp	631;"	d	file:
YYCOPY_NEEDED	build/projects/generate_confs/parser.cpp	657;"	d	file:
YYCOPY_NEEDED	build/projects/semileptonic/parse_corr.cpp	387;"	d	file:
YYDEBUG	build/projects/generate_confs/parser.cpp	120;"	d	file:
YYDEBUG	build/projects/generate_confs/parser.cpp	74;"	d	file:
YYDEBUG	build/projects/generate_confs/parser.hpp	37;"	d
YYDEBUG	build/projects/semileptonic/parse_corr.cpp	114;"	d	file:
YYDEBUG	build/projects/semileptonic/parse_corr.hpp	37;"	d
YYDPRINTF	build/projects/generate_confs/parser.cpp	1346;"	d	file:
YYDPRINTF	build/projects/generate_confs/parser.cpp	1504;"	d	file:
YYDPRINTF	build/projects/semileptonic/parse_corr.cpp	677;"	d	file:
YYDPRINTF	build/projects/semileptonic/parse_corr.cpp	835;"	d	file:
YYEMPTY	build/projects/generate_confs/parser.cpp	1278;"	d	file:
YYEMPTY	build/projects/semileptonic/parse_corr.cpp	610;"	d	file:
YYEOF	build/projects/generate_confs/parser.cpp	1279;"	d	file:
YYEOF	build/projects/semileptonic/parse_corr.cpp	611;"	d	file:
YYERRCODE	build/projects/generate_confs/parser.cpp	1308;"	d	file:
YYERRCODE	build/projects/semileptonic/parse_corr.cpp	639;"	d	file:
YYERROR	build/projects/generate_confs/parser.cpp	1283;"	d	file:
YYERROR	build/projects/semileptonic/parse_corr.cpp	615;"	d	file:
YYERROR_VERBOSE	build/projects/generate_confs/parser.cpp	108;"	d	file:
YYERROR_VERBOSE	build/projects/generate_confs/parser.cpp	109;"	d	file:
YYERROR_VERBOSE	build/projects/generate_confs/parser.cpp	111;"	d	file:
YYERROR_VERBOSE	build/projects/semileptonic/parse_corr.cpp	102;"	d	file:
YYERROR_VERBOSE	build/projects/semileptonic/parse_corr.cpp	103;"	d	file:
YYERROR_VERBOSE	build/projects/semileptonic/parse_corr.cpp	105;"	d	file:
YYFINAL	build/projects/generate_confs/parser.cpp	698;"	d	file:
YYFINAL	build/projects/semileptonic/parse_corr.cpp	428;"	d	file:
YYFPRINTF	build/projects/generate_confs/parser.cpp	1343;"	d	file:
YYFPRINTF	build/projects/semileptonic/parse_corr.cpp	674;"	d	file:
YYFREE	build/projects/generate_confs/parser.cpp	625;"	d	file:
YYFREE	build/projects/semileptonic/parse_corr.cpp	356;"	d	file:
YYINITDEPTH	build/projects/generate_confs/parser.cpp	1513;"	d	file:
YYINITDEPTH	build/projects/semileptonic/parse_corr.cpp	844;"	d	file:
YYLAST	build/projects/generate_confs/parser.cpp	700;"	d	file:
YYLAST	build/projects/semileptonic/parse_corr.cpp	430;"	d	file:
YYLLOC_DEFAULT	build/projects/generate_confs/parser.cpp	1316;"	d	file:
YYLLOC_DEFAULT	build/projects/semileptonic/parse_corr.cpp	647;"	d	file:
YYLTYPE	build/projects/generate_confs/parser.cpp	/^struct YYLTYPE$/;"	s	file:
YYLTYPE	build/projects/generate_confs/parser.cpp	/^typedef struct YYLTYPE YYLTYPE;$/;"	t	typeref:struct:YYLTYPE	file:
YYLTYPE	build/projects/generate_confs/parser.hpp	/^struct YYLTYPE$/;"	s
YYLTYPE	build/projects/generate_confs/parser.hpp	/^typedef struct YYLTYPE YYLTYPE;$/;"	t	typeref:struct:YYLTYPE
YYLTYPE	build/projects/semileptonic/parse_corr.cpp	/^struct YYLTYPE$/;"	s	file:
YYLTYPE	build/projects/semileptonic/parse_corr.cpp	/^typedef struct YYLTYPE YYLTYPE;$/;"	t	typeref:struct:YYLTYPE	file:
YYLTYPE	build/projects/semileptonic/parse_corr.hpp	/^struct YYLTYPE$/;"	s
YYLTYPE	build/projects/semileptonic/parse_corr.hpp	/^typedef struct YYLTYPE YYLTYPE;$/;"	t	typeref:struct:YYLTYPE
YYLTYPE_IS_DECLARED	build/projects/generate_confs/parser.cpp	467;"	d	file:
YYLTYPE_IS_DECLARED	build/projects/generate_confs/parser.hpp	384;"	d
YYLTYPE_IS_DECLARED	build/projects/semileptonic/parse_corr.cpp	174;"	d	file:
YYLTYPE_IS_DECLARED	build/projects/semileptonic/parse_corr.hpp	97;"	d
YYLTYPE_IS_TRIVIAL	build/projects/generate_confs/parser.cpp	468;"	d	file:
YYLTYPE_IS_TRIVIAL	build/projects/generate_confs/parser.hpp	385;"	d
YYLTYPE_IS_TRIVIAL	build/projects/semileptonic/parse_corr.cpp	175;"	d	file:
YYLTYPE_IS_TRIVIAL	build/projects/semileptonic/parse_corr.hpp	98;"	d
YYMALLOC	build/projects/generate_confs/parser.cpp	619;"	d	file:
YYMALLOC	build/projects/semileptonic/parse_corr.cpp	350;"	d	file:
YYMAXDEPTH	build/projects/generate_confs/parser.cpp	1524;"	d	file:
YYMAXDEPTH	build/projects/semileptonic/parse_corr.cpp	855;"	d	file:
YYMAXUTOK	build/projects/generate_confs/parser.cpp	714;"	d	file:
YYMAXUTOK	build/projects/semileptonic/parse_corr.cpp	444;"	d	file:
YYNNTS	build/projects/generate_confs/parser.cpp	705;"	d	file:
YYNNTS	build/projects/semileptonic/parse_corr.cpp	435;"	d	file:
YYNRULES	build/projects/generate_confs/parser.cpp	707;"	d	file:
YYNRULES	build/projects/semileptonic/parse_corr.cpp	437;"	d	file:
YYNSTATES	build/projects/generate_confs/parser.cpp	709;"	d	file:
YYNSTATES	build/projects/semileptonic/parse_corr.cpp	439;"	d	file:
YYNTOKENS	build/projects/generate_confs/parser.cpp	703;"	d	file:
YYNTOKENS	build/projects/semileptonic/parse_corr.cpp	433;"	d	file:
YYPACT_NINF	build/projects/generate_confs/parser.cpp	881;"	d	file:
YYPACT_NINF	build/projects/semileptonic/parse_corr.cpp	517;"	d	file:
YYPOPSTACK	build/projects/generate_confs/parser.cpp	2091;"	d	file:
YYPOPSTACK	build/projects/semileptonic/parse_corr.cpp	1179;"	d	file:
YYPULL	build/projects/generate_confs/parser.cpp	59;"	d	file:
YYPULL	build/projects/semileptonic/parse_corr.cpp	59;"	d	file:
YYPURE	build/projects/generate_confs/parser.cpp	53;"	d	file:
YYPURE	build/projects/semileptonic/parse_corr.cpp	53;"	d	file:
YYPUSH	build/projects/generate_confs/parser.cpp	56;"	d	file:
YYPUSH	build/projects/semileptonic/parse_corr.cpp	56;"	d	file:
YYRECOVERING	build/projects/generate_confs/parser.cpp	1286;"	d	file:
YYRECOVERING	build/projects/semileptonic/parse_corr.cpp	618;"	d	file:
YYRHSLOC	build/projects/generate_confs/parser.cpp	1335;"	d	file:
YYRHSLOC	build/projects/semileptonic/parse_corr.cpp	666;"	d	file:
YYSIZE_MAXIMUM	build/projects/generate_confs/parser.cpp	522;"	d	file:
YYSIZE_MAXIMUM	build/projects/semileptonic/parse_corr.cpp	229;"	d	file:
YYSIZE_T	build/projects/generate_confs/parser.cpp	511;"	d	file:
YYSIZE_T	build/projects/generate_confs/parser.cpp	513;"	d	file:
YYSIZE_T	build/projects/generate_confs/parser.cpp	516;"	d	file:
YYSIZE_T	build/projects/generate_confs/parser.cpp	518;"	d	file:
YYSIZE_T	build/projects/semileptonic/parse_corr.cpp	218;"	d	file:
YYSIZE_T	build/projects/semileptonic/parse_corr.cpp	220;"	d	file:
YYSIZE_T	build/projects/semileptonic/parse_corr.cpp	223;"	d	file:
YYSIZE_T	build/projects/semileptonic/parse_corr.cpp	225;"	d	file:
YYSKELETON_NAME	build/projects/generate_confs/parser.cpp	50;"	d	file:
YYSKELETON_NAME	build/projects/semileptonic/parse_corr.cpp	50;"	d	file:
YYSTACK_ALLOC	build/projects/generate_confs/parser.cpp	605;"	d	file:
YYSTACK_ALLOC	build/projects/semileptonic/parse_corr.cpp	304;"	d	file:
YYSTACK_ALLOC	build/projects/semileptonic/parse_corr.cpp	308;"	d	file:
YYSTACK_ALLOC	build/projects/semileptonic/parse_corr.cpp	313;"	d	file:
YYSTACK_ALLOC	build/projects/semileptonic/parse_corr.cpp	336;"	d	file:
YYSTACK_ALLOC_MAXIMUM	build/projects/generate_confs/parser.cpp	602;"	d	file:
YYSTACK_ALLOC_MAXIMUM	build/projects/generate_confs/parser.cpp	608;"	d	file:
YYSTACK_ALLOC_MAXIMUM	build/projects/semileptonic/parse_corr.cpp	333;"	d	file:
YYSTACK_ALLOC_MAXIMUM	build/projects/semileptonic/parse_corr.cpp	339;"	d	file:
YYSTACK_BYTES	build/projects/generate_confs/parser.cpp	653;"	d	file:
YYSTACK_BYTES	build/projects/semileptonic/parse_corr.cpp	383;"	d	file:
YYSTACK_FREE	build/projects/generate_confs/parser.cpp	596;"	d	file:
YYSTACK_FREE	build/projects/generate_confs/parser.cpp	606;"	d	file:
YYSTACK_FREE	build/projects/semileptonic/parse_corr.cpp	327;"	d	file:
YYSTACK_FREE	build/projects/semileptonic/parse_corr.cpp	337;"	d	file:
YYSTACK_GAP_MAXIMUM	build/projects/generate_confs/parser.cpp	649;"	d	file:
YYSTACK_GAP_MAXIMUM	build/projects/semileptonic/parse_corr.cpp	379;"	d	file:
YYSTACK_RELOCATE	build/projects/generate_confs/parser.cpp	664;"	d	file:
YYSTACK_RELOCATE	build/projects/semileptonic/parse_corr.cpp	394;"	d	file:
YYSTATE	build/projects/generate_confs/tokenizer.cpp	150;"	d	file:
YYSTATE	build/projects/semileptonic/tokenize_corr.cpp	150;"	d	file:
YYSTYPE	build/projects/generate_confs/parser.cpp	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	build/projects/generate_confs/parser.cpp	/^union YYSTYPE$/;"	u	file:
YYSTYPE	build/projects/generate_confs/parser.hpp	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE	build/projects/generate_confs/parser.hpp	/^union YYSTYPE$/;"	u
YYSTYPE	build/projects/semileptonic/parse_corr.cpp	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	build/projects/semileptonic/parse_corr.cpp	/^union YYSTYPE$/;"	u	file:
YYSTYPE	build/projects/semileptonic/parse_corr.hpp	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE	build/projects/semileptonic/parse_corr.hpp	/^union YYSTYPE$/;"	u
YYSTYPE_IS_DECLARED	build/projects/generate_confs/parser.cpp	454;"	d	file:
YYSTYPE_IS_DECLARED	build/projects/generate_confs/parser.hpp	371;"	d
YYSTYPE_IS_DECLARED	build/projects/semileptonic/parse_corr.cpp	161;"	d	file:
YYSTYPE_IS_DECLARED	build/projects/semileptonic/parse_corr.hpp	84;"	d
YYSTYPE_IS_TRIVIAL	build/projects/generate_confs/parser.cpp	453;"	d	file:
YYSTYPE_IS_TRIVIAL	build/projects/generate_confs/parser.hpp	370;"	d
YYSTYPE_IS_TRIVIAL	build/projects/semileptonic/parse_corr.cpp	160;"	d	file:
YYSTYPE_IS_TRIVIAL	build/projects/semileptonic/parse_corr.hpp	83;"	d
YYTABLES_NAME	build/projects/generate_confs/tokenizer.cpp	3480;"	d	file:
YYTABLES_NAME	build/projects/semileptonic/tokenize_corr.cpp	2163;"	d	file:
YYTABLE_NINF	build/projects/generate_confs/parser.cpp	886;"	d	file:
YYTABLE_NINF	build/projects/semileptonic/parse_corr.cpp	522;"	d	file:
YYTERROR	build/projects/generate_confs/parser.cpp	1307;"	d	file:
YYTERROR	build/projects/semileptonic/parse_corr.cpp	638;"	d	file:
YYTOKENTYPE	build/projects/generate_confs/parser.cpp	128;"	d	file:
YYTOKENTYPE	build/projects/generate_confs/parser.hpp	45;"	d
YYTOKENTYPE	build/projects/semileptonic/parse_corr.cpp	122;"	d	file:
YYTOKENTYPE	build/projects/semileptonic/parse_corr.hpp	45;"	d
YYTRANSLATE	build/projects/generate_confs/parser.cpp	716;"	d	file:
YYTRANSLATE	build/projects/semileptonic/parse_corr.cpp	446;"	d	file:
YYUNDEFTOK	build/projects/generate_confs/parser.cpp	713;"	d	file:
YYUNDEFTOK	build/projects/semileptonic/parse_corr.cpp	443;"	d	file:
YYUSE	build/projects/generate_confs/parser.cpp	565;"	d	file:
YYUSE	build/projects/generate_confs/parser.cpp	567;"	d	file:
YYUSE	build/projects/semileptonic/parse_corr.cpp	272;"	d	file:
YYUSE	build/projects/semileptonic/parse_corr.cpp	274;"	d	file:
YY_	build/projects/generate_confs/parser.cpp	528;"	d	file:
YY_	build/projects/generate_confs/parser.cpp	532;"	d	file:
YY_	build/projects/semileptonic/parse_corr.cpp	235;"	d	file:
YY_	build/projects/semileptonic/parse_corr.cpp	239;"	d	file:
YY_ATTRIBUTE	build/projects/generate_confs/parser.cpp	540;"	d	file:
YY_ATTRIBUTE	build/projects/generate_confs/parser.cpp	542;"	d	file:
YY_ATTRIBUTE	build/projects/semileptonic/parse_corr.cpp	247;"	d	file:
YY_ATTRIBUTE	build/projects/semileptonic/parse_corr.cpp	249;"	d	file:
YY_ATTRIBUTE_PURE	build/projects/generate_confs/parser.cpp	547;"	d	file:
YY_ATTRIBUTE_PURE	build/projects/semileptonic/parse_corr.cpp	254;"	d	file:
YY_ATTRIBUTE_UNUSED	build/projects/generate_confs/parser.cpp	551;"	d	file:
YY_ATTRIBUTE_UNUSED	build/projects/semileptonic/parse_corr.cpp	258;"	d	file:
YY_AT_BOL	build/projects/generate_confs/tokenizer.cpp	325;"	d	file:
YY_AT_BOL	build/projects/semileptonic/tokenize_corr.cpp	325;"	d	file:
YY_BASE_ERROR_STRING	build/projects/generate_confs/parser.cpp	1935;"	d	file:
YY_BASE_ERROR_STRING	build/projects/semileptonic/parse_corr.cpp	1028;"	d	file:
YY_BREAK	build/projects/generate_confs/tokenizer.cpp	1358;"	d	file:
YY_BREAK	build/projects/semileptonic/tokenize_corr.cpp	730;"	d	file:
YY_BUFFER_EOF_PENDING	build/projects/generate_confs/tokenizer.cpp	261;"	d	file:
YY_BUFFER_EOF_PENDING	build/projects/semileptonic/tokenize_corr.cpp	261;"	d	file:
YY_BUFFER_NEW	build/projects/generate_confs/tokenizer.cpp	249;"	d	file:
YY_BUFFER_NEW	build/projects/semileptonic/tokenize_corr.cpp	249;"	d	file:
YY_BUFFER_NORMAL	build/projects/generate_confs/tokenizer.cpp	250;"	d	file:
YY_BUFFER_NORMAL	build/projects/semileptonic/tokenize_corr.cpp	250;"	d	file:
YY_BUFFER_STATE	build/projects/generate_confs/tokenizer.cpp	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUFFER_STATE	build/projects/semileptonic/tokenize_corr.cpp	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	build/projects/generate_confs/tokenizer.cpp	162;"	d	file:
YY_BUF_SIZE	build/projects/semileptonic/tokenize_corr.cpp	162;"	d	file:
YY_CHAR	build/projects/generate_confs/tokenizer.cpp	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CHAR	build/projects/semileptonic/tokenize_corr.cpp	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	build/projects/generate_confs/tokenizer.cpp	272;"	d	file:
YY_CURRENT_BUFFER	build/projects/semileptonic/tokenize_corr.cpp	272;"	d	file:
YY_CURRENT_BUFFER_LVALUE	build/projects/generate_confs/tokenizer.cpp	279;"	d	file:
YY_CURRENT_BUFFER_LVALUE	build/projects/semileptonic/tokenize_corr.cpp	279;"	d	file:
YY_DECL	build/projects/generate_confs/tokenizer.cpp	1345;"	d	file:
YY_DECL	build/projects/semileptonic/tokenize_corr.cpp	717;"	d	file:
YY_DECL_IS_OURS	build/projects/generate_confs/tokenizer.cpp	1340;"	d	file:
YY_DECL_IS_OURS	build/projects/semileptonic/tokenize_corr.cpp	712;"	d	file:
YY_DO_BEFORE_ACTION	build/projects/generate_confs/tokenizer.cpp	346;"	d	file:
YY_DO_BEFORE_ACTION	build/projects/semileptonic/tokenize_corr.cpp	346;"	d	file:
YY_END_OF_BUFFER	build/projects/generate_confs/tokenizer.cpp	354;"	d	file:
YY_END_OF_BUFFER	build/projects/semileptonic/tokenize_corr.cpp	354;"	d	file:
YY_END_OF_BUFFER_CHAR	build/projects/generate_confs/tokenizer.cpp	158;"	d	file:
YY_END_OF_BUFFER_CHAR	build/projects/semileptonic/tokenize_corr.cpp	158;"	d	file:
YY_EXIT_FAILURE	build/projects/generate_confs/tokenizer.cpp	3111;"	d	file:
YY_EXIT_FAILURE	build/projects/semileptonic/tokenize_corr.cpp	1794;"	d	file:
YY_EXTEND_ERROR_STRING	build/projects/generate_confs/parser.cpp	1936;"	d	file:
YY_EXTEND_ERROR_STRING	build/projects/semileptonic/parse_corr.cpp	1029;"	d	file:
YY_EXTRA_TYPE	build/projects/generate_confs/tokenizer.cpp	1100;"	d	file:
YY_EXTRA_TYPE	build/projects/generate_confs/tokenizer.cpp	1143;"	d	file:
YY_EXTRA_TYPE	build/projects/semileptonic/tokenize_corr.cpp	483;"	d	file:
YY_EXTRA_TYPE	build/projects/semileptonic/tokenize_corr.cpp	515;"	d	file:
YY_FATAL_ERROR	build/projects/generate_confs/tokenizer.cpp	1331;"	d	file:
YY_FATAL_ERROR	build/projects/semileptonic/tokenize_corr.cpp	703;"	d	file:
YY_FLEX_MAJOR_VERSION	build/projects/generate_confs/tokenizer.cpp	10;"	d	file:
YY_FLEX_MAJOR_VERSION	build/projects/semileptonic/tokenize_corr.cpp	10;"	d	file:
YY_FLEX_MINOR_VERSION	build/projects/generate_confs/tokenizer.cpp	11;"	d	file:
YY_FLEX_MINOR_VERSION	build/projects/semileptonic/tokenize_corr.cpp	11;"	d	file:
YY_FLEX_SUBMINOR_VERSION	build/projects/generate_confs/tokenizer.cpp	12;"	d	file:
YY_FLEX_SUBMINOR_VERSION	build/projects/semileptonic/tokenize_corr.cpp	12;"	d	file:
YY_FLUSH_BUFFER	build/projects/generate_confs/tokenizer.cpp	293;"	d	file:
YY_FLUSH_BUFFER	build/projects/semileptonic/tokenize_corr.cpp	293;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	build/projects/generate_confs/parser.cpp	572;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	build/projects/generate_confs/parser.cpp	582;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	build/projects/semileptonic/parse_corr.cpp	279;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	build/projects/semileptonic/parse_corr.cpp	289;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	build/projects/generate_confs/parser.cpp	576;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	build/projects/generate_confs/parser.cpp	583;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	build/projects/semileptonic/parse_corr.cpp	283;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	build/projects/semileptonic/parse_corr.cpp	290;"	d	file:
YY_INITIAL_VALUE	build/projects/generate_confs/parser.cpp	579;"	d	file:
YY_INITIAL_VALUE	build/projects/generate_confs/parser.cpp	586;"	d	file:
YY_INITIAL_VALUE	build/projects/semileptonic/parse_corr.cpp	286;"	d	file:
YY_INITIAL_VALUE	build/projects/semileptonic/parse_corr.cpp	293;"	d	file:
YY_INPUT	build/projects/generate_confs/tokenizer.cpp	1104;"	d	file:
YY_INPUT	build/projects/generate_confs/tokenizer.cpp	1284;"	d	file:
YY_INPUT	build/projects/semileptonic/tokenize_corr.cpp	487;"	d	file:
YY_INPUT	build/projects/semileptonic/tokenize_corr.cpp	656;"	d	file:
YY_INT_ALIGNED	build/projects/generate_confs/tokenizer.cpp	5;"	d	file:
YY_INT_ALIGNED	build/projects/semileptonic/tokenize_corr.cpp	5;"	d	file:
YY_LAC_DISCARD	build/projects/generate_confs/parser.cpp	1643;"	d	file:
YY_LAC_DISCARD	build/projects/generate_confs/parser.cpp	1654;"	d	file:
YY_LAC_ESTABLISH	build/projects/generate_confs/parser.cpp	1612;"	d	file:
YY_LESS_LINENO	build/projects/generate_confs/tokenizer.cpp	183;"	d	file:
YY_LESS_LINENO	build/projects/semileptonic/tokenize_corr.cpp	183;"	d	file:
YY_LOCATION_PRINT	build/projects/generate_confs/parser.cpp	1388;"	d	file:
YY_LOCATION_PRINT	build/projects/generate_confs/parser.cpp	1392;"	d	file:
YY_LOCATION_PRINT	build/projects/semileptonic/parse_corr.cpp	719;"	d	file:
YY_LOCATION_PRINT	build/projects/semileptonic/parse_corr.cpp	723;"	d	file:
YY_MORE_ADJ	build/projects/generate_confs/tokenizer.cpp	1085;"	d	file:
YY_MORE_ADJ	build/projects/semileptonic/tokenize_corr.cpp	473;"	d	file:
YY_NEW_FILE	build/projects/generate_confs/tokenizer.cpp	156;"	d	file:
YY_NEW_FILE	build/projects/semileptonic/tokenize_corr.cpp	156;"	d	file:
YY_NULL	build/projects/generate_confs/tokenizer.cpp	113;"	d	file:
YY_NULL	build/projects/semileptonic/tokenize_corr.cpp	113;"	d	file:
YY_NULLPTR	build/projects/generate_confs/parser.cpp	100;"	d	file:
YY_NULLPTR	build/projects/generate_confs/parser.cpp	102;"	d	file:
YY_NULLPTR	build/projects/semileptonic/parse_corr.cpp	94;"	d	file:
YY_NULLPTR	build/projects/semileptonic/parse_corr.cpp	96;"	d	file:
YY_NUM_RULES	build/projects/generate_confs/tokenizer.cpp	353;"	d	file:
YY_NUM_RULES	build/projects/semileptonic/tokenize_corr.cpp	353;"	d	file:
YY_PARSER_GENERATE_CONFS_PARSER_HPP_INCLUDED	build/projects/generate_confs/parser.cpp	117;"	d	file:
YY_PARSER_GENERATE_CONFS_PARSER_HPP_INCLUDED	build/projects/generate_confs/parser.hpp	34;"	d
YY_PARSE_CORR_SEMILEPTONIC_PARSE_CORR_HPP_INCLUDED	build/projects/semileptonic/parse_corr.cpp	111;"	d	file:
YY_PARSE_CORR_SEMILEPTONIC_PARSE_CORR_HPP_INCLUDED	build/projects/semileptonic/parse_corr.hpp	34;"	d
YY_READ_BUF_SIZE	build/projects/generate_confs/tokenizer.cpp	1269;"	d	file:
YY_READ_BUF_SIZE	build/projects/semileptonic/tokenize_corr.cpp	641;"	d	file:
YY_REDUCE_PRINT	build/projects/generate_confs/parser.cpp	1494;"	d	file:
YY_REDUCE_PRINT	build/projects/generate_confs/parser.cpp	1507;"	d	file:
YY_REDUCE_PRINT	build/projects/semileptonic/parse_corr.cpp	825;"	d	file:
YY_REDUCE_PRINT	build/projects/semileptonic/parse_corr.cpp	838;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	build/projects/generate_confs/tokenizer.cpp	1086;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	build/projects/semileptonic/tokenize_corr.cpp	474;"	d	file:
YY_RULE_SETUP	build/projects/generate_confs/tokenizer.cpp	1361;"	d	file:
YY_RULE_SETUP	build/projects/semileptonic/tokenize_corr.cpp	733;"	d	file:
YY_SC_TO_UI	build/projects/generate_confs/tokenizer.cpp	120;"	d	file:
YY_SC_TO_UI	build/projects/semileptonic/tokenize_corr.cpp	120;"	d	file:
YY_SKIP_YYWRAP	build/projects/generate_confs/tokenizer.cpp	330;"	d	file:
YY_SKIP_YYWRAP	build/projects/semileptonic/tokenize_corr.cpp	330;"	d	file:
YY_STACK_PRINT	build/projects/generate_confs/parser.cpp	1463;"	d	file:
YY_STACK_PRINT	build/projects/generate_confs/parser.cpp	1506;"	d	file:
YY_STACK_PRINT	build/projects/semileptonic/parse_corr.cpp	794;"	d	file:
YY_STACK_PRINT	build/projects/semileptonic/parse_corr.cpp	837;"	d	file:
YY_START	build/projects/generate_confs/tokenizer.cpp	149;"	d	file:
YY_START	build/projects/semileptonic/tokenize_corr.cpp	149;"	d	file:
YY_START_STACK_INCR	build/projects/generate_confs/tokenizer.cpp	1326;"	d	file:
YY_START_STACK_INCR	build/projects/semileptonic/tokenize_corr.cpp	698;"	d	file:
YY_STATE_BUF_SIZE	build/projects/generate_confs/tokenizer.cpp	167;"	d	file:
YY_STATE_BUF_SIZE	build/projects/semileptonic/tokenize_corr.cpp	167;"	d	file:
YY_STATE_EOF	build/projects/generate_confs/tokenizer.cpp	153;"	d	file:
YY_STATE_EOF	build/projects/semileptonic/tokenize_corr.cpp	153;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	build/projects/generate_confs/tokenizer.cpp	202;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	build/projects/semileptonic/tokenize_corr.cpp	202;"	d	file:
YY_SYMBOL_PRINT	build/projects/generate_confs/parser.cpp	1397;"	d	file:
YY_SYMBOL_PRINT	build/projects/generate_confs/parser.cpp	1505;"	d	file:
YY_SYMBOL_PRINT	build/projects/semileptonic/parse_corr.cpp	728;"	d	file:
YY_SYMBOL_PRINT	build/projects/semileptonic/parse_corr.cpp	836;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	build/projects/generate_confs/tokenizer.cpp	170;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	build/projects/semileptonic/tokenize_corr.cpp	170;"	d	file:
YY_TYPEDEF_YY_SCANNER_T	build/projects/generate_confs/tokenizer.cpp	124;"	d	file:
YY_TYPEDEF_YY_SCANNER_T	build/projects/semileptonic/tokenize_corr.cpp	124;"	d	file:
YY_TYPEDEF_YY_SIZE_T	build/projects/generate_confs/tokenizer.cpp	175;"	d	file:
YY_TYPEDEF_YY_SIZE_T	build/projects/semileptonic/tokenize_corr.cpp	175;"	d	file:
YY_USER_ACTION	build/projects/generate_confs/tokenizer.cpp	1122;"	d	file:
YY_USER_ACTION	build/projects/generate_confs/tokenizer.cpp	1353;"	d	file:
YY_USER_ACTION	build/projects/semileptonic/tokenize_corr.cpp	725;"	d	file:
YY_USE_CONST	build/projects/generate_confs/tokenizer.cpp	101;"	d	file:
YY_USE_CONST	build/projects/generate_confs/tokenizer.cpp	94;"	d	file:
YY_USE_CONST	build/projects/semileptonic/tokenize_corr.cpp	101;"	d	file:
YY_USE_CONST	build/projects/semileptonic/tokenize_corr.cpp	94;"	d	file:
ZBW_DER_TMQ_EXP	src/bgq/bgq_macros.hpp	782;"	d
ZBW_DER_TMQ_EXP	work_in_prog/bgq/src/bgq_macros.hpp	486;"	d
ZFW_DER_TMQ_EXP	src/bgq/bgq_macros.hpp	742;"	d
ZFW_DER_TMQ_EXP	work_in_prog/bgq/src/bgq_macros.hpp	454;"	d
Zp_minus_one	projects/x/progs/correct.cpp	/^double Zp_minus_one(double d2,int icorr)$/;"	f
_ADD_VAR_H	work_in_prog/bgq/src/add_var.hpp	2;"	d
_ALL_RECTANGLES_HPP	src/operations/su3_paths/all_rectangles.hpp	2;"	d
_ALL_TO_ALL_COMM_HPP	src/communicate/all_to_all.hpp	2;"	d
_APE_HPP	src/operations/smearing/APE.hpp	2;"	d
_ARBITRARY_HPP	src/operations/su3_paths/arbitrary.hpp	2;"	d
_BACKFIELD_HPP	src/hmc/backfield.hpp	2;"	d
_BENCH_HPP	src/base/bench.hpp	2;"	d
_BGQ_BARRIER_C	src/bgq/bgq_barrier.hpp	2;"	d
_BGQ_INSTRUCTIONS_H	src/base/bgq_instructions.hpp	2;"	d
_BGQ_INTRINSIC_DECLARE_HPP	src/bgq/intrinsic/declare.hpp	2;"	d
_BGQ_INTRINSIC_HPP	src/bgq/intrinsic.hpp	2;"	d
_BGQ_INTRINSIC_LOAD	src/bgq/intrinsic/load.hpp	2;"	d
_BGQ_INTRINSIC_MERGESPLIT	src/bgq/intrinsic/mergesplit.hpp	2;"	d
_BGQ_INTRINSIC_OPERATIONS	src/bgq/intrinsic/oper.hpp	2;"	d
_BGQ_INTRINSIC_STORE	src/bgq/intrinsic/store.hpp	2;"	d
_BMP_H	projects/x/src/routines/bmp.hpp	2;"	d
_BORDERS_HPP	src/communicate/borders.hpp	2;"	d
_BUFFER_HPP	src/io/buffer.hpp	2;"	d
_CGM_32_INVERT_STD2EE_M2_HPP	src/inverters/staggered/cgm_32_invert_stD2ee_m2.hpp	2;"	d
_CGM_INVERT_CLOVTMQ2_HPP	src/inverters/twisted_clover/cgm_invert_tmclovQ2.hpp	2;"	d
_CGM_INVERT_MFACC_HPP	src/inverters/momenta/cgm_invert_MFACC.hpp	2;"	d
_CGM_INVERT_STD2EE_M2_BGQ_HPP	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.hpp	2;"	d
_CGM_INVERT_STD2EE_M2_HPP	src/inverters/staggered/cgm_invert_stD2ee_m2.hpp	2;"	d
_CGM_INVERT_STD2EE_M2_PORTABLE_HPP	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.hpp	2;"	d
_CGM_INVERT_TMCLOVDKERN_EOPREC_SQUARE_PORTABLE_HPP	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.hpp	2;"	d
_CGM_INVERT_TMCLOVQ2_BGQ_HPP	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.hpp	2;"	d
_CGM_INVERT_TMQ2_BGQ_HPP	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.hpp	2;"	d
_CGM_INVERT_TMQ2_HPP	src/inverters/twisted_mass/cgm_invert_tmQ2.hpp	2;"	d
_CGM_SINGLE_INVERT_STD2EE_M2_BGQ_HPP	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.hpp	2;"	d
_CGM_SINGLE_INVERT_STD2EE_M2_PORTABLE_HPP	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.hpp	2;"	d
_CG_128_INVERT_TMCLOVDKERN_EOPREC_SQUARE_EOS_HPP	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.hpp	2;"	d
_CG_128_INVERT_TMCLOVQ2_BGQ_HPP	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.hpp	2;"	d
_CG_128_INVERT_TMCLOVQ2_HPP	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.hpp	2;"	d
_CG_128_INVERT_TMDKERN_EOPREC_SQUARE_EOS_HPP	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.hpp	2;"	d
_CG_128_INVERT_TMQ2_BGQ_HPP	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.hpp	2;"	d
_CG_128_INVERT_TMQ2_HPP	src/inverters/twisted_mass/cg_128_invert_tmQ2.hpp	2;"	d
_CG_64_INVERT_TMCLOVD_EOPREC_HPP	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.hpp	2;"	d
_CG_64_INVERT_TMCLOV_DEOPREC_BGQ_HPP	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.hpp	2;"	d
_CG_64_INVERT_TMDEOIMPR_BGQ_HPP	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.hpp	2;"	d
_CG_64_INVERT_TMDEOIMPR_HPP	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.hpp	2;"	d
_CG_64_INVERT_TMQ2_HPP	src/inverters/twisted_mass/cg_64_invert_tmQ2.hpp	2;"	d
_CG_EOPREC_TWISTED_MASS_FREE_OPERATOR_HPP	src/free_theory/cg_eoprec_twisted_free_operator.hpp	2;"	d
_CG_INVERT_EVN_STD_HPP	src/inverters/staggered/cg_invert_evn_stD.hpp	2;"	d
_CG_INVERT_MFACC_HPP	src/inverters/momenta/cg_invert_MFACC.hpp	2;"	d
_CG_INVERT_STD2EE_M2_BGQ_HPP	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.hpp	2;"	d
_CG_INVERT_STD2EE_M2_HPP	src/inverters/staggered/cg_invert_stD2ee_m2.hpp	2;"	d
_CG_INVERT_STD2EE_M2_PORTABLE_HPP	src/inverters/staggered/cg_invert_stD2ee_m2_portable.hpp	2;"	d
_CG_INVERT_STD2LEB_EE_M2_PORTABLE_HPP	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.hpp	2;"	d
_CG_INVERT_STD2_M2_H	src/inverters/staggered/cg_invert_stD.hpp	2;"	d
_CG_INVERT_TMCLOVD_EOPREC_HPP	src/inverters/twisted_clover/cg_invert_tmclovD_eoprec.hpp	2;"	d
_CG_INVERT_TMCLOVQ2_64_BGQ_HPP	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.hpp	2;"	d
_CG_INVERT_TMCLOVQ2_64_HPP	src/inverters/twisted_clover/cg_64_invert_tmclovQ2.hpp	2;"	d
_CG_INVERT_TMCLOVQ2_64_PORTABLE_HPP	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.hpp	2;"	d
_CG_INVERT_TMCLOVQ2_HPP	src/inverters/twisted_clover/cg_invert_tmclovQ2.hpp	2;"	d
_CG_INVERT_TMCLOVQ_HPP	src/inverters/twisted_clover/cg_invert_tmclovQ.hpp	2;"	d
_CG_INVERT_TMD_EOPREC_HPP	src/inverters/twisted_mass/cg_invert_tmD_eoprec.hpp	2;"	d
_CG_INVERT_TMQ2_BGQ_HPP	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.hpp	2;"	d
_CG_INVERT_TMQ2_BGQ_HPP	src/inverters/twisted_mass/cg_invert_tmQ2_bgq.hpp	2;"	d
_CG_INVERT_TMQ2_HPP	src/inverters/twisted_mass/cg_invert_tmQ2.hpp	2;"	d
_CG_INVERT_WCLOVQ2_HPP	src/inverters/Wclov/cg_invert_WclovQ2.hpp	2;"	d
_CG_INVERT_WCLOVQ_HPP	src/inverters/Wclov/cg_invert_WclovQ.hpp	2;"	d
_CG_WILSON_GLUON_OPERATOR_H	projects/x/src/inverters/cg_Wilson_gluon_operator.hpp	2;"	d
_CHECKSUM_HPP	src/io/checksum.hpp	2;"	d
_CLOSE_HPP	src/base/close.hpp	2;"	d
_CLOVER_TERM_BGQ_HPP	src/bgq/clover_term_bgq.hpp	2;"	d
_CLOVER_TERM_HPP	src/operations/su3_paths/clover_term.hpp	2;"	d
_COMPLEX_HPP	src/new_types/complex.hpp	2;"	d
_CONCAT	build/src/config.hpp	187;"	d
_CONF_HPP	projects/ib/conf.hpp	2;"	d
_CONTR_HPP	projects/ib/contr.hpp	2;"	d
_COOLING_HPP	src/operations/smearing/cooling.hpp	2;"	d
_CORRELATIONS_H	projects/x/src/routines/correlations.hpp	2;"	d
_COVARIANT_DERIVATIVE_HPP	src/operations/covariant_derivative.hpp	2;"	d
_DDALPHAAMG_HPP	src/base/DDalphaAMG_bridge.hpp	2;"	d
_DEBUG_HPP	src/base/debug.hpp	2;"	d
_DERIVATIVES_H	projects/x/src/routines/derivatives.hpp	2;"	d
_DIRAC_HPP	src/new_types/dirac.hpp	2;"	d
_DIRAC_OPERATOR_STD_HPP	src/dirac_operators/stD/dirac_operator_stD.hpp	2;"	d
_DIRAC_OPERATOR_TMCLOVD_EOPREC_128_HPP	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_128.hpp	2;"	d
_DIRAC_OPERATOR_TMCLOVD_EOPREC_HPP	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec.hpp	2;"	d
_DIRAC_OPERATOR_TMCLOVQ2_128_BGQ_HPP	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2_128_bgq.hpp	2;"	d
_DIRAC_OPERATOR_TMCLOVQ2_128_HPP	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2_128.hpp	2;"	d
_DIRAC_OPERATOR_TMCLOVQ2_BGQ_HPP	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2_bgq.hpp	2;"	d
_DIRAC_OPERATOR_TMCLOVQ2_HPP	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2.hpp	2;"	d
_DIRAC_OPERATOR_TMCLOVQ_128_HPP	src/dirac_operators/tmclovQ/dirac_operator_tmclovQ_128.hpp	2;"	d
_DIRAC_OPERATOR_TMCLOVQ_BGQ_HPP	src/dirac_operators/tmclovQ/dirac_operator_tmclovQ_bgq.hpp	2;"	d
_DIRAC_OPERATOR_TMCLOVQ_HPP	src/dirac_operators/tmclovQ/dirac_operator_tmclovQ.hpp	2;"	d
_DIRAC_OPERATOR_TMCLOV_DEOPREC_BGQ_HPP	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_bgq.hpp	2;"	d
_DIRAC_OPERATOR_TMDEOIMPR_128_HPP	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_128.hpp	2;"	d
_DIRAC_OPERATOR_TMDEOIMPR_BGQ_HPP	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.hpp	2;"	d
_DIRAC_OPERATOR_TMD_EOIMPR_HPP	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec.hpp	2;"	d
_DIRAC_OPERATOR_TMQ2_128_BGQ_HPP	src/dirac_operators/tmQ2/dirac_operator_tmQ2_128_bgq.hpp	2;"	d
_DIRAC_OPERATOR_TMQ2_128_HPP	src/dirac_operators/tmQ2/dirac_operator_tmQ2_128.hpp	2;"	d
_DIRAC_OPERATOR_TMQ2_BGQ_H	work_in_prog/bgq/src/dirac_operator_tmQ2_bgq.hpp	2;"	d
_DIRAC_OPERATOR_TMQ2_BGQ_HPP	src/dirac_operators/tmQ2/dirac_operator_tmQ2_bgq.hpp	2;"	d
_DIRAC_OPERATOR_TMQ2_HPP	src/dirac_operators/tmQ2/dirac_operator_tmQ2.hpp	2;"	d
_DIRAC_OPERATOR_TMQ_128_H	src/dirac_operators/tmQ/dirac_operator_tmQ_128.hpp	2;"	d
_DIRAC_OPERATOR_TMQ_BGQ_HPP	src/dirac_operators/tmQ/dirac_operator_tmQ_bgq.hpp	2;"	d
_DIRAC_OPERATOR_TMQ_HPP	src/dirac_operators/tmQ/dirac_operator_tmQ.hpp	2;"	d
_DIRAC_OPERATOR_TMQ_LEFT_H	src/dirac_operators/tmQ_left/dirac_operator_tmQ_left.hpp	2;"	d
_DIRAC_OPERATOR_WCLOVQ2_HPP	src/dirac_operators/WclovQ2/dirac_operator_WclovQ2.hpp	2;"	d
_DIRAC_OPERATOR_WCLOVQ_HPP	src/dirac_operators/WclovQ/dirac_operator_WclovQ.hpp	2;"	d
_DIRAC_OPERATOR_WSTAT_H	src/dirac_operators/Wstat/dirac_operator_Wstat.hpp	2;"	d
_DRIVER_HPP	projects/generate_confs/driver.hpp	2;"	d
_DRIVER_TWO_PTS_PARSER_H	projects/semileptonic/driver_corr.hpp	2;"	d
_DSFMT_HPP	src/new_types/dsfmt.hpp	2;"	d
_EDGES_HPP	src/communicate/edges.hpp	2;"	d
_EIGENVALUES_ALL_HPP	src/eigenvalues/eigenvalues_all.hpp	2;"	d
_EIGENVALUES_ARPACK_HPP	src/eigenvalues/eigenvalues_arpack.hpp	2;"	d
_EIGENVALUES_AUTARCHIC_HPP	src/eigenvalues/eigenvalues_autarchic.hpp	2;"	d
_EIGENVALUES_HPP	src/eigenvalues/eigenvalues.hpp	2;"	d
_ENDIANNESS_HPP	src/io/endianness.hpp	2;"	d
_EU1	projects/ib/disco.cpp	/^  enum{_EU1,_EU2,_EU4,_EU6alt};$/;"	e	enum:EU1_EU2_EU4_EU6alt::__anon1	file:
_EU2	projects/ib/disco.cpp	/^  enum{_EU1,_EU2,_EU4,_EU6alt};$/;"	e	enum:EU1_EU2_EU4_EU6alt::__anon1	file:
_EU4	projects/ib/disco.cpp	/^  enum{_EU1,_EU2,_EU4,_EU6alt};$/;"	e	enum:EU1_EU2_EU4_EU6alt::__anon1	file:
_EU6alt	projects/ib/disco.cpp	/^  enum{_EU1,_EU2,_EU4,_EU6alt};$/;"	e	enum:EU1_EU2_EU4_EU6alt::__anon1	file:
_FFT_HPP	src/operations/fft.hpp	2;"	d
_FLOAT256_HPP	src/new_types/float_256.hpp	2;"	d
_FLOAT_128_HPP	src/new_types/float_128.hpp	2;"	d
_FOURIER_TRANSFORM_HPP	src/operations/fourier_transform.hpp	2;"	d
_FREE_THEORY_TYPES_HPP	src/free_theory/free_theory_types.hpp	2;"	d
_FREE_THEORY_TYPES_ROUTINES_HPP	src/free_theory/free_theory_types_routines.hpp	2;"	d
_GAUGECONF_HPP	src/operations/gaugeconf.hpp	2;"	d
_GAUGE_FIXING_HPP	src/operations/gauge_fixing.hpp	2;"	d
_GAUGE_SWEEPER_HPP	src/operations/su3_paths/gauge_sweeper.hpp	2;"	d
_GAUSSIAN_HPP	src/operations/smearing/gaussian.hpp	2;"	d
_GEOMETRY_EO_HPP	src/geometry/geometry_eo.hpp	2;"	d
_GEOMETRY_LEB_HPP	src/geometry/geometry_Leb.hpp	2;"	d
_GEOMETRY_LX_HPP	src/geometry/geometry_lx.hpp	2;"	d
_GEOMETRY_MIX_HPP	src/geometry/geometry_mix.hpp	2;"	d
_GEOMETRY_VIR_HPP	src/geometry/geometry_vir.hpp	2;"	d
_GIT_INFO	build/src/base/git_info.hpp	2;"	d
_GLUONIC_ACTION_HPP	src/hmc/gauge/gluonic_action.hpp	2;"	d
_GLUONIC_FORCE_HPP	src/hmc/gauge/gluonic_force.hpp	2;"	d
_GPU_STAGPHASE_HPP	tools/conf_transform/convert/gpu_stagphase.hpp	2;"	d
_HIGH_PREC_HPP	src/new_types/high_prec.hpp	2;"	d
_HMC_HPP	src/hmc/hmc.hpp	2;"	d
_HOPPING_MATRIX_BGQ_H	work_in_prog/bgq/src/hopping_matrix_bgq.hpp	2;"	d
_HOPPING_MATRIX_BGQ_LX_HPP	src/bgq/Wilson_hopping_matrix_lx_bgq.hpp	2;"	d
_HYP_HPP	src/operations/smearing/HYP.hpp	2;"	d
_ID	projects/ib/disco.cpp	/^enum{_SUFF,_WRE,_WIM,_ID};$/;"	e	enum:__anon4	file:
_ILDG_FILE_HPP	src/io/ILDG_File.hpp	2;"	d
_INCLUDE_REMEZ_ALGORITIHM_HPP	src/operations/remez/remez_algorithm.hpp	2;"	d
_INIT_HPP	src/base/init.hpp	2;"	d
_INPUT_HPP	src/io/input.hpp	2;"	d
_IOS_HPP	src/routines/ios.hpp	2;"	d
_LAPLACE_OP_2LINKS_HPP	src/operations/stag/Laplace_op_2links.hpp	2;"	d
_LINALGS_HPP	src/linalgs/linalgs.hpp	2;"	d
_MAGNETIZATION_HPP	src/operations/stag/magnetization.hpp	2;"	d
_MATH_ROUTINES_HPP	src/routines/math_routines.hpp	2;"	d
_MESLEP_HPP	projects/ib/meslep.hpp	2;"	d
_MESONS_HPP	src/operations/stag/mesons.hpp	2;"	d
_MESON_2PTS_HPP	src/operations/contract/mesons_2pts.hpp	2;"	d
_MESON_EIGHT_H	src/operations/contract/mesons_eight.hpp	2;"	d
_MESON_EXCHANGE_H	projects/x/src/diagrams/meson_exchange.hpp	2;"	d
_METADYNAMICS_HPP	src/new_types/metadynamics.hpp	2;"	d
_MFACC_FIELDS_HPP	src/hmc/gauge/MFACC_fields.hpp	2;"	d
_MFACC_HPP	src/dirac_operators/momenta/MFACC.hpp	2;"	d
_MODERN_CG_HPP	src/inverters/templates/modern_cg.hpp	2;"	d
_MOMENTA_ACTION_HPP	src/hmc/momenta/momenta_action.hpp	2;"	d
_MOMENTA_EVOLVE_HPP	src/hmc/momenta/momenta_evolve.hpp	2;"	d
_MOMENTA_GENERATION_HPP	src/hmc/momenta/momenta_generation.hpp	2;"	d
_MPI_ROUTINES_HPP	src/routines/mpi_routines.hpp	2;"	d
_MULTIPSEUDO_RHMC_STEP_HPP	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	2;"	d
_NEW_VARS_AND_TYPE_H	work_in_prog/bgq/src/new_vars_and_types.hpp	2;"	d
_NISSA_HPP	src/nissa.hpp	2;"	d
_NUCLEON_HPP	src/operations/stag/nucleon.hpp	2;"	d
_Noreturn	build/projects/generate_confs/parser.cpp	557;"	d	file:
_Noreturn	build/projects/generate_confs/parser.cpp	559;"	d	file:
_Noreturn	build/projects/semileptonic/parse_corr.cpp	264;"	d	file:
_Noreturn	build/projects/semileptonic/parse_corr.cpp	266;"	d	file:
_OMELYAN_INTEGRATOR_HPP	src/hmc/multipseudo/Omelyan_integrator.hpp	2;"	d
_OPTIMIZED_MESONS_2PTS_HPP	src/operations/contract/optimized_mesons_2pts.hpp	2;"	d
_PARS_HPP	projects/ib/pars.hpp	2;"	d
_PLAQUETTE_HPP	src/operations/su3_paths/plaquette.hpp	2;"	d
_PLINE_HPP	src/operations/su3_paths/pline.hpp	2;"	d
_PROPAGATOR_SELF_ENERGY_HPP	projects/x/src/diagrams/propagator_self_energy.hpp	2;"	d
_PROP_HPP	projects/ib/prop.hpp	2;"	d
_PSEUDOFERMIONS_GENERATION_HPP	src/hmc/fermions/pseudofermions_generation.hpp	2;"	d
_PURE_GAUGE_HMC_STEP_HPP	src/hmc/gauge/pure_gauge_hmc_step.hpp	2;"	d
_PURE_GAUGE_IMPLICIT_INTEGRATOR_HPP	src/hmc/gauge/pure_gauge_implicit_integrator.hpp	2;"	d
_PURE_GAUGE_OMELYAN_INTEGRATOR_HPP	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	2;"	d
_PUTPOURRI_HPP	src/operations/stag/putpourri.hpp	2;"	d
_QED_CORR_HPP	src/operations/stag/qed_corr.hpp	2;"	d
_QUARK_FORCE_HPP	src/hmc/multipseudo/quark_force.hpp	2;"	d
_QUARK_PARS_HPP	src/hmc/quark_pars.hpp	2;"	d
_RANDOM_HPP	src/base/random.hpp	2;"	d
_RAT_APPROX_HPP	src/new_types/rat_approx.hpp	2;"	d
_READER_HPP	src/io/reader.hpp	2;"	d
_READ_AND_WRITE_H	projects/x/src/routines/read_and_write.hpp	2;"	d
_READ_NEW_TYPES_HPP	src/new_types/read_new_types.hpp	2;"	d
_RECONSTRUCT_TMCLOV_DOUBLET_HPP	src/dirac_operators/tmclovQ/reconstruct_tmclov_doublet.hpp	2;"	d
_RECONSTRUCT_TM_DOUBLET_H	src/dirac_operators/Wstat/reconstruct_tm_doublet.hpp	2;"	d
_RECONSTRUCT_TM_DOUBLET_HPP	src/dirac_operators/tmQ/reconstruct_tm_doublet.hpp	2;"	d
_RECTANGLES_HPP	src/operations/su3_paths/rectangles.hpp	2;"	d
_RECTANGLE_STAPLE_HPP	src/operations/su3_paths/rectangular_staples.hpp	2;"	d
_RECURSIVE_SMOOTHER_HPP	src/operations/smearing/recursive_Wflower.hpp	2;"	d
_REMAP_VECTOR_HPP	src/operations/remap_vector.hpp	2;"	d
_RENDENS_HPP	src/operations/stag/rendens.hpp	2;"	d
_ROOTST_EOIMPR_QUARK_FORCE_HPP	src/hmc/fermions/rootst_eoimpr_quark_force.hpp	2;"	d
_SET_EXPANSIONS_HPP	src/hmc/multipseudo/set_expansions.hpp	2;"	d
_SHIFT_HPP	projects/x/src/routines/shift.hpp	2;"	d
_SHIFT_HPP	src/operations/shift.hpp	2;"	d
_SITE_CONTRACT_H	src/operations/contract/site_contract.hpp	2;"	d
_SMOOTH_HPP	src/operations/smearing/smooth.hpp	2;"	d
_SOURCE_HPP	src/operations/source.hpp	2;"	d
_SPINPOL_HPP	src/operations/stag/spinpol.hpp	2;"	d
_SPIN_HPP	src/new_types/spin.hpp	2;"	d
_SPI_HPP	src/bgq/spi.hpp	2;"	d
_SQUARED_STAPLE_HPP	src/operations/su3_paths/squared_staples.hpp	2;"	d
_STAGGERED_HOPPING_MATRIX_BGQ_EO_OR_OE_HPP	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq.hpp	2;"	d
_STAG_HPP	src/operations/stag/stag.hpp	2;"	d
_STOCHASTIC_QQG_VERTEX_H	projects/x/src/vertex/x_space_stochastic_qqg_vertex.hpp	2;"	d
_STOCHASTIC_SOURCE_H	projects/x/src/stochastic/stochastic_source.hpp	2;"	d
_STOCHASTIC_TLSYM_GLUON_PROPAGATOR_H	projects/x/src/stochastic/stochastic_tlSym_gluon_propagator.hpp	2;"	d
_STOCHASTIC_TWISTED_PROPAGATOR_HPP	projects/x/src/stochastic/stochastic_twisted_propagator.hpp	2;"	d
_STOUT_HPP	src/operations/smearing/stout.hpp	2;"	d
_SU3_HPP	src/new_types/su3.hpp	2;"	d
_SU3_OP_HPP	src/new_types/su3_op.hpp	2;"	d
_SUFF	projects/ib/disco.cpp	/^enum{_SUFF,_WRE,_WIM,_ID};$/;"	e	enum:__anon4	file:
_SYMANZIK_ACTION_HPP	src/hmc/gauge/Symanzik_action.hpp	2;"	d
_SYMANZIK_FORCE_HPP	src/hmc/gauge/Symanzik_force.hpp	2;"	d
_TADPOLE_H	projects/x/src/diagrams/tadpole.hpp	2;"	d
_THEORY_ACTION_HPP	src/hmc/multipseudo/theory_action.hpp	2;"	d
_THEORY_PARS_HPP	src/hmc/theory_pars.hpp	2;"	d
_THREAD_HPP	src/routines/thread.hpp	2;"	d
_THREAD_MACROS_HPP	src/base/thread_macros.hpp	2;"	d
_TLSYM_GAUGE_PROPAGATOR_HPP	src/free_theory/tlSym_gauge_propagator.hpp	2;"	d
_TMCLOV_FRONTENDS_HPP	src/inverters/twisted_clover/tmclov_frontends.hpp	2;"	d
_TMLQCD_BRIDGE_HPP	src/base/tmLQCD_bridge.hpp	2;"	d
_TM_FRONTENDS_H	src/inverters/twisted_mass/tm_frontends.hpp	2;"	d
_TOPOLOGICAL_ACTION_HPP	src/hmc/gauge/topological_action.hpp	2;"	d
_TOPOLOGICAL_CHARGE_HPP	src/operations/su3_paths/topological_charge.hpp	2;"	d
_TOPOLOGICAL_FORCE_HPP	src/hmc/gauge/topological_force.hpp	2;"	d
_TWISTED_DIRAC_EOPREC_OPERATOR_HPP	src/free_theory/twisted_free_Dirac_eoprec_operator.hpp	2;"	d
_TWISTED_PROPAGATOR_G2_CORR_H	projects/x/src/propagators/twisted_propagator_g2_corr.hpp	2;"	d
_TWISTED_PROPAGATOR_HPP	src/free_theory/twisted_propagator.hpp	2;"	d
_TWO_STAGE_COMPUTATION_HPP	src/new_types/two_stage_computation.hpp	2;"	d
_VECTORS_HPP	src/base/vectors.hpp	2;"	d
_VECTOR_GATHER_HPP	src/operations/vector_gather.hpp	2;"	d
_VERTEX_H	projects/x/src/vertex/vertex.hpp	2;"	d
_WATUSSO_HPP	src/operations/su3_paths/watusso.hpp	2;"	d
_WFLOW_HPP	src/operations/smearing/Wflow.hpp	2;"	d
_WILSON_ACTION_HPP	src/hmc/gauge/Wilson_action.hpp	2;"	d
_WILSON_FORCE_HPP	src/hmc/gauge/Wilson_force.hpp	2;"	d
_WILSON_GLUON_KLEIN_GORDON_OPERATOR_H	projects/x/src/operators/Wilson_gluon_Klein_Gordon_operator.hpp	2;"	d
_WILSON_GLUON_PROPAGATOR_H	projects/x/src/propagators/Wilson_gluon_propagator.hpp	2;"	d
_WILSON_HOPPING_MATRIX_BGQ_EO_OR_OE_HPP	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq.hpp	2;"	d
_WIM	projects/ib/disco.cpp	/^enum{_SUFF,_WRE,_WIM,_ID};$/;"	e	enum:__anon4	file:
_WRE	projects/ib/disco.cpp	/^enum{_SUFF,_WRE,_WIM,_ID};$/;"	e	enum:__anon4	file:
_WRITER_HPP	src/io/writer.hpp	2;"	d
_ZUMBA_HPP	src/operations/stag/zumba.hpp	2;"	d
__STDC_LIMIT_MACROS	build/projects/generate_confs/tokenizer.cpp	40;"	d	file:
__STDC_LIMIT_MACROS	build/projects/semileptonic/tokenize_corr.cpp	40;"	d	file:
__float128_sqrt	work_in_prog/quad/tests.cpp	/^__float128 __float128_sqrt(__float128 in)$/;"	f
__float128_sqrt_with_guess	work_in_prog/quad/tests.cpp	/^__float128 __float128_sqrt_with_guess(__float128 in,__float128 guess)$/;"	f
__top_builddir__bin_RIMOM_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_RIMOM_DEPENDENCIES = $(LDADD)$/;"	m
__top_builddir__bin_RIMOM_LDADD	build/projects/Makefile	/^__top_builddir__bin_RIMOM_LDADD = $(LDADD)$/;"	m
__top_builddir__bin_RIMOM_LDFLAGS	build/projects/Makefile	/^__top_builddir__bin_RIMOM_LDFLAGS = $(LDFLAGS)$/;"	m
__top_builddir__bin_RIMOM_LINK	build/projects/Makefile	/^__top_builddir__bin_RIMOM_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \\$/;"	m
__top_builddir__bin_RIMOM_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_RIMOM_OBJECTS =  \\$/;"	m
__top_builddir__bin_RIMOM_SOURCES	build/projects/Makefile	/^__top_builddir__bin_RIMOM_SOURCES = reno_const\/RIMOM.cpp$/;"	m
__top_builddir__bin_checks_ib_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_checks_ib_DEPENDENCIES = $(LDADD)$/;"	m
__top_builddir__bin_checks_ib_LDADD	build/projects/Makefile	/^__top_builddir__bin_checks_ib_LDADD = $(LDADD)$/;"	m
__top_builddir__bin_checks_ib_LDFLAGS	build/projects/Makefile	/^__top_builddir__bin_checks_ib_LDFLAGS = $(LDFLAGS)$/;"	m
__top_builddir__bin_checks_ib_LINK	build/projects/Makefile	/^__top_builddir__bin_checks_ib_LINK = $(CXXLD) $(AM_CXXFLAGS) \\$/;"	m
__top_builddir__bin_checks_ib_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_checks_ib_OBJECTS =  \\$/;"	m
__top_builddir__bin_checks_ib_SOURCES	build/projects/Makefile	/^__top_builddir__bin_checks_ib_SOURCES = ib\/checks.cpp$/;"	m
__top_builddir__bin_convert_input_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_convert_input_DEPENDENCIES = $(LDADD)$/;"	m
__top_builddir__bin_convert_input_LDADD	build/projects/Makefile	/^__top_builddir__bin_convert_input_LDADD = $(LDADD)$/;"	m
__top_builddir__bin_convert_input_LDFLAGS	build/projects/Makefile	/^__top_builddir__bin_convert_input_LDFLAGS = $(LDFLAGS)$/;"	m
__top_builddir__bin_convert_input_LINK	build/projects/Makefile	/^__top_builddir__bin_convert_input_LINK = $(CXXLD) $(AM_CXXFLAGS) \\$/;"	m
__top_builddir__bin_convert_input_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_convert_input_OBJECTS =  \\$/;"	m
__top_builddir__bin_convert_input_SOURCES	build/projects/Makefile	/^__top_builddir__bin_convert_input_SOURCES = generate_confs\/convert_input.cpp $(generate_parser_sources)$/;"	m
__top_builddir__bin_cpn_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_cpn_DEPENDENCIES = $(top_builddir)\/lib\/libnissa.a$/;"	m
__top_builddir__bin_cpn_LDADD	build/projects/Makefile	/^__top_builddir__bin_cpn_LDADD = $(LDADD)$/;"	m
__top_builddir__bin_cpn_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_cpn_OBJECTS =  \\$/;"	m
__top_builddir__bin_disco2_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_disco2_DEPENDENCIES = $(LDADD)$/;"	m
__top_builddir__bin_disco2_LDADD	build/projects/Makefile	/^__top_builddir__bin_disco2_LDADD = $(LDADD)$/;"	m
__top_builddir__bin_disco2_LDFLAGS	build/projects/Makefile	/^__top_builddir__bin_disco2_LDFLAGS = $(LDFLAGS)$/;"	m
__top_builddir__bin_disco2_LINK	build/projects/Makefile	/^__top_builddir__bin_disco2_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \\$/;"	m
__top_builddir__bin_disco2_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_disco2_OBJECTS =  \\$/;"	m
__top_builddir__bin_disco2_SOURCES	build/projects/Makefile	/^__top_builddir__bin_disco2_SOURCES = ib\/disco2.cpp$/;"	m
__top_builddir__bin_disco_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_disco_DEPENDENCIES = $(LDADD)$/;"	m
__top_builddir__bin_disco_LDADD	build/projects/Makefile	/^__top_builddir__bin_disco_LDADD = $(LDADD)$/;"	m
__top_builddir__bin_disco_LDFLAGS	build/projects/Makefile	/^__top_builddir__bin_disco_LDFLAGS = $(LDFLAGS)$/;"	m
__top_builddir__bin_disco_LINK	build/projects/Makefile	/^__top_builddir__bin_disco_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \\$/;"	m
__top_builddir__bin_disco_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_disco_OBJECTS =  \\$/;"	m
__top_builddir__bin_disco_SOURCES	build/projects/Makefile	/^__top_builddir__bin_disco_SOURCES = ib\/disco.cpp $(common_sources)$/;"	m
__top_builddir__bin_generate_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_generate_DEPENDENCIES = $(LDADD)$/;"	m
__top_builddir__bin_generate_LDADD	build/projects/Makefile	/^__top_builddir__bin_generate_LDADD = $(LDADD)$/;"	m
__top_builddir__bin_generate_LDFLAGS	build/projects/Makefile	/^__top_builddir__bin_generate_LDFLAGS = $(LDFLAGS)$/;"	m
__top_builddir__bin_generate_LINK	build/projects/Makefile	/^__top_builddir__bin_generate_LINK = $(CXXLD) $(AM_CXXFLAGS) \\$/;"	m
__top_builddir__bin_generate_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_generate_OBJECTS =  \\$/;"	m
__top_builddir__bin_generate_SOURCES	build/projects/Makefile	/^__top_builddir__bin_generate_SOURCES = generate_confs\/generate.cpp $(generate_parser_sources)$/;"	m
__top_builddir__bin_generate_quenched_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_generate_quenched_DEPENDENCIES = $(LDADD)$/;"	m
__top_builddir__bin_generate_quenched_LDADD	build/projects/Makefile	/^__top_builddir__bin_generate_quenched_LDADD = $(LDADD)$/;"	m
__top_builddir__bin_generate_quenched_LDFLAGS	build/projects/Makefile	/^__top_builddir__bin_generate_quenched_LDFLAGS = $(LDFLAGS)$/;"	m
__top_builddir__bin_generate_quenched_LINK	build/projects/Makefile	/^__top_builddir__bin_generate_quenched_LINK = $(CXXLD) $(AM_CXXFLAGS) \\$/;"	m
__top_builddir__bin_generate_quenched_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_generate_quenched_OBJECTS =  \\$/;"	m
__top_builddir__bin_generate_quenched_SOURCES	build/projects/Makefile	/^__top_builddir__bin_generate_quenched_SOURCES = generate_confs\/generate_quenched.cpp$/;"	m
__top_builddir__bin_ib_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_ib_DEPENDENCIES = $(LDADD)$/;"	m
__top_builddir__bin_ib_LDADD	build/projects/Makefile	/^__top_builddir__bin_ib_LDADD = $(LDADD)$/;"	m
__top_builddir__bin_ib_LDFLAGS	build/projects/Makefile	/^__top_builddir__bin_ib_LDFLAGS = $(LDFLAGS)$/;"	m
__top_builddir__bin_ib_LINK	build/projects/Makefile	/^__top_builddir__bin_ib_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \\$/;"	m
__top_builddir__bin_ib_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_ib_OBJECTS = $(am___top_builddir__bin_ib_OBJECTS)$/;"	m
__top_builddir__bin_ib_SOURCES	build/projects/Makefile	/^__top_builddir__bin_ib_SOURCES = ib\/ib.cpp $(common_sources)$/;"	m
__top_builddir__bin_mel_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_mel_DEPENDENCIES = $(LDADD)$/;"	m
__top_builddir__bin_mel_LDADD	build/projects/Makefile	/^__top_builddir__bin_mel_LDADD = $(LDADD)$/;"	m
__top_builddir__bin_mel_LDFLAGS	build/projects/Makefile	/^__top_builddir__bin_mel_LDFLAGS = $(LDFLAGS)$/;"	m
__top_builddir__bin_mel_LINK	build/projects/Makefile	/^__top_builddir__bin_mel_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \\$/;"	m
__top_builddir__bin_mel_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_mel_OBJECTS =  \\$/;"	m
__top_builddir__bin_mel_SOURCES	build/projects/Makefile	/^__top_builddir__bin_mel_SOURCES = ib\/mel.cpp$/;"	m
__top_builddir__bin_mel_point_source_CXXFLAGS	build/projects/Makefile	/^__top_builddir__bin_mel_point_source_CXXFLAGS = "-DPOINT_SOURCE_VERSION"$/;"	m
__top_builddir__bin_mel_point_source_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_mel_point_source_DEPENDENCIES = $(LDADD)$/;"	m
__top_builddir__bin_mel_point_source_LDADD	build/projects/Makefile	/^__top_builddir__bin_mel_point_source_LDADD = $(LDADD)$/;"	m
__top_builddir__bin_mel_point_source_LDFLAGS	build/projects/Makefile	/^__top_builddir__bin_mel_point_source_LDFLAGS = $(LDFLAGS)$/;"	m
__top_builddir__bin_mel_point_source_LINK	build/projects/Makefile	/^__top_builddir__bin_mel_point_source_LINK = $(CXXLD) \\$/;"	m
__top_builddir__bin_mel_point_source_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_mel_point_source_OBJECTS =  \\$/;"	m
__top_builddir__bin_mel_point_source_SOURCES	build/projects/Makefile	/^__top_builddir__bin_mel_point_source_SOURCES = ib\/mel.cpp$/;"	m
__top_builddir__bin_nucleons_smeared_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_nucleons_smeared_DEPENDENCIES = $(LDADD)$/;"	m
__top_builddir__bin_nucleons_smeared_LDADD	build/projects/Makefile	/^__top_builddir__bin_nucleons_smeared_LDADD = $(LDADD)$/;"	m
__top_builddir__bin_nucleons_smeared_LDFLAGS	build/projects/Makefile	/^__top_builddir__bin_nucleons_smeared_LDFLAGS = $(LDFLAGS)$/;"	m
__top_builddir__bin_nucleons_smeared_LINK	build/projects/Makefile	/^__top_builddir__bin_nucleons_smeared_LINK = $(CXXLD) $(AM_CXXFLAGS) \\$/;"	m
__top_builddir__bin_nucleons_smeared_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_nucleons_smeared_OBJECTS =  \\$/;"	m
__top_builddir__bin_nucleons_smeared_SOURCES	build/projects/Makefile	/^__top_builddir__bin_nucleons_smeared_SOURCES = nucleons\/nucleons_smeared.cpp$/;"	m
__top_builddir__bin_semileptonic_smeared_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_semileptonic_smeared_DEPENDENCIES =  \\$/;"	m
__top_builddir__bin_semileptonic_smeared_LDADD	build/projects/Makefile	/^__top_builddir__bin_semileptonic_smeared_LDADD = $(LDADD)$/;"	m
__top_builddir__bin_semileptonic_smeared_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_semileptonic_smeared_OBJECTS =  \\$/;"	m
__top_builddir__bin_semileptonic_smeared_SOURCES	build/projects/Makefile	/^__top_builddir__bin_semileptonic_smeared_SOURCES = semileptonic\/semileptonic_smeared.cpp $(semileptonic_smeared_parser_sources)$/;"	m
__top_builddir__bin_semileptonic_smeared_point_source_CXXFLAGS	build/projects/Makefile	/^__top_builddir__bin_semileptonic_smeared_point_source_CXXFLAGS = -DPOINT_SOURCE_VERSION$/;"	m
__top_builddir__bin_semileptonic_smeared_point_source_DEPENDENCIES	build/projects/Makefile	/^__top_builddir__bin_semileptonic_smeared_point_source_DEPENDENCIES =  \\$/;"	m
__top_builddir__bin_semileptonic_smeared_point_source_LDADD	build/projects/Makefile	/^__top_builddir__bin_semileptonic_smeared_point_source_LDADD =  \\$/;"	m
__top_builddir__bin_semileptonic_smeared_point_source_LINK	build/projects/Makefile	/^__top_builddir__bin_semileptonic_smeared_point_source_LINK = $(CXXLD) \\$/;"	m
__top_builddir__bin_semileptonic_smeared_point_source_OBJECTS	build/projects/Makefile	/^__top_builddir__bin_semileptonic_smeared_point_source_OBJECTS = $(am___top_builddir__bin_semileptonic_smeared_point_source_OBJECTS)$/;"	m
__top_builddir__bin_semileptonic_smeared_point_source_SOURCES	build/projects/Makefile	/^__top_builddir__bin_semileptonic_smeared_point_source_SOURCES = semileptonic\/semileptonic_smeared.cpp $(semileptonic_smeared_parser_sources)$/;"	m
__top_builddir__lib_libnissa_a_AR	build/src/Makefile	/^__top_builddir__lib_libnissa_a_AR = $(AR) $(ARFLAGS)$/;"	m
__top_builddir__lib_libnissa_a_LIBADD	build/src/Makefile	/^__top_builddir__lib_libnissa_a_LIBADD =$/;"	m
__top_builddir__lib_libnissa_a_OBJECTS	build/src/Makefile	/^__top_builddir__lib_libnissa_a_OBJECTS =  \\$/;"	m
__top_builddir__lib_libnissa_a_SOURCES	build/src/Makefile	/^__top_builddir__lib_libnissa_a_SOURCES = base\/bench.cpp base\/close.cpp \\$/;"	m
__top_builddir__tools_Gaussiansmear_test_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_Gaussiansmear_test_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_Gaussiansmear_test_LDADD	build/tools/Makefile	/^__top_builddir__tools_Gaussiansmear_test_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_Gaussiansmear_test_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_Gaussiansmear_test_OBJECTS =  \\$/;"	m
__top_builddir__tools_Gaussiansmear_test_SOURCES	build/tools/Makefile	/^__top_builddir__tools_Gaussiansmear_test_SOURCES = Gaussiansmear_test.cpp$/;"	m
__top_builddir__tools_benchmarks_stag_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_benchmarks_stag_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_benchmarks_stag_LDADD	build/tools/Makefile	/^__top_builddir__tools_benchmarks_stag_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_benchmarks_stag_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_benchmarks_stag_OBJECTS =  \\$/;"	m
__top_builddir__tools_benchmarks_stag_SOURCES	build/tools/Makefile	/^__top_builddir__tools_benchmarks_stag_SOURCES = benchmarks\/stag.cpp$/;"	m
__top_builddir__tools_conf_measure_topo_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_measure_topo_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_measure_topo_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_measure_topo_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_conf_measure_topo_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_measure_topo_OBJECTS =  \\$/;"	m
__top_builddir__tools_conf_measure_topo_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_measure_topo_SOURCES = conf_measure\/topo.cpp$/;"	m
__top_builddir__tools_conf_transform_convert_Claudio_to_ildg_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_Claudio_to_ildg_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_convert_Claudio_to_ildg_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_Claudio_to_ildg_LDADD =  \\$/;"	m
__top_builddir__tools_conf_transform_convert_Claudio_to_ildg_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_Claudio_to_ildg_OBJECTS = $(am___top_builddir__tools_conf_transform_convert_Claudio_to_ildg_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_convert_Claudio_to_ildg_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_Claudio_to_ildg_SOURCES = conf_transform\/convert\/Claudio_to_ildg.cpp$/;"	m
__top_builddir__tools_conf_transform_convert_eo_to_ildg_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_eo_to_ildg_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_convert_eo_to_ildg_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_eo_to_ildg_LDADD =  \\$/;"	m
__top_builddir__tools_conf_transform_convert_eo_to_ildg_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_eo_to_ildg_OBJECTS = $(am___top_builddir__tools_conf_transform_convert_eo_to_ildg_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_convert_eo_to_ildg_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_eo_to_ildg_SOURCES = conf_transform\/convert\/eo_to_ildg.cpp$/;"	m
__top_builddir__tools_conf_transform_convert_gpu_to_ildg_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_gpu_to_ildg_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_convert_gpu_to_ildg_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_gpu_to_ildg_LDADD =  \\$/;"	m
__top_builddir__tools_conf_transform_convert_gpu_to_ildg_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_gpu_to_ildg_OBJECTS = $(am___top_builddir__tools_conf_transform_convert_gpu_to_ildg_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_convert_gpu_to_ildg_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_gpu_to_ildg_SOURCES = conf_transform\/convert\/gpu_to_ildg.cpp conf_transform\/convert\/gpu_stagphase.cpp$/;"	m
__top_builddir__tools_conf_transform_convert_ildg_to_eo_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_ildg_to_eo_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_convert_ildg_to_eo_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_ildg_to_eo_LDADD =  \\$/;"	m
__top_builddir__tools_conf_transform_convert_ildg_to_eo_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_ildg_to_eo_OBJECTS = $(am___top_builddir__tools_conf_transform_convert_ildg_to_eo_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_convert_ildg_to_eo_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_ildg_to_eo_SOURCES = conf_transform\/convert\/ildg_to_eo.cpp$/;"	m
__top_builddir__tools_conf_transform_convert_ildg_to_gpu_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_ildg_to_gpu_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_convert_ildg_to_gpu_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_ildg_to_gpu_LDADD =  \\$/;"	m
__top_builddir__tools_conf_transform_convert_ildg_to_gpu_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_ildg_to_gpu_OBJECTS = $(am___top_builddir__tools_conf_transform_convert_ildg_to_gpu_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_convert_ildg_to_gpu_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_convert_ildg_to_gpu_SOURCES = conf_transform\/convert\/ildg_to_gpu.cpp conf_transform\/convert\/gpu_stagphase.cpp$/;"	m
__top_builddir__tools_conf_transform_create_create_cold_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_create_create_cold_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_create_create_cold_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_create_create_cold_LDADD =  \\$/;"	m
__top_builddir__tools_conf_transform_create_create_cold_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_create_create_cold_OBJECTS = $(am___top_builddir__tools_conf_transform_create_create_cold_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_create_create_cold_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_create_create_cold_SOURCES = conf_transform\/create\/create_cold.cpp$/;"	m
__top_builddir__tools_conf_transform_create_create_hot_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_create_create_hot_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_create_create_hot_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_create_create_hot_LDADD =  \\$/;"	m
__top_builddir__tools_conf_transform_create_create_hot_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_create_create_hot_OBJECTS = $(am___top_builddir__tools_conf_transform_create_create_hot_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_create_create_hot_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_create_create_hot_SOURCES = conf_transform\/create\/create_hot.cpp$/;"	m
__top_builddir__tools_conf_transform_edit_build_from_raw_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_build_from_raw_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_edit_build_from_raw_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_build_from_raw_LDADD =  \\$/;"	m
__top_builddir__tools_conf_transform_edit_build_from_raw_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_build_from_raw_OBJECTS = $(am___top_builddir__tools_conf_transform_edit_build_from_raw_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_edit_build_from_raw_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_build_from_raw_SOURCES = conf_transform\/edit\/build_from_raw.cpp$/;"	m
__top_builddir__tools_conf_transform_edit_grab_ildg_data_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_grab_ildg_data_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_edit_grab_ildg_data_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_grab_ildg_data_LDADD =  \\$/;"	m
__top_builddir__tools_conf_transform_edit_grab_ildg_data_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_grab_ildg_data_OBJECTS = $(am___top_builddir__tools_conf_transform_edit_grab_ildg_data_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_edit_grab_ildg_data_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_grab_ildg_data_SOURCES = conf_transform\/edit\/grab_ildg_data.cpp$/;"	m
__top_builddir__tools_conf_transform_edit_rewind_random_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_rewind_random_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_edit_rewind_random_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_rewind_random_LDADD =  \\$/;"	m
__top_builddir__tools_conf_transform_edit_rewind_random_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_rewind_random_OBJECTS = $(am___top_builddir__tools_conf_transform_edit_rewind_random_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_edit_rewind_random_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_rewind_random_SOURCES = conf_transform\/edit\/rewind_random.cpp$/;"	m
__top_builddir__tools_conf_transform_edit_skip_random_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_skip_random_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_edit_skip_random_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_skip_random_LDADD =  \\$/;"	m
__top_builddir__tools_conf_transform_edit_skip_random_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_skip_random_OBJECTS = $(am___top_builddir__tools_conf_transform_edit_skip_random_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_edit_skip_random_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_skip_random_SOURCES = conf_transform\/edit\/skip_random.cpp$/;"	m
__top_builddir__tools_conf_transform_edit_unitarize_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_unitarize_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_edit_unitarize_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_unitarize_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_conf_transform_edit_unitarize_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_unitarize_OBJECTS = $(am___top_builddir__tools_conf_transform_edit_unitarize_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_edit_unitarize_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_edit_unitarize_SOURCES = conf_transform\/edit\/unitarize.cpp$/;"	m
__top_builddir__tools_conf_transform_gaugefix_landau_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_gaugefix_landau_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_gaugefix_landau_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_gaugefix_landau_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_conf_transform_gaugefix_landau_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_gaugefix_landau_OBJECTS = $(am___top_builddir__tools_conf_transform_gaugefix_landau_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_gaugefix_landau_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_gaugefix_landau_SOURCES = conf_transform\/gaugefix\/landau.cpp$/;"	m
__top_builddir__tools_conf_transform_gaugefix_random_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_gaugefix_random_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_gaugefix_random_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_gaugefix_random_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_conf_transform_gaugefix_random_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_gaugefix_random_OBJECTS = $(am___top_builddir__tools_conf_transform_gaugefix_random_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_gaugefix_random_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_gaugefix_random_SOURCES = conf_transform\/gaugefix\/random.cpp$/;"	m
__top_builddir__tools_conf_transform_smear_stout_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_smear_stout_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_conf_transform_smear_stout_LDADD	build/tools/Makefile	/^__top_builddir__tools_conf_transform_smear_stout_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_conf_transform_smear_stout_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_conf_transform_smear_stout_OBJECTS = $(am___top_builddir__tools_conf_transform_smear_stout_OBJECTS)$/;"	m
__top_builddir__tools_conf_transform_smear_stout_SOURCES	build/tools/Makefile	/^__top_builddir__tools_conf_transform_smear_stout_SOURCES = conf_transform\/smear\/stout.cpp$/;"	m
__top_builddir__tools_endianness_endianness_check_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_endianness_endianness_check_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_endianness_endianness_check_LDADD	build/tools/Makefile	/^__top_builddir__tools_endianness_endianness_check_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_endianness_endianness_check_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_endianness_endianness_check_OBJECTS = $(am___top_builddir__tools_endianness_endianness_check_OBJECTS)$/;"	m
__top_builddir__tools_endianness_endianness_check_SOURCES	build/tools/Makefile	/^__top_builddir__tools_endianness_endianness_check_SOURCES = endianness\/endianness_check.cpp$/;"	m
__top_builddir__tools_endianness_endianness_swap_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_endianness_endianness_swap_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_endianness_endianness_swap_LDADD	build/tools/Makefile	/^__top_builddir__tools_endianness_endianness_swap_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_endianness_endianness_swap_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_endianness_endianness_swap_OBJECTS = $(am___top_builddir__tools_endianness_endianness_swap_OBJECTS)$/;"	m
__top_builddir__tools_endianness_endianness_swap_SOURCES	build/tools/Makefile	/^__top_builddir__tools_endianness_endianness_swap_SOURCES = endianness\/endianness_swap.cpp$/;"	m
__top_builddir__tools_find_best_vir_partitioning_find_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_find_best_vir_partitioning_find_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_find_best_vir_partitioning_find_LDADD	build/tools/Makefile	/^__top_builddir__tools_find_best_vir_partitioning_find_LDADD =  \\$/;"	m
__top_builddir__tools_find_best_vir_partitioning_find_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_find_best_vir_partitioning_find_OBJECTS = $(am___top_builddir__tools_find_best_vir_partitioning_find_OBJECTS)$/;"	m
__top_builddir__tools_find_best_vir_partitioning_find_SOURCES	build/tools/Makefile	/^__top_builddir__tools_find_best_vir_partitioning_find_SOURCES = find_best_vir_partitioning\/find.cpp$/;"	m
__top_builddir__tools_print_gamma_gamma_test_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_print_gamma_gamma_test_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_print_gamma_gamma_test_LDADD	build/tools/Makefile	/^__top_builddir__tools_print_gamma_gamma_test_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_print_gamma_gamma_test_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_print_gamma_gamma_test_OBJECTS =  \\$/;"	m
__top_builddir__tools_print_gamma_gamma_test_SOURCES	build/tools/Makefile	/^__top_builddir__tools_print_gamma_gamma_test_SOURCES = print_gamma\/gamma_test.cpp$/;"	m
__top_builddir__tools_read_ildg_read_double_vector_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_read_ildg_read_double_vector_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_read_ildg_read_double_vector_LDADD	build/tools/Makefile	/^__top_builddir__tools_read_ildg_read_double_vector_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_read_ildg_read_double_vector_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_read_ildg_read_double_vector_OBJECTS = $(am___top_builddir__tools_read_ildg_read_double_vector_OBJECTS)$/;"	m
__top_builddir__tools_read_ildg_read_double_vector_SOURCES	build/tools/Makefile	/^__top_builddir__tools_read_ildg_read_double_vector_SOURCES = read_ildg\/read_double_vector.cpp$/;"	m
__top_builddir__tools_read_ildg_read_ildg_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_read_ildg_read_ildg_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_read_ildg_read_ildg_LDADD	build/tools/Makefile	/^__top_builddir__tools_read_ildg_read_ildg_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_read_ildg_read_ildg_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_read_ildg_read_ildg_OBJECTS =  \\$/;"	m
__top_builddir__tools_read_ildg_read_ildg_SOURCES	build/tools/Makefile	/^__top_builddir__tools_read_ildg_read_ildg_SOURCES = read_ildg\/read_ildg.cpp$/;"	m
__top_builddir__tools_remez_algorithm_remez_create_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_remez_algorithm_remez_create_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_remez_algorithm_remez_create_LDADD	build/tools/Makefile	/^__top_builddir__tools_remez_algorithm_remez_create_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_remez_algorithm_remez_create_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_remez_algorithm_remez_create_OBJECTS = $(am___top_builddir__tools_remez_algorithm_remez_create_OBJECTS)$/;"	m
__top_builddir__tools_remez_algorithm_remez_create_SOURCES	build/tools/Makefile	/^__top_builddir__tools_remez_algorithm_remez_create_SOURCES = remez_algorithm\/remez_create.cpp$/;"	m
__top_builddir__tools_spinors_ildg_to_txt_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_spinors_ildg_to_txt_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_spinors_ildg_to_txt_LDADD	build/tools/Makefile	/^__top_builddir__tools_spinors_ildg_to_txt_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_spinors_ildg_to_txt_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_spinors_ildg_to_txt_OBJECTS =  \\$/;"	m
__top_builddir__tools_spinors_ildg_to_txt_SOURCES	build/tools/Makefile	/^__top_builddir__tools_spinors_ildg_to_txt_SOURCES = spinors\/ildg_to_txt.cpp$/;"	m
__top_builddir__tools_spinors_take_parity_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_spinors_take_parity_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_spinors_take_parity_LDADD	build/tools/Makefile	/^__top_builddir__tools_spinors_take_parity_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_spinors_take_parity_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_spinors_take_parity_OBJECTS =  \\$/;"	m
__top_builddir__tools_spinors_take_parity_SOURCES	build/tools/Makefile	/^__top_builddir__tools_spinors_take_parity_SOURCES = spinors\/take_parity.cpp$/;"	m
__top_builddir__tools_unitarity_check_unitarity_check_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_unitarity_check_unitarity_check_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_unitarity_check_unitarity_check_LDADD	build/tools/Makefile	/^__top_builddir__tools_unitarity_check_unitarity_check_LDADD =  \\$/;"	m
__top_builddir__tools_unitarity_check_unitarity_check_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_unitarity_check_unitarity_check_OBJECTS = $(am___top_builddir__tools_unitarity_check_unitarity_check_OBJECTS)$/;"	m
__top_builddir__tools_unitarity_check_unitarity_check_SOURCES	build/tools/Makefile	/^__top_builddir__tools_unitarity_check_unitarity_check_SOURCES = unitarity_check\/unitarity_check.cpp$/;"	m
__top_builddir__tools_x_clusterize_x_clusterize_DEPENDENCIES	build/tools/Makefile	/^__top_builddir__tools_x_clusterize_x_clusterize_DEPENDENCIES =  \\$/;"	m
__top_builddir__tools_x_clusterize_x_clusterize_LDADD	build/tools/Makefile	/^__top_builddir__tools_x_clusterize_x_clusterize_LDADD = $(LDADD)$/;"	m
__top_builddir__tools_x_clusterize_x_clusterize_OBJECTS	build/tools/Makefile	/^__top_builddir__tools_x_clusterize_x_clusterize_OBJECTS =  \\$/;"	m
__top_builddir__tools_x_clusterize_x_clusterize_SOURCES	build/tools/Makefile	/^__top_builddir__tools_x_clusterize_x_clusterize_SOURCES = x_clusterize\/x_clusterize.cpp$/;"	m
a	projects/ib/contr.hpp	/^    std::string a,b,c;$/;"	m	struct:nissa::bar_triplet_t
a	projects/ib/contr.hpp	/^    std::string a,b;$/;"	m	struct:nissa::mes_contr_map_t
abs	src/new_types/float_256.hpp	/^  inline float_256_class abs(float_256_class a){float_256_class b;float_256_abs(b.num,a.num);return b;}$/;"	f	namespace:nissa
abs_builddir	build/Makefile	/^abs_builddir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build$/;"	m
abs_builddir	build/projects/Makefile	/^abs_builddir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build\/projects$/;"	m
abs_builddir	build/src/Makefile	/^abs_builddir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build\/src$/;"	m
abs_builddir	build/tools/Makefile	/^abs_builddir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build\/tools$/;"	m
abs_srcdir	build/Makefile	/^abs_srcdir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build\/..$/;"	m
abs_srcdir	build/projects/Makefile	/^abs_srcdir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build\/..\/projects$/;"	m
abs_srcdir	build/src/Makefile	/^abs_srcdir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build\/..\/src$/;"	m
abs_srcdir	build/tools/Makefile	/^abs_srcdir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build\/..\/tools$/;"	m
abs_top_builddir	build/Makefile	/^abs_top_builddir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build$/;"	m
abs_top_builddir	build/projects/Makefile	/^abs_top_builddir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build$/;"	m
abs_top_builddir	build/src/Makefile	/^abs_top_builddir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build$/;"	m
abs_top_builddir	build/tools/Makefile	/^abs_top_builddir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build$/;"	m
abs_top_srcdir	build/Makefile	/^abs_top_srcdir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build\/..$/;"	m
abs_top_srcdir	build/projects/Makefile	/^abs_top_srcdir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build\/..$/;"	m
abs_top_srcdir	build/src/Makefile	/^abs_top_srcdir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build\/..$/;"	m
abs_top_srcdir	build/tools/Makefile	/^abs_top_srcdir = \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/build\/..$/;"	m
ac_ct_CC	build/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	build/projects/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	build/src/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	build/tools/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CXX	build/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_CXX	build/projects/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_CXX	build/src/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_CXX	build/tools/Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_F77	build/Makefile	/^ac_ct_F77 = $/;"	m
ac_ct_F77	build/projects/Makefile	/^ac_ct_F77 = $/;"	m
ac_ct_F77	build/src/Makefile	/^ac_ct_F77 = $/;"	m
ac_ct_F77	build/tools/Makefile	/^ac_ct_F77 = $/;"	m
ac_ct_FC	build/Makefile	/^ac_ct_FC = $/;"	m
ac_ct_FC	build/projects/Makefile	/^ac_ct_FC = $/;"	m
ac_ct_FC	build/src/Makefile	/^ac_ct_FC = $/;"	m
ac_ct_FC	build/tools/Makefile	/^ac_ct_FC = $/;"	m
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_cxx_check_func	configure	/^ac_fn_cxx_check_func ()$/;"	f
ac_fn_cxx_check_header_compile	configure	/^ac_fn_cxx_check_header_compile ()$/;"	f
ac_fn_cxx_check_header_mongrel	configure	/^ac_fn_cxx_check_header_mongrel ()$/;"	f
ac_fn_cxx_try_compile	configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	configure	/^ac_fn_cxx_try_link ()$/;"	f
ac_fn_cxx_try_run	configure	/^ac_fn_cxx_try_run ()$/;"	f
ac_fn_f77_try_compile	configure	/^ac_fn_f77_try_compile ()$/;"	f
ac_fn_fc_try_compile	configure	/^ac_fn_fc_try_compile ()$/;"	f
ac_rotate_gauge_conf	src/operations/gaugeconf.cpp	/^  void ac_rotate_gauge_conf(quad_su3 *out,quad_su3 *in,int axis)$/;"	f	namespace:nissa
ac_rotate_vector	src/operations/gaugeconf.cpp	/^  void ac_rotate_vector(void *out,void *in,int axis,size_t bps)$/;"	f	namespace:nissa
accelerate_lx_momenta	src/hmc/momenta/momenta_evolve.cpp	/^  void accelerate_lx_momenta(quad_su3 *M,quad_su3 *conf,double kappa,int niter,double residue,quad_su3 *H)$/;"	f	namespace:nissa
accum	src/operations/gauge_fixing.cpp	/^    double *accum;$/;"	m	namespace:nissa::GCG	file:
action	projects/cpn/cpn.cpp	/^double action(ON_t *z,quad_u1 *l)$/;"	f
adapt_alpha	src/operations/gauge_fixing.cpp	/^  double adapt_alpha(quad_su3 *fixed_conf,su3 *fixer,int start_mu,su3 *der,const double alpha_def,quad_su3 *ori_conf,const double *F_offset,const double func,bool &use_adapt,int &nskipped_adapt)$/;"	f	namespace:nissa
adapt_spatial_theta	projects/semileptonic/new_version/new_types.hpp	/^  void adapt_spatial_theta(double t) {momentum_t th={theta[0],t,t,t};adapt_theta(thpp);}$/;"	f	struct:gauge_conf_t
adapt_theta	projects/semileptonic/new_version/new_types.hpp	/^  void adapt_theta(momentum_t t) {ext_adapt_theta(U,thppeta,t,1,1);}$/;"	f	struct:gauge_conf_t
adapt_theta	src/operations/gaugeconf.cpp	/^  void adapt_theta(quad_su3 *conf,double *old_theta,double *put_theta,int putonbords,int putonedges)$/;"	f	namespace:nissa
add	src/new_types/dsfmt.hpp	/^    void add(dsfmt_t &src)$/;"	f	class:nissa::dsfmt_t
add_Symanzik_staples	src/operations/su3_paths/gauge_sweeper.cpp	/^  void add_Symanzik_staples(int *ilink_to_be_used,all_to_all_gathering_list_t &gat,int ivol,int mu)$/;"	f	namespace:nissa
add_Wilson_staples	src/operations/su3_paths/gauge_sweeper.cpp	/^  void add_Wilson_staples(int *ilink_to_be_used,all_to_all_gathering_list_t &gat,int ivol,int mu)$/;"	f	namespace:nissa
add_all_rects_meas	projects/generate_confs/driver.hpp	/^    void add_all_rects_meas(all_rects_meas_pars_t &m){all_rects_meas.push_back(m);all_rects_meas.back();}$/;"	f	class:nissa::driver_t
add_backfield_with_stagphases_to_conf	src/hmc/backfield.hpp	/^  void add_backfield_with_stagphases_to_conf(T3 conf,T1 u1)$/;"	f	namespace:nissa
add_backfield_without_stagphases_to_conf	src/hmc/backfield.hpp	/^  void add_backfield_without_stagphases_to_conf(T3 conf,T1 u1)$/;"	f	namespace:nissa
add_chir_zumba_meas	projects/generate_confs/driver.hpp	/^    void add_chir_zumba_meas(chir_zumba_meas_pars_t &m){chir_zumba_meas.push_back(m);}$/;"	f	class:nissa::driver_t
add_conf_link_for_paths	src/communicate/all_to_all.cpp	/^  int all_to_all_gathering_list_t::add_conf_link_for_paths(coords g,int mu)$/;"	f	class:nissa::all_to_all_gathering_list_t
add_current_transformation	src/operations/gauge_fixing.cpp	/^  void add_current_transformation(su3 *fixer_out,const su3 *g,const su3 *fixer_in)$/;"	f	namespace:nissa
add_fermionic_putpourri_meas	projects/generate_confs/driver.hpp	/^    void add_fermionic_putpourri_meas(fermionic_putpourri_meas_pars_t &m){fermionic_putpourri_meas.push_back(m);}$/;"	f	class:nissa::driver_t
add_luppoli_meas	projects/generate_confs/driver.hpp	/^    void add_luppoli_meas(poly_corr_meas_pars_t &m){luppoli_meas.push_back(m);}$/;"	f	class:nissa::driver_t
add_magnetization_meas	projects/generate_confs/driver.hpp	/^    void add_magnetization_meas(magnetization_meas_pars_t &m){magnetization_meas.push_back(m);}$/;"	f	class:nissa::driver_t
add_meson_corr_meas	projects/generate_confs/driver.hpp	/^    void add_meson_corr_meas(meson_corr_meas_pars_t &m){meson_corr_meas.push_back(m);}$/;"	f	class:nissa::driver_t
add_nucleon_corr_meas	projects/generate_confs/driver.hpp	/^    void add_nucleon_corr_meas(nucleon_corr_meas_pars_t &m){nucleon_corr_meas.push_back(m);}$/;"	f	class:nissa::driver_t
add_or_rem_backfield_to_confs	src/operations/smearing/Wflow.hpp	/^    void add_or_rem_backfield_to_confs(bool add_rem,quad_u1 **u1)$/;"	f	struct:nissa::internal_fermion_flower_t
add_plaq_pol_meas	projects/generate_confs/driver.hpp	/^    void add_plaq_pol_meas(gauge_obs_meas_pars_t &m){plaq_pol_meas.push_back(m);}$/;"	f	class:nissa::driver_t
add_qed_corr_meas	projects/generate_confs/driver.hpp	/^    void add_qed_corr_meas(qed_corr_meas_pars_t &m){qed_corr_meas.push_back(m);}$/;"	f	class:nissa::driver_t
add_quark_rendens_meas	projects/generate_confs/driver.hpp	/^    void add_quark_rendens_meas(quark_rendens_meas_pars_t &m){quark_rendens_meas.push_back(m);}$/;"	f	class:nissa::driver_t
add_sink_source_corr	src/operations/contract/optimized_mesons_2pts.cpp	/^  void two_pts_comp_t::add_sink_source_corr(uint16_t corr_id,double weight,int re_im,uint8_t sink_igamma,uint8_t sour_igamma)$/;"	f	class:nissa::two_pts_comp_t
add_spinpol_meas	projects/generate_confs/driver.hpp	/^    void add_spinpol_meas(spinpol_meas_pars_t &m){spinpol_meas.push_back(m);}$/;"	f	class:nissa::driver_t
add_staples_per_link	src/operations/su3_paths/gauge_sweeper.hpp	/^    void(*add_staples_per_link)(int *ilink_to_be_used,all_to_all_gathering_list_t &gat,int ivol,int mu);$/;"	m	struct:nissa::gauge_sweeper_t
add_staples_required_links	src/operations/su3_paths/gauge_sweeper.cpp	/^  void gauge_sweeper_t::add_staples_required_links(all_to_all_gathering_list_t **gl)$/;"	f	class:nissa::gauge_sweeper_t
add_top_meas	projects/generate_confs/driver.hpp	/^    void add_top_meas(top_meas_pars_t &m){top_meas.push_back(m);}$/;"	f	class:nissa::driver_t
add_watusso_meas	projects/generate_confs/driver.hpp	/^    void add_watusso_meas(watusso_meas_pars_t &m){watusso_meas.push_back(m);watusso_meas.back();}$/;"	f	class:nissa::driver_t
after	src/new_types/metadynamics.hpp	/^    int after;$/;"	m	struct:nissa::meta_pars_t
after	src/operations/gaugeconf.hpp	/^    int after;$/;"	m	struct:nissa::gauge_obs_meas_pars_t
after	src/operations/stag/stag.hpp	/^    int after;$/;"	m	struct:nissa::base_fermionic_meas_t
after	src/operations/su3_paths/all_rectangles.hpp	/^    int after;$/;"	m	struct:nissa::all_rects_meas_pars_t
after	src/operations/su3_paths/pline.hpp	/^    int after;$/;"	m	struct:nissa::poly_corr_meas_pars_t
after	src/operations/su3_paths/topological_charge.hpp	/^    int after;$/;"	m	struct:nissa::top_meas_pars_t
after	src/operations/su3_paths/watusso.hpp	/^    int after;$/;"	m	struct:nissa::watusso_meas_pars_t
aix_post_process_depfile	config/depcomp	/^aix_post_process_depfile ()$/;"	f
all_dirs	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX bool all_dirs[NDIM];$/;"	m	namespace:nissa
all_other_dirs	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX bool all_other_dirs[NDIM][NDIM];$/;"	m	namespace:nissa
all_other_spat_dirs	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX bool all_other_spat_dirs[NDIM][NDIM];$/;"	m	namespace:nissa
all_rects_meas	build/projects/generate_confs/parser.cpp	/^    nissa::all_rects_meas_pars_t *all_rects_meas;$/;"	m	union:YYSTYPE	file:
all_rects_meas	build/projects/generate_confs/parser.hpp	/^    nissa::all_rects_meas_pars_t *all_rects_meas;$/;"	m	union:YYSTYPE
all_rects_meas	projects/generate_confs/driver.hpp	/^    std::vector<all_rects_meas_pars_t> all_rects_meas;$/;"	m	class:nissa::driver_t
all_rects_meas_pars_t	src/operations/su3_paths/all_rectangles.hpp	/^    all_rects_meas_pars_t() :$/;"	f	struct:nissa::all_rects_meas_pars_t
all_rects_meas_pars_t	src/operations/su3_paths/all_rectangles.hpp	/^  struct all_rects_meas_pars_t$/;"	s	namespace:nissa
all_to_all_comm_t	src/communicate/all_to_all.cpp	/^  all_to_all_comm_t::all_to_all_comm_t(all_to_all_gathering_list_t &gl)$/;"	f	class:nissa::all_to_all_comm_t
all_to_all_comm_t	src/communicate/all_to_all.cpp	/^  all_to_all_comm_t::all_to_all_comm_t(all_to_all_scattering_list_t &sl)$/;"	f	class:nissa::all_to_all_comm_t
all_to_all_comm_t	src/communicate/all_to_all.hpp	/^    all_to_all_comm_t() : inited(false) {};$/;"	f	struct:nissa::all_to_all_comm_t
all_to_all_comm_t	src/communicate/all_to_all.hpp	/^  struct all_to_all_comm_t$/;"	s	namespace:nissa
all_to_all_gathering_list_t	src/communicate/all_to_all.hpp	/^  struct all_to_all_gathering_list_t : std::map<int,int>$/;"	s	namespace:nissa
all_to_all_scattering_list_t	src/communicate/all_to_all.hpp	/^  struct all_to_all_scattering_list_t : std::vector<std::pair<int,int> > {};$/;"	s	namespace:nissa
alloc_spincolor	projects/ib/prop.hpp	/^    void alloc_spincolor()$/;"	f	struct:nissa::qprop_t
alloca	build/projects/semileptonic/parse_corr.cpp	311;"	d	file:
allocate	projects/ib/disco.cpp	/^  void allocate()$/;"	f	namespace:hits
allocate_GCG_stuff	src/operations/gauge_fixing.cpp	/^  void allocate_GCG_stuff()$/;"	f	namespace:nissa
allocate_L_prop	projects/ib/meslep.cpp	/^  void allocate_L_prop()$/;"	f	namespace:nissa
allocate_all	projects/ib/disco.cpp	/^  void allocate_all()$/;"	f	namespace:EU1_EU2_EU4_EU6alt
allocate_all_fields	projects/ib/disco.cpp	/^  void allocate_all_fields()$/;"	f	namespace:curr
allocate_backfield	src/hmc/backfield.cpp	/^  void theory_pars_t::allocate_backfield()$/;"	f	class:nissa::theory_pars_t
allocate_bar2pts_contr	projects/ib/contr.cpp	/^  void allocate_bar2pts_contr()$/;"	f	namespace:nissa
allocate_handcuffs_contr	projects/ib/contr.cpp	/^  void allocate_handcuffs_contr()$/;"	f	namespace:nissa
allocate_loop_source	projects/ib/prop.hpp	/^  inline void allocate_loop_source(){loop_source=nissa_malloc("loop_source",loc_vol+bord_vol,spincolor);}$/;"	f	namespace:nissa
allocate_mes2pts_contr	projects/ib/contr.cpp	/^  void allocate_mes2pts_contr()$/;"	f	namespace:nissa
allocate_photon_fields	projects/ib/prop.cpp	/^  void allocate_photon_fields()$/;"	f	namespace:nissa
allocate_props	projects/ib/disco2.cpp	/^  void allocate_props()$/;"	f	namespace:free_th
allocinit_backfield	src/hmc/backfield.cpp	/^  void theory_pars_t::allocinit_backfield()$/;"	f	class:nissa::theory_pars_t
alpha	projects/x/progs/compute_self_energy_corrections.cpp	/^double alpha=0;$/;"	v
alpha	projects/x/progs/compute_tadpole_corrections.cpp	/^double alpha=0;$/;"	v
alpha	src/free_theory/free_theory_types.hpp	/^    double alpha;$/;"	m	struct:nissa::gauge_info
alpha	src/operations/smearing/APE.hpp	/^    double alpha;$/;"	m	struct:nissa::ape_pars_t
alpha0	src/operations/smearing/HYP.hpp	/^    double alpha0;$/;"	m	struct:nissa::hyp_pars_t
alpha1	src/operations/smearing/HYP.hpp	/^    double alpha1;$/;"	m	struct:nissa::hyp_pars_t
alpha2	src/operations/smearing/HYP.hpp	/^    double alpha2;$/;"	m	struct:nissa::hyp_pars_t
alpha_exp	src/operations/gauge_fixing.hpp	/^    double alpha_exp;$/;"	m	struct:nissa::LC_gauge_fixing_pars_t
alphppa	projects/semileptonic/new_version/new_types.hpp	/^  double alphppa;$/;"	m	struct:ape_smear_pars_t
am__CONFIG_DISTCLEAN_FILES	build/Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DIST_COMMON	build/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(top_srcdir)\/config\/compile \\$/;"	m
am__DIST_COMMON	build/projects/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/cpn\/Makefile.am \\$/;"	m
am__DIST_COMMON	build/src/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/config.hpp.in \\$/;"	m
am__DIST_COMMON	build/tools/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(top_srcdir)\/config\/depcomp$/;"	m
am____top_builddir__bin_cpn_SOURCES_DIST	build/projects/Makefile	/^am____top_builddir__bin_cpn_SOURCES_DIST = cpn\/cpn.cpp$/;"	m
am____top_builddir__lib_libnissa_a_SOURCES_DIST	build/src/Makefile	/^am____top_builddir__lib_libnissa_a_SOURCES_DIST = base\/bench.cpp \\$/;"	m
am___top_builddir__bin_RIMOM_OBJECTS	build/projects/Makefile	/^am___top_builddir__bin_RIMOM_OBJECTS = reno_const\/RIMOM.$(OBJEXT)$/;"	m
am___top_builddir__bin_checks_ib_OBJECTS	build/projects/Makefile	/^am___top_builddir__bin_checks_ib_OBJECTS = ib\/checks.$(OBJEXT)$/;"	m
am___top_builddir__bin_convert_input_OBJECTS	build/projects/Makefile	/^am___top_builddir__bin_convert_input_OBJECTS =  \\$/;"	m
am___top_builddir__bin_disco2_OBJECTS	build/projects/Makefile	/^am___top_builddir__bin_disco2_OBJECTS = ib\/disco2.$(OBJEXT)$/;"	m
am___top_builddir__bin_disco_OBJECTS	build/projects/Makefile	/^am___top_builddir__bin_disco_OBJECTS = ib\/disco.$(OBJEXT) \\$/;"	m
am___top_builddir__bin_generate_OBJECTS	build/projects/Makefile	/^am___top_builddir__bin_generate_OBJECTS =  \\$/;"	m
am___top_builddir__bin_generate_quenched_OBJECTS	build/projects/Makefile	/^am___top_builddir__bin_generate_quenched_OBJECTS =  \\$/;"	m
am___top_builddir__bin_ib_OBJECTS	build/projects/Makefile	/^am___top_builddir__bin_ib_OBJECTS = ib\/ib.$(OBJEXT) $(am__objects_2)$/;"	m
am___top_builddir__bin_mel_OBJECTS	build/projects/Makefile	/^am___top_builddir__bin_mel_OBJECTS = ib\/mel.$(OBJEXT)$/;"	m
am___top_builddir__bin_mel_point_source_OBJECTS	build/projects/Makefile	/^am___top_builddir__bin_mel_point_source_OBJECTS =  \\$/;"	m
am___top_builddir__bin_nucleons_smeared_OBJECTS	build/projects/Makefile	/^am___top_builddir__bin_nucleons_smeared_OBJECTS =  \\$/;"	m
am___top_builddir__bin_semileptonic_smeared_OBJECTS	build/projects/Makefile	/^am___top_builddir__bin_semileptonic_smeared_OBJECTS =  \\$/;"	m
am___top_builddir__bin_semileptonic_smeared_point_source_OBJECTS	build/projects/Makefile	/^am___top_builddir__bin_semileptonic_smeared_point_source_OBJECTS = semileptonic\/__top_builddir__bin_semileptonic_smeared_point_source-semileptonic_smeared.$(OBJEXT) \\$/;"	m
am___top_builddir__lib_libnissa_a_OBJECTS	build/src/Makefile	/^am___top_builddir__lib_libnissa_a_OBJECTS = base\/bench.$(OBJEXT) \\$/;"	m
am___top_builddir__tools_Gaussiansmear_test_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_Gaussiansmear_test_OBJECTS =  \\$/;"	m
am___top_builddir__tools_benchmarks_stag_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_benchmarks_stag_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_measure_topo_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_measure_topo_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_convert_Claudio_to_ildg_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_convert_Claudio_to_ildg_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_convert_eo_to_ildg_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_convert_eo_to_ildg_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_convert_gpu_to_ildg_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_convert_gpu_to_ildg_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_convert_ildg_to_eo_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_convert_ildg_to_eo_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_convert_ildg_to_gpu_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_convert_ildg_to_gpu_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_create_create_cold_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_create_create_cold_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_create_create_hot_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_create_create_hot_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_edit_build_from_raw_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_edit_build_from_raw_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_edit_grab_ildg_data_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_edit_grab_ildg_data_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_edit_rewind_random_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_edit_rewind_random_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_edit_skip_random_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_edit_skip_random_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_edit_unitarize_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_edit_unitarize_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_gaugefix_landau_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_gaugefix_landau_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_gaugefix_random_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_gaugefix_random_OBJECTS =  \\$/;"	m
am___top_builddir__tools_conf_transform_smear_stout_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_conf_transform_smear_stout_OBJECTS =  \\$/;"	m
am___top_builddir__tools_endianness_endianness_check_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_endianness_endianness_check_OBJECTS =  \\$/;"	m
am___top_builddir__tools_endianness_endianness_swap_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_endianness_endianness_swap_OBJECTS =  \\$/;"	m
am___top_builddir__tools_find_best_vir_partitioning_find_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_find_best_vir_partitioning_find_OBJECTS =  \\$/;"	m
am___top_builddir__tools_print_gamma_gamma_test_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_print_gamma_gamma_test_OBJECTS =  \\$/;"	m
am___top_builddir__tools_read_ildg_read_double_vector_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_read_ildg_read_double_vector_OBJECTS =  \\$/;"	m
am___top_builddir__tools_read_ildg_read_ildg_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_read_ildg_read_ildg_OBJECTS =  \\$/;"	m
am___top_builddir__tools_remez_algorithm_remez_create_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_remez_algorithm_remez_create_OBJECTS =  \\$/;"	m
am___top_builddir__tools_spinors_ildg_to_txt_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_spinors_ildg_to_txt_OBJECTS =  \\$/;"	m
am___top_builddir__tools_spinors_take_parity_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_spinors_take_parity_OBJECTS =  \\$/;"	m
am___top_builddir__tools_unitarity_check_unitarity_check_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_unitarity_check_unitarity_check_OBJECTS =  \\$/;"	m
am___top_builddir__tools_x_clusterize_x_clusterize_OBJECTS	build/tools/Makefile	/^am___top_builddir__tools_x_clusterize_x_clusterize_OBJECTS =  \\$/;"	m
am__aclocal_m4_deps	build/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_blas.m4 \\$/;"	m
am__aclocal_m4_deps	build/projects/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_blas.m4 \\$/;"	m
am__aclocal_m4_deps	build/src/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_blas.m4 \\$/;"	m
am__aclocal_m4_deps	build/tools/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_blas.m4 \\$/;"	m
am__append_18	build/src/Makefile	/^am__append_18 = routines\/thread.cpp$/;"	m
am__append_19	build/src/Makefile	/^am__append_19 = routines\/thread.hpp$/;"	m
am__base_list	build/projects/Makefile	/^am__base_list = \\$/;"	m
am__base_list	build/src/Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	build/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	build/projects/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	build/src/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	build/tools/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	build/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	build/projects/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	build/src/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	build/tools/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	build/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	build/projects/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	build/src/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	build/tools/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	build/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	build/projects/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	build/src/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	build/tools/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	build/projects/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	build/src/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	build/tools/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__dirstamp	build/projects/Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__dirstamp	build/src/Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__dirstamp	build/tools/Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__distuninstallcheck_listfiles	build/Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__include	build/Makefile	/^am__include = include$/;"	m
am__include	build/projects/Makefile	/^am__include = include$/;"	m
am__include	build/src/Makefile	/^am__include = include$/;"	m
am__include	build/tools/Makefile	/^am__include = include$/;"	m
am__include_HEADERS_DIST	build/src/Makefile	/^am__include_HEADERS_DIST = nissa.hpp base\/bench.hpp base\/close.hpp \\$/;"	m
am__install_max	build/projects/Makefile	/^am__install_max = 40$/;"	m
am__install_max	build/src/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	build/projects/Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	build/src/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	build/tools/Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__is_gnu_make	build/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	build/projects/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	build/src/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	build/tools/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__leading_dot	build/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	build/projects/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	build/src/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	build/tools/Makefile	/^am__leading_dot = .$/;"	m
am__make_dryrun	build/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	build/projects/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	build/src/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	build/tools/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	build/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	build/projects/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	build/src/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	build/tools/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	build/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	build/projects/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	build/src/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	build/tools/Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	build/projects/Makefile	/^am__mv = mv -f$/;"	m
am__mv	build/src/Makefile	/^am__mv = mv -f$/;"	m
am__mv	build/tools/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	build/projects/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	build/src/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	build/projects/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	build/src/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	build/projects/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	build/src/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__objects_1	build/projects/Makefile	/^am__objects_1 = generate_confs\/parser.$(OBJEXT) \\$/;"	m
am__objects_10	build/src/Makefile	/^am__objects_10 = routines\/thread.$(OBJEXT)$/;"	m
am__objects_2	build/projects/Makefile	/^am__objects_2 = ib\/conf.$(OBJEXT) ib\/contr.$(OBJEXT) \\$/;"	m
am__objects_3	build/projects/Makefile	/^am__objects_3 = semileptonic\/parse_corr.$(OBJEXT) \\$/;"	m
am__objects_4	build/projects/Makefile	/^am__objects_4 = semileptonic\/__top_builddir__bin_semileptonic_smeared_point_source-parse_corr.$(OBJEXT) \\$/;"	m
am__post_remove_distdir	build/Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	build/Makefile	/^am__quote = $/;"	m
am__quote	build/projects/Makefile	/^am__quote = $/;"	m
am__quote	build/src/Makefile	/^am__quote = $/;"	m
am__quote	build/tools/Makefile	/^am__quote = $/;"	m
am__recursive_targets	build/Makefile	/^am__recursive_targets = \\$/;"	m
am__relativize	build/Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	build/Makefile	/^am__remove_distdir = \\$/;"	m
am__strip_dir	build/projects/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	build/src/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	build/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	build/projects/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	build/src/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\$/;"	m
am__tagged_files	build/tools/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	build/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	build/projects/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	build/src/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	build/tools/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__uninstall_files_from_dir	build/projects/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	build/src/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	build/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	build/projects/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	build/src/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	build/tools/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	build/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	build/projects/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	build/src/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	build/tools/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_AR_	build/src/Makefile	/^am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_AR_0	build/src/Makefile	/^am__v_AR_0 = @echo "  AR      " $@;$/;"	m
am__v_AR_1	build/src/Makefile	/^am__v_AR_1 = $/;"	m
am__v_CCLD_	build/projects/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	build/src/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	build/projects/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	build/src/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	build/projects/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	build/src/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	build/projects/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	build/src/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	build/projects/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	build/src/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	build/projects/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	build/src/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CXXLD_	build/projects/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	build/src/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	build/tools/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_0	build/projects/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	build/src/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	build/tools/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_1	build/projects/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	build/src/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	build/tools/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXX_	build/projects/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	build/src/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	build/tools/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_0	build/projects/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	build/src/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	build/tools/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_1	build/projects/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	build/src/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	build/tools/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_GEN_	build/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	build/projects/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	build/src/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	build/tools/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	build/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	build/projects/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	build/src/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	build/tools/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	build/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	build/projects/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	build/src/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	build/tools/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_LEX_	build/projects/Makefile	/^am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_LEX_0	build/projects/Makefile	/^am__v_LEX_0 = @echo "  LEX     " $@;$/;"	m
am__v_LEX_1	build/projects/Makefile	/^am__v_LEX_1 = $/;"	m
am__v_P_	build/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	build/projects/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	build/src/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	build/tools/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	build/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	build/projects/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	build/src/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	build/tools/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	build/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	build/projects/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	build/src/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	build/tools/Makefile	/^am__v_P_1 = :$/;"	m
am__v_YACC_	build/projects/Makefile	/^am__v_YACC_ = $(am__v_YACC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_YACC_0	build/projects/Makefile	/^am__v_YACC_0 = @echo "  YACC    " $@;$/;"	m
am__v_YACC_1	build/projects/Makefile	/^am__v_YACC_1 = $/;"	m
am__v_at_	build/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	build/projects/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	build/src/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	build/tools/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	build/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	build/projects/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	build/src/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	build/tools/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	build/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	build/projects/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	build/src/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	build/tools/Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	build/projects/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	build/projects/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	build/projects/Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	build/projects/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	build/src/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	build/projects/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	build/src/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__yacc_c2h	build/projects/Makefile	/^am__yacc_c2h = sed -e s\/cc$$\/hh\/ -e s\/cpp$$\/hpp\/ -e s\/cxx$$\/hxx\/ \\$/;"	m
am_big_endian	projects/reno_const/fourier.c	/^  int am_big_endian()$/;"	f
an_conf_list	projects/generate_confs/driver.hpp	/^    std::vector<std::string> an_conf_list;$/;"	m	class:nissa::driver_t
analize_conf	projects/eight_BK/smeared_BK_all_in_one.cpp	/^void analize_conf()$/;"	f
analyse	tools/benchmarks/stag.cpp	/^void analyse(double &sx,double &s2x,int nbench)$/;"	f
analysis	projects/semileptonic/new_version/test.cpp	/^void analysis(char *path,int tsource,char *out_path)$/;"	f
analyze_conf	tools/conf_measure/magn.cpp	/^void analyze_conf(int iconf)$/;"	f
any_fermionic_measure_is_due	projects/generate_confs/driver.hpp	/^    int any_fermionic_measure_is_due(int itheory,int iconf)$/;"	f	class:nissa::driver_t
ape	src/operations/smearing/smooth.hpp	/^    ape_pars_t ape;$/;"	m	struct:nissa::smooth_pars_t
ape_alpha	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double gaussian_kappa,ape_alpha;$/;"	v
ape_alpha	projects/g/g.cpp	/^double gaussian_kappa,ape_alpha;$/;"	v
ape_alpha	projects/nucleons/nucleons_smeared.cpp	/^double Gauss_kappa,ape_alpha;$/;"	v
ape_alpha	projects/semileptonic/new_version/new_semileptonic.cpp	/^double kappa,ape_alpha;$/;"	v
ape_alpha	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^double jacobi_kappa,ape_alpha;$/;"	v
ape_alpha	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double jacobi_kappa,ape_alpha;$/;"	v
ape_conf_smearing	projects/semileptonic/semileptonic_smeared.cpp	/^enum conf_smearing_t{no_conf_smearing,ape_conf_smearing,stout_conf_smearing};$/;"	e	enum:conf_smearing_t	file:
ape_niter	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int ape_niter;$/;"	v
ape_niter	projects/g/g.cpp	/^int ape_niter;$/;"	v
ape_niter	projects/nucleons/nucleons_smeared.cpp	/^int Gauss_niter,ape_niter;$/;"	v
ape_niter	projects/semileptonic/new_version/new_semileptonic.cpp	/^int wall_time,seed,ape_niter;$/;"	v
ape_niter	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int ape_niter;$/;"	v
ape_niter	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int ape_niter;$/;"	v
ape_pars	build/projects/generate_confs/parser.cpp	/^    nissa::ape_pars_t *ape_pars;$/;"	m	union:YYSTYPE	file:
ape_pars	build/projects/generate_confs/parser.hpp	/^    nissa::ape_pars_t *ape_pars;$/;"	m	union:YYSTYPE
ape_pars_t	src/operations/smearing/APE.hpp	/^    ape_pars_t() :$/;"	f	struct:nissa::ape_pars_t
ape_pars_t	src/operations/smearing/APE.hpp	/^  struct ape_pars_t$/;"	s	namespace:nissa
ape_perp_dir_smear_conf	src/operations/smearing/APE.hpp	/^  inline void ape_perp_dir_smear_conf(quad_su3 *smear_conf,quad_su3 *origi_conf,double alpha,int nstep,int mu,int min_staple_dir=0)$/;"	f	namespace:nissa
ape_single_dir_smear_conf	src/operations/smearing/APE.hpp	/^  inline void ape_single_dir_smear_conf(quad_su3 *smear_conf,quad_su3 *origi_conf,double alpha,int nstep,int mu,int min_staple_dir=0)$/;"	f	namespace:nissa
ape_smear	projects/semileptonic/new_version/new_types.cpp	/^void gauge_conf_t::ape_smear(ape_smear_pars_t &ape_smear_pars)$/;"	f	class:gauge_conf_t
ape_smear_pars	projects/semileptonic/new_version/test.cpp	/^ape_smear_pars_t ape_smear_pars;$/;"	v
ape_smear_pars_t	projects/semileptonic/new_version/new_types.hpp	/^  ape_smear_pars_t(int ext_niter=20,double ext_alpha=0.5){niter=ext_niter;alpha=ext_alphppa;}$/;"	f	struct:ape_smear_pars_t
ape_smear_pars_t	projects/semileptonic/new_version/new_types.hpp	/^struct ape_smear_pars_t$/;"	s
ape_smearing_alpha	projects/ib/pars.hpp	/^  EXTERN_PARS double ape_smearing_alpha;$/;"	m	namespace:nissa
ape_smearing_niters	projects/ib/pars.hpp	/^  EXTERN_PARS int ape_smearing_niters;$/;"	m	namespace:nissa
ape_smearing_pars	projects/semileptonic/gevp.cpp	/^ape_pars_t ape_smearing_pars;$/;"	v
ape_smearing_pars	projects/semileptonic/gevp_3pts.cpp	/^ape_pars_t ape_smearing_pars;$/;"	v
ape_smearing_pars	projects/semileptonic/semileptonic_smeared.cpp	/^ape_pars_t ape_smearing_pars;$/;"	v
ape_spatial_smear_conf	src/operations/smearing/APE.hpp	/^  inline void ape_spatial_smear_conf(quad_su3 *smear_conf,quad_su3 *origi_conf,double alpha,int nstep)$/;"	f	namespace:nissa
ape_temporal_smear_conf	src/operations/smearing/APE.hpp	/^  inline void ape_temporal_smear_conf(quad_su3 *smear_conf,quad_su3 *origi_conf,double alpha,int nstep)$/;"	f	namespace:nissa
append_corr	projects/generate_confs/generate_quenched.cpp	/^void append_corr(const char *path,double *corr,int r,bool conf_created)$/;"	f
append_to_message_with_name	src/io/ILDG_File.hpp	/^    ILDG_message *append_to_message_with_name(ILDG_message &mess,const char *name)$/;"	f	struct:nissa::storable_vector_t
apply_C_operator	projects/semileptonic/gevp_3pts.cpp	/^void apply_C_operator(colorspinspin *out,colorspinspin *in)$/;"	f
apply_D	work_in_prog/detM/detM_est.cpp	/^void apply_D(spincolor *out,quad_su3 *conf,spincolor *in,double div)$/;"	f
apply_MFACC	src/dirac_operators/momenta/MFACC.hpp	/^  template <class T> void apply_MFACC(T *out,quad_su3 *conf,double kappa,T *in)$/;"	f	namespace:nissa
apply_WclovQ2	src/dirac_operators/WclovQ2/dirac_operator_WclovQ2.cpp	/^  void apply_WclovQ2(spincolor *out,quad_su3 *conf,double kappa,clover_term_t *Cl,spincolor *temp,spincolor *in)$/;"	f	namespace:nissa
apply_Wilson_gluon_mom_Klein_Gordon_operator	projects/x/src/operators/Wilson_gluon_Klein_Gordon_operator.cpp	/^void apply_Wilson_gluon_mom_Klein_Gordon_operator(spin1field *out,spin1field *in,gluon_info gl)$/;"	f
apply_Wilson_gluon_x_Klein_Gordon_operator	projects/x/src/operators/Wilson_gluon_Klein_Gordon_operator.cpp	/^void apply_Wilson_gluon_x_Klein_Gordon_operator(spin1field *out,spin1field *in,gluon_info gl)$/;"	f
apply_covariant_shift	src/operations/stag/stag.cpp	/^    void apply_covariant_shift(color **out,quad_su3 **conf,int mu,color **in,shift_orie_t side)$/;"	f	namespace:nissa::stag
apply_dipole_operator	projects/nucleons/nucleons_smeared.cpp	/^void apply_dipole_operator(su3spinspin *S_out,su3spinspin *S_in,int dir)$/;"	f
apply_nabla_i_spincolor	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^void apply_nabla_i_spincolor(spincolor *out,spincolor *in,quad_su3 *conf,int mu)$/;"	f
apply_nabla_i_spincolor	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void apply_nabla_i_spincolor(spincolor *out, spincolor *in, quad_su3 *conf, int i)$/;"	f
apply_op	src/operations/stag/stag.cpp	/^    void apply_op(color **out,color **single_perm,color **internal_temp,quad_su3 **conf,quad_u1 **u1b,int shift,color **in)$/;"	f	namespace:nissa::stag
apply_op_single_perm	src/operations/stag/stag.cpp	/^    void apply_op_single_perm(color **out,color **temp,quad_su3 **conf,std::vector<int> &list_dir,color **in)$/;"	f	namespace:nissa::stag
apply_point_diag_plus_clover_term_to_halfspincolor	src/operations/su3_paths/clover_term.cpp	/^  void apply_point_diag_plus_clover_term_to_halfspincolor(halfspincolor out,complex diag,clover_term_t Cl,halfspincolor in)$/;"	f	namespace:nissa
apply_point_diag_plus_clover_term_to_halfspincolor_128	src/operations/su3_paths/clover_term.cpp	/^  void apply_point_diag_plus_clover_term_to_halfspincolor_128(halfspincolor_128 out,complex diag,clover_term_t Cl,halfspincolor_128 in)$/;"	f	namespace:nissa
apply_point_squared_twisted_clover_term_to_halfspincolor	src/operations/su3_paths/clover_term.cpp	/^  void apply_point_squared_twisted_clover_term_to_halfspincolor(halfspincolor out,double mass,double kappa,clover_term_t Cl,halfspincolor in)$/;"	f	namespace:nissa
apply_point_twisted_clover_term_to_halfspincolor	src/operations/su3_paths/clover_term.hpp	/^  inline void apply_point_twisted_clover_term_to_halfspincolor(halfspincolor out,double mass,double kappa,clover_term_t Cl,halfspincolor in)$/;"	f	namespace:nissa
apply_point_twisted_clover_term_to_halfspincolor_128	src/operations/su3_paths/clover_term.hpp	/^  inline void apply_point_twisted_clover_term_to_halfspincolor_128(halfspincolor_128 out,double mass,double kappa,clover_term_t Cl,halfspincolor_128 in)$/;"	f	namespace:nissa
apply_stD	src/dirac_operators/stD/dirac_operator_stD.cpp	/^  void apply_stD(color **out,quad_su3 **conf,double m,color **in)$/;"	f	namespace:nissa
apply_tmQ2	src/dirac_operators/tmQ2/dirac_operator_tmQ2.cpp	/^  void apply_tmQ2(spincolor *out,quad_su3 *conf,double kappa,spincolor *temp,double mu,spincolor *in)$/;"	f	namespace:nissa
apply_tmQ2_RL_128	src/dirac_operators/tmQ2/dirac_operator_tmQ2_128.cpp	/^  void apply_tmQ2_RL_128(spincolor_128 *out,quad_su3 *conf,double kappa,spincolor_128 *ext_temp,int RL,double mu,spincolor_128 *in)$/;"	f	namespace:nissa
apply_tmQ2_RL_128_bgq	src/dirac_operators/tmQ2/dirac_operator_tmQ2_128_bgq.cpp	/^  void apply_tmQ2_RL_128_bgq(vir_spincolor_128 *vir_out,vir_oct_su3 *vir_conf,double kappa,int RL,double mu,vir_spincolor_128 *vir_in)$/;"	f	namespace:nissa
apply_tmQ2_bgq	src/dirac_operators/tmQ2/dirac_operator_tmQ2_bgq.cpp	/^  void apply_tmQ2_bgq(vir_spincolor *out,vir_oct_su3 *conf,double kappa,double mu,vir_spincolor *in)$/;"	f	namespace:nissa
apply_tmQ2_left	src/dirac_operators/tmQ2/dirac_operator_tmQ2.cpp	/^  void apply_tmQ2_left(spincolor *out,quad_su3 *conf,double kappa,spincolor *temp,double mu,spincolor *in)$/;"	f	namespace:nissa
apply_tmQ2_m2_RL	src/dirac_operators/tmQ2/dirac_operator_tmQ2.cpp	/^  void apply_tmQ2_m2_RL(spincolor *out,quad_su3 *conf,double kappa,spincolor *temp,int RL,double m2,spincolor *in)$/;"	f	namespace:nissa
apply_tmQ_RL	src/dirac_operators/tmQ/dirac_operator_tmQ.cpp	/^  void apply_tmQ_RL(spincolor *out,quad_su3 *conf,double kappa,double mu,int RL,spincolor *in)$/;"	f	namespace:nissa
apply_tmQ_portable	work_in_prog/bgq/src/test_dirac.cpp	/^void apply_tmQ_portable(spincolor *out,quad_su3 *conf,double kappa,double mu,spincolor *in)$/;"	f
apply_tmclovQ2	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2.cpp	/^  void apply_tmclovQ2(spincolor *out,quad_su3 *conf,double kappa,clover_term_t *Cl,spincolor *temp,double mu,spincolor *in)$/;"	f	namespace:nissa
apply_tmclovQ2_128	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2_128.cpp	/^  void apply_tmclovQ2_128(spincolor_128 *out,quad_su3 *conf,double kappa,clover_term_t *Cl,spincolor_128 *temp,double mu,spincolor_128 *in)$/;"	f	namespace:nissa
apply_tmclovQ2_128_bgq	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2_128_bgq.cpp	/^  void apply_tmclovQ2_128_bgq(vir_spincolor_128 *vir_out,vir_oct_su3 *vir_conf,double kappa,vir_clover_term_t *vir_Cl,double mu,vir_spincolor_128 *vir_in)$/;"	f	namespace:nissa
apply_tmclovQ2_bgq	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2_bgq.cpp	/^  void apply_tmclovQ2_bgq(vir_spincolor *out,vir_oct_su3 *conf,double kappa,vir_clover_term_t *Cl,double mu,vir_spincolor *in)$/;"	f	namespace:nissa
apply_tmclovQ2_m2	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2.cpp	/^  void apply_tmclovQ2_m2(spincolor *out,quad_su3 *conf,double kappa,clover_term_t *Cl,spincolor *temp,double mu,spincolor *in)$/;"	f	namespace:nissa
apply_tmclovQ2_m2_bgq	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2_bgq.cpp	/^  void apply_tmclovQ2_m2_bgq(vir_spincolor *out,vir_oct_su3 *conf,double kappa,vir_clover_term_t *Cl,double m2,vir_spincolor *in)$/;"	f	namespace:nissa
approx_tolerance	src/operations/remez/remez_algorithm.hpp	/^    double delta,approx_tolerance;$/;"	m	struct:nissa::rat_approx_finder_t
arg	src/operations/smearing/Wflow.hpp	/^    quad_su3 *arg;$/;"	m	struct:nissa::internal_fermion_flower_t
arpack_data	src/eigenvalues/eigenvalues_arpack.cpp	/^  namespace arpack_data$/;"	n	namespace:nissa	file:
arpack_data	src/eigenvalues/eigenvalues_arpack.hpp	/^  namespace arpack_data$/;"	n	namespace:nissa
as2t	src/new_types/spin.hpp	/^  typedef complex as2t[NDIM*(NDIM+1)\/2];$/;"	t	namespace:nissa
as2t_saturate	src/new_types/spin.hpp	/^  inline void as2t_saturate(complex out,as2t a,as2t b)$/;"	f	namespace:nissa
as2t_su3	src/new_types/su3.hpp	/^  typedef su3 as2t_su3[NDIM*(NDIM+1)\/2];$/;"	t	namespace:nissa
as2t_su3_put_to_zero	src/new_types/su3_op.hpp	/^  inline void as2t_su3_put_to_zero(as2t_su3 m) {for(size_t i=0;i<sizeof(as2t_su3)\/sizeof(su3);i++) su3_put_to_zero(m[i]);}$/;"	f	namespace:nissa
as_fn_append	build/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	build/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	build/config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	build/config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	build/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	build/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	build/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	build/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
assert_inited	src/routines/ios.hpp	/^    void assert_inited()$/;"	f	class:nissa::lock_file_t
assign_complex_prod_i	src/new_types/complex.hpp	/^  inline void assign_complex_prod_i(complex a)$/;"	f	namespace:nissa
assign_complex_prod_minus_i	src/new_types/complex.hpp	/^  inline void assign_complex_prod_minus_i(complex a)$/;"	f	namespace:nissa
assigned_torus_dirs	tools/find_best_vir_partitioning/find.cpp	/^  int assigned_torus_dirs[4][5];$/;"	m	struct:assignement_t	file:
assignement_t	tools/find_best_vir_partitioning/find.cpp	/^  assignement_t(){reset();}$/;"	f	struct:assignement_t
assignement_t	tools/find_best_vir_partitioning/find.cpp	/^struct assignement_t$/;"	s	file:
aux	projects/generate_confs/generate_quenched.cpp	/^  namespace aux$/;"	n	namespace:nissa	file:
aux	src/hmc/gauge/pure_gauge_hmc_step.cpp	/^  namespace aux$/;"	n	namespace:nissa	file:
avail_two_pts_corr	projects/semileptonic/new_version/new_types.cpp	/^two_pts_corr_pars_t *avail_two_pts_corr[navail_two_pts_corr]={$/;"	v
ave_data	tools/ave.cpp	/^double *data=NULL,*ave_data=NULL;$/;"	v
ave_dev	src/routines/math_routines.hpp	/^  void ave_dev(T &ave,T &dev,const T *v,const int n)$/;"	f	namespace:nissa
average	tools/ave.cpp	/^void average(char *read_line)$/;"	f
average_and_corr_polyakov_loop_lx_conf	src/operations/su3_paths/pline.cpp	/^  void average_and_corr_polyakov_loop_lx_conf(double *tra,FILE *corr_file,quad_su3 *conf,int mu,int itraj=0)$/;"	f	namespace:nissa
average_diff	src/operations/gaugeconf.hpp	/^    double average_diff;$/;"	m	struct:nissa::unitarity_check_result_t
average_gauge_energy	src/operations/gaugeconf.hpp	/^  inline double average_gauge_energy(quad_su3 *conf)$/;"	f	namespace:nissa
average_list_of_gathered_vector_sites	src/operations/vector_gather.cpp	/^  void average_list_of_gathered_vector_sites(double *vec,int *sites,int nsites,int dps)$/;"	f	namespace:nissa
average_polyakov_loop_eo_conf	src/operations/su3_paths/pline.cpp	/^  void average_polyakov_loop_eo_conf(complex tra,quad_su3 **eo_conf,int mu)$/;"	f	namespace:nissa
average_polyakov_loop_lx_conf	src/operations/su3_paths/pline.cpp	/^  void average_polyakov_loop_lx_conf(complex tra,quad_su3 *conf,int mu)$/;"	f	namespace:nissa
b	projects/ib/contr.hpp	/^    std::string a,b,c;$/;"	m	struct:nissa::bar_triplet_t
b	projects/ib/contr.hpp	/^    std::string a,b;$/;"	m	struct:nissa::mes_contr_map_t
b_max	tools/conf_measure/magn.cpp	/^double b_min,b_max;$/;"	v
b_min	tools/conf_measure/magn.cpp	/^double b_min,b_max;$/;"	v
back	src/operations/contract/optimized_mesons_2pts.hpp	/^      uint8_t &back() {return this->second;}$/;"	f	struct:nissa::forw_back_comp_id_t
backfield	src/hmc/theory_pars.hpp	/^    std::vector<quad_u1**> backfield;$/;"	m	struct:nissa::theory_pars_t
bar2pts_contr_map	projects/ib/contr.hpp	/^  EXTERN_CONTR std::vector<bar_triplet_t> bar2pts_contr_map;$/;"	m	namespace:nissa
bar2pts_contr_size	projects/ib/contr.hpp	/^  EXTERN_CONTR int bar2pts_contr_size;$/;"	m	namespace:nissa
bar_contr_free	projects/ib/checks.cpp	/^void bar_contr_free(complex *mess,tm_quark_info qu)$/;"	f
bar_transf	projects/ib/checks.cpp	/^void bar_transf(complex *co,tm_quark_info qu)$/;"	f
bar_triplet_t	projects/ib/contr.hpp	/^    bar_triplet_t(std::string name,std::string a,std::string b,std::string c) : name(name),a(a),b(b),c(c) {}$/;"	f	struct:nissa::bar_triplet_t
bar_triplet_t	projects/ib/contr.hpp	/^  struct bar_triplet_t$/;"	s	namespace:nissa
barr	src/new_types/metadynamics.hpp	/^    double barr;$/;"	m	struct:nissa::meta_pars_t
base	projects/ib/mel.cpp	/^tm_basis_t base;$/;"	v
base	projects/ib/pars.hpp	/^  EXTERN_PARS tm_basis_t base;$/;"	m	namespace:nissa
base_conf_eo	tools/conf_measure/magn.cpp	/^quad_su3 *base_conf_eo[2],*stout_conf_eo[2];$/;"	v
base_fermionic_meas_t	src/operations/stag/stag.hpp	/^    base_fermionic_meas_t() :$/;"	f	struct:nissa::base_fermionic_meas_t
base_fermionic_meas_t	src/operations/stag/stag.hpp	/^  struct base_fermionic_meas_t$/;"	s	namespace:nissa
base_gamma	src/new_types/dirac.hpp	/^  EXTERN_DIRAC dirac_matr base_gamma[19];$/;"	m	namespace:nissa
base_init_time	projects/generate_confs/generate_quenched.cpp	/^double base_init_time=0;$/;"	v
base_out_folder	projects/semileptonic/new_version/new_types.cpp	/^char base_out_folder[1024];$/;"	v
base_path	projects/x/progs/correct.cpp	/^const char base_path[]="\/Users\/francesco\/QCD\/LAVORI\/X";$/;"	v
base_path_in	tools/clusterize2.cpp	/^char base_path_in[1024],base_path_out[1024];$/;"	v
base_path_out	tools/clusterize2.cpp	/^char base_path_in[1024],base_path_out[1024];$/;"	v
base_source_path	projects/semileptonic/new_version/test.cpp	/^char base_source_path[1024];$/;"	v
bc	src/free_theory/free_theory_types.hpp	/^    momentum_t bc;$/;"	m	struct:nissa::gauge_info
bc	src/free_theory/free_theory_types.hpp	/^    momentum_t bc;$/;"	m	struct:nissa::tm_quark_info
bench_memory_copy	src/base/bench.cpp	/^  void bench_memory_copy(double *out,double *in,int size)$/;"	f	namespace:nissa
bench_net_speed	src/base/bench.cpp	/^  void bench_net_speed()$/;"	f	namespace:nissa
bend	src/new_types/metadynamics.hpp	/^    double bend;$/;"	m	struct:nissa::meta_pars_t
beta	projects/cpn/cpn.cpp	/^double beta,g;$/;"	v
beta	projects/semileptonic/new_version/new_types.hpp	/^  double beta;$/;"	m	struct:gauge_conf_t
beta	projects/x/progs/correct.cpp	/^double beta,mass,g2;$/;"	v
beta	src/hmc/theory_pars.hpp	/^    double beta;$/;"	m	struct:nissa::theory_pars_t
beta	src/operations/gaugeconf.cpp	/^      double beta;$/;"	m	struct:nissa::heatbath_lx_conf_ns::pars_t	file:
bgq_aligned	src/base/bgq_instructions.hpp	6;"	d
bgq_assign_color_prod_double	src/base/bgq_instructions.hpp	130;"	d
bgq_assign_color_prod_idouble	src/base/bgq_instructions.hpp	137;"	d
bgq_assign_minus_one_half_gamma5_prod_spincolor	src/base/bgq_instructions.hpp	539;"	d
bgq_assign_spincolor_prod_double	src/base/bgq_instructions.hpp	595;"	d
bgq_barrier	src/bgq/bgq_barrier.c	/^void bgq_barrier(int n)$/;"	f
bgq_barrier_define	src/bgq/bgq_barrier.c	/^void bgq_barrier_define()$/;"	f
bgq_barrier_ptr	src/bgq/bgq_barrier.c	/^static L2_Barrier_t bgq_barrier_ptr=L2_BARRIER_INITIALIZER;$/;"	v	file:
bgq_bicomplex	src/base/bgq_instructions.hpp	15;"	d
bgq_bicomplex	src/base/bgq_instructions.hpp	7;"	d
bgq_bicomplex_conj1_prod	src/base/bgq_instructions.hpp	105;"	d
bgq_bicomplex_conj2_prod	src/base/bgq_instructions.hpp	100;"	d
bgq_bicomplex_copy	src/base/bgq_instructions.hpp	121;"	d
bgq_bicomplex_load	src/base/bgq_instructions.hpp	47;"	d
bgq_bicomplex_load	src/base/bgq_instructions.hpp	68;"	d
bgq_bicomplex_prod	src/base/bgq_instructions.hpp	94;"	d
bgq_bicomplex_prod_double	src/base/bgq_instructions.hpp	60;"	d
bgq_bicomplex_prod_double	src/base/bgq_instructions.hpp	81;"	d
bgq_bicomplex_put_to_zero	src/base/bgq_instructions.hpp	55;"	d
bgq_bicomplex_put_to_zero	src/base/bgq_instructions.hpp	74;"	d
bgq_bicomplex_save	src/base/bgq_instructions.hpp	48;"	d
bgq_bicomplex_save	src/base/bgq_instructions.hpp	69;"	d
bgq_bicomplex_subt_bicomplex	src/base/bgq_instructions.hpp	50;"	d
bgq_bicomplex_subt_bicomplex	src/base/bgq_instructions.hpp	71;"	d
bgq_bicomplex_subt_bicomplex_conj	src/base/bgq_instructions.hpp	52;"	d
bgq_bicomplex_subt_bicomplex_conj	src/base/bgq_instructions.hpp	80;"	d
bgq_bicomplex_subt_the_prod_double	src/base/bgq_instructions.hpp	63;"	d
bgq_bicomplex_subt_the_prod_double	src/base/bgq_instructions.hpp	84;"	d
bgq_bicomplex_subt_the_prod_idouble	src/base/bgq_instructions.hpp	64;"	d
bgq_bicomplex_subt_the_prod_idouble	src/base/bgq_instructions.hpp	85;"	d
bgq_bicomplex_summ_bicomplex	src/base/bgq_instructions.hpp	49;"	d
bgq_bicomplex_summ_bicomplex	src/base/bgq_instructions.hpp	70;"	d
bgq_bicomplex_summ_bicomplex_conj	src/base/bgq_instructions.hpp	51;"	d
bgq_bicomplex_summ_bicomplex_conj	src/base/bgq_instructions.hpp	79;"	d
bgq_bicomplex_summ_the_conj1_prod	src/base/bgq_instructions.hpp	119;"	d
bgq_bicomplex_summ_the_conj2_prod	src/base/bgq_instructions.hpp	113;"	d
bgq_bicomplex_summ_the_prod	src/base/bgq_instructions.hpp	107;"	d
bgq_bicomplex_summ_the_prod_double	src/base/bgq_instructions.hpp	61;"	d
bgq_bicomplex_summ_the_prod_double	src/base/bgq_instructions.hpp	82;"	d
bgq_bicomplex_summ_the_prod_idouble	src/base/bgq_instructions.hpp	62;"	d
bgq_bicomplex_summ_the_prod_idouble	src/base/bgq_instructions.hpp	83;"	d
bgq_cache_touch_color	src/base/bgq_instructions.hpp	29;"	d
bgq_cache_touch_complex	src/base/bgq_instructions.hpp	8;"	d
bgq_cache_touch_spincolor	src/base/bgq_instructions.hpp	35;"	d
bgq_cache_touch_su3	src/base/bgq_instructions.hpp	20;"	d
bgq_color_copy	src/base/bgq_instructions.hpp	242;"	d
bgq_color_load	src/base/bgq_instructions.hpp	182;"	d
bgq_color_load_by_elements	src/base/bgq_instructions.hpp	175;"	d
bgq_color_prod_double	src/base/bgq_instructions.hpp	144;"	d
bgq_color_prod_su3	src/base/bgq_instructions.hpp	394;"	d
bgq_color_prod_su3_dag	src/base/bgq_instructions.hpp	510;"	d
bgq_color_put_to_zero	src/base/bgq_instructions.hpp	123;"	d
bgq_color_save	src/base/bgq_instructions.hpp	191;"	d
bgq_color_save_by_elements	src/base/bgq_instructions.hpp	184;"	d
bgq_color_summ_color	src/base/bgq_instructions.hpp	193;"	d
bgq_color_summ_color_conj	src/base/bgq_instructions.hpp	200;"	d
bgq_hopping_matrix_output_T_buffer	work_in_prog/bgq/src/new_vars_and_types.cpp	/^EXTERN bi_halfspincolor *bgq_hopping_matrix_output_T_buffer;$/;"	v
bgq_hopping_matrix_output_binded	work_in_prog/bgq/src/new_vars_and_types.cpp	/^EXTERN bi_halfspincolor *bgq_hopping_matrix_output_binded;$/;"	v
bgq_hopping_matrix_output_pointer	work_in_prog/bgq/src/new_vars_and_types.cpp	/^EXTERN bi_halfspincolor **bgq_hopping_matrix_output_pointer;$/;"	v
bgq_paral_prod_bicomplex	src/base/bgq_instructions.hpp	58;"	d
bgq_paral_prod_bicomplex	src/base/bgq_instructions.hpp	77;"	d
bgq_paral_summ_the_prod_bicomplex	src/base/bgq_instructions.hpp	59;"	d
bgq_paral_summ_the_prod_bicomplex	src/base/bgq_instructions.hpp	78;"	d
bgq_realprodscal_color	src/base/bgq_instructions.hpp	260;"	d
bgq_spincolor_load	src/base/bgq_instructions.hpp	547;"	d
bgq_spincolor_prod_double	src/base/bgq_instructions.hpp	579;"	d
bgq_spincolor_save	src/base/bgq_instructions.hpp	555;"	d
bgq_square_bicomplex	src/base/bgq_instructions.hpp	91;"	d
bgq_square_norm_color	src/base/bgq_instructions.hpp	253;"	d
bgq_squareassign_bicomplex	src/base/bgq_instructions.hpp	92;"	d
bgq_squareassign_color	src/base/bgq_instructions.hpp	235;"	d
bgq_squareassign_spincolor	src/base/bgq_instructions.hpp	571;"	d
bgq_su3_dag_prod_color	src/base/bgq_instructions.hpp	463;"	d
bgq_su3_dag_prod_color_bulk	src/base/bgq_instructions.hpp	438;"	d
bgq_su3_load	src/base/bgq_instructions.hpp	266;"	d
bgq_su3_prod_color	src/base/bgq_instructions.hpp	332;"	d
bgq_su3_prod_color_bulk	src/base/bgq_instructions.hpp	307;"	d
bgq_su3_prod_color_old	src/base/bgq_instructions.hpp	424;"	d
bgq_su3_prod_double	src/base/bgq_instructions.hpp	280;"	d
bgq_su3_prod_su3	src/base/bgq_instructions.hpp	341;"	d
bgq_su3_prod_su3_dag	src/base/bgq_instructions.hpp	348;"	d
bgq_su3_save	src/base/bgq_instructions.hpp	273;"	d
bgq_su3_summ_su3	src/base/bgq_instructions.hpp	286;"	d
bgq_su3_summ_su3_dag	src/base/bgq_instructions.hpp	295;"	d
bgq_su3_summassign_su3	src/base/bgq_instructions.hpp	292;"	d
bgq_su3_summassign_su3_dag	src/base/bgq_instructions.hpp	301;"	d
bgq_subt_the_su3_dag_prod_color	src/base/bgq_instructions.hpp	481;"	d
bgq_subt_the_su3_prod_color	src/base/bgq_instructions.hpp	364;"	d
bgq_subtassign_bicomplex	src/base/bgq_instructions.hpp	89;"	d
bgq_subtassign_color	src/base/bgq_instructions.hpp	214;"	d
bgq_subtassign_color_prod_double	src/base/bgq_instructions.hpp	161;"	d
bgq_subtassign_ibicomplex	src/base/bgq_instructions.hpp	54;"	d
bgq_subtassign_ibicomplex	src/base/bgq_instructions.hpp	73;"	d
bgq_subtassign_icolor	src/base/bgq_instructions.hpp	228;"	d
bgq_subtassign_spincolor	src/base/bgq_instructions.hpp	563;"	d
bgq_subtassign_spincolor_prod_double	src/base/bgq_instructions.hpp	611;"	d
bgq_summ_color_prod_double	src/base/bgq_instructions.hpp	151;"	d
bgq_summ_real_with_imag	src/base/bgq_instructions.hpp	56;"	d
bgq_summ_real_with_imag	src/base/bgq_instructions.hpp	75;"	d
bgq_summ_spincolor_prod_double	src/base/bgq_instructions.hpp	587;"	d
bgq_summ_the_su3_dag_prod_color	src/base/bgq_instructions.hpp	472;"	d
bgq_summ_the_su3_prod_color	src/base/bgq_instructions.hpp	355;"	d
bgq_summassign_bicomplex	src/base/bgq_instructions.hpp	88;"	d
bgq_summassign_color	src/base/bgq_instructions.hpp	207;"	d
bgq_summassign_color_prod_double	src/base/bgq_instructions.hpp	158;"	d
bgq_summassign_color_prod_idouble	src/base/bgq_instructions.hpp	168;"	d
bgq_summassign_color_realscalarprod_spincolor	src/base/bgq_instructions.hpp	635;"	d
bgq_summassign_color_spincolor	src/base/bgq_instructions.hpp	627;"	d
bgq_summassign_color_square_spincolor	src/base/bgq_instructions.hpp	619;"	d
bgq_summassign_ibicomplex	src/base/bgq_instructions.hpp	53;"	d
bgq_summassign_ibicomplex	src/base/bgq_instructions.hpp	72;"	d
bgq_summassign_icolor	src/base/bgq_instructions.hpp	221;"	d
bgq_summassign_scalarprod_color	src/base/bgq_instructions.hpp	244;"	d
bgq_summassign_spincolor_prod_double	src/base/bgq_instructions.hpp	603;"	d
bgq_summassign_square_color	src/base/bgq_instructions.hpp	251;"	d
bgq_vsurf_vol	work_in_prog/bgq/src/new_vars_and_types.cpp	/^EXTERN int bgqlx_t_vbord_vol,bgq_vsurf_vol;$/;"	v
bgqlx_of_loclx	work_in_prog/bgq/src/new_vars_and_types.cpp	/^EXTERN int *bgqlx_of_loclx,*loclx_of_bgqlx;$/;"	v
bgqlx_t_vbord_vol	work_in_prog/bgq/src/new_vars_and_types.cpp	/^EXTERN int bgqlx_t_vbord_vol,bgq_vsurf_vol;$/;"	v
bi_color	work_in_prog/bgq/src/new_vars_and_types.cpp	/^typedef bi_complex bi_color[3];$/;"	t	file:
bi_complex	work_in_prog/bgq/src/new_vars_and_types.cpp	/^ typedef complex bi_complex[2];$/;"	t	file:
bi_complex	work_in_prog/bgq/src/new_vars_and_types.cpp	/^ typedef vector4double bi_complex;$/;"	t	file:
bi_halfspincolor	work_in_prog/bgq/src/new_vars_and_types.cpp	/^typedef bi_color bi_halfspincolor[2];$/;"	t	file:
bi_oct_su3	work_in_prog/bgq/src/new_vars_and_types.cpp	/^typedef bi_su3 bi_oct_su3[8];$/;"	t	file:
bi_spincolor	work_in_prog/bgq/src/new_vars_and_types.cpp	/^typedef bi_color bi_spincolor[4];$/;"	t	file:
bi_su3	work_in_prog/bgq/src/new_vars_and_types.cpp	/^typedef bi_color bi_su3[3];$/;"	t	file:
bicgstab_inv_over_time	src/inverters/templates/bicgstab_invert_template_threaded.cpp	/^  double bicgstab_inv_over_time=0;$/;"	m	namespace:nissa	file:
bin_PROGRAMS	build/projects/Makefile	/^bin_PROGRAMS = $(top_builddir)\/bin\/generate$(EXEEXT) \\$/;"	m
bin_PROGRAMS	build/tools/Makefile	/^bin_PROGRAMS = $(top_builddir)\/tools\/benchmarks\/stag$(EXEEXT) \\$/;"	m
binary_ascii	projects/semileptonic/test_proj.cpp	/^int T,L,seed,tsource,npassed_conf,ntot_conf,rprop,binary_ascii;$/;"	v
binary_out	tools/clusterize2.cpp	/^int REIM,use_new_contraction_layout,binary_out;$/;"	v
bind_conf	src/operations/smearing/recursive_Wflower.hpp	/^    void bind_conf(quad_su3 *ori_conf)$/;"	f	struct:nissa::recursive_Wflower_t
bindir	build/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	build/projects/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	build/src/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	build/tools/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bitrev	src/routines/math_routines.cpp	/^  int bitrev(int in,int l2n)$/;"	f	namespace:nissa
bitspp	src/free_theory/free_theory_types.hpp	/^    uint16_t bitspp;$/;"	m	struct:nissa::bmpfile_info_header
block_size	src/base/DDalphaAMG_bridge.cpp	/^  nissa::coords block_size[MAX_MG_LEVELS];$/;"	m	namespace:DD	file:
block_size_set	src/base/DDalphaAMG_bridge.cpp	/^  bool block_size_set=false;$/;"	m	namespace:DD	file:
bmat	src/eigenvalues/eigenvalues_arpack.hpp	/^    EXTERN_ARPACK char bmat[2] INIT_ARPACK_TO(="I");$/;"	m	namespace:nissa::arpack_data
bmp	projects/x/progs/bmp_scramble.cpp	/^bmpfile bmp;$/;"	v
bmp_bytesz	src/free_theory/free_theory_types.hpp	/^    uint32_t bmp_bytesz;$/;"	m	struct:nissa::bmpfile_info_header
bmp_offset	src/free_theory/free_theory_types.hpp	/^    uint32_t bmp_offset;$/;"	m	struct:nissa::bmpfile_header
bmpfile	src/free_theory/free_theory_types.hpp	/^  struct bmpfile$/;"	s	namespace:nissa
bmpfile_header	src/free_theory/free_theory_types.hpp	/^  struct bmpfile_header$/;"	s	namespace:nissa
bmpfile_info_header	src/free_theory/free_theory_types.hpp	/^  struct bmpfile_info_header$/;"	s	namespace:nissa
bmpfile_magic	src/free_theory/free_theory_types.hpp	/^  struct bmpfile_magic{unsigned char magic[2];};$/;"	s	namespace:nissa
bord_dir_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int bord_dir_vol[NDIM],bord_offset[NDIM];$/;"	m	namespace:nissa
bord_offset	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int bord_dir_vol[NDIM],bord_offset[NDIM];$/;"	m	namespace:nissa
bord_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int bord_vol,bord_volh;$/;"	m	namespace:nissa
bord_volh	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int bord_vol,bord_volh;$/;"	m	namespace:nissa
bordlx_of_coord	src/geometry/geometry_lx.cpp	/^  int bordlx_of_coord(int *x,int mu)$/;"	f	namespace:nissa
bordlx_of_surflx	src/geometry/geometry_lx.cpp	/^  int bordlx_of_surflx(int loclx,int mu)$/;"	f	namespace:nissa
both_r	projects/semileptonic/new_version/new_semileptonic.cpp	/^  int both_r;$/;"	m	struct:propgroup_t	file:
boundary_cond	projects/generate_confs/generate_quenched.cpp	/^boundary_cond_t boundary_cond=UNSPEC_BOUNDARY_COND;$/;"	v
boundary_cond_t	src/operations/gaugeconf.hpp	/^  enum boundary_cond_t{UNSPEC_BOUNDARY_COND,PERIODIC_BOUNDARY_COND,OPEN_BOUNDARY_COND};$/;"	g	namespace:nissa
box_comm	src/operations/su3_paths/gauge_sweeper.hpp	/^    all_to_all_comm_t *box_comm[16];$/;"	m	struct:nissa::gauge_sweeper_t
box_coord	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords box_coord[1<<NDIM];$/;"	m	namespace:nissa
box_size	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords box_size[1<<NDIM];$/;"	m	namespace:nissa
broadcast	src/routines/mpi_routines.cpp	/^  double broadcast(double in,int rank_from)$/;"	f	namespace:nissa
broadcast	src/routines/mpi_routines.cpp	/^  int broadcast(int in,int rank_from)$/;"	f	namespace:nissa
broadcast	src/routines/mpi_routines.cpp	/^  void broadcast(rat_approx_t *rat,int rank_from)$/;"	f	namespace:nissa
broadcast_internal	src/routines/mpi_routines.cpp	/^  template <class T> T broadcast_internal(T in,int rank_from,MPI_Datatype type)$/;"	f	namespace:nissa
broadcast_ptr	src/routines/thread.hpp	/^  EXTERN_THREAD void *broadcast_ptr;$/;"	m	namespace:nissa
buf_in	src/operations/su3_paths/gauge_sweeper.hpp	/^    su3 *buf_out,*buf_in;$/;"	m	struct:nissa::gauge_sweeper_t
buf_out	src/operations/su3_paths/gauge_sweeper.hpp	/^    su3 *buf_out,*buf_in;$/;"	m	struct:nissa::gauge_sweeper_t
buf_size	work_in_prog/bgq/src/add_var.hpp	/^  uint64_t buf_size;$/;"	m	struct:spi_comm_t
buffer	projects/ib/disco2.cpp	/^  complex *buffer;$/;"	m	namespace:mel	file:
buffer_t	src/io/buffer.hpp	/^  struct buffer_t$/;"	s	namespace:nissa
build	build/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	build/projects/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	build/src/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	build/tools/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build_alias	build/Makefile	/^build_alias = $/;"	m
build_alias	build/projects/Makefile	/^build_alias = $/;"	m
build_alias	build/src/Makefile	/^build_alias = $/;"	m
build_alias	build/tools/Makefile	/^build_alias = $/;"	m
build_cpu	build/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	build/projects/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	build/src/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	build/tools/Makefile	/^build_cpu = x86_64$/;"	m
build_os	build/Makefile	/^build_os = linux-gnu$/;"	m
build_os	build/projects/Makefile	/^build_os = linux-gnu$/;"	m
build_os	build/src/Makefile	/^build_os = linux-gnu$/;"	m
build_os	build/tools/Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	build/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	build/projects/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	build/src/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	build/tools/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_vendor	build/Makefile	/^build_vendor = pc$/;"	m
build_vendor	build/projects/Makefile	/^build_vendor = pc$/;"	m
build_vendor	build/src/Makefile	/^build_vendor = pc$/;"	m
build_vendor	build/tools/Makefile	/^build_vendor = pc$/;"	m
builddir	build/Makefile	/^builddir = .$/;"	m
builddir	build/projects/Makefile	/^builddir = .$/;"	m
builddir	build/src/Makefile	/^builddir = .$/;"	m
builddir	build/tools/Makefile	/^builddir = .$/;"	m
bulk_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t bulk_vol,non_bw_surf_vol,non_fw_surf_vol;$/;"	m	namespace:nissa
bw	projects/ib/contr.hpp	/^    std::string bw,fw;$/;"	m	struct:nissa::handcuffs_side_map_t
bw_surf_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t surf_vol,bw_surf_vol,fw_surf_vol;$/;"	m	namespace:nissa
c	projects/ib/contr.hpp	/^    std::string a,b,c;$/;"	m	struct:nissa::bar_triplet_t
c	src/io/endianness.cpp	/^    char c[2];$/;"	m	union:nissa::uint16_t_reverter_t	file:
c	src/io/endianness.cpp	/^    char c[4];$/;"	m	union:nissa::float_reverter_t	file:
c	src/io/endianness.cpp	/^    char c[8];$/;"	m	union:nissa::double_reverter_t	file:
c	src/operations/su3_paths/arbitrary.hpp	/^    coords c;$/;"	m	struct:nissa::coords_t
c0	src/new_types/su3_op.hpp	/^    double c0,c1;$/;"	m	struct:nissa::hermitian_exp_ingredients
c1	src/free_theory/free_theory_types.hpp	/^    double c1;$/;"	m	struct:nissa::gauge_info
c1	src/new_types/su3_op.hpp	/^    double c0,c1;$/;"	m	struct:nissa::hermitian_exp_ingredients
c2u	src/new_types/su3_op.hpp	/^    double c2u,s2u;$/;"	m	struct:nissa::hermitian_exp_ingredients
cSW	projects/reno_const/RIMOM.cpp	/^double kappa,cSW;$/;"	v
cSW	projects/semileptonic/semileptonic_smeared.cpp	/^double cSW;$/;"	v
cSW	src/hmc/quark_pars.hpp	/^    double cSW;$/;"	m	struct:nissa::quark_content_t
c_t	src/eigenvalues/eigenvalues_arpack.hpp	/^    typedef _Complex double c_t;$/;"	t	namespace:nissa::arpack_data
cache_flush	src/base/thread_macros.hpp	/^inline void cache_flush()$/;"	f
cache_flush	src/base/thread_macros.hpp	536;"	d
calculate_2pts	projects/semileptonic/gevp_3pts.cpp	/^void calculate_2pts()$/;"	f
calculate_2pts_prop_combo	projects/g/g.cpp	/^void calculate_2pts_prop_combo(FILE *fout,colorspinspin *SA,colorspinspin *SB,double SA_mass,double SA_th,double SB_mass,double SB_th)$/;"	f
calculate_3pts	projects/semileptonic/gevp_3pts.cpp	/^void calculate_3pts(int iop_seq)$/;"	f
calculate_S	projects/eight_BK/smeared_BK_all_in_one.cpp	/^void calculate_S(int iwall)$/;"	f
calculate_S0	projects/g/g.cpp	/^void calculate_S0(colorspinspin *S0,double mass,double theta,double stopping_residue)$/;"	f
calculate_S0	projects/reno_const/RIMOM.cpp	/^void calculate_S0()$/;"	f
calculate_S0	projects/semileptonic/gevp.cpp	/^void calculate_S0(int ism_lev_so)$/;"	f
calculate_S0	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^void calculate_S0(int ism_lev_so)$/;"	f
calculate_S0	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void calculate_S0(int ism_lev_so)$/;"	f
calculate_S0_derivative	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^void calculate_S0_derivative(int ism_lev_so)$/;"	f
calculate_S0_derivative	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void calculate_S0_derivative(int ism_lev_so)$/;"	f
calculate_S0_lcsi	projects/semileptonic/gevp_3pts.cpp	/^void calculate_S0_lcsi(colorspinspin *out,double theta,colorspinspin *in)$/;"	f
calculate_S0_smsi	projects/semileptonic/gevp_3pts.cpp	/^void calculate_S0_smsi()$/;"	f
calculate_S1	projects/g/g.cpp	/^void calculate_S1(colorspinspin *S1,double mass,double theta,colorspinspin *S0,double stopping_residue)$/;"	f
calculate_S1	projects/semileptonic/gevp_3pts.cpp	/^void calculate_S1(int iseq)$/;"	f
calculate_S1	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void calculate_S1(int ispec,int ism_lev_se)$/;"	f
calculate_S1_dislike	projects/nucleons/nucleons_smeared.cpp	/^void calculate_S1_dislike(int rlike,int rdislike)$/;"	f
calculate_S1_like	projects/nucleons/nucleons_smeared.cpp	/^void calculate_S1_like(int rlike,int rdislike)$/;"	f
calculate_S1_like_dislike	projects/nucleons/nucleons_smeared.cpp	/^void calculate_S1_like_dislike(int rlike,int rdislike,int ld)$/;"	f
calculate_all_2pts	projects/g/g.cpp	/^void calculate_all_2pts(FILE *fout)$/;"	f
calculate_all_2pts	projects/nucleons/nucleons_smeared.cpp	/^void calculate_all_2pts(char *path,su3spinspin ***S0)$/;"	f
calculate_all_2pts	projects/reno_const/RIMOM.cpp	/^void calculate_all_2pts()$/;"	f
calculate_all_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^void calculate_all_2pts(int ism_lev_so,int ism_lev_si)$/;"	f
calculate_all_2pts_ten	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^ void calculate_all_2pts_ten(int ism_lev_so,int ism_lev_si)$/;"	f
calculate_all_3pts	projects/g/g.cpp	/^void calculate_all_3pts()$/;"	f
calculate_all_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void calculate_all_3pts(int ispec,int ism_lev_so,int ism_lev_se)$/;"	f
calculate_all_3pts_prop_combo	projects/g/g.cpp	/^void calculate_all_3pts_prop_combo(colorspinspin *S0,colorspinspin *S1,double h_mass,double theta,const char *tag)$/;"	f
calculate_all_3pts_with_current_sequential	projects/nucleons/nucleons_smeared.cpp	/^void calculate_all_3pts_with_current_sequential(int rlike,int rdislike,int rS0,char *path,const char *tag)$/;"	f
calculate_all_S0	projects/g/g.cpp	/^void calculate_all_S0()$/;"	f
calculate_all_S0	projects/semileptonic/semileptonic_smeared.cpp	/^void calculate_all_S0(int ism_lev_so)$/;"	f
calculate_all_S1	projects/g/g.cpp	/^void calculate_all_S1()$/;"	f
calculate_all_S1	projects/semileptonic/semileptonic_smeared.cpp	/^void calculate_all_S1(int ispec,int ism_lev_se)$/;"	f
calculate_all_contractions	projects/eight_BK/smeared_BK_all_in_one.cpp	/^void calculate_all_contractions()$/;"	f
cancel_if_zero_mode	src/free_theory/tlSym_gauge_propagator.cpp	/^  bool cancel_if_zero_mode(spin1field prop,gauge_info gl,int imom)$/;"	f	namespace:nissa
cancel_if_zero_mode	src/free_theory/tlSym_gauge_propagator.cpp	/^  bool cancel_if_zero_mode(spin1prop prop,gauge_info gl,int imom)$/;"	f	namespace:nissa
cart_comm	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Comm cart_comm;$/;"	m	namespace:nissa
cart_coords	src/base/DDalphaAMG_bridge.cpp	/^  static int cart_coords(MPI_Comm comm,int ext_rank,int maxdims,int c[])$/;"	f	namespace:DD
cart_rank	src/base/DDalphaAMG_bridge.cpp	/^  static int cart_rank(MPI_Comm comm,const int ext_c[],int *ext_rank)$/;"	f	namespace:DD
cart_rank	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int rank,nranks,cart_rank;$/;"	m	namespace:nissa
cd	src/routines/ios.cpp	/^  int cd(std::string path)$/;"	f	namespace:nissa
ceil_to_next_eight_multiple	src/routines/mpi_routines.cpp	/^  MPI_Offset ceil_to_next_eight_multiple(MPI_Offset pos)$/;"	f	namespace:nissa
cg_solve	src/inverters/templates/modern_cg.hpp	/^  template <class Fmat> void cg_solve(complex *x,const Fmat& mat_impl,complex *b,int mat_size,int mat_size_to_allocate,double target_residue,int nmax_iters,int print_each)$/;"	f	namespace:nissa
cgm_der_solution	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^spincolor **cgm_der_solution;$/;"	v
cgm_inv_over_time	src/base/bench.hpp	/^  EXTERN double cgm_inv_over_time,cg_inv_over_time EQUAL_ZERO;$/;"	m	namespace:nissa
cgm_solution	projects/eight_BK/smeared_BK_all_in_one.cpp	/^spincolor **cgm_solution,*temp_vec[2];$/;"	v
cgm_solution	projects/semileptonic/gevp.cpp	/^spincolor *source,*temp_vec[2],*cgm_solution[1];$/;"	v
cgm_solution	projects/semileptonic/gevp_3pts.cpp	/^spincolor *source,*cgm_solution[1],*temp_vec[2];$/;"	v
cgm_solution	projects/semileptonic/semileptonic_smeared.cpp	/^spincolor **cgm_solution,*temp_vec[2];$/;"	v
cgm_solution	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^spincolor **cgm_solution,*temp_vec[2];$/;"	v
cgm_solution	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^spincolor **cgm_solution,*temp_vec[2];$/;"	v
ch_colorspinspin	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^colorspinspin *ch_colorspinspin;$/;"	v
ch_contr_2pts	projects/semileptonic/semileptonic_smeared.cpp	/^complex *ch_contr_2pts;$/;"	v
ch_contr_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^complex *ch_contr_2pts;$/;"	v
ch_contr_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^complex *ch_contr_2pts;$/;"	v
ch_contr_3pts	projects/semileptonic/semileptonic_smeared.cpp	/^complex *ch_contr_3pts;$/;"	v
ch_contr_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^complex *ch_contr_3pts;$/;"	v
ch_contr_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^complex *ch_contr_3pts;$/;"	v
ch_op1_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *ch_op1_2pts,*ch_op2_2pts;$/;"	v
ch_op1_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *ch_op1_2pts,*ch_op2_2pts;$/;"	v
ch_op1_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *ch_op1_3pts,*ch_op2_3pts;$/;"	v
ch_op1_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *ch_op1_3pts,*ch_op2_3pts;$/;"	v
ch_op2_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *ch_op1_2pts,*ch_op2_2pts;$/;"	v
ch_op2_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *ch_op1_2pts,*ch_op2_2pts;$/;"	v
ch_op2_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *ch_op1_3pts,*ch_op2_3pts;$/;"	v
ch_op2_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *ch_op1_3pts,*ch_op2_3pts;$/;"	v
ch_op_sink_2pts	projects/semileptonic/semileptonic_smeared.cpp	/^int *ch_op_sour_2pts,*ch_op_sink_2pts;$/;"	v
ch_op_sink_3pts	projects/semileptonic/semileptonic_smeared.cpp	/^int *ch_op_sour_3pts,*ch_op_sink_3pts;$/;"	v
ch_op_sour_2pts	projects/semileptonic/semileptonic_smeared.cpp	/^int *ch_op_sour_2pts,*ch_op_sink_2pts;$/;"	v
ch_op_sour_3pts	projects/semileptonic/semileptonic_smeared.cpp	/^int *ch_op_sour_3pts,*ch_op_sink_3pts;$/;"	v
ch_prop	projects/semileptonic/semileptonic_smeared.cpp	/^PROP_TYPE *ch_prop;$/;"	v
ch_su3spinspin	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^su3spinspin *ch_su3spinspin;$/;"	v
change	tools/clusterize.cpp	/^void change(double *dest,double *sour,int ndoubles)$/;"	f
change_endianness	src/io/endianness.cpp	/^  void change_endianness(double *dest,double *sour,int ndoubles,int verbose)$/;"	f	namespace:nissa
change_endianness	src/io/endianness.cpp	/^  void change_endianness(float *dest,float *sour,int nfloats,int verbose)$/;"	f	namespace:nissa
change_endianness	src/io/endianness.cpp	/^  void change_endianness(uint16_t *dest,uint16_t *sour,int nshorts,int verbose)$/;"	f	namespace:nissa
change_endianness	src/io/endianness.hpp	/^  inline void change_endianness(int *dest,int *sour,int nints,int verbose=1)$/;"	f	namespace:nissa
change_endianness	src/io/endianness.hpp	/^  inline void change_endianness(uint32_t *dest,uint32_t *sour,int nints,int verbose=1)$/;"	f	namespace:nissa
change_endianness	src/io/endianness.hpp	/^  inline void change_endianness(uint64_t *dest,uint64_t *sour,int nints,int verbose=1)$/;"	f	namespace:nissa
change_endianness	src/io/endianness.hpp	/^  template <class T> void change_endianness(T &a,int verbose=0){change_endianness(&a,&a,1,verbose);}$/;"	f	namespace:nissa
charge	projects/ib/prop.hpp	/^    double charge;$/;"	m	struct:nissa::qprop_t
charge	src/hmc/quark_pars.hpp	/^    double charge;$/;"	m	struct:nissa::quark_content_t
check_128_bit_prec	src/base/debug.cpp	/^  void check_128_bit_prec()$/;"	f	namespace:nissa
check_2pts_with_current_sequential_source	projects/nucleons/nucleons_smeared.cpp	/^void check_2pts_with_current_sequential_source(char *path)$/;"	f
check_Landau_or_Coulomb_gauge_fixed	src/operations/gauge_fixing.cpp	/^  bool check_Landau_or_Coulomb_gauge_fixed(double &prec,double &func,quad_su3 *fixed_conf,LC_gauge_fixing_pars_t::gauge_t gauge,double target_prec,double *loc_F)$/;"	f	namespace:nissa
check_all_lattice_neighbours_are_spi_first_neighbours	src/bgq/spi.cpp	/^  void check_all_lattice_neighbours_are_spi_first_neighbours()$/;"	f	namespace:nissa
check_approx_validity	src/hmc/multipseudo/set_expansions.cpp	/^  bool check_approx_validity(rat_approx_t &appr,double eig_min,double eig_max,double expo,double maxerr)$/;"	f	namespace:nissa
check_bar	projects/ib/checks.cpp	/^void check_bar()$/;"	f
check_bar2	projects/ib/checks.cpp	/^void check_bar2()$/;"	f
check_bar3	projects/ib/checks.cpp	/^void check_bar3()$/;"	f
check_barrier	src/routines/thread.cpp	/^  void check_barrier(const char *barr_file,int barr_line)$/;"	f	namespace:nissa
check_borders_allocated	src/base/vectors.cpp	/^  int check_borders_allocated(void *data,int min_size)$/;"	f	namespace:nissa
check_borders_communicated_at_least_once	src/base/vectors.cpp	/^  int check_borders_communicated_at_least_once(void *data)$/;"	f	namespace:nissa
check_borders_valid	src/base/vectors.cpp	/^  int check_borders_valid(void *data)$/;"	f	namespace:nissa
check_edges_allocated	src/base/vectors.cpp	/^  int check_edges_allocated(void *data,int min_size)$/;"	f	namespace:nissa
check_edges_valid	src/base/vectors.cpp	/^  int check_edges_valid(void *data)$/;"	f	namespace:nissa
check_endianess	tools/clusterize.cpp	/^int check_endianess()$/;"	f
check_endianess	tools/common_tools.cpp	/^void check_endianess()$/;"	f
check_endianness	src/io/endianness.cpp	/^  void check_endianness()$/;"	f	namespace:nissa
check_endianness	tools/conf_transform/edit/ILDG_File_light.cpp	/^void check_endianness()$/;"	f
check_exit_status_arpack	src/eigenvalues/eigenvalues_arpack.cpp	/^    void check_exit_status_arpack(const int info)$/;"	f	namespace:nissa::arpack_data
check_fw_vacuum_curr	projects/ib/checks.cpp	/^void check_fw_vacuum_curr()$/;"	f
check_gen	projects/ib/checks.cpp	/^void check_gen()$/;"	f
check_handcuffs	projects/ib/checks.cpp	/^void check_handcuffs()$/;"	f
check_hit_exactly_once	src/operations/su3_paths/gauge_sweeper.cpp	/^  void gauge_sweeper_t::check_hit_exactly_once()$/;"	f	class:nissa::gauge_sweeper_t
check_hit_in_the_exact_order	src/operations/su3_paths/gauge_sweeper.cpp	/^  void gauge_sweeper_t::check_hit_in_the_exact_order()$/;"	f	class:nissa::gauge_sweeper_t
check_id	projects/x/tests/test_Wilson_gluon_Klein_Gordon_operator.cpp	/^spin1prop *check_id;$/;"	v
check_id_output	projects/x/tests/test_Wilson_gluon_Klein_Gordon_operator.cpp	/^void check_id_output()$/;"	f
check_if_continue	projects/generate_confs/generate.cpp	/^bool check_if_continue()$/;"	f
check_if_continue	projects/generate_confs/generate_quenched.cpp	/^bool check_if_continue()$/;"	f
check_itheta_mass_r	projects/semileptonic/new_version/new_types.cpp	/^void prop_group_t::check_itheta_mass_r(int itheta,int imass,int r)$/;"	f	class:prop_group_t
check_lock	src/routines/ios.hpp	/^    bool check_lock()$/;"	f	class:nissa::lock_file_t
check_mes_2pts	projects/ib/checks.cpp	/^void check_mes_2pts()$/;"	f
check_mes_V1V1	projects/ib/checks.cpp	/^void check_mes_V1V1()$/;"	f
check_mes_cons_self_en	projects/ib/checks.cpp	/^void check_mes_cons_self_en()$/;"	f
check_mes_self_en	projects/ib/checks.cpp	/^void check_mes_self_en()$/;"	f
check_not_too_far	projects/x/progs/correct.cpp	/^int check_not_too_far(coords x,int max_dist)$/;"	f
check_remaining_time	projects/g/g.cpp	/^int check_remaining_time()$/;"	f
check_remaining_time	projects/ib/conf.cpp	/^  int check_remaining_time()$/;"	f	namespace:nissa
check_remaining_time	projects/ib/mel.cpp	/^int check_remaining_time()$/;"	f
check_remaining_time	projects/reno_const/RIMOM.cpp	/^int check_remaining_time()$/;"	f
check_remaining_time	projects/semileptonic/gevp_3pts.cpp	/^int check_remaining_time()$/;"	f
check_remaining_time	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int check_remaining_time()$/;"	f
check_residual_time	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int check_residual_time()$/;"	f
check_scalar_EU	projects/ib/checks.cpp	/^void check_scalar_EU()$/;"	f
check_tok_ends_comment	src/io/input.cpp	/^  int check_tok_ends_comment(char *tok)$/;"	f	namespace:nissa
check_tok_ends_comment	tools/common_tools.cpp	/^int check_tok_ends_comment(char *tok)$/;"	f
check_tok_starts_comment	src/io/input.cpp	/^  int check_tok_starts_comment(char *tok)$/;"	f	namespace:nissa
check_tok_starts_comment	tools/common_tools.cpp	/^int check_tok_starts_comment(char *tok)$/;"	f
check_torus	projects/semileptonic/test_bgq.cpp	/^void check_torus()$/;"	f
check_two_points	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void check_two_points(int ispec,int ism_lev_so,int ism_lev_se)$/;"	f
checksum	src/io/checksum.hpp	/^  typedef uint32_t checksum[2];$/;"	t	namespace:nissa
checksum_compute_ildg_data	src/io/checksum.cpp	/^  void checksum_compute_ildg_data(uint32_t *check,void *data,size_t bps)$/;"	f	namespace:nissa
checksum_compute_nissa_data	src/io/checksum.cpp	/^  void checksum_compute_nissa_data(uint32_t *check,void *data,size_t bps,int prec)$/;"	f	namespace:nissa
chi	tools/conf_measure/magn.cpp	/^color *chi[2],*rnd[2],*guess;$/;"	v
chir_zumba_meas	build/projects/generate_confs/parser.cpp	/^    nissa::chir_zumba_meas_pars_t *chir_zumba_meas;$/;"	m	union:YYSTYPE	file:
chir_zumba_meas	build/projects/generate_confs/parser.hpp	/^    nissa::chir_zumba_meas_pars_t *chir_zumba_meas;$/;"	m	union:YYSTYPE
chir_zumba_meas	projects/generate_confs/driver.hpp	/^    std::vector<chir_zumba_meas_pars_t> chir_zumba_meas;$/;"	m	class:nissa::driver_t
chir_zumba_meas_pars_t	src/operations/stag/zumba.hpp	/^    chir_zumba_meas_pars_t() :$/;"	f	struct:nissa::chir_zumba_meas_pars_t
chir_zumba_meas_pars_t	src/operations/stag/zumba.hpp	/^  struct chir_zumba_meas_pars_t : base_fermionic_meas_t$/;"	s	namespace:nissa
chiral_cond	src/operations/stag/putpourri.cpp	/^    complex chiral_cond;$/;"	m	struct:nissa::fermionic_putpourri_t	file:
chiral_cond_susc	src/operations/stag/putpourri.cpp	/^    complex chiral_cond_susc;$/;"	m	struct:nissa::fermionic_putpourri_t	file:
chromo_operator_adjust_cSW	src/operations/su3_paths/clover_term.hpp	/^  inline void chromo_operator_adjust_cSW(clover_term_t **Cl,double cSW_new,double cSW_old)$/;"	f	namespace:nissa
chromo_operator_adjust_cSW	src/operations/su3_paths/clover_term.hpp	/^  inline void chromo_operator_adjust_cSW(clover_term_t *Cl,double cSW_new,double cSW_old)$/;"	f	namespace:nissa
chromo_operator_factor	src/operations/su3_paths/clover_term.hpp	/^  inline double chromo_operator_factor(double cSW)$/;"	f	namespace:nissa
chromo_operator_include_cSW	src/operations/su3_paths/clover_term.hpp	/^  inline void chromo_operator_include_cSW(clover_term_t *Cl,double cSW)$/;"	f	namespace:nissa
chromo_operator_include_cSW	src/operations/su3_paths/clover_term.hpp	/^  template <class T> void chromo_operator_include_cSW(T Cl,double cSW)$/;"	f	namespace:nissa
chromo_operator_remove_cSW	src/operations/su3_paths/clover_term.hpp	/^  template <class T> void chromo_operator_remove_cSW(T Cl,double cSW)$/;"	f	namespace:nissa
close	projects/ib/disco.cpp	/^void close()$/;"	f
close	projects/ib/ib.cpp	/^void close()$/;"	f
close	projects/ib/mel.cpp	/^void close()$/;"	f
close	projects/ib/nucleons.cpp	/^void close()$/;"	f
close	projects/ib/semileptonic.cpp	/^void close()$/;"	f
close_Bk	projects/eight_BK/smeared_BK_all_in_one.cpp	/^void close_Bk()$/;"	f
close_Zcomputation	projects/reno_const/RIMOM.cpp	/^void close_Zcomputation()$/;"	f
close_calc	projects/x/progs/average_corr.cpp	/^void close_calc()$/;"	f
close_calc	projects/x/progs/bmp_scramble.cpp	/^void close_calc()$/;"	f
close_calc	projects/x/progs/combine.cpp	/^void close_calc()$/;"	f
close_calc	projects/x/progs/compute_corrections.cpp	/^void close_calc()$/;"	f
close_calc	projects/x/progs/compute_self_energy_corrections.cpp	/^void close_calc()$/;"	f
close_calc	projects/x/progs/compute_tadpole_corrections.cpp	/^void close_calc()$/;"	f
close_calc	projects/x/progs/compute_tree_level_corrections.cpp	/^void close_calc()$/;"	f
close_calc	projects/x/progs/correct.cpp	/^void close_calc()$/;"	f
close_calc	projects/x/progs/integrali_divergenti.cpp	/^void close_calc()$/;"	f
close_calc	projects/x/tests/test_meson_self_energy_stochastic_correction.cpp	/^void close_calc()$/;"	f
close_calc	projects/x/tests/test_meson_tree_level_correction.cpp	/^void close_calc()$/;"	f
close_clusterize	tools/x_clusterize/x_clusterize.cpp	/^void close_clusterize()$/;"	f
close_cpn	projects/cpn/cpn.cpp	/^void close_cpn(int isweep)$/;"	f
close_file	src/routines/ios.cpp	/^  void close_file(FILE *file)$/;"	f	namespace:nissa
close_gevp_3pts	projects/semileptonic/gevp_3pts.cpp	/^void close_gevp_3pts()$/;"	f
close_input	src/io/input.cpp	/^  void close_input()$/;"	f	namespace:nissa
close_nissa	src/base/close.cpp	/^  void close_nissa()$/;"	f	namespace:nissa
close_nucleons	projects/nucleons/nucleons_smeared.cpp	/^void close_nucleons()$/;"	f
close_semileptonic	projects/g/g.cpp	/^void close_semileptonic()$/;"	f
close_semileptonic	projects/semileptonic/gevp.cpp	/^void close_semileptonic()$/;"	f
close_semileptonic	projects/semileptonic/new_version/new_semileptonic.cpp	/^void close_semileptonic()$/;"	f
close_semileptonic	projects/semileptonic/new_version/test.cpp	/^void close_semileptonic()$/;"	f
close_semileptonic	projects/semileptonic/semileptonic_smeared.cpp	/^void close_semileptonic()$/;"	f
close_semileptonic	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^void close_semileptonic()$/;"	f
close_semileptonic	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void close_semileptonic()$/;"	f
close_simulation	projects/generate_confs/generate.cpp	/^void close_simulation()$/;"	f
close_simulation	projects/generate_confs/generate_quenched.cpp	/^void close_simulation()$/;"	f
close_test	projects/x/tests/test_Fourier_transform.cpp	/^void close_test()$/;"	f
close_test	projects/x/tests/test_Wilson_gluon_Klein_Gordon_operator.cpp	/^void close_test()$/;"	f
close_test	projects/x/tests/test_Wilson_gluon_propagator.cpp	/^void close_test()$/;"	f
close_test	projects/x/tests/test_propagator_shift.cpp	/^void close_test()$/;"	f
close_test	projects/x/tests/test_stochastic_qqg_vertex.cpp	/^void close_test()$/;"	f
close_test	projects/x/tests/test_stochastic_source_null_mode.cpp	/^void close_test()$/;"	f
close_test	projects/x/tests/test_tlSym_gluon_propagator.cpp	/^void close_test()$/;"	f
close_test	projects/x/tests/test_tlSym_gluon_stochastic_propagator.cpp	/^void close_test()$/;"	f
close_test	projects/x/tests/test_tlSym_gluon_stochastic_propagator_no_null_mode.cpp	/^void close_test()$/;"	f
close_test	projects/x/tests/test_twisted_propagator.cpp	/^void close_test()$/;"	f
close_test	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^void close_test()$/;"	f
close_test	projects/x/tests/test_twisted_propagator_stochastic_correction.cpp	/^void close_test()$/;"	f
clover_run	projects/ib/pars.hpp	/^  EXTERN_PARS int clover_run;$/;"	m	namespace:nissa
clover_term	src/operations/su3_paths/clover_term.hpp	/^  template <class T1,class T2> void clover_term(T1 Cl,double cSW,T2 conf)$/;"	f	namespace:nissa
clover_term_t	src/new_types/su3.hpp	/^  typedef su3 clover_term_t[4];$/;"	t	namespace:nissa
clover_to_be_computed	src/hmc/theory_pars.hpp	/^    bool clover_to_be_computed()$/;"	f	struct:nissa::theory_pars_t
clust_size	tools/clusterize2.cpp	/^int njack,clust_size;$/;"	v
clust_size	tools/x_clusterize/x_clusterize.cpp	/^int nconfs,nterm,njacks,each,clust_size;$/;"	v
clusterize	tools/x_clusterize/x_clusterize.cpp	/^void clusterize(double *data)$/;"	f
coeff	projects/semileptonic/new_version/new_types.hpp	/^  double *coeff;$/;"	m	struct:gauss_smear_pars_t
coeff	projects/semileptonic/new_version/new_types.hpp	/^  double *coeff;$/;"	m	struct:two_pts_corr_pars_t
coeff	src/new_types/metadynamics.hpp	/^    double coeff;$/;"	m	struct:nissa::meta_pars_t
coeff	src/operations/remez/remez_algorithm.hpp	/^    float_high_prec_t *coeff;$/;"	m	struct:nissa::rat_approx_finder_t
color	src/new_types/su3.hpp	/^  typedef complex color[NCOL];$/;"	t	namespace:nissa
color2	src/new_types/su3.hpp	/^  typedef complex color2[2];$/;"	t	namespace:nissa
color_128	src/new_types/float_128.hpp	/^  typedef complex_128 color_128[NCOL];$/;"	t	namespace:nissa
color_128_copy	src/new_types/float_128.hpp	/^  inline void color_128_copy(color_128 a,color_128 b)$/;"	f	namespace:nissa
color_128_isubt	src/new_types/float_128.hpp	/^  inline void color_128_isubt(color_128 a,color_128 b,color_128 c)$/;"	f	namespace:nissa
color_128_isubtassign	src/new_types/float_128.hpp	/^  inline void color_128_isubtassign(color_128 a,color_128 b)$/;"	f	namespace:nissa
color_128_isumm	src/new_types/float_128.hpp	/^  inline void color_128_isumm(color_128 a,color_128 b,color_128 c)$/;"	f	namespace:nissa
color_128_isummassign	src/new_types/float_128.hpp	/^  inline void color_128_isummassign(color_128 a,color_128 b)$/;"	f	namespace:nissa
color_128_put_to_zero	src/new_types/float_128.hpp	/^  inline void color_128_put_to_zero(color_128 a)$/;"	f	namespace:nissa
color_128_subt	src/new_types/float_128.hpp	/^  inline void color_128_subt(color_128 a,color_128 b,color_128 c)$/;"	f	namespace:nissa
color_128_subtassign	src/new_types/float_128.hpp	/^  inline void color_128_subtassign(color_128 a,color_128 b)$/;"	f	namespace:nissa
color_128_summ	src/new_types/float_128.hpp	/^  inline void color_128_summ(color_128 a,color_128 b,color_128 c)$/;"	f	namespace:nissa
color_128_summassign	src/new_types/float_128.hpp	/^  inline void color_128_summassign(color_128 a,color_128 b)$/;"	f	namespace:nissa
color_copy	src/new_types/su3_op.hpp	/^  inline void color_copy(color b,const color a) {for(size_t ic=0;ic<NCOL;ic++) complex_copy(b[ic],a[ic]);}$/;"	f	namespace:nissa
color_halfspincolor	src/new_types/su3.hpp	/^  typedef halfspincolor color_halfspincolor[NCOL];$/;"	t	namespace:nissa
color_isubt	src/new_types/su3_op.hpp	/^  inline void color_isubt(color a,const color b,const color c) {for(size_t ic=0;ic<NCOL;ic++) complex_isubt(a[ic],b[ic],c[ic]);}$/;"	f	namespace:nissa
color_isubtassign	src/new_types/su3_op.hpp	/^  inline void color_isubtassign(color a,const color b) {color_isubt(a,a,b);}$/;"	f	namespace:nissa
color_isumm	src/new_types/su3_op.hpp	/^  inline void color_isumm(color a,const color b,const color c) {for(size_t ic=0;ic<NCOL;ic++) complex_isumm(a[ic],b[ic],c[ic]);}$/;"	f	namespace:nissa
color_isummassign	src/new_types/su3_op.hpp	/^  inline void color_isummassign(color a,const color b) {color_isumm(a,a,b);}$/;"	f	namespace:nissa
color_linear_comb	src/new_types/su3_op.hpp	/^  inline void color_linear_comb(color a,const color b,const double cb,const color c,const double cc) {for(size_t ic=0;ic<NCOL;ic++) complex_linear_comb(a[ic],b[ic],cb,c[ic],cc);}$/;"	f	namespace:nissa
color_norm2	src/new_types/su3_op.hpp	/^  inline double color_norm2(const color c)$/;"	f	namespace:nissa
color_print	src/new_types/su3_op.hpp	/^  inline void color_print(const color c)$/;"	f	namespace:nissa
color_prod_double	src/new_types/su3_op.hpp	/^  inline void color_prod_double(color a,const color b,const double c) {for(size_t ic=0;ic<NCOL;ic++) complex_prod_double(a[ic],b[ic],c);}$/;"	f	namespace:nissa
color_prod_idouble	src/new_types/su3_op.hpp	/^  inline void color_prod_idouble(color a,const color b,const double c) {for(size_t ic=0;ic<NCOL;ic++) complex_prod_idouble(a[ic],b[ic],c);}$/;"	f	namespace:nissa
color_put_to_gauss	src/base/random.cpp	/^  void color_put_to_gauss(color H,rnd_gen *gen,double sigma)$/;"	f	namespace:nissa
color_put_to_zero	src/new_types/su3_op.hpp	/^  inline void color_put_to_zero(color m) {for(size_t ic=0;ic<NCOL;ic++) complex_put_to_zero(m[ic]);}$/;"	f	namespace:nissa
color_scalar_prod	src/new_types/su3_op.hpp	/^  inline void color_scalar_prod(complex out,const color a,const color b)$/;"	f	namespace:nissa
color_subt	src/new_types/su3_op.hpp	/^  inline void color_subt(color a,const color b,const color c) {for(size_t ic=0;ic<NCOL;ic++) complex_subt(a[ic],b[ic],c[ic]);}$/;"	f	namespace:nissa
color_subt_the_prod_complex	src/new_types/su3_op.hpp	/^  inline void color_subt_the_prod_complex(color a,const color b,const complex c) {for(size_t ic=0;ic<NCOL;ic++) complex_subt_the_prod(a[ic],b[ic],c);}$/;"	f	namespace:nissa
color_subtassign	src/new_types/su3_op.hpp	/^  inline void color_subtassign(color a,const color b) {color_subt(a,a,b);}$/;"	f	namespace:nissa
color_summ	src/new_types/su3_op.hpp	/^  inline void color_summ(color a,const color b,const color c) {for(size_t ic=0;ic<NCOL;ic++) complex_summ(a[ic],b[ic],c[ic]);}$/;"	f	namespace:nissa
color_summ_the_prod_complex	src/new_types/su3_op.hpp	/^  inline void color_summ_the_prod_complex(color a,const color b,const complex c) {for(size_t ic=0;ic<NCOL;ic++) complex_summ_the_prod(a[ic],b[ic],c);}$/;"	f	namespace:nissa
color_summ_the_prod_double	src/new_types/su3_op.hpp	/^  inline void color_summ_the_prod_double(color a,const color b,const double c) {for(size_t ic=0;ic<NCOL;ic++) complex_summ_the_prod_double(a[ic],b[ic],c);}$/;"	f	namespace:nissa
color_summ_the_prod_idouble	src/new_types/su3_op.hpp	/^  inline void color_summ_the_prod_idouble(color a,const color b,const double c) {for(size_t ic=0;ic<NCOL;ic++) complex_summ_the_prod_idouble(a[ic],b[ic],c);}$/;"	f	namespace:nissa
color_summassign	src/new_types/su3_op.hpp	/^  inline void color_summassign(color a,const color b) {color_summ(a,a,b);}$/;"	f	namespace:nissa
colorspin	src/new_types/su3.hpp	/^  typedef spin colorspin[NCOL];$/;"	t	namespace:nissa
colorspincolorspin	src/new_types/su3.hpp	/^  typedef spincolorspin colorspincolorspin[NCOL];$/;"	t	namespace:nissa
colorspinspin	src/new_types/su3.hpp	/^  typedef spinspin colorspinspin[NCOL];$/;"	t	namespace:nissa
colorspinspin_copy	src/new_types/su3_op.hpp	/^  inline void colorspinspin_copy(colorspinspin b,const colorspinspin a) {for(size_t i=0;i<NCOL;i++) spinspin_copy(b[i],a[i]);}$/;"	f	namespace:nissa
colorspinspin_prod_complex	src/new_types/su3_op.hpp	/^  inline void colorspinspin_prod_complex(colorspinspin out,const colorspinspin in,const complex factor)$/;"	f	namespace:nissa
colorspinspin_prod_complex_conj	src/new_types/su3_op.hpp	/^  inline void colorspinspin_prod_complex_conj(colorspinspin out,const colorspinspin in,const complex factor)$/;"	f	namespace:nissa
colorspinspin_prod_double	src/new_types/su3_op.hpp	/^  inline void colorspinspin_prod_double(colorspinspin out,const colorspinspin in,const double factor)$/;"	f	namespace:nissa
colorspinspin_prodassign_complex	src/new_types/su3_op.hpp	/^  inline void colorspinspin_prodassign_complex(colorspinspin c,const complex f)$/;"	f	namespace:nissa
colorspinspin_prodassign_complex_conj	src/new_types/su3_op.hpp	/^  inline void colorspinspin_prodassign_complex_conj(colorspinspin c,const complex f)$/;"	f	namespace:nissa
colorspinspin_prodassign_double	src/new_types/su3_op.hpp	/^  inline void colorspinspin_prodassign_double(colorspinspin c,const double f) {colorspinspin_prod_double(c,c,f);}$/;"	f	namespace:nissa
colorspinspin_prodassign_idouble	src/new_types/su3_op.hpp	/^  inline void colorspinspin_prodassign_idouble(colorspinspin c,const double f)$/;"	f	namespace:nissa
colorspinspin_put_to_zero	src/new_types/su3_op.hpp	/^  inline void colorspinspin_put_to_zero(colorspinspin m) {for(size_t ic=0;ic<NCOL;ic++) spinspin_put_to_zero(m[ic]);}$/;"	f	namespace:nissa
colorspinspin_subt	src/new_types/su3_op.hpp	/^  inline void colorspinspin_subt(colorspinspin out,const colorspinspin in1,const colorspinspin in2) {for(size_t i=0;i<NCOL;i++) spinspin_subt(out[i],in1[i],in2[i]);}$/;"	f	namespace:nissa
colorspinspin_subtassign	src/new_types/su3_op.hpp	/^  inline void colorspinspin_subtassign(colorspinspin out,const colorspinspin in) {colorspinspin_subt(out,out,in);}$/;"	f	namespace:nissa
colorspinspin_summ	src/new_types/su3_op.hpp	/^  inline void colorspinspin_summ(colorspinspin out,const colorspinspin in1,const colorspinspin in2) {for(size_t i=0;i<NCOL;i++) spinspin_summ(out[i],in1[i],in2[i]);}$/;"	f	namespace:nissa
colorspinspin_summ_the_prod_double	src/new_types/su3_op.hpp	/^  inline void colorspinspin_summ_the_prod_double(colorspinspin out,const colorspinspin in,const double factor)$/;"	f	namespace:nissa
colorspinspin_summ_the_prod_idouble	src/new_types/su3_op.hpp	/^  inline void colorspinspin_summ_the_prod_idouble(colorspinspin out,const colorspinspin in,const double factor)$/;"	f	namespace:nissa
colorspinspin_summassign	src/new_types/su3_op.hpp	/^  inline void colorspinspin_summassign(colorspinspin out,const colorspinspin in) {colorspinspin_summ(out,out,in);}$/;"	f	namespace:nissa
combine	src/routines/ios.cpp	/^  std::string combine(const char *format,...)$/;"	f	namespace:nissa
combine_basis_to_restart	src/eigenvalues/eigenvalues_autarchic.cpp	/^    void combine_basis_to_restart(int nout,int nin,complex *coeffs,complex **vect,int vec_length)$/;"	f	namespace:nissa::internal_eigenvalues
comm_in_prog	src/communicate/communicate.hpp	/^    int comm_in_prog;$/;"	m	struct:nissa::comm_t
comm_in_prog	src/communicate/communicate.hpp	/^  EXTERN_COMMUNICATE int comm_in_prog;$/;"	m	namespace:nissa
comm_in_prog	work_in_prog/bgq/src/add_var.hpp	/^  int comm_in_prog;$/;"	m	struct:spi_comm_t
comm_init_time	src/operations/su3_paths/gauge_sweeper.hpp	/^    double comm_init_time,comp_time,comm_time;$/;"	m	struct:nissa::gauge_sweeper_t
comm_setup	src/communicate/borders.cpp	/^  void comm_setup(comm_t &comm)$/;"	f	namespace:nissa
comm_start	src/communicate/borders.cpp	/^  void comm_start(comm_t &comm,int *dir_comm=NULL,int tot_size=-1)$/;"	f	namespace:nissa
comm_t	src/communicate/communicate.hpp	/^    comm_t(){initialized=false;}$/;"	f	struct:nissa::comm_t
comm_t	src/communicate/communicate.hpp	/^  struct comm_t$/;"	s	namespace:nissa
comm_time	src/operations/su3_paths/gauge_sweeper.hpp	/^    double comm_init_time,comp_time,comm_time;$/;"	m	struct:nissa::gauge_sweeper_t
comm_unset	src/communicate/borders.cpp	/^  void comm_unset(comm_t &comm)$/;"	f	namespace:nissa
comm_wait	src/communicate/borders.cpp	/^  void comm_wait(comm_t &comm)$/;"	f	namespace:nissa
common_setup_part1	src/communicate/all_to_all.cpp	/^  void all_to_all_comm_t::common_setup_part1(temp_build_t &build)$/;"	f	class:nissa::all_to_all_comm_t
common_setup_part2	src/communicate/all_to_all.cpp	/^  void all_to_all_comm_t::common_setup_part2(int nel_note,$/;"	f	class:nissa::all_to_all_comm_t
common_sources	build/projects/Makefile	/^common_sources = \\$/;"	m
communicate	src/communicate/all_to_all.cpp	/^  void all_to_all_comm_t::communicate(void *out,void *in,size_t bps,void *ext_out_buf,void *ext_in_buf,int tag)$/;"	f	class:nissa::all_to_all_comm_t
communicate_Leb_ev_and_od_borders	src/communicate/borders.cpp	/^  void communicate_Leb_ev_and_od_borders(void **vec,comm_t &comm)$/;"	f	namespace:nissa
communicate_Leb_ev_or_od_borders	src/communicate/borders.cpp	/^  void communicate_Leb_ev_or_od_borders(void *vec,comm_t &comm,int eo)$/;"	f	namespace:nissa
communicate_Leblx_borders	src/communicate/borders.cpp	/^  void communicate_Leblx_borders(void *vec,comm_t &comm)$/;"	f	namespace:nissa
communicate_eo_edges	src/communicate/edges.cpp	/^  void communicate_eo_edges(char **data,comm_t &bord_comm,MPI_Datatype *MPI_EDGES_SEND,MPI_Datatype *MPI_EDGES_RECE,int nbytes_per_site)$/;"	f	namespace:nissa
communicate_eo_quad_su3_edges	src/communicate/edges.cpp	/^  void communicate_eo_quad_su3_edges(quad_su3 **conf)$/;"	f	namespace:nissa
communicate_ev_and_od_borders	src/communicate/borders.cpp	/^  void communicate_ev_and_od_borders(void **vec,comm_t &comm)$/;"	f	namespace:nissa
communicate_ev_or_od_borders	src/communicate/borders.cpp	/^  void communicate_ev_or_od_borders(void *vec,comm_t &comm,int eo)$/;"	f	namespace:nissa
communicate_lx_as2t_su3_edges	src/communicate/edges.cpp	/^  void communicate_lx_as2t_su3_edges(as2t_su3 *a)$/;"	f	namespace:nissa
communicate_lx_borders	src/communicate/borders.cpp	/^  void communicate_lx_borders(void *vec,comm_t &comm)$/;"	f	namespace:nissa
communicate_lx_edges	src/communicate/edges.cpp	/^  void communicate_lx_edges(char *data,comm_t &bord_comm,MPI_Datatype *MPI_EDGES_SEND,MPI_Datatype *MPI_EDGES_RECE,int nbytes_per_site)$/;"	f	namespace:nissa
communicate_lx_quad_su3_edges	src/communicate/edges.cpp	/^  void communicate_lx_quad_su3_edges(quad_su3 *conf)$/;"	f	namespace:nissa
communicate_lx_su3_edges	src/communicate/edges.cpp	/^  void communicate_lx_su3_edges(su3 *u)$/;"	f	namespace:nissa
comp_exch	projects/x/tests/test_nazario2.cpp	/^int comp_exch=0;$/;"	v
comp_get_rnd	src/base/random.cpp	/^  void comp_get_rnd(complex out,rnd_gen *gen,enum rnd_t rtype)$/;"	f	namespace:nissa
comp_nhop	projects/semileptonic/test_bgq.cpp	/^int comp_nhop(coords_5D n,coords_5D tcoords,coords_5D tdims,bool p=0)$/;"	f
comp_p	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^int comp_p=0;$/;"	v
comp_self	projects/x/tests/test_nazario2.cpp	/^int comp_self=1;$/;"	v
comp_tad	projects/x/tests/test_nazario2.cpp	/^int comp_tad=0;$/;"	v
comp_tad	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^int comp_tad=0;$/;"	v
comp_time	src/operations/su3_paths/gauge_sweeper.hpp	/^    double comm_init_time,comp_time,comm_time;$/;"	m	struct:nissa::gauge_sweeper_t
comp_tree	projects/x/tests/test_nazario2.cpp	/^int comp_tree=0;$/;"	v
compare_link_source_dest	src/operations/su3_paths/gauge_sweeper.cpp	/^  int compare_link_source_dest(const void *a,const void *b)$/;"	f	namespace:nissa
compare_movement_link_id	src/operations/su3_paths/arbitrary.cpp	/^  int compare_movement_link_id(const void *a,const void *b)$/;"	f	namespace:nissa
compare_spincolor	tools/spincolor_compare/spincolor_compare.cpp	/^void compare_spincolor(char *a_path,char *b_path)$/;"	f
compile_info	src/base/init.hpp	/^  const char compile_info[4][1024]={CONFIG_TIME,CONFIG_FLAGS,__TIME__,__DATE__};$/;"	m	namespace:nissa
complex	src/new_types/complex.hpp	/^  typedef double complex[2];$/;"	t	namespace:nissa
complex_128	src/new_types/float_128.hpp	/^  typedef float_128 complex_128[2];$/;"	t	namespace:nissa
complex_128_isubt	src/new_types/float_128.hpp	/^  inline void complex_128_isubt(complex_128 a,complex_128 b,complex_128 c)$/;"	f	namespace:nissa
complex_128_isumm	src/new_types/float_128.hpp	/^  inline void complex_128_isumm(complex_128 a,complex_128 b,complex_128 c)$/;"	f	namespace:nissa
complex_128_put_to_zero	src/new_types/float_128.hpp	/^  inline void complex_128_put_to_zero(complex_128 a)$/;"	f	namespace:nissa
complex_128_subt	src/new_types/float_128.hpp	/^  inline void complex_128_subt(complex_128 a,complex_128 b,complex_128 c)$/;"	f	namespace:nissa
complex_128_subtassign	src/new_types/float_128.hpp	/^  inline void complex_128_subtassign(complex_128 a,complex_128 b)$/;"	f	namespace:nissa
complex_128_summ	src/new_types/float_128.hpp	/^  inline void complex_128_summ(complex_128 a,complex_128 b,complex_128 c)$/;"	f	namespace:nissa
complex_128_summassign	src/new_types/float_128.hpp	/^  inline void complex_128_summassign(complex_128 a,complex_128 b)$/;"	f	namespace:nissa
complex_128_summassign_64	src/new_types/float_128.hpp	/^  inline void complex_128_summassign_64(complex_128 a,complex b)$/;"	f	namespace:nissa
complex_conj	src/new_types/complex.hpp	/^  inline void complex_conj(complex a,const complex b)$/;"	f	namespace:nissa
complex_copy	src/new_types/complex.hpp	/^  inline void complex_copy(complex a,const complex b)$/;"	f	namespace:nissa
complex_copy_from_single_complex	src/new_types/complex.hpp	/^  inline void complex_copy_from_single_complex(complex a,const single_complex b)$/;"	f	namespace:nissa
complex_iexp	src/new_types/complex.hpp	/^  inline void complex_iexp(complex out,const double arg)$/;"	f	namespace:nissa
complex_isubt	src/new_types/complex.hpp	/^  inline void complex_isubt(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_isubtassign	src/new_types/complex.hpp	/^  inline void complex_isubtassign(complex a,const complex b)$/;"	f	namespace:nissa
complex_isumm	src/new_types/complex.hpp	/^  inline void complex_isumm(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_isummassign	src/new_types/complex.hpp	/^  inline void complex_isummassign(complex a,const complex b)$/;"	f	namespace:nissa
complex_linear_comb	src/new_types/complex.hpp	/^  inline void complex_linear_comb(complex a,const complex b,const double cb,const complex c,const double cc)$/;"	f	namespace:nissa
complex_minus_conj	src/new_types/complex.hpp	/^  inline void complex_minus_conj(complex a,const complex b)$/;"	f	namespace:nissa
complex_norm2	src/new_types/complex.hpp	/^  inline double complex_norm2(const complex c)$/;"	f	namespace:nissa
complex_pow	src/new_types/complex.hpp	/^  inline void complex_pow(complex res,const complex base,const double exp)$/;"	f	namespace:nissa
complex_print	src/new_types/complex.hpp	/^  inline void complex_print(const complex a)$/;"	f	namespace:nissa
complex_prod_double	src/new_types/complex.hpp	/^  inline void complex_prod_double(complex a,const complex b,const double c) {a[RE]=b[RE]*c;a[IM]=b[IM]*c;}$/;"	f	namespace:nissa
complex_prod_idouble	src/new_types/complex.hpp	/^  inline void complex_prod_idouble(complex a,const complex b,const double c) {const double d=-b[IM]*c;a[IM]=b[RE]*c;a[RE]=d;}$/;"	f	namespace:nissa
complex_prodassign	src/new_types/complex.hpp	/^  inline void complex_prodassign(complex a,const complex b)$/;"	f	namespace:nissa
complex_prodassign_double	src/new_types/complex.hpp	/^  inline void complex_prodassign_double(complex a,const double c) {complex_prod_double(a,a,c);}$/;"	f	namespace:nissa
complex_prodassign_idouble	src/new_types/complex.hpp	/^  inline void complex_prodassign_idouble(complex a,const double b) {complex_prod_idouble(a,a,b);}$/;"	f	namespace:nissa
complex_put_to_imag	src/new_types/complex.hpp	/^  inline void complex_put_to_imag(complex a,const double b)$/;"	f	namespace:nissa
complex_put_to_real	src/new_types/complex.hpp	/^  inline void complex_put_to_real(complex a,const double b)$/;"	f	namespace:nissa
complex_put_to_zero	src/new_types/complex.hpp	/^  inline void complex_put_to_zero(complex a)$/;"	f	namespace:nissa
complex_reciprocal	src/new_types/complex.hpp	/^  inline void complex_reciprocal(complex rec,const complex c)$/;"	f	namespace:nissa
complex_sqrt	src/new_types/complex.hpp	/^  inline void complex_sqrt(complex res,const complex base)$/;"	f	namespace:nissa
complex_subt	src/new_types/complex.hpp	/^  inline void complex_subt(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_subt_conj1	src/new_types/complex.hpp	/^  inline void complex_subt_conj1(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_subt_conj2	src/new_types/complex.hpp	/^  inline void complex_subt_conj2(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_subt_the_64_prod_128	src/new_types/float_128.hpp	/^  inline void complex_subt_the_64_prod_128(complex_128 a,complex b,complex_128 c)$/;"	f	namespace:nissa
complex_subt_the_conj1_prod	src/new_types/complex.hpp	/^  inline void complex_subt_the_conj1_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_subt_the_conj1_prod_i	src/new_types/complex.hpp	/^  inline void complex_subt_the_conj1_prod_i(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_subt_the_conj2_prod	src/new_types/complex.hpp	/^  inline void complex_subt_the_conj2_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_subt_the_conj2_prod_i	src/new_types/complex.hpp	/^  inline void complex_subt_the_conj2_prod_i(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_subt_the_conj_conj_prod	src/new_types/complex.hpp	/^  inline void complex_subt_the_conj_conj_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_subt_the_conj_conj_prod_i	src/new_types/complex.hpp	/^  inline void complex_subt_the_conj_conj_prod_i(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_subt_the_prod	src/new_types/complex.hpp	/^  inline void complex_subt_the_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_subt_the_prod_double	src/new_types/complex.hpp	/^  inline void complex_subt_the_prod_double(complex a,const complex b,const double c)$/;"	f	namespace:nissa
complex_subt_the_prod_i	src/new_types/complex.hpp	/^  inline void complex_subt_the_prod_i(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_subt_the_prod_idouble	src/new_types/complex.hpp	/^  inline void complex_subt_the_prod_idouble(complex a,const complex b,double c)$/;"	f	namespace:nissa
complex_subtassign	src/new_types/complex.hpp	/^  inline void complex_subtassign(complex a,const complex b) {complex_subt(a,a,b);}$/;"	f	namespace:nissa
complex_summ	src/new_types/complex.hpp	/^  inline void complex_summ(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_summ_conj1	src/new_types/complex.hpp	/^  inline void complex_summ_conj1(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_summ_conj2	src/new_types/complex.hpp	/^  inline void complex_summ_conj2(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_summ_the_64_conj1_prod_128	src/new_types/float_128.hpp	/^  inline void complex_summ_the_64_conj1_prod_128(complex_128 a,complex b,complex_128 c)$/;"	f	namespace:nissa
complex_summ_the_64_prod_128	src/new_types/float_128.hpp	/^  inline void complex_summ_the_64_prod_128(complex_128 a,complex b,complex_128 c)$/;"	f	namespace:nissa
complex_summ_the_conj1_prod	src/new_types/complex.hpp	/^  inline void complex_summ_the_conj1_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_summ_the_conj1_prod_i	src/new_types/complex.hpp	/^  inline void complex_summ_the_conj1_prod_i(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_summ_the_conj2_prod	src/new_types/complex.hpp	/^  inline void complex_summ_the_conj2_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_summ_the_conj2_prod_i	src/new_types/complex.hpp	/^  inline void complex_summ_the_conj2_prod_i(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_summ_the_conj_conj_prod	src/new_types/complex.hpp	/^  inline void complex_summ_the_conj_conj_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_summ_the_conj_conj_prod_i	src/new_types/complex.hpp	/^  inline void complex_summ_the_conj_conj_prod_i(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_summ_the_prod	src/new_types/complex.hpp	/^  inline void complex_summ_the_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_summ_the_prod_double	src/new_types/complex.hpp	/^  inline void complex_summ_the_prod_double(complex a,const complex b,const double c)$/;"	f	namespace:nissa
complex_summ_the_prod_i	src/new_types/complex.hpp	/^  inline void complex_summ_the_prod_i(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
complex_summ_the_prod_idouble	src/new_types/complex.hpp	/^  inline void complex_summ_the_prod_idouble(complex a,const complex b,double c)$/;"	f	namespace:nissa
complex_summassign	src/new_types/complex.hpp	/^  inline void complex_summassign(complex a,const complex b) {complex_summ(a,a,b);}$/;"	f	namespace:nissa
complex_vector_self_conj	src/linalgs/linalgs.hpp	/^  inline void complex_vector_self_conj(complex *v,int n)$/;"	f	namespace:nissa
complex_vector_subtassign_complex_vector_prod_complex	src/linalgs/linalgs.hpp	/^  inline void complex_vector_subtassign_complex_vector_prod_complex(complex *a,complex *b,complex c,int n)$/;"	f	namespace:nissa
compress_type	src/free_theory/free_theory_types.hpp	/^    uint32_t compress_type;$/;"	m	struct:nissa::bmpfile_info_header
compute	projects/x/tests/test_nazario2.cpp	/^void compute(double *lead,double *self,double *exch,double *tad,quark_info qu,gluon_info gl)$/;"	f
compute_3pts	projects/nucleons/nucleons_smeared.cpp	/^int compute_3pts[2][2];$/;"	v
compute_EU5_EU6	projects/ib/disco.cpp	/^void compute_EU5_EU6()$/;"	f
compute_Iwasaki_action	projects/generate_confs/generate_quenched.cpp	/^double compute_Iwasaki_action(double *paths) {return compute_Symanzik_action(paths,C1_IWASAKI);}$/;"	f
compute_Iwasaki_action_per_timeslice	projects/generate_confs/generate_quenched.cpp	/^double compute_Iwasaki_action_per_timeslice(double *paths,double *paths_per_timeslice)$/;"	f
compute_Landau_or_Coulomb_functional	src/operations/gauge_fixing.cpp	/^  double compute_Landau_or_Coulomb_functional(quad_su3 *conf,int ivol,int start_mu)$/;"	f	namespace:nissa
compute_Landau_or_Coulomb_functional	src/operations/gauge_fixing.cpp	/^  double compute_Landau_or_Coulomb_functional(quad_su3 *conf,int start_mu,const double *F_offset=NULL,double *ext_loc_F=NULL)$/;"	f	namespace:nissa
compute_Landau_or_Coulomb_functional_der	src/operations/gauge_fixing.cpp	/^  void compute_Landau_or_Coulomb_functional_der(su3 out,quad_su3 *conf,int ivol,int start_mu)$/;"	f	namespace:nissa
compute_Landau_or_Coulomb_gauge_fixing_quality	src/operations/gauge_fixing.cpp	/^  double compute_Landau_or_Coulomb_gauge_fixing_quality(quad_su3 *conf,int start_mu)$/;"	f	namespace:nissa
compute_MFACC_force	src/hmc/gauge/pure_gauge_implicit_integrator.cpp	/^    void compute_MFACC_force(su3 **FACC_F,su3 **phi,int naux_fields)$/;"	f	namespace:nissa::__anon6
compute_Pline_dag_internal	src/operations/su3_paths/pline.cpp	/^  void compute_Pline_dag_internal(su3 *pline,quad_su3 *conf,int mu,int xmu_start)$/;"	f	namespace:nissa
compute_Pline_dag_point	src/operations/su3_paths/pline.cpp	/^  void compute_Pline_dag_point(su3 *pline,quad_su3 *conf,int mu,coords glb_x_start)$/;"	f	namespace:nissa
compute_Pline_dag_wall	src/operations/su3_paths/pline.cpp	/^  void compute_Pline_dag_wall(su3 *pline,quad_su3 *conf,int mu,int xmu_start)$/;"	f	namespace:nissa
compute_Symanzik_action	projects/generate_confs/generate_quenched.cpp	/^double compute_Symanzik_action(double *paths,double C1)$/;"	f
compute_Symanzik_action_per_timeslice	projects/generate_confs/generate_quenched.cpp	/^double compute_Symanzik_action_per_timeslice(double *paths,double *paths_per_timeslice,double C1)$/;"	f
compute_Symanzik_staples	src/operations/su3_paths/gauge_sweeper.cpp	/^  void compute_Symanzik_staples(su3 staples,su3 *links,int *ilinks,double C1)$/;"	f	namespace:nissa
compute_Symanzik_staples_packed	src/operations/su3_paths/gauge_sweeper.cpp	/^  void compute_Symanzik_staples_packed(su3 staples,su3 *links,double C1)$/;"	f	namespace:nissa
compute_Symanzik_staples_packed_bgq	src/operations/su3_paths/gauge_sweeper.cpp	/^  void compute_Symanzik_staples_packed_bgq(su3 staples1,su3 staples2,vir_su3 *links,double C1)$/;"	f	namespace:nissa
compute_Wilson_action	projects/generate_confs/generate_quenched.cpp	/^double compute_Wilson_action(double *paths)$/;"	f
compute_Wilson_action_per_timeslice	projects/generate_confs/generate_quenched.cpp	/^double compute_Wilson_action_per_timeslice(double *paths,double *paths_per_timeslice)$/;"	f
compute_Wilson_staples	src/operations/su3_paths/gauge_sweeper.cpp	/^  void compute_Wilson_staples(su3 staples,su3 *links,int *ilinks,double C1)$/;"	f	namespace:nissa
compute_Wilson_staples_packed	src/operations/su3_paths/gauge_sweeper.cpp	/^  void compute_Wilson_staples_packed(su3 staples,su3 *links,double C1)$/;"	f	namespace:nissa
compute_Wilson_staples_packed_bgq	src/operations/su3_paths/gauge_sweeper.cpp	/^  void compute_Wilson_staples_packed_bgq(su3 staples1,su3 staples2,vir_su3 *links,double C1)$/;"	f	namespace:nissa
compute_Wstat_prop_finalize	src/operations/su3_paths/pline.cpp	/^  void compute_Wstat_prop_finalize(su3spinspin *prop,quad_su3 *conf,int mu,int xmu_start,su3 *pline)$/;"	f	namespace:nissa
compute_Wstat_prop_point	src/operations/su3_paths/pline.cpp	/^  void compute_Wstat_prop_point(su3spinspin *prop,quad_su3 *conf,int mu,coords x_start)$/;"	f	namespace:nissa
compute_Wstat_prop_wall	src/operations/su3_paths/pline.cpp	/^  void compute_Wstat_prop_wall(su3spinspin *prop,quad_su3 *conf,int mu,int xmu_start)$/;"	f	namespace:nissa
compute_Wstat_stoch_prop	src/operations/su3_paths/pline.cpp	/^  void compute_Wstat_stoch_prop(colorspinspin *prop,quad_su3 *conf,int mu,int xmu_start,color *source)$/;"	f	namespace:nissa
compute_action	projects/generate_confs/generate_quenched.cpp	/^double(*compute_action)(double *paths);$/;"	v
compute_action_per_timeslice	projects/generate_confs/generate_quenched.cpp	/^double(*compute_action_per_timeslice)(double *paths,double *paths_per_timeslice);$/;"	v
compute_all_2pts_qdagq_correlations	projects/x/src/routines/correlations.cpp	/^void compute_all_2pts_qdagq_correlations(corr16 *corr,spinspin *prop1,spinspin *prop2)$/;"	f
compute_allocable_propagators	tools/meson_2pts/common.cpp	/^int compute_allocable_propagators(int nprop_list,int nch_contr,int nmin_req)$/;"	f
compute_allocable_propagators	tools/meson_2pts/meson_2pts.cpp	/^int compute_allocable_propagators(int nprop_list,int nch_contr)$/;"	f
compute_allocable_propagators	tools/meson_2pts/meson_2pts_point_source.cpp	/^int compute_allocable_propagators(int nprop_list,int nch_contr)$/;"	f
compute_allocable_propagators_list	projects/eight_BK/eight_BK.cpp	/^int compute_allocable_propagators_list(int nprop_list)$/;"	f
compute_also_SL_2pts	projects/nucleons/nucleons_smeared.cpp	/^int compute_also_SL_2pts;$/;"	v
compute_amp_self_mom	projects/x/tests/test_nazario.cpp	/^void compute_amp_self_mom(spinspin *self_prop,spinspin *q_prop,spin1prop *g_prop,quark_info qu,gluon_info gl)$/;"	f
compute_amp_self_x	projects/x/tests/test_nazario.cpp	/^void compute_amp_self_x(spinspin *self_prop,spinspin *q_prop,spin1prop *g_prop)$/;"	f
compute_approx	src/operations/remez/remez_algorithm.cpp	/^  float_high_prec_t rat_approx_finder_t::compute_approx(float_high_prec_t x)$/;"	f	class:nissa::rat_approx_finder_t
compute_border_border2_size	tools/find_best_vir_partitioning/find.cpp	/^void compute_border_border2_size(int &border,int &border2,coords4D_t L,torus_grid_t &torus,rank_grid_t &rank)$/;"	f
compute_contractions	projects/ib/contr.hpp	/^  inline void compute_contractions()$/;"	f	namespace:nissa
compute_crit_mass	projects/x/progs/compute_corrections.cpp	/^void compute_crit_mass(quark_info &quark,gluon_info &gluon)$/;"	f
compute_dens	src/operations/stag/stag.hpp	/^    inline void compute_dens(complex *dens,color **quark,color **temp0,color **temp1,quad_su3 **conf,quad_u1 **backfield,int shift,int mask,color **chi,color **eta)$/;"	f	namespace:nissa::stag
compute_density	tools/Gaussiansmear_test.cpp	/^void compute_density(FILE *fout,color *source,coords *source_pos)$/;"	f
compute_der	projects/semileptonic/semileptonic_smeared.cpp	/^int compute_der,nmuS;$/;"	v
compute_disco_PST	projects/ib/disco.cpp	/^void compute_disco_PST(int ihit)$/;"	f
compute_dist2_angle	projects/x/progs/average_corr.cpp	/^void compute_dist2_angle(int &d2,double &angle,coords x)$/;"	f
compute_dist2_angle	projects/x/progs/correct.cpp	/^void compute_dist2_angle(int &d2,double &angle,coords x)$/;"	f
compute_dist2_max	projects/x/progs/correct.cpp	/^int compute_dist2_max()$/;"	f
compute_dist2_max_coord_angle	projects/x/tests/test_twisted_propagator_correction.cpp	/^void compute_dist2_max_coord_angle(int &d2,int &mc,double &angle,coords x)$/;"	f
compute_eo	src/operations/su3_paths/arbitrary.cpp	/^  void paths_calculation_structure::compute_eo(su3 *paths,quad_su3 **conf)$/;"	f	class:nissa::paths_calculation_structure
compute_exchange_corrections	projects/x/progs/compute_corrections.cpp	/^void compute_exchange_corrections(char *output_folder,quark_info &quark,gluon_info &gluon,int nests)$/;"	f
compute_fft	projects/reno_const/RIMOM.cpp	/^void compute_fft(double sign)$/;"	f
compute_full_gluon_force	src/hmc/gauge/pure_gauge_implicit_integrator.cpp	/^    void compute_full_gluon_force(quad_su3 *F,quad_su3 *conf,quad_su3 *H,su3 **pi,int naux_fields,double kappa,int niter,double residue,theory_pars_t *theory_pars)$/;"	f	namespace:nissa::__anon6
compute_fw_bw_der_mel	src/operations/stag/stag.cpp	/^    void compute_fw_bw_der_mel(complex *res_fw_bw,color **left,quad_su3 **conf,int mu,color **right,complex *point_result)$/;"	f	namespace:nissa::stag
compute_gluonic_force_lx_conf_do_not_finish	src/hmc/gauge/gluonic_force.cpp	/^  void compute_gluonic_force_lx_conf_do_not_finish(quad_su3 *F,quad_su3 *conf,theory_pars_t *physics)$/;"	f	namespace:nissa
compute_hadroleptonic_correlations	projects/ib/mel.cpp	/^void compute_hadroleptonic_correlations()$/;"	f
compute_hadronic_correlations	projects/ib/mel.cpp	/^void compute_hadronic_correlations()$/;"	f
compute_lambda_forces	projects/cpn/cpn.cpp	/^void compute_lambda_forces()$/;"	f
compute_lepton_circle_cont	projects/ib/test_prop.cpp	/^double compute_lepton_circle_cont()$/;"	f
compute_lepton_circle_without_contact_term_latt_form	projects/ib/test_prop.cpp	/^double compute_lepton_circle_without_contact_term_latt_form()$/;"	f
compute_lepton_circle_without_contact_term_latt_num	projects/ib/test_prop.cpp	/^void compute_lepton_circle_without_contact_term_latt_num(complex lcwct_ln)$/;"	f
compute_lx	src/operations/su3_paths/arbitrary.cpp	/^  void paths_calculation_structure::compute_lx(su3 *paths,quad_su3 *conf)$/;"	f	class:nissa::paths_calculation_structure
compute_mass_corrections	projects/x/progs/compute_corrections.cpp	/^void compute_mass_corrections(char *output_folder,quark_info &quark)$/;"	f
compute_meslep_contr	projects/ib/meslep.cpp	/^  void compute_meslep_contr()$/;"	f	namespace:nissa
compute_meson_exchange_correction_analyticallyA	projects/x/src/diagrams/meson_exchange_not_working.cpp	/^void compute_meson_exchange_correction_analyticallyA(corr16 *corr,quark_info qu,gluon_info gl)$/;"	f
compute_meson_exchange_correction_analyticallyB	projects/x/src/diagrams/meson_exchange_not_working.cpp	/^void compute_meson_exchange_correction_analyticallyB(corr16 *corr,quark_info qu,gluon_info gl)$/;"	f
compute_meson_exchange_correction_of_mom_gamma	projects/x/src/diagrams/meson_exchange.cpp	/^void compute_meson_exchange_correction_of_mom_gamma(complex out,quark_info qu,gluon_info gl,int ip,int ig)$/;"	f
compute_meson_exchange_correction_stochastically	projects/x/src/diagrams/meson_exchange.cpp	/^void compute_meson_exchange_correction_stochastically(corr16 *ave,quark_info qu,gluon_info gl,int n)$/;"	f
compute_meson_exchange_correction_stochastically	projects/x/src/diagrams/meson_exchange.cpp	/^void compute_meson_exchange_correction_stochastically(corr16 *corr,quark_info qu,gluon_info gl)$/;"	f
compute_meson_exchange_correction_stochastically	projects/x/src/diagrams/meson_exchange.cpp	/^void compute_meson_exchange_correction_stochastically(corr16 *corr,spinspin *q_prop,quark_info qu,gluon_info gl)$/;"	f
compute_meson_exchange_correction_stochastically	projects/x/src/diagrams/meson_exchange.cpp	/^void compute_meson_exchange_correction_stochastically(corr16 *zm_ave,corr16 *zm_err,corr16 *ave,corr16 *err,quark_info qu,gluon_info gl,int n)$/;"	f
compute_mom_space_Wilson_gluon_propagator	projects/x/src/propagators/Wilson_gluon_propagator.cpp	/^void compute_mom_space_Wilson_gluon_propagator(spin1prop *prop,gluon_info gl)$/;"	f
compute_num_den_approx	src/operations/remez/remez_algorithm.cpp	/^  void rat_approx_finder_t::compute_num_den_approx(float_high_prec_t &yn,float_high_prec_t &yd,float_high_prec_t x)$/;"	f	class:nissa::rat_approx_finder_t
compute_pion_correlator	projects/x/tests/test_twisted_propagator.cpp	/^void compute_pion_correlator(complex *corr,spinspin *p)$/;"	f
compute_point_summed_squared_staples_eo_conf	src/operations/su3_paths/squared_staples.cpp	/^  void compute_point_summed_squared_staples_eo_conf(quad_su3 staple,quad_su3 **eo_conf,int A)$/;"	f	namespace:nissa
compute_point_summed_squared_staples_eo_conf_single_dir	src/operations/su3_paths/squared_staples.cpp	/^  void compute_point_summed_squared_staples_eo_conf_single_dir(su3 staple,quad_su3 **eo_conf,int A,int mu)$/;"	f	namespace:nissa
compute_point_summed_squared_staples_lx_conf	src/operations/su3_paths/squared_staples.cpp	/^  void compute_point_summed_squared_staples_lx_conf(quad_su3 staple,quad_su3 *lx_conf,int A)$/;"	f	namespace:nissa
compute_point_summed_squared_staples_lx_conf_single_dir	src/operations/su3_paths/squared_staples.cpp	/^  void compute_point_summed_squared_staples_lx_conf_single_dir(su3 staple,quad_su3 *lx_conf,int A,int mu)$/;"	f	namespace:nissa
compute_pot	src/new_types/metadynamics.cpp	/^  double meta_pars_t::compute_pot(double x)$/;"	f	class:nissa::meta_pars_t
compute_pot_der	src/new_types/metadynamics.cpp	/^  double meta_pars_t::compute_pot_der(double x)$/;"	f	class:nissa::meta_pars_t
compute_self_energy_corrections	projects/x/progs/compute_corrections.cpp	/^void compute_self_energy_corrections(char *output_folder,quark_info &quark,gluon_info &gluon,int nests=0)$/;"	f
compute_self_energy_twisted_diagram_in_mom_space	projects/x/src/diagrams/propagator_self_energy.cpp	/^void compute_self_energy_twisted_diagram_in_mom_space(spinspin *q_out,quark_info qu,gluon_info gl)$/;"	f
compute_self_energy_twisted_diagram_in_mom_space	projects/x/src/diagrams/propagator_self_energy.cpp	/^void compute_self_energy_twisted_diagram_in_mom_space(spinspin *q_out,spinspin *q_prop,quark_info qu,spin1prop *g_prop,gluon_info gl)$/;"	f
compute_self_energy_twisted_diagram_in_x_space	projects/x/src/diagrams/propagator_self_energy.cpp	/^void compute_self_energy_twisted_diagram_in_x_space(spinspin *q_out,quark_info qu,gluon_info gl)$/;"	f
compute_self_energy_twisted_diagram_in_x_space	projects/x/src/diagrams/propagator_self_energy.cpp	/^void compute_self_energy_twisted_diagram_in_x_space(spinspin *q_out,spinspin *q_prop,quark_info qu,spin1prop *g_prop,gluon_info gl)$/;"	f
compute_self_energy_twisted_propagator_in_x_space	projects/x/src/diagrams/propagator_self_energy.cpp	/^void compute_self_energy_twisted_propagator_in_x_space(spinspin *q_out,quark_info qu,gluon_info gl)$/;"	f
compute_self_energy_twisted_propagator_in_x_space_tough_way	projects/x/src/diagrams/propagator_self_energy.cpp	/^void compute_self_energy_twisted_propagator_in_x_space_tough_way(spinspin *q_out,quark_info qu,gluon_info gl)$/;"	f
compute_staples	src/operations/su3_paths/gauge_sweeper.hpp	/^    void (*compute_staples)(su3 staples,su3 *links,int *ilinks,double C1);$/;"	m	struct:nissa::gauge_sweeper_t
compute_staples_packed	src/operations/su3_paths/gauge_sweeper.hpp	/^    void (*compute_staples_packed)(su3 staples,su3 *links,double C1);$/;"	m	struct:nissa::gauge_sweeper_t
compute_staples_packed_bgq	src/operations/su3_paths/gauge_sweeper.hpp	/^    void (*compute_staples_packed_bgq)(su3 staples1,su3 staples2,vir_su3 *links,double C1);$/;"	m	struct:nissa::gauge_sweeper_t
compute_stoch_Pline_dag	src/operations/su3_paths/pline.cpp	/^  void compute_stoch_Pline_dag(color *pline,quad_su3 *conf,int mu,int xmu_start,color *source)$/;"	f	namespace:nissa
compute_su3_path	src/operations/su3_paths/arbitrary.hpp	/^  inline void compute_su3_path(path_drawing_t *c,su3 *out,quad_su3 *conf,path_list_steps_t steps)$/;"	f	namespace:nissa
compute_su3spinspin_tm_propagators_multi_mass	src/inverters/twisted_mass/tm_frontends.cpp	/^  void compute_su3spinspin_tm_propagators_multi_mass(su3spinspin ***prop,quad_su3 *conf,double kappa,double *mass,int nmass,int niter_max,double *req_res,su3spinspin *source)$/;"	f	namespace:nissa
compute_su3spinspin_tmclov_propagators_multi_mass	src/inverters/twisted_clover/tmclov_frontends.cpp	/^  void compute_su3spinspin_tmclov_propagators_multi_mass(su3spinspin ***prop,quad_su3 *conf,double kappa,clover_term_t *Cl,double *mass,int nmass,int niter_max,double *req_res,su3spinspin *source)$/;"	f	namespace:nissa
compute_susc	src/operations/stag/putpourri.hpp	/^    int compute_susc;$/;"	m	struct:nissa::fermionic_putpourri_meas_pars_t
compute_tadpole	src/free_theory/tlSym_gauge_propagator.cpp	/^  void compute_tadpole(double *tadpole,gauge_info photon)$/;"	f	namespace:nissa
compute_tadpole_corrections	projects/x/progs/compute_corrections.cpp	/^void compute_tadpole_corrections(char *output_folder,quark_info &quark,gluon_info &gluon)$/;"	f
compute_tadpole_diagram_in_mom_space	projects/x/src/diagrams/tadpole.cpp	/^void compute_tadpole_diagram_in_mom_space(spinspin *q_tad,quark_info qu,gluon_info gl)$/;"	f
compute_tadpole_diagram_in_x_space	projects/x/src/diagrams/tadpole.cpp	/^void compute_tadpole_diagram_in_x_space(spinspin *q_tad,quark_info qu,gluon_info gl)$/;"	f
compute_tadpole_twisted_propagator_in_mom_space	projects/x/src/diagrams/tadpole.cpp	/^void compute_tadpole_twisted_propagator_in_mom_space(spinspin *q_out,quark_info qu,gluon_info gl)$/;"	f
compute_tadpole_twisted_propagator_in_x_space	projects/x/src/diagrams/tadpole.cpp	/^void compute_tadpole_twisted_propagator_in_x_space(spinspin *q_out,quark_info qu,gluon_info gl)$/;"	f
compute_tens_dens_topo_correlation	src/operations/stag/spinpol.cpp	/^  void compute_tens_dens_topo_correlation(complex *spinpol_dens,complex *tens_dens,double *topo_dens)$/;"	f	namespace:nissa
compute_tlSym_action	projects/generate_confs/generate_quenched.cpp	/^double compute_tlSym_action(double *paths) {return compute_Symanzik_action(paths,C1_TLSYM);}$/;"	f
compute_tlSym_action_per_timeslice	projects/generate_confs/generate_quenched.cpp	/^double compute_tlSym_action_per_timeslice(double *paths,double *paths_per_timeslice)$/;"	f
compute_topodynamical_potential_der	src/hmc/gauge/topological_force.cpp	/^  double compute_topodynamical_potential_der(topotential_pars_t *pars,quad_su3 *conf)$/;"	f	namespace:nissa
compute_topological_force_lx_conf_internal	src/hmc/gauge/topological_force.cpp	/^  void compute_topological_force_lx_conf_internal(quad_su3 *F,quad_su3 *conf,topotential_pars_t *pars)$/;"	f	namespace:nissa
compute_tree_level	projects/x/progs/compute_tree_level_corrections.cpp	/^void compute_tree_level(char *output_folder,quark_info &quark)$/;"	f
compute_tree_level_corrections	projects/x/progs/compute_corrections.cpp	/^void compute_tree_level_corrections(char *output_folder,quark_info &quark)$/;"	f
compute_vect_memory_usage	src/base/vectors.cpp	/^  int64_t compute_vect_memory_usage()$/;"	f	namespace:nissa
compute_with_trick	projects/x/tests/test_nazario.cpp	/^void compute_with_trick(double *corr,spinspin *q_prop,spin1prop *g_prop,quark_info qu,gluon_info gl)$/;"	f
compute_without_trick	projects/x/tests/test_nazario.cpp	/^void compute_without_trick(double *corr,spinspin *q_prop,spin1prop *g_prop,quark_info qu,gluon_info gl)$/;"	f
compute_x_space_Wilson_gluon_propagator_by_fft	projects/x/src/propagators/Wilson_gluon_propagator.cpp	/^void compute_x_space_Wilson_gluon_propagator_by_fft(spin1prop *prop,gluon_info gl)$/;"	f
compute_x_space_Wilson_gluon_propagator_by_inv	projects/x/src/propagators/Wilson_gluon_propagator.cpp	/^void compute_x_space_Wilson_gluon_propagator_by_inv(spin1prop *prop,gluon_info gl)$/;"	f
compute_x_space_propagator_to_sink_from_source	projects/x/src/routines/shift.cpp	/^void compute_x_space_propagator_to_sink_from_source(spin1prop out_prop,spin1prop *in_prop,momentum_t bc,coords sink,coords source)$/;"	f
compute_x_space_tlSym_gauge_propagator_by_fft	src/free_theory/tlSym_gauge_propagator.cpp	/^  void compute_x_space_tlSym_gauge_propagator_by_fft(spin1prop *prop,gauge_info gl)$/;"	f	namespace:nissa
compute_x_space_twisted_propagator_by_fft	src/free_theory/twisted_propagator.cpp	/^  void compute_x_space_twisted_propagator_by_fft(spinspin *prop,tm_quark_info qu,tm_basis_t base)$/;"	f	namespace:nissa
compute_x_space_twisted_propagator_by_inv	src/free_theory/twisted_propagator.cpp	/^  void compute_x_space_twisted_propagator_by_inv(spinspin *prop,tm_quark_info qu,tm_basis_t base)$/;"	f	namespace:nissa
compute_zeta_forces	projects/cpn/cpn.cpp	/^void compute_zeta_forces()$/;"	f
conf	projects/eight_BK/smeared_BK_all_in_one.cpp	/^quad_su3 *conf,*sme_conf,*hyp_conf;$/;"	v
conf	projects/g/g.cpp	/^quad_su3 *conf,*sme_conf;$/;"	v
conf	projects/generate_confs/generate.cpp	/^quad_su3 *conf[2];$/;"	v
conf	projects/generate_confs/generate_quenched.cpp	/^quad_su3 *conf,*temp_conf;$/;"	v
conf	projects/ib/mel.cpp	/^quad_su3 *conf;$/;"	v
conf	projects/nucleons/nucleons_smeared.cpp	/^quad_su3 *conf,*smea_conf;$/;"	v
conf	projects/reno_const/RIMOM.cpp	/^quad_su3 *conf,*unfix_conf;$/;"	v
conf	projects/semileptonic/gevp.cpp	/^quad_su3 *conf,*sme_conf;$/;"	v
conf	projects/semileptonic/gevp_3pts.cpp	/^quad_su3 *conf,*sme_conf;$/;"	v
conf	projects/semileptonic/new_version/new_types.hpp	/^  gauge_conf_t *conf;$/;"	m	struct:prop_group_command_t
conf	projects/semileptonic/new_version/test.cpp	/^gauge_conf_t conf[2];$/;"	v
conf	projects/semileptonic/semileptonic_smeared.cpp	/^quad_su3 *conf,*sme_conf;$/;"	v
conf	projects/semileptonic/test_proj.cpp	/^quad_su3 *conf;$/;"	v
conf	src/operations/smearing/Wflow.hpp	/^    quad_su3 *conf[nint_steps];$/;"	m	struct:nissa::internal_fermion_flower_t
conf	src/operations/smearing/recursive_Wflower.hpp	/^      quad_su3 *conf; \/\/stored configuration$/;"	m	struct:nissa::recursive_Wflower_t::Wflow_lev_t
conf	work_in_prog/eo_inverter/invert2.cpp	/^quad_su3 *conf;$/;"	v
conf	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^quad_su3 *conf,*sme_conf;$/;"	v
conf	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^quad_su3 *conf,*sme_conf;$/;"	v
conf_convert	tools/conf_transform/convert/eo_to_ildg.cpp	/^void conf_convert(char *outpath,char *inpath)$/;"	f
conf_convert	tools/conf_transform/convert/ildg_to_eo.cpp	/^void conf_convert(char *outpath,char *inpath)$/;"	f
conf_created	projects/cpn/cpn.cpp	/^bool conf_created=true;$/;"	v
conf_created	projects/generate_confs/generate.cpp	/^int conf_created;$/;"	v
conf_index_fct	src/base/DDalphaAMG_bridge.cpp	/^  static int conf_index_fct(int t,int z,int y,int x,int mu)$/;"	f	namespace:DD
conf_load_time	projects/ib/conf.hpp	/^  EXTERN_CONF double conf_load_time;$/;"	m	namespace:nissa
conf_pars	projects/generate_confs/driver.hpp	/^    conf_pars_t conf_pars;$/;"	m	class:nissa::driver_t
conf_pars_t	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    conf_pars_t() :$/;"	f	struct:nissa::conf_pars_t
conf_pars_t	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^  struct conf_pars_t$/;"	s	namespace:nissa
conf_path	projects/eight_BK/smeared_BK_all_in_one.cpp	/^char conf_path[1024],outfolder[1024];$/;"	v
conf_path	projects/g/g.cpp	/^char conf_path[1024];$/;"	v
conf_path	projects/generate_confs/generate_quenched.cpp	/^char conf_path[1024];$/;"	v
conf_path	projects/ib/conf.hpp	/^  EXTERN_CONF char conf_path[1024],outfolder[1024];$/;"	m	namespace:nissa
conf_path	projects/ib/mel.cpp	/^char conf_path[1024],outfolder[1024];$/;"	v
conf_path	projects/nucleons/nucleons_smeared.cpp	/^char **conf_path,**out_path;$/;"	v
conf_path	projects/reno_const/RIMOM.cpp	/^char conf_path[1024];$/;"	v
conf_path	projects/semileptonic/gevp.cpp	/^char outfolder[100],conf_path[100];$/;"	v
conf_path	projects/semileptonic/gevp_3pts.cpp	/^char outfolder[100],conf_path[100];$/;"	v
conf_path	projects/semileptonic/semileptonic_smeared.cpp	/^char conf_path[1024],outfolder[1024];$/;"	v
conf_path	projects/semileptonic/test_proj.cpp	/^char conf_path[1024],out_path[1024];$/;"	v
conf_path	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^char conf_path[1024];$/;"	v
conf_path	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^char conf_path[1024];$/;"	v
conf_smear_time	projects/semileptonic/gevp.cpp	/^double wall_time,conf_smear_time=0,tot_prog_time=0,inv_time=0,smear_time=0,corr_time=0;$/;"	v
conf_smear_time	projects/semileptonic/gevp_3pts.cpp	/^double wall_time,conf_smear_time=0,tot_prog_time=0,inv_time=0,smear_time=0,corr_time=0;$/;"	v
conf_smear_time	projects/semileptonic/semileptonic_smeared.cpp	/^double inv_time=0,conf_smear_time=0;$/;"	v
conf_smearing	projects/semileptonic/semileptonic_smeared.cpp	/^conf_smearing_t conf_smearing;$/;"	v
conf_smearing_t	projects/semileptonic/semileptonic_smeared.cpp	/^enum conf_smearing_t{no_conf_smearing,ape_conf_smearing,stout_conf_smearing};$/;"	g	file:
confs_each	tools/clusterize2.cpp	/^int start_conf_id,nconfs,nconfs_teo,confs_each;$/;"	v
cons	src/new_types/rat_approx.hpp	/^    double cons;$/;"	m	struct:nissa::rat_approx_t
contr_2pts	projects/eight_BK/smeared_BK_all_in_one.cpp	/^complex *contr_2pts,*loc_2pts;$/;"	v
contr_2pts	projects/g/g.cpp	/^complex *contr_2pts;$/;"	v
contr_2pts	projects/reno_const/RIMOM.cpp	/^complex *contr_2pts,*loc_2pts;$/;"	v
contr_2pts	projects/semileptonic/semileptonic_smeared.cpp	/^complex *contr_2pts;$/;"	v
contr_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^complex *contr_2pts;$/;"	v
contr_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^complex *contr_2pts;$/;"	v
contr_2pts_time	projects/g/g.cpp	/^double contr_2pts_time=0;$/;"	v
contr_2pts_time	projects/semileptonic/semileptonic_smeared.cpp	/^double contr_2pts_time=0;$/;"	v
contr_2pts_time	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double contr_2pts_time=0;$/;"	v
contr_3pts	projects/g/g.cpp	/^complex *contr_3pts;$/;"	v
contr_3pts	projects/semileptonic/semileptonic_smeared.cpp	/^complex *contr_3pts;$/;"	v
contr_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^complex *contr_3pts;$/;"	v
contr_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^complex *contr_3pts;$/;"	v
contr_3pts_time	projects/g/g.cpp	/^double contr_3pts_time=0;$/;"	v
contr_3pts_time	projects/semileptonic/semileptonic_smeared.cpp	/^double contr_3pts_time=0;$/;"	v
contr_3pts_time	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double contr_3pts_time=0;$/;"	v
contr_3pts_up_to_S0_mass	projects/semileptonic/semileptonic_smeared.cpp	/^int contr_3pts_up_to_S0_mass;$/;"	v
contr_mezzotto	projects/eight_BK/smeared_BK_all_in_one.cpp	/^complex *contr_otto,*contr_mezzotto;$/;"	v
contr_otto	projects/eight_BK/smeared_BK_all_in_one.cpp	/^complex *contr_otto,*contr_mezzotto;$/;"	v
contr_save_time	projects/g/g.cpp	/^double contr_save_time=0;$/;"	v
contr_save_time	projects/semileptonic/semileptonic_smeared.cpp	/^double contr_save_time=0;$/;"	v
contr_save_time	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double contr_save_time=0;$/;"	v
contr_time	projects/g/g.cpp	/^double load_time=0,contr_time;$/;"	v
contr_time	projects/reno_const/RIMOM.cpp	/^double tot_prog_time=0,inv_time=0,contr_time=0,fix_time=0;$/;"	v
contr_time	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^double tot_time=0,inv_time=0,contr_time=0;$/;"	v
contr_time	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double load_time=0,contr_time;$/;"	v
contract_with_source	projects/nucleons/nucleons_smeared.cpp	/^void contract_with_source(complex *glb_contr,su3spinspin *eta,su3spinspin *S)$/;"	f
contract_with_source	projects/semileptonic/semileptonic_smeared.cpp	/^void contract_with_source(complex *corr,PROP_TYPE *S1,int *list_op,PROP_TYPE *source)$/;"	f
contract_with_source	tools/meson_3pts_check/mesonic_3pts_check.cpp	/^void contract_with_source(complex **corr,colorspinspin *S1,int *list_op,colorspinspin *source,int ncontr,int fprop,int rprop)$/;"	f
contract_with_source	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^void contract_with_source(complex *corr,su3spinspin *S1,int *list_op,su3spinspin *source)$/;"	f
contract_with_source	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void contract_with_source(complex *corr,colorspinspin *S1,int *list_op,colorspinspin *source)$/;"	f
conv___float128	work_in_prog/quad/tests.cpp	/^__float128 conv___float128(float128 in)$/;"	f
conv_double	work_in_prog/quad/tests.cpp	/^double conv_double(__float128 in)$/;"	f
convert_from_message	src/io/ILDG_File.hpp	/^    void convert_from_message(ILDG_message &mess)$/;"	f	struct:nissa::storable_vector_t
convert_from_text	src/io/ILDG_File.hpp	/^    void convert_from_text(const char *data)$/;"	f	struct:nissa::storable_vector_t
convert_rat_approx	src/new_types/rat_approx.cpp	/^  std::vector<rat_approx_t> convert_rat_approx(const char *data,size_t len)$/;"	f	namespace:nissa
convert_rat_approx	src/new_types/rat_approx.cpp	/^  void convert_rat_approx(char *&data,int &data_length,std::vector<rat_approx_t> &appr)$/;"	f	namespace:nissa
convert_rnd_gen_to_text	src/base/random.cpp	/^  void convert_rnd_gen_to_text(char *text,rnd_gen *gen,int size)$/;"	f	namespace:nissa
convert_str_to_rnd_t	src/base/random.cpp	/^  rnd_t convert_str_to_rnd_t(const char *str)$/;"	f	namespace:nissa
convert_text_to_rnd_gen	src/base/random.cpp	/^  void convert_text_to_rnd_gen(rnd_gen *gen,const char *text)$/;"	f	namespace:nissa
cool	src/operations/smearing/smooth.hpp	/^    cool_pars_t cool;$/;"	m	struct:nissa::smooth_pars_t
cool_lx_conf_handle	src/operations/gaugeconf.cpp	/^  void cool_lx_conf_handle(su3 out,su3 staple,int ivol,int mu,void *pars)$/;"	f	namespace:nissa
cool_pars	build/projects/generate_confs/parser.cpp	/^    nissa::cool_pars_t *cool_pars;$/;"	m	union:YYSTYPE	file:
cool_pars	build/projects/generate_confs/parser.hpp	/^    nissa::cool_pars_t *cool_pars;$/;"	m	union:YYSTYPE
cool_pars_t	src/operations/smearing/cooling.hpp	/^    cool_pars_t() :$/;"	f	struct:nissa::cool_pars_t
cool_pars_t	src/operations/smearing/cooling.hpp	/^  struct cool_pars_t$/;"	s	namespace:nissa
coord_copy	src/geometry/geometry_lx.hpp	/^  inline void coord_copy(coords out,coords in){for(int mu=0;mu<NDIM;mu++) out[mu]=in[mu];};$/;"	f	namespace:nissa
coord_of_lx	src/geometry/geometry_lx.cpp	/^  void coord_of_lx(coords x,int ilx,coords s)$/;"	f	namespace:nissa
coord_of_rank	src/geometry/geometry_lx.cpp	/^  void coord_of_rank(coords c,int x)$/;"	f	namespace:nissa
coord_summ	src/geometry/geometry_lx.hpp	/^  inline void coord_summ(coords s,coords a1,coords a2,coords l){for(int mu=0;mu<NDIM;mu++) s[mu]=(a1[mu]+a2[mu])%l[mu];}$/;"	f	namespace:nissa
coord_summassign	src/geometry/geometry_lx.hpp	/^  inline void coord_summassign(coords s,coords a,coords l){coord_summ(s,s,a,l);}$/;"	f	namespace:nissa
coords	src/geometry/geometry_lx.hpp	/^  typedef int coords[NDIM];$/;"	t	namespace:nissa
coords4D_t	tools/find_best_vir_partitioning/find.cpp	/^struct coords4D_t: std::tr1::array<int,4> {};$/;"	s	file:
coords5D_t	tools/find_best_vir_partitioning/find.cpp	/^struct coords5D_t: std::tr1::array<int,5> {};$/;"	s	file:
coords_5D	src/bgq/spi.hpp	/^  typedef uint8_t coords_5D[5];$/;"	t	namespace:nissa
coords_5D	work_in_prog/bgq/src/add_var.hpp	/^typedef uint8_t coords_5D[5];$/;"	t
coords_broadcast	src/routines/mpi_routines.cpp	/^  void coords_broadcast(coords c)$/;"	f	namespace:nissa
coords_t	src/operations/su3_paths/arbitrary.hpp	/^    coords_t(){memset(c,0,sizeof(coords));}$/;"	f	struct:nissa::coords_t
coords_t	src/operations/su3_paths/arbitrary.hpp	/^    coords_t(const coords_t &o){memcpy(c,o.c,sizeof(coords));}$/;"	f	struct:nissa::coords_t
coords_t	src/operations/su3_paths/arbitrary.hpp	/^  struct coords_t{$/;"	s	namespace:nissa
copy	projects/semileptonic/new_version/new_types.cpp	/^void gauge_conf_t::copy(gauge_conf_t &in)$/;"	f	class:gauge_conf_t
copy	projects/semileptonic/new_version/new_types.hpp	/^  void copy(const in_source_t &in) {create();vector_copy(eta,in.eta);}$/;"	f	struct:in_source_t
copy_level	src/operations/smearing/recursive_Wflower.hpp	/^    void copy_level(int idest,int isou)$/;"	f	struct:nissa::recursive_Wflower_t
copy_lines	tools/pack.c	/^void copy_lines(FILE *fout,FILE *fin,int n)$/;"	f
corr	projects/generate_confs/generate_quenched.cpp	/^double *corr;$/;"	v
corr	projects/x/progs/compute_self_energy_corrections.cpp	/^corr16 *corr;$/;"	v
corr	projects/x/progs/compute_tadpole_corrections.cpp	/^corr16 *corr,*corr_p;$/;"	v
corr	projects/x/tests/test_meson_self_energy_stochastic_correction.cpp	/^corr16 *corr,*summ_corr,*temp_corr;$/;"	v
corr	projects/x/tests/test_meson_tree_level_correction.cpp	/^corr16 *corr;$/;"	v
corr16	src/free_theory/free_theory_types.hpp	/^  typedef complex corr16[16];$/;"	t	namespace:nissa
corr1_p	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^spinspin *corr1_x,*corr1_p;$/;"	v
corr1_x	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^spinspin *corr1_x,*corr1_p;$/;"	v
corr_command	projects/semileptonic/new_version/test.cpp	/^corr_command_t *corr_command;$/;"	v
corr_command_t	projects/semileptonic/new_version/new_types.hpp	/^  corr_command_t() {reset();}$/;"	f	struct:corr_command_t
corr_command_t	projects/semileptonic/new_version/new_types.hpp	/^struct corr_command_t$/;"	s
corr_entr	projects/x/progs/correct.cpp	/^const int corr_entr[4]={5,0,1,6};$/;"	v
corr_id_weight_t	src/operations/contract/optimized_mesons_2pts.hpp	/^  struct corr_id_weight_t: std::map<uint16_t,double> {};$/;"	s	namespace:nissa
corr_list	build/projects/semileptonic/parse_corr.cpp	/^  nissa::two_pts_comp_t *corr_list;$/;"	m	union:YYSTYPE	file:
corr_list	build/projects/semileptonic/parse_corr.hpp	/^  nissa::two_pts_comp_t *corr_list;$/;"	m	union:YYSTYPE
corr_list	projects/semileptonic/new_version/new_types.hpp	/^  two_pts_corr_pars_t **corr_list;$/;"	m	struct:two_pts_corr_group_t
corr_mult	projects/x/progs/correct.cpp	/^const int corr_mult[4]={1,1,1,1};$/;"	v
corr_name	projects/semileptonic/driver_corr.hpp	/^  std::map <int,std::string> corr_name;$/;"	m	class:two_pts_parser_driver
corr_name	projects/x/progs/correct.cpp	/^char corr_name[4][8]={"00","07","0305","0406"};$/;"	v
corr_name	src/operations/contract/optimized_mesons_2pts.hpp	/^      std::map<int,std::string> corr_name;$/;"	m	struct:nissa::two_pts_comp_t
corr_name	tools/clusterize2.cpp	/^sa_string *corr_name,*outpath;$/;"	v
corr_p	projects/x/progs/compute_tadpole_corrections.cpp	/^corr16 *corr,*corr_p;$/;"	v
corr_path	src/operations/su3_paths/topological_charge.hpp	/^    std::string corr_path;$/;"	m	struct:nissa::top_meas_pars_t
corr_time	projects/semileptonic/gevp.cpp	/^double wall_time,conf_smear_time=0,tot_prog_time=0,inv_time=0,smear_time=0,corr_time=0;$/;"	v
corr_time	projects/semileptonic/gevp_3pts.cpp	/^double wall_time,conf_smear_time=0,tot_prog_time=0,inv_time=0,smear_time=0,corr_time=0;$/;"	v
correct	projects/x/progs/correct.cpp	/^void correct(int icorr)$/;"	f
count_combo	tools/pack.c	/^int count_combo(const char *path_in)$/;"	f
count_corr	tools/clusterize.cpp	/^int count_corr(char *path,const char *line_to_find)$/;"	f
count_corr	tools/clusterize2.cpp	/^void count_corr(char *path)$/;"	f
count_file_lines	src/routines/ios.cpp	/^  int count_file_lines(std::string path)$/;"	f	namespace:nissa
count_nline	tools/err.cpp	/^int count_nline(char *path)$/;"	f
count_npassed_conf	projects/semileptonic/test_proj.cpp	/^int count_npassed_conf()$/;"	f
count_substrings	src/routines/ios.cpp	/^  int count_substrings(const char *str,const char *sub)$/;"	f	namespace:nissa
cp	src/routines/ios.cpp	/^  int cp(std::string path_out,std::string path_in)$/;"	f	namespace:nissa
crash	src/base/debug.hpp	4;"	d
crash	test/test_max_tag.cpp	/^void crash(int ierr)$/;"	f
crash	tools/common_tools.cpp	/^void crash(const char *templ,...)$/;"	f
crash	tools/conf_transform/edit/ILDG_File_light.cpp	/^void crash(const char *templ,...)$/;"	f
crash	tools/find_best_vir_partitioning/find.cpp	/^void crash(const char *templ,...)$/;"	f
crash	tools/pack.c	/^void crash(const char *templ,...)$/;"	f
crash_if_borders_not_allocated	src/base/vectors.cpp	/^  void crash_if_borders_not_allocated(void *v,int min_size)$/;"	f	namespace:nissa
crash_if_edges_not_allocated	src/base/vectors.cpp	/^  void crash_if_edges_not_allocated(void *v,int min_size)$/;"	f	namespace:nissa
crash_if_end_diff_from_start	src/operations/su3_paths/arbitrary.cpp	/^  void crash_if_end_diff_from_start(path_drawing_t *c)$/;"	f	namespace:nissa
crash_if_not_initialized	src/communicate/borders.cpp	/^  void crash_if_not_initialized(comm_t &comm)$/;"	f	namespace:nissa
crash_printing_error	src/base/debug.hpp	5;"	d
crc_table	src/io/checksum.cpp	/^  static uint32_t crc_table[256]={$/;"	m	namespace:nissa	file:
create	projects/semileptonic/new_version/new_types.cpp	/^void prop_group_t::create(theta_group_t &t,mass_res_group_t &m,TMR r)$/;"	f	class:prop_group_t
create	projects/semileptonic/new_version/new_types.cpp	/^void two_pts_corr_group_t::create(int ext_ncorr)$/;"	f	class:two_pts_corr_group_t
create	projects/semileptonic/new_version/new_types.hpp	/^  void create() {if(!is_allocated()) U=nissa_malloc("U",loc_vol+bord_vol+edge_vol,quad_su3);}$/;"	f	struct:gauge_conf_t
create	projects/semileptonic/new_version/new_types.hpp	/^  void create() {if(!is_allocated()) eta=nissa_malloc("eta",loc_vol+bord_vol,colorspinspin);}$/;"	f	struct:in_source_t
create	projects/semileptonic/new_version/new_types.hpp	/^  void create(int ext_nprop_group_pair) {if(!is_allocated()) {nprop_group_pair=ext_nprop_group_pair;pair_list=nissa_malloc("PairList",nprop_group_pair,prop_group_pair_t);}}$/;"	f	struct:corr_command_t
create	projects/semileptonic/new_version/new_types.hpp	/^  void create(int ext_nterm) {destroy();nterm=ext_nterm;coeff=nissa_malloc("coeff",nterm,double);expnt=nissa_malloc("expntn",nterm,int);}$/;"	f	struct:gauss_smear_pars_t
create	projects/semileptonic/new_version/new_types.hpp	/^  void create(int n) {destroy();ntheta=n;theta=nissa_malloc("thppeta",n,double);}$/;"	f	struct:thppeta_group_t
create	projects/semileptonic/new_version/new_types.hpp	/^  void create(int n) {nmass=n;mass=nissa_malloc("mass",n,double);residues=nissa_malloc("residues",n,double);}$/;"	f	struct:mass_res_group_t
create	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    void create(ferm_discretiz::name_t discretiz,const char *name="pf")$/;"	f	struct:nissa::pseudofermion_t
create_MPI_cartesian_grid	src/routines/mpi_routines.cpp	/^  void create_MPI_cartesian_grid()$/;"	f	namespace:nissa
create_Wilson_gauge_info	src/free_theory/free_theory_types_routines.cpp	/^  gauge_info create_Wilson_gauge_info(double alpha,momentum_t bc)$/;"	f	namespace:nissa
create_Wilson_quark_info	src/free_theory/free_theory_types_routines.cpp	/^  tm_quark_info create_Wilson_quark_info(double kappa,momentum_t bc)$/;"	f	namespace:nissa
create_dir	src/routines/ios.cpp	/^  int create_dir(std::string path)$/;"	f	namespace:nissa
create_mapping	tools/find_best_vir_partitioning/find.cpp	/^  mapping_t create_mapping(torus_grid_t &torus,rank_grid_t &rank)$/;"	f	struct:assignement_t
create_tlSym_gauge_info	src/free_theory/free_theory_types_routines.cpp	/^  gauge_info create_tlSym_gauge_info(double alpha,momentum_t bc,double c1=-1.0\/12)$/;"	f	namespace:nissa
create_twisted_quark_info	src/free_theory/free_theory_types_routines.cpp	/^  tm_quark_info create_twisted_quark_info(double kappa,double mass,momentum_t bc,int r,double zmp=0)$/;"	f	namespace:nissa
creator1	src/free_theory/free_theory_types.hpp	/^    uint16_t creator1;$/;"	m	struct:nissa::bmpfile_header
creator2	src/free_theory/free_theory_types.hpp	/^    uint16_t creator2;$/;"	m	struct:nissa::bmpfile_header
crit_mass	projects/x/progs/compute_corrections.cpp	/^  int crit_mass;$/;"	m	struct:flags	file:
cshift_bw	src/operations/stag/Laplace_op_2links.cpp	/^  void cshift_bw(color *out,quad_su3 *conf,int mu,color *in,bool reset_first=true)$/;"	f	namespace:nissa
cshift_fw	src/operations/stag/Laplace_op_2links.cpp	/^  void cshift_fw(color *out,quad_su3 *conf,int mu,color *in,bool reset_first=true)$/;"	f	namespace:nissa
cssss	projects/nucleons/nucleons_smeared.cpp	/^typedef ssss cssss[3];$/;"	t	file:
ctimes	projects/reno_const/fourier.c	/^void  ctimes(fftw_complex out, complex cc, double reel, double imag){$/;"	f
cu	src/new_types/su3_op.hpp	/^    double cu,su;$/;"	m	struct:nissa::hermitian_exp_ingredients
cube	src/routines/math_routines.hpp	/^  T cube(T a)$/;"	f	namespace:nissa
cur_mov	src/operations/su3_paths/arbitrary.hpp	/^    int cur_path,cur_mov;$/;"	m	struct:nissa::paths_calculation_structure
cur_path	src/operations/su3_paths/arbitrary.hpp	/^    int cur_path,cur_mov;$/;"	m	struct:nissa::paths_calculation_structure
curr	projects/ib/disco.cpp	/^namespace curr$/;"	n	file:
curr_corr_named	projects/semileptonic/driver_corr.hpp	/^  int curr_corr_named;$/;"	m	class:two_pts_parser_driver
cw	src/new_types/su3_op.hpp	/^    double cw;$/;"	m	struct:nissa::hermitian_exp_ingredients
d	src/io/endianness.cpp	/^    double d;$/;"	m	union:nissa::double_reverter_t	file:
d	src/new_types/dsfmt.hpp	/^      double d[2];$/;"	m	union:nissa::dsfmt_t::w128_t
d2_corr	projects/x/tests/test_twisted_propagator_stochastic_correction.cpp	/^spinspin *d2_corr,*temp_corr;$/;"	v
data	projects/ib/disco.cpp	/^  complex *data;$/;"	m	namespace:EU1_EU2_EU4_EU6alt	file:
data	projects/semileptonic/new_version/new_semileptonic.cpp	/^  colorspinspin **data;$/;"	m	struct:propgroup_t	file:
data	projects/semileptonic/new_version/new_semileptonic.cpp	/^  colorspinspin *data;$/;"	m	struct:source_t	file:
data	src/free_theory/free_theory_types.hpp	/^    char *data;$/;"	m	struct:nissa::bmpfile
data	src/io/ILDG_File.hpp	/^    char *data;$/;"	m	struct:nissa::ILDG_message
data	tools/ave.cpp	/^double *data=NULL,*ave_data=NULL;$/;"	v
data	tools/clusterize2.cpp	/^double *data;$/;"	v
data_coordinate_order_shift	src/operations/fft.cpp	/^  void data_coordinate_order_shift(complex *data,int ncpp,int mu0)$/;"	f	namespace:nissa
data_length	src/io/ILDG_File.hpp	/^    uint64_t data_length;$/;"	m	struct:nissa::ILDG_header
data_length	src/io/ILDG_File.hpp	/^    uint64_t data_length;$/;"	m	struct:nissa::ILDG_message
data_length	tools/conf_transform/edit/ILDG_File_light.hpp	/^  uint64_t data_length;$/;"	m	struct:ILDG_header
datadir	build/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	build/projects/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	build/src/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	build/tools/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	build/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	build/projects/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	build/src/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	build/tools/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
debug_lexer	build/projects/generate_confs/tokenizer.cpp	/^   const int debug_lexer=0;$/;"	v
debug_lexer	build/projects/semileptonic/tokenize_corr.cpp	/^   const int debug_lexer=0;$/;"	v
debug_lvl3	work_in_prog/eo_inverter/invert2.cpp	/^const int debug_lvl3=0;$/;"	v
debug_parser	build/projects/generate_confs/parser.cpp	/^  const int debug_parser=0;$/;"	v
debug_parser	build/projects/semileptonic/parse_corr.cpp	/^  const int debug_parser=0;$/;"	v
decript_MPI_error	src/base/debug.hpp	6;"	d
def_Dmax	src/operations/su3_paths/all_rectangles.hpp	/^    int def_Dmax(){return 9;}$/;"	f	struct:nissa::all_rects_meas_pars_t
def_Dmin	src/operations/su3_paths/all_rectangles.hpp	/^    int def_Dmin(){return 1;}$/;"	f	struct:nissa::all_rects_meas_pars_t
def_L	projects/generate_confs/driver.hpp	/^    int def_L(){return 4;}$/;"	f	class:nissa::driver_t
def_T	projects/generate_confs/driver.hpp	/^    int def_T(){return 4;}$/;"	f	class:nissa::driver_t
def_Tmax	src/operations/su3_paths/all_rectangles.hpp	/^    int def_Tmax(){return 9;}$/;"	f	struct:nissa::all_rects_meas_pars_t
def_Tmin	src/operations/su3_paths/all_rectangles.hpp	/^    int def_Tmin(){return 1;}$/;"	f	struct:nissa::all_rects_meas_pars_t
def_after	src/new_types/metadynamics.hpp	/^    int def_after() {return 30;}$/;"	f	struct:nissa::meta_pars_t
def_after	src/operations/gaugeconf.hpp	/^    int def_after(){return 0;}$/;"	f	struct:nissa::gauge_obs_meas_pars_t
def_after	src/operations/stag/stag.hpp	/^    int def_after(){return 0;}$/;"	f	struct:nissa::base_fermionic_meas_t
def_after	src/operations/su3_paths/all_rectangles.hpp	/^    int def_after(){return 0;}$/;"	f	struct:nissa::all_rects_meas_pars_t
def_after	src/operations/su3_paths/pline.hpp	/^    int def_after(){return 0;}$/;"	f	struct:nissa::poly_corr_meas_pars_t
def_after	src/operations/su3_paths/topological_charge.hpp	/^    int def_after(){return 0;}$/;"	f	struct:nissa::top_meas_pars_t
def_after	src/operations/su3_paths/watusso.hpp	/^    int def_after(){return 0;}$/;"	f	struct:nissa::watusso_meas_pars_t
def_alpha	src/operations/smearing/APE.hpp	/^    double def_alpha(){return 0.5;}$/;"	f	struct:nissa::ape_pars_t
def_alpha0	src/operations/smearing/HYP.hpp	/^    double def_alpha0() {return 1;}$/;"	f	struct:nissa::hyp_pars_t
def_alpha1	src/operations/smearing/HYP.hpp	/^    double def_alpha1() {return 1;}$/;"	f	struct:nissa::hyp_pars_t
def_alpha2	src/operations/smearing/HYP.hpp	/^    double def_alpha2() {return 0.5;}$/;"	f	struct:nissa::hyp_pars_t
def_alpha_exp	src/operations/gauge_fixing.hpp	/^    double def_alpha_exp() const {return 0.16;}$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
def_barr	src/new_types/metadynamics.hpp	/^    double def_barr() {return 10.0;}$/;"	f	struct:nissa::meta_pars_t
def_bend	src/new_types/metadynamics.hpp	/^    double def_bend() {return 0.0;}$/;"	f	struct:nissa::meta_pars_t
def_beta	src/hmc/theory_pars.hpp	/^    double def_beta(){return 6;}$/;"	f	struct:nissa::theory_pars_t
def_cSW	src/hmc/quark_pars.hpp	/^    double def_cSW(){return 0;}$/;"	f	struct:nissa::quark_content_t
def_charge	src/hmc/quark_pars.hpp	/^    double def_charge(){return 0;}$/;"	f	struct:nissa::quark_content_t
def_coeff	src/new_types/metadynamics.hpp	/^    double def_coeff() {return 1.0;}$/;"	f	struct:nissa::meta_pars_t
def_compute_susc	src/operations/stag/putpourri.hpp	/^    int def_compute_susc(){return 0;}$/;"	f	struct:nissa::fermionic_putpourri_meas_pars_t
def_corr_path	src/operations/su3_paths/topological_charge.hpp	/^    std::string def_corr_path(){return "TopoCorr";}$/;"	f	struct:nissa::top_meas_pars_t
def_deg	src/hmc/quark_pars.hpp	/^    int def_deg(){return 1;}$/;"	f	struct:nissa::quark_content_t
def_dir	src/operations/su3_paths/pline.hpp	/^    int def_dir(){return 0;}$/;"	f	struct:nissa::poly_corr_meas_pars_t
def_discretiz	src/hmc/quark_pars.hpp	/^    ferm_discretiz::name_t def_discretiz(){return ferm_discretiz::ROOT_STAG;}$/;"	f	struct:nissa::quark_content_t
def_dmax	src/operations/su3_paths/watusso.hpp	/^    int def_dmax(){return 10;}$/;"	f	struct:nissa::watusso_meas_pars_t
def_dt	src/operations/smearing/Wflow.hpp	/^    double def_dt(){return 0.2;}$/;"	f	struct:nissa::Wflow_pars_t
def_each	src/new_types/metadynamics.hpp	/^    int def_each() {return 1;}$/;"	f	struct:nissa::meta_pars_t
def_each	src/operations/gaugeconf.hpp	/^    int def_each(){return 1;}$/;"	f	struct:nissa::gauge_obs_meas_pars_t
def_each	src/operations/stag/stag.hpp	/^    int def_each(){return 1;}$/;"	f	struct:nissa::base_fermionic_meas_t
def_each	src/operations/su3_paths/all_rectangles.hpp	/^    int def_each(){return 1;}$/;"	f	struct:nissa::all_rects_meas_pars_t
def_each	src/operations/su3_paths/pline.hpp	/^    int def_each(){return 1;}$/;"	f	struct:nissa::poly_corr_meas_pars_t
def_each	src/operations/su3_paths/topological_charge.hpp	/^    int def_each(){return 1;}$/;"	f	struct:nissa::top_meas_pars_t
def_each	src/operations/su3_paths/watusso.hpp	/^    int def_each(){return 1;}$/;"	f	struct:nissa::watusso_meas_pars_t
def_flag	src/hmc/gauge/topological_action.hpp	/^    int def_flag(){return 0;}$/;"	f	struct:nissa::topotential_pars_t
def_force_out	src/new_types/metadynamics.hpp	/^    double def_force_out() {return 100.0;}$/;"	f	struct:nissa::meta_pars_t
def_gauge	src/operations/gauge_fixing.hpp	/^    gauge_t def_gauge() const {return Landau;}$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
def_gauge_action	src/operations/smearing/cooling.hpp	/^    gauge_action_name_t def_gauge_action(){return WILSON_GAUGE_ACTION;}$/;"	f	struct:nissa::cool_pars_t
def_gauge_action_name	src/hmc/theory_pars.hpp	/^    gauge_action_name_t def_gauge_action_name(){return WILSON_GAUGE_ACTION;}$/;"	f	struct:nissa::theory_pars_t
def_id_sea_theory	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int def_id_sea_theory(){return 0;}$/;"	f	struct:nissa::hmc_evol_pars_t
def_im_pot	src/hmc/quark_pars.hpp	/^    double def_im_pot(){return 0;}$/;"	f	struct:nissa::quark_content_t
def_itheory	src/operations/stag/stag.hpp	/^    int def_itheory(){return 0;}$/;"	f	struct:nissa::base_fermionic_meas_t
def_kappa	src/hmc/quark_pars.hpp	/^    double def_kappa(){return 0.125;}$/;"	f	struct:nissa::quark_content_t
def_mass	src/hmc/quark_pars.hpp	/^    double def_mass(){return 0.1;}$/;"	f	struct:nissa::quark_content_t
def_max_order	src/operations/stag/rendens.hpp	/^    int def_max_order(){return 2;}$/;"	f	struct:nissa::quark_rendens_meas_pars_t
def_md_residue	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    double def_md_residue(){return 1e-8;}$/;"	f	struct:nissa::hmc_evol_pars_t
def_meas_corr	src/operations/su3_paths/topological_charge.hpp	/^    int def_meas_corr(){return 0;}$/;"	f	struct:nissa::top_meas_pars_t
def_meas_each_nsmooth	src/operations/smearing/smooth.hpp	/^    int def_meas_each_nsmooth(){return 1;}$/;"	f	struct:nissa::smooth_pars_t
def_meas_energy	src/operations/gaugeconf.hpp	/^    int def_meas_energy(){return 0;}$/;"	f	struct:nissa::gauge_obs_meas_pars_t
def_meas_plaq	src/operations/gaugeconf.hpp	/^    int def_meas_plaq(){return 1;}$/;"	f	struct:nissa::gauge_obs_meas_pars_t
def_meas_poly	src/operations/gaugeconf.hpp	/^    int def_meas_poly(){return 1;}$/;"	f	struct:nissa::gauge_obs_meas_pars_t
def_method	src/operations/gauge_fixing.hpp	/^    method_t def_method() const {return exponentiate;}$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
def_method	src/operations/smearing/smooth.hpp	/^    method_t def_method(){return COOLING;}$/;"	f	struct:nissa::smooth_pars_t
def_name	src/hmc/quark_pars.hpp	/^    std::string def_name(){return "quark";}$/;"	f	struct:nissa::quark_content_t
def_ncopies	src/operations/stag/stag.hpp	/^    int def_ncopies(){return 1;}$/;"	f	struct:nissa::base_fermionic_meas_t
def_nflows	src/operations/smearing/Wflow.hpp	/^    double def_nflows(){return 50;}$/;"	f	struct:nissa::Wflow_pars_t
def_ngauge_substeps	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int def_ngauge_substeps(){return 5;}$/;"	f	struct:nissa::hmc_evol_pars_t
def_ngrid	src/new_types/metadynamics.hpp	/^    int def_ngrid() {return 0;}$/;"	f	struct:nissa::meta_pars_t
def_nhits	src/operations/stag/stag.hpp	/^    int def_nhits(){return 1;}$/;"	f	struct:nissa::base_fermionic_meas_t
def_nlevels	src/operations/smearing/APE.hpp	/^    int def_nlevels(){return 20;}$/;"	f	struct:nissa::ape_pars_t
def_nlevels	src/operations/smearing/HYP.hpp	/^    int def_nlevels() {return 1;}$/;"	f	struct:nissa::hyp_pars_t
def_nlevels	src/operations/smearing/stout.hpp	/^    int def_nlevels(){return 0;}$/;"	f	struct:nissa::stout_pars_t
def_nmax_iterations	src/operations/gauge_fixing.hpp	/^    int def_nmax_iterations() const {return 100000;}$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
def_nmd_steps	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int def_nmd_steps(){return 11;}$/;"	f	struct:nissa::hmc_evol_pars_t
def_nrecu	src/operations/smearing/Wflow.hpp	/^    int def_nrecu(){return 5;}$/;"	f	struct:nissa::Wflow_pars_t
def_nsteps	src/operations/smearing/cooling.hpp	/^    int def_nsteps(){return 120;}$/;"	f	struct:nissa::cool_pars_t
def_ntraj_tot	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int def_ntraj_tot(){return 100;}$/;"	f	struct:nissa::hmc_evol_pars_t
def_overrelax_exp	src/operations/smearing/cooling.hpp	/^    double def_overrelax_exp(){return 0.0;}$/;"	f	struct:nissa::cool_pars_t
def_overrelax_flag	src/operations/smearing/cooling.hpp	/^    int def_overrelax_flag(){return 0;}$/;"	f	struct:nissa::cool_pars_t
def_overrelax_prob	src/operations/gauge_fixing.hpp	/^    double def_overrelax_prob() const {return 0.9;}$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
def_path	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    std::string def_path(){return "conf";}$/;"	f	struct:nissa::conf_pars_t
def_path	src/operations/gaugeconf.hpp	/^    std::string def_path(){return "gauge_obs";}$/;"	f	struct:nissa::gauge_obs_meas_pars_t
def_path	src/operations/stag/magnetization.hpp	/^    std::string def_path(){return "magnetization";}$/;"	f	struct:nissa::magnetization_meas_pars_t
def_path	src/operations/stag/mesons.hpp	/^    std::string def_path(){return "meson_corrs";}$/;"	f	struct:nissa::meson_corr_meas_pars_t
def_path	src/operations/stag/nucleon.hpp	/^    std::string def_path(){return "nucleon_corrs";}$/;"	f	struct:nissa::nucleon_corr_meas_pars_t
def_path	src/operations/stag/putpourri.hpp	/^    std::string def_path(){return "lavanda";}$/;"	f	struct:nissa::fermionic_putpourri_meas_pars_t
def_path	src/operations/stag/qed_corr.hpp	/^    std::string def_path(){return "qed_corrs";}$/;"	f	struct:nissa::qed_corr_meas_pars_t
def_path	src/operations/stag/rendens.hpp	/^    std::string def_path(){return "rende";}$/;"	f	struct:nissa::quark_rendens_meas_pars_t
def_path	src/operations/stag/spinpol.hpp	/^    std::string def_path(){return "pollo";}$/;"	f	struct:nissa::spinpol_meas_pars_t
def_path	src/operations/stag/zumba.hpp	/^    std::string def_path(){return "zambia";}$/;"	f	struct:nissa::chir_zumba_meas_pars_t
def_path	src/operations/su3_paths/all_rectangles.hpp	/^    std::string def_path(){return "rectangles";}$/;"	f	struct:nissa::all_rects_meas_pars_t
def_path	src/operations/su3_paths/pline.hpp	/^    std::string def_path(){return "luppoli";}$/;"	f	struct:nissa::poly_corr_meas_pars_t
def_path	src/operations/su3_paths/topological_charge.hpp	/^    std::string def_path(){return "Topo";}$/;"	f	struct:nissa::top_meas_pars_t
def_path	src/operations/su3_paths/watusso.hpp	/^    std::string def_path(){return "watusso";}$/;"	f	struct:nissa::watusso_meas_pars_t
def_pf_action_residue	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    double def_pf_action_residue(){return 1e-16;}$/;"	f	struct:nissa::hmc_evol_pars_t
def_re_pot	src/hmc/quark_pars.hpp	/^    double def_re_pot(){return 0;}$/;"	f	struct:nissa::quark_content_t
def_residue	src/operations/stag/stag.hpp	/^    double def_residue(){return 1e-12;}$/;"	f	struct:nissa::base_fermionic_meas_t
def_rho	src/operations/smearing/stout.hpp	/^    double def_rho(){return 0;}$/;"	f	struct:nissa::stout_pars_t
def_rnd_type	src/operations/stag/stag.hpp	/^    rnd_t def_rnd_type(){return RND_Z2;}$/;"	f	struct:nissa::base_fermionic_meas_t
def_run_mode	projects/generate_confs/driver.hpp	/^    run_mode_t def_run_mode(){return EVOLUTION_MODE;}$/;"	f	class:nissa::driver_t
def_seed	projects/generate_confs/driver.hpp	/^    int def_seed(){return 23526211;}$/;"	f	class:nissa::driver_t
def_skip_mtest_ntraj	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int def_skip_mtest_ntraj(){return 30;}$/;"	f	struct:nissa::hmc_evol_pars_t
def_space_or_time	src/operations/smearing/smooth.hpp	/^    space_or_time_t def_space_or_time(){return SPACETIME;}$/;"	f	struct:nissa::smooth_pars_t
def_start_cond	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    start_conf_cond_t def_start_cond(){return COLD_START_COND;}$/;"	f	struct:nissa::conf_pars_t
def_store_each	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int def_store_each(){return 10;}$/;"	f	struct:nissa::conf_pars_t
def_store_path	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    std::string def_store_path(){return "stored_conf.%08d";}$/;"	f	struct:nissa::conf_pars_t
def_store_running	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int def_store_running(){return 1;}$/;"	f	struct:nissa::conf_pars_t
def_tag	projects/generate_confs/driver.hpp	/^    std::string def_tag(){return "";}$/;"	f	class:nissa::driver_t
def_target_precision	src/operations/gauge_fixing.hpp	/^    double def_target_precision() const {return 1e-14;}$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
def_theta	src/hmc/gauge/topological_action.hpp	/^    double def_theta(){return 0.0;}$/;"	f	struct:nissa::topotential_pars_t
def_traj_length	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    double def_traj_length(){return 1.0;}$/;"	f	struct:nissa::hmc_evol_pars_t
def_unitarize_each	src/operations/gauge_fixing.hpp	/^    int def_unitarize_each() const {return 100;}$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
def_use_adaptative_search	src/operations/gauge_fixing.hpp	/^    int def_use_adaptative_search() const {return 1;}$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
def_use_adjoint_flow	src/operations/stag/spinpol.hpp	/^    int def_use_adjoint_flow(){return 1;}$/;"	f	struct:nissa::spinpol_meas_pars_t
def_use_ferm_conf_for_gluons	src/operations/stag/spinpol.hpp	/^    int def_use_ferm_conf_for_gluons(){return 0;}$/;"	f	struct:nissa::spinpol_meas_pars_t
def_use_fft_acc	src/operations/gauge_fixing.hpp	/^    int def_use_fft_acc() const {return 1;}$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
def_use_generalized_cg	src/operations/gauge_fixing.hpp	/^    int def_use_generalized_cg() const {return 1;}$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
def_use_smooth	src/operations/gaugeconf.hpp	/^    int def_use_smooth(){return 0;}$/;"	f	struct:nissa::gauge_obs_meas_pars_t
def_walltime	projects/generate_confs/driver.hpp	/^    int def_walltime(){return 3500;}$/;"	f	class:nissa::driver_t
def_well_tempering	src/new_types/metadynamics.hpp	/^    double def_well_tempering() {return 0.0;}$/;"	f	struct:nissa::meta_pars_t
def_width	src/new_types/metadynamics.hpp	/^    double def_width() {return 1.0;}$/;"	f	struct:nissa::meta_pars_t
define_MPI_types	src/routines/mpi_routines.cpp	/^  void define_MPI_types()$/;"	f	namespace:nissa
define_bgq_hopping_matrix_lx_output_pointers_and_T_buffers	work_in_prog/bgq/src/geometry_bgq.cpp	/^void define_bgq_hopping_matrix_lx_output_pointers_and_T_buffers(bi_halfspincolor *binded)$/;"	f
define_bgq_lx_ordering	work_in_prog/bgq/src/geometry_bgq.cpp	/^void define_bgq_lx_ordering()$/;"	f
define_vir_hopping_matrix_output_pos	src/geometry/geometry_vir.cpp	/^  void define_vir_hopping_matrix_output_pos()$/;"	f	namespace:nissa
define_vir_ordering	src/geometry/geometry_vir.cpp	/^  void define_vir_ordering()$/;"	f	namespace:nissa
deg	src/hmc/quark_pars.hpp	/^    int deg;$/;"	m	struct:nissa::quark_content_t
degree	src/new_types/rat_approx.hpp	/^    int degree(){return poles.size();}$/;"	f	struct:nissa::rat_approx_t
degree	src/operations/remez/remez_algorithm.hpp	/^    int degree,nmax_err_points,nzero_err_points;$/;"	m	struct:nissa::rat_approx_finder_t
delay_marked_threads	src/routines/thread.cpp	/^  void delay_marked_threads()$/;"	f	namespace:nissa
delay_rnd_gen	src/routines/thread.hpp	/^    EXTERN_THREAD rnd_gen *delay_rnd_gen;$/;"	m	namespace:nissa
delayed_thread_barrier	src/routines/thread.hpp	/^    EXTERN_THREAD int *delayed_thread_barrier;$/;"	m	namespace:nissa
delta	src/operations/remez/remez_algorithm.hpp	/^    double delta,approx_tolerance;$/;"	m	struct:nissa::rat_approx_finder_t
demo_of_loclx	projects/x/progs/correct.cpp	/^int *demo_of_loclx,*loclx_of_demo,*npoints_dist2;$/;"	v
den	src/new_types/rat_approx.hpp	/^    int num,den;$/;"	m	struct:nissa::rat_approx_t
den	src/operations/remez/remez_algorithm.hpp	/^    int num,den;$/;"	m	struct:nissa::rat_approx_finder_t
den_of_mom	projects/ib/checks.cpp	/^double den_of_mom(int imom,tm_quark_info qu)$/;"	f
dens_t	tools/Gaussiansmear_test.cpp	/^  dens_t() : n(0),s(0.0) {}$/;"	f	struct:dens_t
dens_t	tools/Gaussiansmear_test.cpp	/^struct dens_t$/;"	s	file:
depcomp	build/projects/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	build/src/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	build/tools/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
der_source	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^spincolor *der_source;$/;"	v
der_source	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^spincolor *der_source;$/;"	v
descriptors	src/communicate/communicate.hpp	/^    MUHWI_Descriptor_t *descriptors;$/;"	m	struct:nissa::comm_t
descriptors	work_in_prog/bgq/src/add_var.hpp	/^  MUHWI_Descriptor_t *descriptors;$/;"	m	struct:spi_comm_t
destroy	projects/semileptonic/new_version/new_types.hpp	/^  void destroy() {if(is_allocated()) nissa_free(U);}$/;"	f	struct:gauge_conf_t
destroy	projects/semileptonic/new_version/new_types.hpp	/^  void destroy() {if(is_allocated()) nissa_free(corr_list);}$/;"	f	struct:two_pts_corr_group_t
destroy	projects/semileptonic/new_version/new_types.hpp	/^  void destroy() {if(is_allocated()) nissa_free(eta);}$/;"	f	struct:in_source_t
destroy	projects/semileptonic/new_version/new_types.hpp	/^  void destroy() {if(is_allocated()) nissa_free(pair_list);}$/;"	f	struct:corr_command_t
destroy	projects/semileptonic/new_version/new_types.hpp	/^  void destroy() {if(is_allocated()) nissa_free(thppeta);}$/;"	f	struct:thppeta_group_t
destroy	projects/semileptonic/new_version/new_types.hpp	/^  void destroy() {if(is_allocated()) {for(int i=0,n=nprop();i<n;i++) nissa_free(S[i]);nissa_free(S);}}$/;"	f	struct:prop_group_t
destroy	projects/semileptonic/new_version/new_types.hpp	/^  void destroy() {if(is_allocated()) {nissa_free(coeff);nissa_free(expnt);}}$/;"	f	struct:gauss_smear_pars_t
destroy	projects/semileptonic/new_version/new_types.hpp	/^  void destroy() {if(is_allocated()){nissa_free(mass);nissa_free(residues);}}$/;"	f	struct:mass_res_group_t
destroy	src/communicate/all_to_all.hpp	/^    void destroy()$/;"	f	struct:nissa::all_to_all_comm_t
destroy	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    void destroy()$/;"	f	struct:nissa::pseudofermion_t
destroy_backfield	src/hmc/backfield.cpp	/^  void theory_pars_t::destroy_backfield()$/;"	f	class:nissa::theory_pars_t
destroy_scanner	build/projects/generate_confs/tokenizer.cpp	/^void nissa::driver_t::destroy_scanner()$/;"	f	class:nissa::driver_t
destroy_scanner	build/projects/semileptonic/tokenize_corr.cpp	/^void two_pts_parser_driver::destroy_scanner()$/;"	f	class:two_pts_parser_driver
determinant	src/routines/math_routines.cpp	/^  void determinant(complex d,complex *m,int *s,int n,int N)$/;"	f	namespace:nissa
df0	src/operations/smearing/Wflow.hpp	/^    color *df0,*df1,*df2,*f1,*f2;$/;"	m	struct:nissa::fermion_flower_t
df1	src/operations/smearing/Wflow.hpp	/^    color *df0,*df1,*df2,*f1,*f2;$/;"	m	struct:nissa::fermion_flower_t
df2	src/operations/smearing/Wflow.hpp	/^    color *df0,*df1,*df2,*f1,*f2;$/;"	m	struct:nissa::fermion_flower_t
diff_with_next_eight_multiple	src/routines/mpi_routines.cpp	/^  MPI_Offset diff_with_next_eight_multiple(MPI_Offset pos)$/;"	f	namespace:nissa
diff_with_next_eight_multiple	tools/conf_transform/edit/ILDG_File_light.cpp	/^uint64_t diff_with_next_eight_multiple(uint64_t pos)$/;"	f
diluted_col_source	projects/ib/pars.hpp	/^  EXTERN_PARS int diluted_spi_source,diluted_col_source,diluted_spat_source;$/;"	m	namespace:nissa
diluted_spat_source	projects/ib/pars.hpp	/^  EXTERN_PARS int diluted_spi_source,diluted_col_source,diluted_spat_source;$/;"	m	namespace:nissa
diluted_spi_source	projects/ib/pars.hpp	/^  EXTERN_PARS int diluted_spi_source,diluted_col_source,diluted_spat_source;$/;"	m	namespace:nissa
diquark	projects/nucleons/nucleons_smeared.cpp	/^typedef cssss diquark[3];$/;"	t	file:
dir	src/operations/su3_paths/pline.hpp	/^    int dir;$/;"	m	struct:nissa::poly_corr_meas_pars_t
dir_Dee_Doo	work_in_prog/eo_inverter/invert2.cpp	/^void dir_Dee_Doo(spincolor *out,spincolor *in,double mu,double kappa,int parity)$/;"	f
dir_exists	src/io/input.cpp	/^  int dir_exists(std::string path)$/;"	f	namespace:nissa
dir_inv_Dee_Doo	work_in_prog/eo_inverter/invert2.cpp	/^void dir_inv_Dee_Doo(spincolor *out,spincolor *in,double mu,double kappa,int parity,int dir_inv)$/;"	f
dirac_herm	src/new_types/dirac.hpp	/^  inline void dirac_herm(dirac_matr *out,dirac_matr *in)$/;"	f	namespace:nissa
dirac_matr	src/new_types/dirac.hpp	/^  struct dirac_matr$/;"	s	namespace:nissa
dirac_prod	src/new_types/dirac.hpp	/^  inline void dirac_prod(dirac_matr *out,dirac_matr *in1,dirac_matr *in2)$/;"	f	namespace:nissa
dirac_prod_double	src/new_types/dirac.hpp	/^  inline void dirac_prod_double(dirac_matr *out,dirac_matr *in1,double in2)$/;"	f	namespace:nissa
dirac_prod_idouble	src/new_types/dirac.hpp	/^  inline void dirac_prod_idouble(dirac_matr *out,dirac_matr *in1,double in2)$/;"	f	namespace:nissa
dirac_subt	src/new_types/dirac.hpp	/^  inline void dirac_subt(dirac_matr *out,dirac_matr *in1,dirac_matr *in2)$/;"	f	namespace:nissa
dirac_subt_the_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void dirac_subt_the_prod_spincolor(spincolor out,const dirac_matr *m,const spincolor in)$/;"	f	namespace:nissa
dirac_summ	src/new_types/dirac.hpp	/^  inline void dirac_summ(dirac_matr *out,dirac_matr *in1,dirac_matr *in2)$/;"	f	namespace:nissa
dirac_summ_the_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void dirac_summ_the_prod_spincolor(spincolor out,const dirac_matr *m,const spincolor in)$/;"	f	namespace:nissa
direct_invert	work_in_prog/eo_inverter/invert2.cpp	/^void direct_invert(spincolor *solution,spincolor *source,double mu,double kappa)$/;"	f
direct_invert	work_in_prog/eo_inverter/invert3.cpp	/^void direct_invert(spincolor *solution,spincolor *source,quad_su3 *conf,double kappa,double mu,int nitermax,double residue)$/;"	f
dirs	src/operations/smearing/Wflow.hpp	/^    bool dirs[NDIM];$/;"	m	struct:nissa::internal_fermion_flower_t
discretiz	src/hmc/quark_pars.hpp	/^    ferm_discretiz::name_t discretiz;$/;"	m	struct:nissa::quark_content_t
dist2	projects/x/progs/correct.cpp	/^int *dist2;$/;"	v
dist2_max	projects/x/progs/correct.cpp	/^int ndemo_points,dist2_max;$/;"	v
distcleancheck_listfiles	build/Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	build/Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	build/Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
dmax	src/operations/su3_paths/watusso.hpp	/^    int dmax;$/;"	m	struct:nissa::watusso_meas_pars_t
do_orsay	projects/reno_const/RIMOM.cpp	/^int do_orsay[16]={1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};$/;"	v
do_recursion	src/new_types/dsfmt.hpp	/^    void do_recursion(w128_t &r,w128_t &a,w128_t &b,w128_t &lung)$/;"	f	class:nissa::dsfmt_t
do_rome	projects/reno_const/RIMOM.cpp	/^int do_rome[16]= {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};$/;"	v
docdir	build/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	build/projects/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	build/src/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	build/tools/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
double_conv_quadruple_accumulate_double_vector_glb_scalar_prod	src/linalgs/linalgs.cpp	/^  double double_conv_quadruple_accumulate_double_vector_glb_scalar_prod(double *a,double *b,int n)$/;"	f	namespace:nissa
double_conv_quadruple_vector_glb_scalar_prod	src/linalgs/linalgs.cpp	/^  void double_conv_quadruple_vector_glb_scalar_prod(double *out,float_128 *a,float_128 *b,int n)$/;"	f	namespace:nissa
double_from_float_128	src/new_types/float_128.hpp	/^  inline double double_from_float_128(float_128 b)$/;"	f	namespace:nissa
double_list	build/projects/generate_confs/parser.cpp	/^    std::vector<double> *double_list;$/;"	m	union:YYSTYPE	file:
double_list	build/projects/generate_confs/parser.hpp	/^    std::vector<double> *double_list;$/;"	m	union:YYSTYPE
double_numb	build/projects/generate_confs/parser.cpp	/^    double double_numb;$/;"	m	union:YYSTYPE	file:
double_numb	build/projects/generate_confs/parser.hpp	/^    double double_numb;$/;"	m	union:YYSTYPE
double_numb	build/projects/semileptonic/parse_corr.cpp	/^  double double_numb;$/;"	m	union:YYSTYPE	file:
double_numb	build/projects/semileptonic/parse_corr.hpp	/^  double double_numb;$/;"	m	union:YYSTYPE
double_ptr	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    double *double_ptr;$/;"	m	struct:nissa::pseudofermion_t
double_reverter_t	src/io/endianness.cpp	/^  union double_reverter_t$/;"	u	namespace:nissa	file:
double_vector_glb_norm2	src/linalgs/linalgs.hpp	/^  template <class T> double double_vector_glb_norm2(T *v,int n_per_class)$/;"	f	namespace:nissa
double_vector_init_to_zero	src/linalgs/linalgs.cpp	/^  void double_vector_init_to_zero(double *a,int n)$/;"	f	namespace:nissa
double_vector_prodassign_double	src/linalgs/linalgs.hpp	/^  inline void double_vector_prodassign_double(double *v,double r,int n)$/;"	f	namespace:nissa
double_vector_subtassign	src/linalgs/linalgs.hpp	/^  inline void double_vector_subtassign(double *out,double *in,int n){double_vector_subt(out,out,in,n);}$/;"	f	namespace:nissa
double_vector_summassign	src/linalgs/linalgs.hpp	/^  inline void double_vector_summassign(double *out,double *in,int n){double_vector_summ(out,out,in,n);}$/;"	f	namespace:nissa
double_vector_summassign_double_vector_prod_double	src/linalgs/linalgs.hpp	/^  inline void double_vector_summassign_double_vector_prod_double(double *a,double *b,double c,int n,int OPT=0)$/;"	f	namespace:nissa
doubles_to_doubles_changing_endianess	tools/common_tools.cpp	/^void doubles_to_doubles_changing_endianess(double *dest,double *sour,int ndoubles)$/;"	f
doubles_to_doubles_changing_endianness	tools/conf_transform/edit/ILDG_File_light.cpp	/^void doubles_to_doubles_changing_endianness(double *dest,double *sour,int ndoubles,int verbose=1)$/;"	f
doubles_to_floats_changing_endianness	src/io/endianness.cpp	/^  void doubles_to_floats_changing_endianness(float *dest,double *sour,int n,int verbose)$/;"	f	namespace:nissa
doubles_to_floats_same_endianness	src/io/endianness.cpp	/^  void doubles_to_floats_same_endianness(float *dest,double *sour,int n,int verbose)$/;"	f	namespace:nissa
draw_force	src/new_types/metadynamics.cpp	/^  void meta_pars_t::draw_force(const char *force_path)$/;"	f	class:nissa::meta_pars_t
driver_t	build/projects/generate_confs/tokenizer.cpp	/^nissa::driver_t::driver_t(FILE *ext) :$/;"	f	class:nissa::driver_t
driver_t	projects/generate_confs/driver.hpp	/^    driver_t() {}$/;"	f	class:nissa::driver_t
driver_t	projects/generate_confs/driver.hpp	/^  class driver_t$/;"	c	namespace:nissa
drv	projects/generate_confs/generate.cpp	/^driver_t *drv;$/;"	v
dsfmt_t	src/new_types/dsfmt.hpp	/^    dsfmt_t(){memset(this,0,sizeof(dsfmt_t));}$/;"	f	class:nissa::dsfmt_t
dsfmt_t	src/new_types/dsfmt.hpp	/^    dsfmt_t(uint32_t seed){init(seed);}$/;"	f	class:nissa::dsfmt_t
dsfmt_t	src/new_types/dsfmt.hpp	/^  class dsfmt_t$/;"	c	namespace:nissa
dt	src/operations/smearing/Wflow.hpp	/^    double dt;$/;"	m	struct:nissa::Wflow_pars_t
dt	src/operations/smearing/Wflow.hpp	/^    double dt;$/;"	m	struct:nissa::internal_fermion_flower_t
dvidir	build/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	build/projects/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	build/src/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	build/tools/Makefile	/^dvidir = ${docdir}$/;"	m
each	src/new_types/metadynamics.hpp	/^    int each;$/;"	m	struct:nissa::meta_pars_t
each	src/operations/gaugeconf.hpp	/^    int each;$/;"	m	struct:nissa::gauge_obs_meas_pars_t
each	src/operations/stag/stag.hpp	/^    int each;$/;"	m	struct:nissa::base_fermionic_meas_t
each	src/operations/su3_paths/all_rectangles.hpp	/^    int each;$/;"	m	struct:nissa::all_rects_meas_pars_t
each	src/operations/su3_paths/pline.hpp	/^    int each;$/;"	m	struct:nissa::poly_corr_meas_pars_t
each	src/operations/su3_paths/topological_charge.hpp	/^    int each;$/;"	m	struct:nissa::top_meas_pars_t
each	src/operations/su3_paths/watusso.hpp	/^    int each;$/;"	m	struct:nissa::watusso_meas_pars_t
each	tools/x_clusterize/x_clusterize.cpp	/^int nconfs,nterm,njacks,each,clust_size;$/;"	v
eclose	src/operations/remez/remez_algorithm.hpp	/^    float_high_prec_t eclose;$/;"	m	struct:nissa::rat_approx_finder_t
edge_dir_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int edge_dir_vol[NDIM*(NDIM+1)\/2],edge_offset[NDIM*(NDIM+1)\/2];$/;"	m	namespace:nissa
edge_numb	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int edge_numb[NDIM][NDIM];$/;"	m	namespace:nissa
edge_offset	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int edge_dir_vol[NDIM*(NDIM+1)\/2],edge_offset[NDIM*(NDIM+1)\/2];$/;"	m	namespace:nissa
edge_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int edge_vol,edge_volh;$/;"	m	namespace:nissa
edge_volh	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int edge_vol,edge_volh;$/;"	m	namespace:nissa
edgelx_of_coord	src/geometry/geometry_lx.cpp	/^  int edgelx_of_coord(int *x,int mu,int nu)$/;"	f	namespace:nissa
eigenvalues_of_hermatr_find	src/eigenvalues/eigenvalues.hpp	/^  void eigenvalues_of_hermatr_find(complex **eig_vec,complex *eig_val,int neig,bool min_max,$/;"	f	namespace:nissa
eigenvalues_of_hermatr_find_all_and_sort	src/eigenvalues/eigenvalues_autarchic.cpp	/^    void eigenvalues_of_hermatr_find_all_and_sort(complex *eig_vec,double *lambda,const complex *M,const int M_size,const int neig,const double tau)$/;"	f	namespace:nissa::internal_eigenvalues
eigenvalues_of_hermatr_find_arpack	src/eigenvalues/eigenvalues_arpack.hpp	/^  void eigenvalues_of_hermatr_find_arpack(complex **eig_vec,complex *eig_val,int neig,bool min_max,$/;"	f	namespace:nissa
eigenvalues_of_hermatr_find_arpack_compute	src/eigenvalues/eigenvalues_arpack.cpp	/^    void eigenvalues_of_hermatr_find_arpack_compute(MPI_Fint &comm,complex **eig_vec,complex *eig_val,int neig,bool min_max,$/;"	f	namespace:nissa::arpack_data
eigenvalues_of_hermatr_find_autarchic	src/eigenvalues/eigenvalues_autarchic.hpp	/^  void eigenvalues_of_hermatr_find_autarchic(complex **eig_vec,complex *eig_val,int neig,bool min_max,$/;"	f	namespace:nissa
elong_su3_path	src/operations/su3_paths/arbitrary.hpp	/^  inline void elong_su3_path(path_drawing_t *c,su3 *out,quad_su3 *conf,path_step_pars_t pars)$/;"	f	namespace:nissa
em_field_pars	build/projects/generate_confs/parser.cpp	/^    nissa::em_field_pars_t *em_field_pars;$/;"	m	union:YYSTYPE	file:
em_field_pars	build/projects/generate_confs/parser.hpp	/^    nissa::em_field_pars_t *em_field_pars;$/;"	m	union:YYSTYPE
em_field_pars	src/hmc/theory_pars.hpp	/^    em_field_pars_t em_field_pars;$/;"	m	struct:nissa::theory_pars_t
em_field_pars_t	src/hmc/backfield.hpp	/^    em_field_pars_t() : flag(0) {for(int i=0;i<3;i++) E[i]=B[i]=0;}$/;"	f	struct:nissa::em_field_pars_t
em_field_pars_t	src/hmc/backfield.hpp	/^  struct em_field_pars_t$/;"	s	namespace:nissa
emw_t	src/new_types/su3_op.hpp	/^ typedef scomplex_t emw_t[NCOL*NCOL];$/;"	t
energy	projects/cpn/cpn.cpp	/^double energy(ON_t *z,quad_u1 *l)$/;"	f
energy_dens	src/operations/stag/putpourri.cpp	/^    complex energy_dens;$/;"	m	struct:nissa::fermionic_putpourri_t	file:
enl_gen	src/hmc/multipseudo/set_expansions.cpp	/^  const double enl_gen=pow(2,0.25);$/;"	m	namespace:nissa	file:
enough_time	projects/generate_confs/generate.cpp	/^bool enough_time()$/;"	f
enough_time	projects/generate_confs/generate_quenched.cpp	/^bool enough_time()$/;"	f
entr	src/new_types/dirac.hpp	/^    complex entr[NDIRAC];$/;"	m	struct:nissa::dirac_matr
eo_ON_t_comm	projects/cpn/cpn.cpp	/^comm_t lx_ON_t_comm,eo_ON_t_comm;$/;"	v
eo_geom_inited	src/geometry/geometry_eo.hpp	/^  EXTERN_GEOMETRY_EO int eo_geom_inited;$/;"	m	namespace:nissa
eo_quad_u1_comm	projects/cpn/cpn.cpp	/^comm_t lx_quad_u1_comm,eo_quad_u1_comm;$/;"	v
eps	src/hmc/gauge/MFACC_fields.cpp	/^  double eps=1e-4;$/;"	m	namespace:__anon7	file:
eps1	projects/nucleons/nucleons_smeared.cpp	/^int eps1[3]={2,0,1},eps2[3]={1,2,0};$/;"	v
eps2	projects/nucleons/nucleons_smeared.cpp	/^int eps1[3]={2,0,1},eps2[3]={1,2,0};$/;"	v
eps_pos	projects/nucleons/nucleons_smeared.cpp	/^int eps_pos[6][3]={{0,1,2},{0,2,1},{1,0,2},{1,2,0},{2,0,1},{2,1,0}};$/;"	v
eps_sig	projects/nucleons/nucleons_smeared.cpp	/^int eps_sig[6]={1,-1,-1,1,1,-1};$/;"	v
epsilon	projects/nucleons/nucleons_smeared.cpp	/^int epsilon[3][3][3]={{{0,0,0},{0,0,1},{0,-1,0}},{{0,0,-1},{0,0,0},{1,0,0}},{{0,1,0},{-1,0,0},{0,0,0}}};$/;"	v
esu3_t	src/new_types/su3_op.hpp	/^ typedef Matrix<scomplex_t,NCOL,NCOL,RowMajor> esu3_t;$/;"	t
eta	projects/semileptonic/new_version/new_types.hpp	/^  colorspinspin *eta;$/;"	m	struct:in_source_t
eta	projects/x/tests/test_stochastic_qqg_vertex.cpp	/^spin1field *phi,*eta;$/;"	v
eta	projects/x/tests/test_tlSym_gluon_stochastic_propagator.cpp	/^spin1field *phi,*eta;$/;"	v
eta	projects/x/tests/test_twisted_propagator_stochastic_correction.cpp	/^spin1field *phi,*eta;$/;"	v
etab	projects/x/tests/test_Fourier_transform.cpp	/^spin1field *etab;$/;"	v
etype	src/io/ILDG_File.hpp	/^    MPI_Datatype etype;$/;"	m	struct:nissa::ILDG_File_view
evn_apply_stD	src/dirac_operators/stD/dirac_operator_stD.cpp	/^  void evn_apply_stD(color *out,quad_su3 **conf,double m,color **in,double sign=1)$/;"	f	namespace:nissa
evn_apply_stD_dag	src/dirac_operators/stD/dirac_operator_stD.cpp	/^  void evn_apply_stD_dag(color *out,quad_su3 **conf,double m,color **in)$/;"	f	namespace:nissa
evn_or_odd_clover_term_t_remap_to_virevn_or_odd	src/geometry/geometry_vir.hpp	/^  inline void evn_or_odd_clover_term_t_remap_to_virevn_or_odd(vir_clover_term_t *out,clover_term_t *in,int par)$/;"	f	namespace:nissa
evn_or_odd_inv_clover_term_t_remap_to_virevn_or_odd	src/geometry/geometry_vir.hpp	/^  inline void evn_or_odd_inv_clover_term_t_remap_to_virevn_or_odd(vir_inv_clover_term_t *out,inv_clover_term_t *in,int par)$/;"	f	namespace:nissa
evol_pars	projects/generate_confs/driver.hpp	/^    hmc_evol_pars_t evol_pars;$/;"	m	class:nissa::driver_t
evol_pars	projects/generate_confs/generate_quenched.cpp	/^pure_gauge_evol_pars_t evol_pars;$/;"	v
evolve_FACC	src/hmc/gauge/pure_gauge_Omelyan_integrator.cpp	/^int evolve_FACC=1;$/;"	v
evolve_MFACC_momenta_with_force	src/hmc/gauge/pure_gauge_implicit_integrator.cpp	/^    void evolve_MFACC_momenta_with_force(su3 **pi,su3 **FACC_F,int naux_fields,double dt)$/;"	f	namespace:nissa::__anon6
evolve_SU3	src/hmc/gauge/pure_gauge_Omelyan_integrator.cpp	/^int evolve_SU3=1;$/;"	v
evolve_lx_conf_with_accelerated_momenta	src/hmc/momenta/momenta_evolve.cpp	/^  void evolve_lx_conf_with_accelerated_momenta(quad_su3 *lx_conf,quad_su3 *acc_conf,quad_su3 *H,double kappa,int niter,double residue,double dt)$/;"	f	namespace:nissa
evolve_lx_conf_with_accelerated_momenta_and_FACC_fields	src/hmc/gauge/pure_gauge_Omelyan_integrator.cpp	/^  void evolve_lx_conf_with_accelerated_momenta_and_FACC_fields(quad_su3 *conf,su3 **phi,quad_su3 *H,su3 **pi,int naux_fields,double kappa,int niter,double residue,double dt)$/;"	f	namespace:nissa
exch	projects/x/progs/compute_corrections.cpp	/^  int exch;$/;"	m	struct:flags	file:
exch_stoch_comp	projects/x/tests/test_nazario2.cpp	/^void exch_stoch_comp(double *exch,quark_info qu,gluon_info gl)$/;"	f
exec	projects/semileptonic/new_version/new_types.cpp	/^void corr_command_t::exec()$/;"	f	class:corr_command_t
exec	projects/semileptonic/new_version/new_types.cpp	/^void prop_group_command_t::exec()$/;"	f	class:prop_group_command_t
exec_prefix	build/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	build/projects/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	build/src/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	build/tools/Makefile	/^exec_prefix = ${prefix}$/;"	m
exp_der_alpha_half	src/operations/gauge_fixing.cpp	/^  void exp_der_alpha_half(su3 *g,su3 *der,double alpha)$/;"	f	namespace:nissa
expect_str	src/io/input.cpp	/^  void expect_str(const char *exp_str)$/;"	f	namespace:nissa
expect_str	tools/common_tools.cpp	/^void expect_str(const char *exp_str)$/;"	f
expected_radius	tools/Gaussiansmear_test.cpp	/^double expected_radius(double kappa,int nlevels,double plaq)$/;"	f
expnt	projects/semileptonic/new_version/new_types.hpp	/^  int *expnt;$/;"	m	struct:gauss_smear_pars_t
exponentiate	src/operations/gauge_fixing.hpp	/^    enum method_t{overrelax,exponentiate};$/;"	e	enum:nissa::LC_gauge_fixing_pars_t::method_t
export_gauge_conf_to_tmLQCD	src/base/tmLQCD_bridge.cpp	/^  void export_gauge_conf_to_tmLQCD(quad_su3 *conf_lx)$/;"	f	namespace:nissa
ext_adapt_thppeta	projects/semileptonic/new_version/new_types.hpp	/^inline void ext_adapt_thppeta(quad_su3 *U,momentum_t old,momentum_t n,int a,int b)$/;"	f
external_conf_to_tmLQCD_handle	src/base/tmLQCD_bridge.hpp	/^  EXTERN_TMLQCD_BRIDGE quad_su3 *external_conf_to_tmLQCD_handle;$/;"	m	namespace:nissa
f	src/io/endianness.cpp	/^    float f;$/;"	m	union:nissa::float_reverter_t	file:
f	src/new_types/su3_op.hpp	/^    complex f[3];$/;"	m	struct:nissa::hermitian_exp_ingredients
f1	src/operations/smearing/Wflow.hpp	/^    color *df0,*df1,*df2,*f1,*f2;$/;"	m	struct:nissa::fermion_flower_t
f1_f2	projects/ib/disco.cpp	/^  complex *f1_f2;$/;"	m	namespace:hits	file:
f2	src/operations/smearing/Wflow.hpp	/^    color *df0,*df1,*df2,*f1,*f2;$/;"	m	struct:nissa::fermion_flower_t
factorize	src/routines/math_routines.cpp	/^  int factorize(int *list,int N)$/;"	f	namespace:nissa
factorize	tools/find_best_vir_partitioning/find.cpp	/^int factorize(std::vector<int> &list,int N)$/;"	f
factorize_rank	tools/find_best_vir_partitioning/find.cpp	/^  bool factorize_rank;$/;"	m	struct:valid_partition_lister_t	file:
farther	src/operations/remez/remez_algorithm.hpp	/^    float_high_prec_t farther;$/;"	m	struct:nissa::rat_approx_finder_t
ferm_discretiz	src/hmc/quark_pars.hpp	/^  namespace ferm_discretiz$/;"	n	namespace:nissa
fermion_adjoint_flower_t	src/operations/smearing/Wflow.hpp	/^    fermion_adjoint_flower_t(double dt,bool *ext_dirs,bool stag) : internal_fermion_flower_t<nint_steps>(dt,ext_dirs,stag)$/;"	f	struct:nissa::fermion_adjoint_flower_t
fermion_adjoint_flower_t	src/operations/smearing/Wflow.hpp	/^  struct fermion_adjoint_flower_t : public internal_fermion_flower_t<nint_steps>$/;"	s	namespace:nissa
fermion_flower_t	src/operations/smearing/Wflow.hpp	/^    fermion_flower_t(double dt,bool *ext_dirs,bool stag) : internal_fermion_flower_t<nint_steps>(dt,ext_dirs,stag)$/;"	f	struct:nissa::fermion_flower_t
fermion_flower_t	src/operations/smearing/Wflow.hpp	/^  struct fermion_flower_t : public internal_fermion_flower_t<nint_steps>$/;"	s	namespace:nissa
fermionic_putpourri_meas	build/projects/generate_confs/parser.cpp	/^    nissa::fermionic_putpourri_meas_pars_t *fermionic_putpourri_meas;$/;"	m	union:YYSTYPE	file:
fermionic_putpourri_meas	build/projects/generate_confs/parser.hpp	/^    nissa::fermionic_putpourri_meas_pars_t *fermionic_putpourri_meas;$/;"	m	union:YYSTYPE
fermionic_putpourri_meas	projects/generate_confs/driver.hpp	/^    std::vector<fermionic_putpourri_meas_pars_t> fermionic_putpourri_meas;$/;"	m	class:nissa::driver_t
fermionic_putpourri_meas_pars_t	src/operations/stag/putpourri.hpp	/^    fermionic_putpourri_meas_pars_t() :$/;"	f	struct:nissa::fermionic_putpourri_meas_pars_t
fermionic_putpourri_meas_pars_t	src/operations/stag/putpourri.hpp	/^  struct fermionic_putpourri_meas_pars_t : base_fermionic_meas_t$/;"	s	namespace:nissa
fermionic_putpourri_t	src/operations/stag/putpourri.cpp	/^    fermionic_putpourri_t() {reset();}$/;"	f	struct:nissa::fermionic_putpourri_t
fermionic_putpourri_t	src/operations/stag/putpourri.cpp	/^  struct fermionic_putpourri_t$/;"	s	namespace:nissa	file:
fft1d	src/operations/fft.cpp	/^  void fft1d(complex *out,complex *in,int ncpp,int mu,double sign,int normalize)$/;"	f	namespace:nissa
fft4d	src/operations/fft.cpp	/^  void fft4d(complex *out,complex *in,bool *dirs,int ncpp,double sign,int normalize)$/;"	f	namespace:nissa
fft4d	src/operations/fft.hpp	/^  inline void fft4d(complex *out,complex *in,int ncpp,double sign,int normalize)$/;"	f	namespace:nissa
fft4d	src/operations/fft.hpp	/^  void fft4d(T *out,T *in,double sign,int normalize)$/;"	f	namespace:nissa
fft4d	src/operations/fft.hpp	/^  void fft4d(T *x,double sign,int normalize)$/;"	f	namespace:nissa
fft_filter_remap	projects/ib/prop.hpp	/^  EXTERN_PROP all_to_all_comm_t fft_filter_remap;$/;"	m	namespace:nissa
fft_mom_range_list	projects/ib/pars.hpp	/^  EXTERN_PARS std::vector<std::pair<fft_mom_range_t,double>> fft_mom_range_list;$/;"	m	namespace:nissa
fft_mom_range_t	projects/ib/pars.hpp	/^  struct fft_mom_range_t$/;"	s	namespace:nissa
fft_prop_list	projects/ib/pars.hpp	/^  EXTERN_PARS std::vector<std::string> fft_prop_list;$/;"	m	namespace:nissa
fft_time	projects/reno_const/RIMOM.cpp	/^double fft_time=0,save_prop_time=0,load_time=0,filter_prop_time=0;$/;"	v
fftpost	projects/reno_const/fourier.c	/^void fftpost(fftw_complex *out, fftw_complex *****propag, int s_in, int c_in, int s_out, int c_out, const int signe, int source[4]){$/;"	f
fftprep	projects/reno_const/fourier.c	/^void fftprep(fftw_complex *in, spinor *qprop, int is, int ic, const int signe, int source[4]){$/;"	f
field	projects/ib/disco.cpp	/^  complex *field;$/;"	m	namespace:hits	file:
field_t	projects/ib/disco.cpp	/^  enum field_t{J,j,xi,J_tot};$/;"	g	namespace:curr	file:
field_t	src/operations/stag/stag.hpp	/^    typedef color* field_t[2];$/;"	t	namespace:nissa::stag
field_traced_polyakov_loop_lx_conf	src/operations/su3_paths/pline.cpp	/^  void field_traced_polyakov_loop_lx_conf(complex *out,quad_su3 *conf,int mu)$/;"	f	namespace:nissa
fields	projects/ib/disco.cpp	/^  spin1field **fields;$/;"	m	namespace:curr	file:
file	src/base/vectors.hpp	/^    char file[NISSA_VECT_STRING_LENGTH];$/;"	m	struct:nissa::nissa_vect
file_exists	src/io/input.cpp	/^  int file_exists(std::string path)$/;"	f	namespace:nissa
file_exists	tools/common_tools.cpp	/^int file_exists(const char *path)$/;"	f
file_lock	src/io/input.cpp	/^  int file_lock(std::string path)$/;"	f	namespace:nissa
file_pattern	tools/read_ildg/read_ildg.cpp	/^char *file_pattern=NULL;$/;"	v
file_touch	src/io/input.cpp	/^  void file_touch(std::string path)$/;"	f	namespace:nissa
file_unlock	src/io/input.cpp	/^  int file_unlock(int f)$/;"	f	namespace:nissa
filesz	src/free_theory/free_theory_types.hpp	/^    uint32_t filesz;$/;"	m	struct:nissa::bmpfile_header
fill	projects/semileptonic/new_version/new_types.hpp	/^  void fill(rnd_t noise_type,int twall) {create();generate_spindiluted_source(eta,noise_type,twall);}$/;"	f	struct:in_source_t
fill	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    void fill(enum rnd_t rtype=RND_GAUSS,int twall=-1,int par=EVN,int dir=0)$/;"	f	struct:nissa::pseudofermion_t
fill_Leb_ev_and_od_bord_with_receiving_buf	src/communicate/borders.cpp	/^  void fill_Leb_ev_and_od_bord_with_receiving_buf(void **vec,comm_t &comm)$/;"	f	namespace:nissa
fill_Leb_ev_or_od_bord_with_receiving_buf	src/communicate/borders.cpp	/^  void fill_Leb_ev_or_od_bord_with_receiving_buf(void *vec,comm_t &comm)$/;"	f	namespace:nissa
fill_Leblx_bord_with_receiving_buf	src/communicate/borders.cpp	/^  void fill_Leblx_bord_with_receiving_buf(void *vec,comm_t &comm)$/;"	f	namespace:nissa
fill_ev_and_od_bord_with_receiving_buf	src/communicate/borders.cpp	/^  void fill_ev_and_od_bord_with_receiving_buf(void **vec,comm_t &comm)$/;"	f	namespace:nissa
fill_ev_or_od_bord_with_receiving_buf	src/communicate/borders.cpp	/^  void fill_ev_or_od_bord_with_receiving_buf(void *vec,comm_t &comm)$/;"	f	namespace:nissa
fill_lx_bord_with_receiving_buf	src/communicate/borders.cpp	/^  void fill_lx_bord_with_receiving_buf(void *vec,comm_t &comm)$/;"	f	namespace:nissa
fill_sending_buf_with_Leb_ev_and_od_vec	src/communicate/borders.cpp	/^  void fill_sending_buf_with_Leb_ev_and_od_vec(comm_t &comm,void **vec)$/;"	f	namespace:nissa
fill_sending_buf_with_Leb_ev_or_od_vec	src/communicate/borders.cpp	/^  void fill_sending_buf_with_Leb_ev_or_od_vec(comm_t &comm,void *vec,int eo)$/;"	f	namespace:nissa
fill_sending_buf_with_Leblx_vec	src/communicate/borders.cpp	/^  void fill_sending_buf_with_Leblx_vec(comm_t &comm,void *vec)$/;"	f	namespace:nissa
fill_sending_buf_with_ev_and_od_vec	src/communicate/borders.cpp	/^  void fill_sending_buf_with_ev_and_od_vec(comm_t &comm,void **vec)$/;"	f	namespace:nissa
fill_sending_buf_with_ev_or_od_vec	src/communicate/borders.cpp	/^  void fill_sending_buf_with_ev_or_od_vec(comm_t &comm,void *vec,int eo)$/;"	f	namespace:nissa
fill_sending_buf_with_lx_vec	src/communicate/borders.cpp	/^  void fill_sending_buf_with_lx_vec(comm_t &comm,void *vec)$/;"	f	namespace:nissa
fill_sizes_seq	src/operations/su3_paths/watusso.hpp	/^    void fill_sizes_seq(int min,int step,int max)$/;"	f	struct:nissa::watusso_meas_pars_t
fill_source	src/operations/stag/stag.cpp	/^    void fill_source(color **src,int twall,rnd_t noise_type)$/;"	f	namespace:nissa::stag
filter_hypercube_origin_sites	src/geometry/geometry_eo.cpp	/^  void filter_hypercube_origin_sites(color **vec)$/;"	f	namespace:nissa
filter_prop_time	projects/reno_const/RIMOM.cpp	/^double fft_time=0,save_prop_time=0,load_time=0,filter_prop_time=0;$/;"	v
fin	projects/generate_confs/driver.hpp	/^    FILE *fin;$/;"	m	class:nissa::driver_t
fin	projects/semileptonic/driver_corr.hpp	/^  FILE *fin;$/;"	m	class:two_pts_parser_driver
final_fr_inter_pos	src/new_types/two_stage_computation.hpp	/^    int *final_fr_inter_pos; \/\/offset for final result from intermediate$/;"	m	struct:nissa::two_stage_computation_pos_t
finalize	src/base/DDalphaAMG_bridge.cpp	/^  void finalize()$/;"	f	namespace:DD
find_bulk_sites	src/geometry/geometry_lx.cpp	/^  void find_bulk_sites()$/;"	f	namespace:nissa
find_cheb	src/operations/remez/remez_algorithm.cpp	/^  void rat_approx_finder_t::find_cheb()$/;"	f	class:nissa::rat_approx_finder_t
find_closest_smaller_nWflow	src/operations/smearing/recursive_Wflower.hpp	/^    int find_closest_smaller_nWflow(int nWflow)$/;"	f	struct:nissa::recursive_Wflower_t
find_conf_beginning	tools/conf_transform/edit/build_from_raw.cpp	/^FILE* find_conf_beginning(std::string path)$/;"	f
find_max_pow2	src/routines/math_routines.cpp	/^  int find_max_pow2(int a)$/;"	f	namespace:nissa
find_neighbouring_sites	src/geometry/geometry_lx.cpp	/^  void find_neighbouring_sites()$/;"	f	namespace:nissa
find_next_valid_partitioning	tools/find_best_vir_partitioning/find.cpp	/^  bool find_next_valid_partitioning()$/;"	f	struct:valid_partition_lister_t
find_packing_index	src/operations/su3_paths/gauge_sweeper.cpp	/^  void gauge_sweeper_t::find_packing_index(void (*ext_compute_staples_packed)(su3 staples,su3 *links,double C1))$/;"	f	class:nissa::gauge_sweeper_t
find_sincin	projects/reno_const/fourier.c	/^void find_sincin(int s, int *ii){$/;"	f
find_source	projects/reno_const/fourier.c	/^void find_source(int calc, int *coord){$/;"	f
find_surf_of_bord	src/geometry/geometry_lx.cpp	/^  void find_surf_of_bord()$/;"	f	namespace:nissa
find_temporal_gauge_fixing_matr	src/operations/gauge_fixing.cpp	/^  void find_temporal_gauge_fixing_matr(su3 *fixm,quad_su3 *u)$/;"	f	namespace:nissa
find_torus	tools/find_best_vir_partitioning/find.cpp	/^torus_grid_t find_torus(int &torus_size)$/;"	f
find_torus_assignement	tools/find_best_vir_partitioning/find.cpp	/^assignement_t find_torus_assignement(torus_grid_t torus,rank_grid_t rank,int &iway)$/;"	f
finish	projects/semileptonic/test_proj.cpp	/^void finish()$/;"	f
finish_communicating_Leb_ev_and_od_borders	src/communicate/borders.cpp	/^  void finish_communicating_Leb_ev_and_od_borders(void **vec,comm_t &comm)$/;"	f	namespace:nissa
finish_communicating_Leb_ev_or_od_borders	src/communicate/borders.cpp	/^  void finish_communicating_Leb_ev_or_od_borders(void *vec,comm_t &comm)$/;"	f	namespace:nissa
finish_communicating_Leblx_borders	src/communicate/borders.cpp	/^  void finish_communicating_Leblx_borders(void *vec,comm_t &comm)$/;"	f	namespace:nissa
finish_communicating_ev_and_od_borders	src/communicate/borders.cpp	/^  void finish_communicating_ev_and_od_borders(void **vec,comm_t &comm)$/;"	f	namespace:nissa
finish_communicating_ev_or_od_borders	src/communicate/borders.cpp	/^  void finish_communicating_ev_or_od_borders(void *vec,comm_t &comm)$/;"	f	namespace:nissa
finish_communicating_lx_borders	src/communicate/borders.cpp	/^  void finish_communicating_lx_borders(void *vec,comm_t &comm)$/;"	f	namespace:nissa
finish_file_present	projects/ib/conf.cpp	/^  bool finish_file_present()$/;"	f	namespace:nissa
finish_tadpole_computation	projects/x/src/diagrams/tadpole.cpp	/^void finish_tadpole_computation(spinspin *q_out,quark_info qu)$/;"	f
finished_last_path	src/operations/su3_paths/arbitrary.cpp	/^  void paths_calculation_structure::finished_last_path()$/;"	f	class:nissa::paths_calculation_structure
finished_last_path_flag	src/operations/su3_paths/arbitrary.hpp	/^    int finished_last_path_flag;$/;"	m	struct:nissa::paths_calculation_structure
first	projects/semileptonic/new_version/new_types.hpp	/^  prop_group_t *first;$/;"	m	struct:prop_group_pair_t
first_column	build/projects/generate_confs/parser.cpp	/^  int first_column;$/;"	m	struct:YYLTYPE	file:
first_column	build/projects/generate_confs/parser.hpp	/^  int first_column;$/;"	m	struct:YYLTYPE
first_column	build/projects/semileptonic/parse_corr.cpp	/^  int first_column;$/;"	m	struct:YYLTYPE	file:
first_column	build/projects/semileptonic/parse_corr.hpp	/^  int first_column;$/;"	m	struct:YYLTYPE
first_line	build/projects/generate_confs/parser.cpp	/^  int first_line;$/;"	m	struct:YYLTYPE	file:
first_line	build/projects/generate_confs/parser.hpp	/^  int first_line;$/;"	m	struct:YYLTYPE
first_line	build/projects/semileptonic/parse_corr.cpp	/^  int first_line;$/;"	m	struct:YYLTYPE	file:
first_line	build/projects/semileptonic/parse_corr.hpp	/^  int first_line;$/;"	m	struct:YYLTYPE
fit_the_rank	tools/find_best_vir_partitioning/find.cpp	/^  bool fit_the_rank(rank_grid_t &rank,torus_grid_t &torus)$/;"	f	struct:assignement_t
fix_nranks	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords fix_nranks;$/;"	m	namespace:nissa
fix_time	projects/reno_const/RIMOM.cpp	/^double tot_prog_time=0,inv_time=0,contr_time=0,fix_time=0;$/;"	v
flag	src/base/vectors.hpp	/^    uint32_t flag;$/;"	m	struct:nissa::nissa_vect
flag	src/hmc/backfield.hpp	/^    int flag;$/;"	m	struct:nissa::em_field_pars_t
flag	src/hmc/gauge/topological_action.hpp	/^    int flag;$/;"	m	struct:nissa::topotential_pars_t
flag_compute_EU6_alt	projects/ib/disco.cpp	/^int flag_compute_EU6_alt;$/;"	v
flag_compute_EU6_alt2	projects/ib/disco.cpp	/^int flag_compute_EU6_alt2=true;$/;"	v
flags	projects/x/progs/compute_corrections.cpp	/^struct flags$/;"	s	file:
flex_int16_t	build/projects/generate_confs/tokenizer.cpp	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	build/projects/generate_confs/tokenizer.cpp	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int16_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	build/projects/generate_confs/tokenizer.cpp	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	build/projects/generate_confs/tokenizer.cpp	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int32_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	build/projects/generate_confs/tokenizer.cpp	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	build/projects/generate_confs/tokenizer.cpp	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_int8_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	build/projects/generate_confs/tokenizer.cpp	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	build/projects/generate_confs/tokenizer.cpp	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint16_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	build/projects/generate_confs/tokenizer.cpp	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	build/projects/generate_confs/tokenizer.cpp	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint32_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	build/projects/generate_confs/tokenizer.cpp	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	build/projects/generate_confs/tokenizer.cpp	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
flex_uint8_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
float_128	src/new_types/float_128.hpp	/^  typedef double float_128[2];$/;"	t	namespace:nissa
float_128_64_prod_64	src/new_types/float_128.hpp	/^  inline void float_128_64_prod_64(float_128 c,double a,double b)$/;"	f	namespace:nissa
float_128_64_summ_64	src/new_types/float_128.hpp	/^  inline void float_128_64_summ_64(float_128 c,double a,double b)$/;"	f	namespace:nissa
float_128_abs	src/new_types/float_128.hpp	/^  inline void float_128_abs(float_128 a,float_128 b)$/;"	f	namespace:nissa
float_128_copy	src/new_types/float_128.hpp	/^  inline void float_128_copy(float_128 b,float_128 a)$/;"	f	namespace:nissa
float_128_div	src/new_types/float_128.hpp	/^  inline void float_128_div(float_128 div,float_128 a,float_128 b)$/;"	f	namespace:nissa
float_128_div_64	src/new_types/float_128.hpp	/^  inline void float_128_div_64(float_128 div,float_128 a,double b)$/;"	f	namespace:nissa
float_128_from_64	src/new_types/float_128.hpp	/^  inline void float_128_from_64(float_128 b,double a)$/;"	f	namespace:nissa
float_128_is_greater	src/new_types/float_128.hpp	/^  inline int float_128_is_greater(float_128 a,float_128 b)$/;"	f	namespace:nissa
float_128_is_smaller	src/new_types/float_128.hpp	/^  inline int float_128_is_smaller(float_128 a,float_128 b)$/;"	f	namespace:nissa
float_128_pow_int	src/new_types/float_128.hpp	/^  inline void float_128_pow_int(float_128 out,float_128 in,int d)$/;"	f	namespace:nissa
float_128_pow_int_frac	src/new_types/float_128.hpp	/^  inline void float_128_pow_int_frac(float_128 out,float_128 in,int n,int d)$/;"	f	namespace:nissa
float_128_print	src/new_types/float_128.hpp	/^  inline void float_128_print(float_128 a)$/;"	f	namespace:nissa
float_128_prod	src/new_types/float_128.hpp	/^  inline void float_128_prod(float_128 c,float_128 a,float_128 b)$/;"	f	namespace:nissa
float_128_prod_64	src/new_types/float_128.hpp	/^  inline void float_128_prod_64(float_128 c,float_128 a,double b)$/;"	f	namespace:nissa
float_128_prodassign	src/new_types/float_128.hpp	/^  inline void float_128_prodassign(float_128 out,float_128 in)$/;"	f	namespace:nissa
float_128_put_to_zero	src/new_types/float_128.hpp	/^  inline void float_128_put_to_zero(float_128 a)$/;"	f	namespace:nissa
float_128_subt	src/new_types/float_128.hpp	/^  inline void float_128_subt(float_128 c,float_128 a,float_128 b)$/;"	f	namespace:nissa
float_128_subt_from_64	src/new_types/float_128.hpp	/^  inline void float_128_subt_from_64(float_128 c,double a,float_128 b)$/;"	f	namespace:nissa
float_128_subt_the_prod	src/new_types/float_128.hpp	/^  inline void float_128_subt_the_prod(float_128 c,float_128 a,float_128 b)$/;"	f	namespace:nissa
float_128_subtassign	src/new_types/float_128.hpp	/^  inline void float_128_subtassign(float_128 b,float_128 a)$/;"	f	namespace:nissa
float_128_summ	src/new_types/float_128.hpp	/^  inline void float_128_summ(float_128 c,float_128 a,float_128 b)$/;"	f	namespace:nissa
float_128_summ_64	src/new_types/float_128.hpp	/^  inline void float_128_summ_64(float_128 c,float_128 a,double b)$/;"	f	namespace:nissa
float_128_summ_the_64_prod	src/new_types/float_128.hpp	/^  inline void float_128_summ_the_64_prod(float_128 c,double a,double b)$/;"	f	namespace:nissa
float_128_summ_the_prod	src/new_types/float_128.hpp	/^  inline void float_128_summ_the_prod(float_128 c,float_128 a,float_128 b)$/;"	f	namespace:nissa
float_128_summassign	src/new_types/float_128.hpp	/^  inline void float_128_summassign(float_128 b,float_128 a)$/;"	f	namespace:nissa
float_128_summassign_64	src/new_types/float_128.hpp	/^  inline void float_128_summassign_64(float_128 b,double a)$/;"	f	namespace:nissa
float_128_swap	src/new_types/float_128.hpp	/^  inline void float_128_swap(float_128 b,float_128 a)$/;"	f	namespace:nissa
float_128_uminus	src/new_types/float_128.hpp	/^  inline void float_128_uminus(float_128 b,float_128 a)$/;"	f	namespace:nissa
float_256	src/new_types/float_256.hpp	/^  typedef double float_256[4];$/;"	t	namespace:nissa
float_256_abs	src/new_types/float_256.cpp	/^  void float_256_abs(float_256 a,float_256 b)$/;"	f	namespace:nissa
float_256_class	src/new_types/float_256.hpp	/^    float_256_class(){}$/;"	f	struct:nissa::float_256_class
float_256_class	src/new_types/float_256.hpp	/^    float_256_class(double a){float_256_from_double(num,a);}$/;"	f	struct:nissa::float_256_class
float_256_class	src/new_types/float_256.hpp	/^  struct float_256_class$/;"	s	namespace:nissa
float_256_copy	src/new_types/float_256.cpp	/^  void float_256_copy(float_256 b,float_256 a)$/;"	f	namespace:nissa
float_256_div	src/new_types/float_256.cpp	/^  void float_256_div(float_256 c,float_256 a,float_256 b)$/;"	f	namespace:nissa
float_256_from_double	src/new_types/float_256.cpp	/^  void float_256_from_double(float_256 b,double a)$/;"	f	namespace:nissa
float_256_is_equal	src/new_types/float_256.cpp	/^  int float_256_is_equal(float_256 a,float_256 b)$/;"	f	namespace:nissa
float_256_is_greater	src/new_types/float_256.cpp	/^  int float_256_is_greater(float_256 a,double b)$/;"	f	namespace:nissa
float_256_is_greater	src/new_types/float_256.cpp	/^  int float_256_is_greater(float_256 a,float_256 b)$/;"	f	namespace:nissa
float_256_is_smaller	src/new_types/float_256.cpp	/^  int float_256_is_smaller(float_256 a,double b)$/;"	f	namespace:nissa
float_256_is_smaller	src/new_types/float_256.cpp	/^  int float_256_is_smaller(float_256 a,float_256 b)$/;"	f	namespace:nissa
float_256_pow_int	src/new_types/float_256.cpp	/^  void float_256_pow_int(float_256 out,float_256 in,int d)$/;"	f	namespace:nissa
float_256_pow_int_frac	src/new_types/float_256.cpp	/^  void float_256_pow_int_frac(float_256 out,float_256 ext_in,int n,int d)$/;"	f	namespace:nissa
float_256_print	src/new_types/float_256.cpp	/^  void float_256_print(float_256 a)$/;"	f	namespace:nissa
float_256_prod	src/new_types/float_256.cpp	/^  void float_256_prod(float_256 c,float_256 a,float_256 b)$/;"	f	namespace:nissa
float_256_prod_double	src/new_types/float_256.cpp	/^  void float_256_prod_double(float_256 c,float_256 a,double b)$/;"	f	namespace:nissa
float_256_prodassign	src/new_types/float_256.cpp	/^  void float_256_prodassign(float_256 out,float_256 in)$/;"	f	namespace:nissa
float_256_put_to_zero	src/new_types/float_256.cpp	/^  void float_256_put_to_zero(float_256 a)$/;"	f	namespace:nissa
float_256_subt	src/new_types/float_256.cpp	/^  void float_256_subt(float_256 c,float_256 a,float_256 b)$/;"	f	namespace:nissa
float_256_subt_the_prod	src/new_types/float_256.cpp	/^  void float_256_subt_the_prod(float_256 c,float_256 a,float_256 b)$/;"	f	namespace:nissa
float_256_subtassign	src/new_types/float_256.cpp	/^  void float_256_subtassign(float_256 b,float_256 a)$/;"	f	namespace:nissa
float_256_summ	src/new_types/float_256.cpp	/^  void float_256_summ(float_256 c,float_256 a,float_256 b)$/;"	f	namespace:nissa
float_256_summ_double	src/new_types/float_256.cpp	/^  void float_256_summ_double(float_256 c,float_256 a,double b)$/;"	f	namespace:nissa
float_256_summ_ieee	src/new_types/float_256.cpp	/^  void float_256_summ_ieee(float_256 c,float_256 a,float_256 b)$/;"	f	namespace:nissa
float_256_summ_the_prod	src/new_types/float_256.cpp	/^  void float_256_summ_the_prod(float_256 c,float_256 a,float_256 b)$/;"	f	namespace:nissa
float_256_summassign	src/new_types/float_256.cpp	/^  void float_256_summassign(float_256 b,float_256 a)$/;"	f	namespace:nissa
float_256_swap	src/new_types/float_256.cpp	/^  void float_256_swap(float_256 b,float_256 a)$/;"	f	namespace:nissa
float_256_uminus	src/new_types/float_256.cpp	/^  void float_256_uminus(float_256 b,float_256 a)$/;"	f	namespace:nissa
float_256_unr	src/new_types/float_256.hpp	/^  typedef double float_256_unr[5];$/;"	t	namespace:nissa
float_64_prod_128	src/new_types/float_128.hpp	/^  inline void float_64_prod_128(float_128 c,double a,float_128 b)$/;"	f	namespace:nissa
float_64_prod_complex_128	src/new_types/float_128.hpp	/^  inline void float_64_prod_complex_128(complex_128 a,double b,complex_128 c)$/;"	f	namespace:nissa
float_64_summ_the_iprod_complex_128	src/new_types/float_128.hpp	/^  inline void float_64_summ_the_iprod_complex_128(complex_128 a,double b,complex_128 c)$/;"	f	namespace:nissa
float_64_summ_the_prod_complex_128	src/new_types/float_128.hpp	/^  inline void float_64_summ_the_prod_complex_128(complex_128 a,double b,complex_128 c)$/;"	f	namespace:nissa
float_high_prec_t	src/new_types/high_prec.hpp	/^  typedef mpf_class float_high_prec_t;$/;"	t	namespace:nissa
float_high_prec_t_pow_int	src/new_types/high_prec.cpp	/^  float_high_prec_t float_high_prec_t_pow_int(float_high_prec_t in,int d)$/;"	f	namespace:nissa
float_high_prec_t_pow_int_frac	src/new_types/high_prec.cpp	/^  float_high_prec_t float_high_prec_t_pow_int_frac(float_high_prec_t ext_in,int n,int d)$/;"	f	namespace:nissa
float_high_prec_t_print	src/new_types/high_prec.cpp	/^  void float_high_prec_t_print(float_high_prec_t a){master_printf("%lg %lg %lg %lg\\n",a[0],a[1],a[2],a[3]);}$/;"	f	namespace:nissa
float_high_prec_t_print	src/new_types/high_prec.cpp	/^  void float_high_prec_t_print(float_high_prec_t a){master_printf("workaround high_prec %lg\\n",a.get_d());}$/;"	f	namespace:nissa
float_reverter_t	src/io/endianness.cpp	/^  union float_reverter_t$/;"	u	namespace:nissa	file:
float_subt_the_64_prod_128	src/new_types/float_128.hpp	/^  inline void float_subt_the_64_prod_128(float_128 c,double a,float_128 b)$/;"	f	namespace:nissa
float_summ_the_64_prod_128	src/new_types/float_128.hpp	/^  inline void float_summ_the_64_prod_128(float_128 c,double a,float_128 b)$/;"	f	namespace:nissa
floats_to_doubles_changing_endianness	src/io/endianness.cpp	/^  void floats_to_doubles_changing_endianness(double *dest,float *sour,int n,int verbose)$/;"	f	namespace:nissa
floats_to_doubles_same_endianness	src/io/endianness.cpp	/^  void floats_to_doubles_same_endianness(double *dest,float *sour,int n,int verbose)$/;"	f	namespace:nissa
floats_to_floats_changing_endianness	tools/conf_transform/edit/ILDG_File_light.cpp	/^void floats_to_floats_changing_endianness(float *dest,float *sour,int nfloats,int verbose=1)$/;"	f
flops_per_complex_prod	src/base/bench.hpp	/^  const int flops_per_complex_prod=6;$/;"	m	namespace:nissa
flops_per_complex_summ	src/base/bench.hpp	/^  const int flops_per_complex_summ=2;$/;"	m	namespace:nissa
flops_per_link_gauge_Wilson	src/base/bench.hpp	/^  const int flops_per_link_gauge_Wilson=((6*(NDIM-1)+1\/*close*\/)*flops_per_su3_prod+(2+1\/*TA*\/)*flops_per_su3_summ);$/;"	m	namespace:nissa
flops_per_link_gauge_tlSym	src/base/bench.hpp	/^  const int flops_per_link_gauge_tlSym=((28*(NDIM-1)+2\/*sq+rect*\/+1\/*close*\/)*flops_per_su3_prod+(11+1\/*TA*\/)*flops_per_su3_summ);$/;"	m	namespace:nissa
flops_per_su3_prod	src/base/bench.hpp	/^  const int flops_per_su3_prod=(NCOL*NCOL\/*entries*\/*(NCOL*flops_per_complex_prod+(NCOL-1)*flops_per_complex_summ));$/;"	m	namespace:nissa
flops_per_su3_summ	src/base/bench.hpp	/^  const int flops_per_su3_summ=(NCOL*NCOL\/*entries*\/*flops_per_complex_summ);$/;"	m	namespace:nissa
flow_fermion	src/operations/smearing/Wflow.hpp	/^    void flow_fermion(color *field)$/;"	f	struct:nissa::fermion_adjoint_flower_t
flow_fermion	src/operations/smearing/Wflow.hpp	/^    void flow_fermion(color *field)$/;"	f	struct:nissa::fermion_flower_t
flushing_nconfs	projects/generate_confs/generate_quenched.cpp	/^const int flushing_nconfs=30;$/;"	v
follow_chris	projects/ib/mel.cpp	/^const int follow_chris=0,follow_nazario=1;$/;"	v
follow_chris	projects/ib/pars.hpp	/^  const int follow_chris=0,follow_nazario=1;$/;"	m	namespace:nissa
follow_chris_or_nazario	projects/ib/mel.cpp	/^int follow_chris_or_nazario;$/;"	v
follow_nazario	projects/ib/mel.cpp	/^const int follow_chris=0,follow_nazario=1;$/;"	v
follow_nazario	projects/ib/pars.hpp	/^  const int follow_chris=0,follow_nazario=1;$/;"	m	namespace:nissa
fomega	projects/cpn/cpn.cpp	/^momentum_t *omega,*fomega;$/;"	v
force_out	src/new_types/metadynamics.hpp	/^    double force_out;$/;"	m	struct:nissa::meta_pars_t
form_stag_meson_pattern_with_g5g5	src/operations/stag/stag.hpp	/^  inline int form_stag_meson_pattern_with_g5g5(int ispin,int itaste)$/;"	f	namespace:nissa
form_stag_op_pattern	src/operations/stag/stag.hpp	/^  inline int form_stag_op_pattern(int ispin,int itaste)$/;"	f	namespace:nissa
format	src/io/ILDG_File.hpp	/^    char format[100];$/;"	m	struct:nissa::ILDG_File_view
forw	src/operations/contract/optimized_mesons_2pts.hpp	/^      uint8_t &forw() {return this->first;}$/;"	f	struct:nissa::forw_back_comp_id_t
forw_back_comp_id_t	src/operations/contract/optimized_mesons_2pts.hpp	/^      forw_back_comp_id_t(uint8_t forw_comp_id,uint8_t back_comp_id)$/;"	f	struct:nissa::forw_back_comp_id_t
forw_back_comp_id_t	src/operations/contract/optimized_mesons_2pts.hpp	/^  struct forw_back_comp_id_t: std::pair<uint8_t,uint8_t>$/;"	s	namespace:nissa
four_leaves_point	src/operations/su3_paths/topological_charge.cpp	/^  void four_leaves_point(as2t_su3 leaves_summ,quad_su3 *conf,int X)$/;"	f	namespace:nissa
fout_2pts_sl	projects/g/g.cpp	/^FILE *fout_2pts_sl;$/;"	v
fout_2pts_ss	projects/g/g.cpp	/^FILE *fout_2pts_ss;$/;"	v
fout_3pts	projects/g/g.cpp	/^FILE *fout_3pts;$/;"	v
fpi	projects/cpn/cpn.cpp	/^ON_t *zeta,*zeta_old,*pi,*fpi;$/;"	v
fprintf_friendly_filesize	src/routines/ios.cpp	/^  void fprintf_friendly_filesize(FILE *fout,uint64_t quant)$/;"	f	namespace:nissa
fprintf_friendly_units	src/routines/ios.cpp	/^  void fprintf_friendly_units(FILE *fout,uint64_t quant,uint64_t orders,const char *units)$/;"	f	namespace:nissa
fread_bmp_header	projects/x/src/routines/bmp.cpp	/^void fread_bmp_header(bmpfile_magic &magic,bmpfile_header &header,bmpfile_info_header &info_header,FILE *fin)$/;"	f
fread_checking	projects/x/src/routines/bmp.cpp	/^void fread_checking(char *out,FILE *fin,int ntor)$/;"	f
free	projects/ib/disco.cpp	/^  void free()$/;"	f	namespace:hits
free	src/new_types/two_stage_computation.hpp	/^    void free()$/;"	f	struct:nissa::two_stage_computation_pos_t
free_GCG_stuff	src/operations/gauge_fixing.cpp	/^  void free_GCG_stuff()$/;"	f	namespace:nissa
free_L_prop	projects/ib/meslep.cpp	/^  void free_L_prop()$/;"	f	namespace:nissa
free_all	projects/ib/disco.cpp	/^  void free_all()$/;"	f	namespace:EU1_EU2_EU4_EU6alt
free_all_fields	projects/ib/disco.cpp	/^  void free_all_fields()$/;"	f	namespace:curr
free_bar2pts_contr	projects/ib/contr.cpp	/^  void free_bar2pts_contr()$/;"	f	namespace:nissa
free_handcuffs_contr	projects/ib/contr.cpp	/^  void free_handcuffs_contr()$/;"	f	namespace:nissa
free_loop_source	projects/ib/prop.hpp	/^  inline void free_loop_source(){nissa_free(loop_source);}$/;"	f	namespace:nissa
free_mes2pts_contr	projects/ib/contr.cpp	/^  void free_mes2pts_contr()$/;"	f	namespace:nissa
free_photon_fields	projects/ib/prop.cpp	/^  void free_photon_fields()$/;"	f	namespace:nissa
free_props	projects/ib/disco2.cpp	/^  void free_props()$/;"	f	namespace:free_th
free_th	projects/ib/disco2.cpp	/^namespace free_th$/;"	n	file:
free_theory	projects/ib/disco2.cpp	/^int free_theory;$/;"	v
free_theory	projects/ib/mel.cpp	/^int free_theory,rnd_gauge_transform;$/;"	v
ftype	src/io/ILDG_File.hpp	/^    MPI_Datatype ftype;$/;"	m	struct:nissa::ILDG_File_view
full_P_space_prop_prec	projects/reno_const/RIMOM.cpp	/^int full_X_space_prop_prec,full_P_space_prop_prec;$/;"	v
full_X_space_prop_prec	projects/reno_const/RIMOM.cpp	/^int full_X_space_prop_prec,full_P_space_prop_prec;$/;"	v
full_lx_of_coords	src/geometry/geometry_lx.cpp	/^  int full_lx_of_coords(coords ext_x)$/;"	f	namespace:nissa
func_cl_dashL	config/compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	config/compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	config/compile	/^func_cl_wrapper ()$/;"	f
func_file_conv	config/compile	/^func_file_conv ()$/;"	f
func_to_approx	src/operations/remez/remez_algorithm.hpp	/^    float_high_prec_t func_to_approx(float_high_prec_t x)$/;"	f	struct:nissa::rat_approx_finder_t
fw	projects/ib/contr.hpp	/^    std::string bw,fw;$/;"	m	struct:nissa::handcuffs_side_map_t
fw_surf_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t surf_vol,bw_surf_vol,fw_surf_vol;$/;"	m	namespace:nissa
fwrite_bmp_header	projects/x/src/routines/bmp.cpp	/^void fwrite_bmp_header(FILE *fout,bmpfile_magic &Bitmap_File_Magic,bmpfile_header &Bitmap_File_Header,bmpfile_info_header &Bitmap_Info_Header)$/;"	f
fwrite_checking	projects/x/src/routines/bmp.cpp	/^void fwrite_checking(FILE *fout,char *out,int ntow)$/;"	f
g	projects/cpn/cpn.cpp	/^double beta,g;$/;"	v
g2	projects/x/progs/correct.cpp	/^double beta,mass,g2;$/;"	v
gC	projects/nucleons/nucleons_smeared.cpp	/^dirac_matr gC;$/;"	v
g_beta	projects/reno_const/fourier.c	/^double g_beta,m0,s;$/;"	v
g_beta_adj	projects/reno_const/fourier.c	/^double g_beta_adj;$/;"	v
g_eigenvalues	projects/reno_const/fourier.c	/^complex *g_eigenvalues;$/;"	v
g_gauge_field	projects/reno_const/fourier.c	/^su3 ** g_gauge_field;$/;"	v
g_idn	projects/reno_const/fourier.c	/^int ** g_idn;$/;"	v
g_ipt	projects/reno_const/fourier.c	/^int **** g_ipt;$/;"	v
g_iup	projects/reno_const/fourier.c	/^int ** g_iup;$/;"	v
g_kappa	projects/reno_const/fourier.c	/^double g_kappa;$/;"	v
g_m0	projects/reno_const/fourier.c	/^double g_m0;$/;"	v
g_max_eigenvalue	projects/reno_const/fourier.c	/^complex g_max_eigenvalue;$/;"	v
g_mms_masses	projects/reno_const/fourier.c	/^double * g_mms_masses; $/;"	v
g_mms_mu	projects/reno_const/fourier.c	/^double * g_mms_mu; $/;"	v
g_mu	projects/reno_const/fourier.c	/^double g_mu;$/;"	v
g_nr_of_ev	projects/reno_const/fourier.c	/^int g_nr_of_ev;$/;"	v
g_p1	projects/reno_const/fourier.c	/^double g_p1;$/;"	v
g_p2	projects/reno_const/fourier.c	/^double g_p2;$/;"	v
g_p3	projects/reno_const/fourier.c	/^double g_p3;$/;"	v
g_proc_coords	projects/reno_const/fourier.c	/^int g_proc_coords[3];$/;"	v
g_proc_id	projects/reno_const/fourier.c	/^int g_proc_id;$/;"	v
g_prop	projects/x/tests/test_twisted_propagator_stochastic_correction.cpp	/^spin1prop *g_prop;$/;"	v
g_q1	projects/reno_const/fourier.c	/^double g_q1;$/;"	v
g_q2	projects/reno_const/fourier.c	/^double g_q2;$/;"	v
g_q3	projects/reno_const/fourier.c	/^double g_q3;$/;"	v
g_s	projects/reno_const/fourier.c	/^double g_s;$/;"	v
g_seed	projects/reno_const/fourier.c	/^int g_seed;$/;"	v
g_stdio_proc	projects/reno_const/fourier.c	/^int g_stdio_proc;$/;"	v
g_total_nr_masses	projects/reno_const/fourier.c	/^int g_total_nr_masses;$/;"	v
gamma5	work_in_prog/eo_inverter/invert2.cpp	/^void gamma5(spincolor *out,spincolor *in)$/;"	f
gamma5	work_in_prog/eo_inverter/invert3.cpp	/^void gamma5(spincolor *out,spincolor *in)$/;"	f
gamma_proj	projects/semileptonic/test_proj.cpp	/^void gamma_proj()$/;"	f
gamma_to_be_inserted	projects/semileptonic/new_version/new_semileptonic.cpp	/^  int gamma_to_be_inserted;$/;"	m	struct:source_t	file:
gather_nonloc_eo	src/operations/su3_paths/arbitrary.cpp	/^  void paths_calculation_structure::gather_nonloc_eo(su3 *nonloc_links,quad_su3 **conf)$/;"	f	class:nissa::paths_calculation_structure
gather_nonloc_finish	src/operations/su3_paths/arbitrary.cpp	/^  void paths_calculation_structure::gather_nonloc_finish(MPI_Request *request,int &irequest,su3 *send_buff)$/;"	f	class:nissa::paths_calculation_structure
gather_nonloc_lx	src/operations/su3_paths/arbitrary.cpp	/^  void paths_calculation_structure::gather_nonloc_lx(su3 *nonloc_links,quad_su3 *conf)$/;"	f	class:nissa::paths_calculation_structure
gather_nonloc_start	src/operations/su3_paths/arbitrary.cpp	/^  void paths_calculation_structure::gather_nonloc_start(MPI_Request *request,int &irequest,su3 *nonloc_links)$/;"	f	class:nissa::paths_calculation_structure
gathered_vector_cubic_symmetrize	src/operations/vector_gather.cpp	/^  void gathered_vector_cubic_symmetrize(double *vec,int dps)$/;"	f	namespace:nissa
gathered_vector_mirrorize	src/operations/vector_gather.cpp	/^  void gathered_vector_mirrorize(double *vec,int dps)$/;"	f	namespace:nissa
gauge	src/operations/gauge_fixing.hpp	/^    gauge_t gauge;$/;"	m	struct:nissa::LC_gauge_fixing_pars_t
gauge_action	src/operations/smearing/cooling.hpp	/^    gauge_action_name_t gauge_action;$/;"	m	struct:nissa::cool_pars_t
gauge_action_name	build/projects/generate_confs/parser.cpp	/^    nissa::gauge_action_name_t gauge_action_name;$/;"	m	union:YYSTYPE	file:
gauge_action_name	build/projects/generate_confs/parser.hpp	/^    nissa::gauge_action_name_t gauge_action_name;$/;"	m	union:YYSTYPE
gauge_action_name	src/hmc/theory_pars.hpp	/^    gauge_action_name_t gauge_action_name;$/;"	m	struct:nissa::theory_pars_t
gauge_action_name_from_str	src/hmc/gauge/gluonic_action.hpp	/^  inline gauge_action_name_t gauge_action_name_from_str(const char *name)$/;"	f	namespace:nissa
gauge_action_name_t	src/hmc/gauge/gluonic_action.hpp	/^  enum gauge_action_name_t{UNSPEC_GAUGE_ACTION,WILSON_GAUGE_ACTION,TLSYM_GAUGE_ACTION,IWASAKI_GAUGE_ACTION};$/;"	g	namespace:nissa
gauge_action_str_from_name	src/hmc/gauge/gluonic_action.hpp	/^  inline std::string gauge_action_str_from_name(gauge_action_name_t name)$/;"	f	namespace:nissa
gauge_conf_t	projects/semileptonic/new_version/new_types.hpp	/^  gauge_conf_t() {reset();}$/;"	f	struct:gauge_conf_t
gauge_conf_t	projects/semileptonic/new_version/new_types.hpp	/^  gauge_conf_t(gauge_conf_t &in) {copy(in);}$/;"	f	struct:gauge_conf_t
gauge_conf_t	projects/semileptonic/new_version/new_types.hpp	/^struct gauge_conf_t$/;"	s
gauge_fixing_pars	projects/ib/pars.hpp	/^  EXTERN_PARS LC_gauge_fixing_pars_t gauge_fixing_pars;$/;"	m	namespace:nissa
gauge_fixing_pars	projects/reno_const/RIMOM.cpp	/^LC_gauge_fixing_pars_t gauge_fixing_pars;$/;"	v
gauge_from_tag	src/operations/gauge_fixing.hpp	/^    static inline gauge_t gauge_from_tag(const char *tag)$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
gauge_info	src/free_theory/free_theory_types.hpp	/^    gauge_info()$/;"	f	struct:nissa::gauge_info
gauge_info	src/free_theory/free_theory_types.hpp	/^  struct gauge_info$/;"	s	namespace:nissa
gauge_obs_flag	projects/generate_confs/generate_quenched.cpp	/^int gauge_obs_flag;$/;"	v
gauge_obs_meas_pars_t	src/operations/gaugeconf.hpp	/^    gauge_obs_meas_pars_t() :$/;"	f	struct:nissa::gauge_obs_meas_pars_t
gauge_obs_meas_pars_t	src/operations/gaugeconf.hpp	/^  struct gauge_obs_meas_pars_t$/;"	s	namespace:nissa
gauge_obs_path	projects/generate_confs/generate_quenched.cpp	/^char gauge_obs_path[1024];$/;"	v
gauge_obs_per_timeslice_path	projects/generate_confs/generate_quenched.cpp	/^char gauge_obs_per_timeslice_path[1024];$/;"	v
gauge_sweeper_t	src/operations/su3_paths/gauge_sweeper.cpp	/^  gauge_sweeper_t::gauge_sweeper_t()$/;"	f	class:nissa::gauge_sweeper_t
gauge_sweeper_t	src/operations/su3_paths/gauge_sweeper.hpp	/^  struct gauge_sweeper_t$/;"	s	namespace:nissa
gauge_t	src/operations/gauge_fixing.hpp	/^    enum gauge_t{Landau=0,Coulomb=1};$/;"	g	struct:nissa::LC_gauge_fixing_pars_t
gauge_tag	src/operations/gauge_fixing.hpp	/^    static inline std::string gauge_tag(gauge_t gauge)$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
gauss_sm_op	projects/semileptonic/new_version/test.cpp	/^gauss_smear_pars_t *gauss_sm_op;$/;"	v
gauss_smear_pars_t	projects/semileptonic/new_version/new_types.hpp	/^  gauss_smear_pars_t() {reset();}$/;"	f	struct:gauss_smear_pars_t
gauss_smear_pars_t	projects/semileptonic/new_version/new_types.hpp	/^  gauss_smear_pars_t(int ext_nterm) {reset();create(ext_nterm);}$/;"	f	struct:gauss_smear_pars_t
gauss_smear_pars_t	projects/semileptonic/new_version/new_types.hpp	/^struct gauss_smear_pars_t$/;"	s
gaussian_kappa	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double gaussian_kappa,ape_alpha;$/;"	v
gaussian_kappa	projects/g/g.cpp	/^double gaussian_kappa,ape_alpha;$/;"	v
gaussian_kappa	projects/semileptonic/gevp.cpp	/^double mass,residue,kappa,gaussian_kappa;$/;"	v
gaussian_kappa	projects/semileptonic/gevp_3pts.cpp	/^double gaussian_kappa;$/;"	v
gaussian_kappa	projects/semileptonic/semileptonic_smeared.cpp	/^double gaussian_kappa;$/;"	v
gaussian_niter	projects/g/g.cpp	/^int gaussian_niter;$/;"	v
gaussian_niter	projects/semileptonic/gevp.cpp	/^int nsm_lev,*gaussian_niter;$/;"	v
gaussian_niter	projects/semileptonic/gevp_3pts.cpp	/^int gaussian_niter;$/;"	v
gaussian_niter_se	projects/semileptonic/semileptonic_smeared.cpp	/^int *gaussian_niter_se,nsm_lev_se;$/;"	v
gaussian_niter_si	projects/semileptonic/semileptonic_smeared.cpp	/^int *gaussian_niter_si,nsm_lev_si;$/;"	v
gaussian_niter_so	projects/semileptonic/semileptonic_smeared.cpp	/^int *gaussian_niter_so,nsm_lev_so;$/;"	v
gaussian_smearing	src/operations/smearing/gaussian.cpp	/^  template <class TYPE> void gaussian_smearing(TYPE *smear_sc,TYPE *origi_sc,quad_su3 *conf,double kappa,int nterm,double *coeff,int *exponent)$/;"	f	namespace:nissa
gell_mann_matr	src/new_types/su3_op.cpp	/^  su3 gell_mann_matr[NCOL*NCOL-1]={$/;"	m	namespace:nissa	file:
generate_all_new	src/new_types/dsfmt.hpp	/^    void generate_all_new()$/;"	f	class:nissa::dsfmt_t
generate_approx	src/operations/remez/remez_algorithm.cpp	/^  double generate_approx(rat_approx_t &appr,double minimum,double maximum,int num,int den,double minerr,double tollerance)$/;"	f	namespace:nissa
generate_approx	src/operations/remez/remez_algorithm.cpp	/^  double rat_approx_finder_t::generate_approx(float_high_prec_t *weights,float_high_prec_t *poles,float_high_prec_t &cons,double ext_minimum,double ext_maximum,int ext_degree,int ext_num,int ext_den,double target_err,double toll)$/;"	f	class:nissa::rat_approx_finder_t
generate_approx_of_maxerr	src/operations/remez/remez_algorithm.cpp	/^  void generate_approx_of_maxerr(rat_approx_t &appr,double minimum,double maximum,double maxerr,int num,int den,const char *name)$/;"	f	namespace:nissa
generate_cold_eo_conf	src/operations/gaugeconf.cpp	/^  void generate_cold_eo_conf(quad_su3 **conf)$/;"	f	namespace:nissa
generate_cold_lx_conf	src/operations/gaugeconf.cpp	/^  void generate_cold_lx_conf(quad_su3 *conf)$/;"	f	namespace:nissa
generate_fully_undiluted_eo_source	src/base/random.cpp	/^  void generate_fully_undiluted_eo_source(color *source[2],enum rnd_t rtype,int twall,int dir)$/;"	f	namespace:nissa
generate_fully_undiluted_eo_source	src/base/random.cpp	/^  void generate_fully_undiluted_eo_source(spincolor **source,enum rnd_t rtype,int twall,int dir)$/;"	f	namespace:nissa
generate_hot_eo_conf	src/operations/gaugeconf.cpp	/^  void generate_hot_eo_conf(quad_su3 **conf)$/;"	f	namespace:nissa
generate_hot_lx_conf	src/operations/gaugeconf.cpp	/^  void generate_hot_lx_conf(quad_su3 *conf)$/;"	f	namespace:nissa
generate_intermediate_steps	src/operations/smearing/Wflow.hpp	/^    void generate_intermediate_steps(quad_su3 *ori_conf)$/;"	f	struct:nissa::internal_fermion_flower_t
generate_new_conf	projects/generate_confs/generate.cpp	/^int generate_new_conf(int itraj)$/;"	f
generate_new_conf	projects/generate_confs/generate_quenched.cpp	/^void generate_new_conf(quad_su3 *conf,int check=0)$/;"	f
generate_original_source	projects/ib/mel.cpp	/^void generate_original_source()$/;"	f
generate_original_sources	projects/ib/prop.cpp	/^  void generate_original_sources(int ihit)$/;"	f	namespace:nissa
generate_parser_built_sources	build/projects/Makefile	/^generate_parser_built_sources = \\$/;"	m
generate_parser_sources	build/projects/Makefile	/^generate_parser_sources = \\$/;"	m
generate_photon_stochastic_propagator	projects/ib/mel.cpp	/^void generate_photon_stochastic_propagator()$/;"	f
generate_photon_stochastic_propagator	projects/ib/prop.cpp	/^  void generate_photon_stochastic_propagator(int ihit)$/;"	f	namespace:nissa
generate_propagators	projects/ib/prop.hpp	/^  inline void generate_propagators(int ihit)$/;"	f	namespace:nissa
generate_pseudofermions	src/hmc/fermions/pseudofermions_generation.cpp	/^  double generate_pseudofermions(std::vector<std::vector<pseudofermion_t> > &pf,quad_su3 **conf,theory_pars_t &theory_pars,hmc_evol_pars_t &simul_pars,std::vector<rat_approx_t> &rat_appr)$/;"	f	namespace:nissa
generate_quark_propagators	projects/ib/mel.cpp	/^void generate_quark_propagators()$/;"	f
generate_quark_propagators	projects/ib/prop.cpp	/^  void generate_quark_propagators(int ihit)$/;"	f	namespace:nissa
generate_random_coord	src/base/random.cpp	/^  void generate_random_coord(coords c)$/;"	f	namespace:nissa
generate_sequential_source	projects/g/g.cpp	/^void generate_sequential_source(colorspinspin *S0)$/;"	f
generate_sequential_source	projects/semileptonic/gevp_3pts.cpp	/^void generate_sequential_source(int iseq)$/;"	f
generate_sequential_source	projects/semileptonic/semileptonic_smeared.cpp	/^void generate_sequential_source(int ispec)$/;"	f
generate_sequential_source	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^void generate_sequential_source(int ispec)$/;"	f
generate_sequential_source	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void generate_sequential_source(int ispec)$/;"	f
generate_source	projects/eight_BK/smeared_BK_all_in_one.cpp	/^void generate_source(int iwall)$/;"	f
generate_source	projects/g/g.cpp	/^void generate_source()$/;"	f
generate_source	projects/ib/mel.cpp	/^void generate_source(insertion_t inser,int r,PROP_TYPE *ori,int t=-1)$/;"	f
generate_source	projects/ib/prop.cpp	/^  void generate_source(insertion_t inser,int r,double charge,double kappa,double *theta,std::vector<source_term_t>& source_terms,int isou,int t)$/;"	f	namespace:nissa
generate_source	projects/semileptonic/gevp_3pts.cpp	/^void generate_source(int isource)$/;"	f
generate_source	projects/semileptonic/semileptonic_smeared.cpp	/^void generate_source()$/;"	f
generate_source	projects/semileptonic/test_proj.cpp	/^void generate_source()$/;"	f
generate_source	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void generate_source()$/;"	f
generate_source_0_method	projects/x/tests/test_stochastic_source_null_mode.cpp	/^void generate_source_0_method()$/;"	f
generate_source_1_method	projects/x/tests/test_stochastic_source_null_mode.cpp	/^void generate_source_1_method()$/;"	f
generate_spincolordiluted_source	src/base/random.hpp	/^  inline void generate_spincolordiluted_source(su3spinspin *source,enum rnd_t rtype,int twall)$/;"	f	namespace:nissa
generate_stochastic_A_B_dag_twisted_propagator	projects/x/src/stochastic/stochastic_twisted_propagator.cpp	/^void generate_stochastic_A_B_dag_twisted_propagator(spinspin *q_AB,spinspin *q_prop,quark_info qu,spin1field *g_A,spin1field *g_B,gluon_info gl)$/;"	f
generate_stochastic_A_B_dag_twisted_propagator_source	projects/x/src/stochastic/stochastic_twisted_propagator.cpp	/^void generate_stochastic_A_B_dag_twisted_propagator_source(spinspin *q_AB,spinspin *q_prop,quark_info qu,spin1field *g_A,spin1field *g_B,gluon_info gl)$/;"	f
generate_stochastic_A_dag_twisted_propagator	projects/x/src/stochastic/stochastic_twisted_propagator.cpp	/^void generate_stochastic_A_dag_twisted_propagator(spinspin *q_A,spinspin *q_prop,quark_info qu,spin1field *g_A,gluon_info gl)$/;"	f
generate_stochastic_A_twisted_propagator	projects/x/src/stochastic/stochastic_twisted_propagator.cpp	/^void generate_stochastic_A_twisted_propagator(spinspin *q_A,spinspin *q_prop,quark_info qu,spin1field *g_A,gluon_info gl)$/;"	f
generate_stochastic_source_and_tlSym_gluon_propagator	projects/x/src/stochastic/stochastic_tlSym_gluon_propagator.cpp	/^void generate_stochastic_source_and_tlSym_gluon_propagator(spin1field *phi,spin1field *eta,gluon_info gl)$/;"	f
generate_stochastic_source_eta	projects/x/src/stochastic/stochastic_source.cpp	/^void generate_stochastic_source_eta(spin1field *eta)$/;"	f
generate_stochastic_tlSym_gauge_propagator	src/free_theory/tlSym_gauge_propagator.cpp	/^  void generate_stochastic_tlSym_gauge_propagator(spin1field *phi,spin1field *eta, gauge_info gl)$/;"	f	namespace:nissa
generate_stochastic_tlSym_gluon_propagator	projects/x/src/stochastic/stochastic_tlSym_gluon_propagator.cpp	/^void generate_stochastic_tlSym_gluon_propagator(spin1field *phi,spin1field *eta,gluon_info gl)$/;"	f
geo_get_str	projects/generate_confs/driver.hpp	/^    std::string geo_get_str(bool full)$/;"	f	class:nissa::driver_t
geometric_topology_simplified	projects/cpn/cpn.cpp	/^double geometric_topology_simplified(ON_t *z)$/;"	f
get	src/new_types/dsfmt.hpp	/^    double get()$/;"	f	class:nissa::dsfmt_t
get_C0	src/hmc/gauge/Symanzik_action.hpp	/^  inline double get_C0(double C1)$/;"	f	namespace:nissa
get_EU_to_compute	projects/ib/disco.cpp	/^std::vector<EU_descr_t> get_EU_to_compute()$/;"	f
get_MB_flag	src/io/ILDG_File.cpp	/^  bool get_MB_flag(ILDG_header &header)$/;"	f	namespace:nissa
get_ME_flag	src/io/ILDG_File.cpp	/^  bool get_ME_flag(ILDG_header &header)$/;"	f	namespace:nissa
get_MPI_nranks	src/routines/mpi_routines.cpp	/^  void get_MPI_nranks()$/;"	f	namespace:nissa
get_MPI_rank	src/routines/mpi_routines.cpp	/^  void get_MPI_rank()$/;"	f	namespace:nissa
get_N	tools/find_best_vir_partitioning/find.cpp	/^  int get_N(){return grid[0]*grid[1]*grid[2]*grid[3]*grid[4];}$/;"	f	struct:torus_grid_t
get_N	tools/find_best_vir_partitioning/find.cpp	/^  int get_N(){return grid[0]*grid[1]*grid[2]*grid[3];}$/;"	f	struct:rank_grid_t
get_abs_err	src/operations/remez/remez_algorithm.cpp	/^  float_high_prec_t rat_approx_finder_t::get_abs_err(float_high_prec_t x)$/;"	f	class:nissa::rat_approx_finder_t
get_antineutrino_source_phase_factor	projects/ib/mel.cpp	/^void get_antineutrino_source_phase_factor(complex out,int ivol,int ilepton,momentum_t bc)$/;"	f
get_antineutrino_source_phase_factor	projects/ib/meslep.cpp	/^  void get_antineutrino_source_phase_factor(complex out,int ivol,int ilepton,momentum_t bc)$/;"	f	namespace:nissa
get_antineutrino_source_phase_factor	projects/ib/test_prop.cpp	/^void get_antineutrino_source_phase_factor(complex out,int ivol,momentum_t bc)$/;"	f
get_args_of_half_half_quantization	src/hmc/backfield.cpp	/^  void get_args_of_half_half_quantization(coords phase,int ivol,int mu,int nu)$/;"	f	namespace:nissa
get_args_of_null_quantization	src/hmc/backfield.cpp	/^  void get_args_of_null_quantization(coords phase,int ivol,int mu,int nu)$/;"	f	namespace:nissa
get_args_of_one_over_L2_quantization	src/hmc/backfield.cpp	/^  void get_args_of_one_over_L2_quantization(coords phase,int ivol,int mu,int nu)$/;"	f	namespace:nissa
get_args_of_quantization	src/hmc/backfield.cpp	/^  void (*get_args_of_quantization[3])(coords,int,int,int)=$/;"	m	namespace:nissa	file:
get_bit	src/routines/math_routines.hpp	/^  inline bool get_bit(int i,int ibit)$/;"	f	namespace:nissa
get_color_from_colorspinspin	src/new_types/su3_op.hpp	/^  inline void get_color_from_colorspinspin(color out,const colorspinspin in,int id1,int id2)$/;"	f	namespace:nissa
get_color_from_spincolor	src/new_types/su3_op.hpp	/^  inline void get_color_from_spincolor(color out,const spincolor in,int id)$/;"	f	namespace:nissa
get_color_from_su3	src/new_types/su3_op.hpp	/^  inline void get_color_from_su3(color out,const su3 in,int ic_source)$/;"	f	namespace:nissa
get_component_of_twisted_propagator_of_imom	src/free_theory/twisted_propagator.cpp	/^  void get_component_of_twisted_propagator_of_imom(momentum_t sin_mom,double &sin2_mom,double &sin2_momh,tm_quark_info qu,int imom)$/;"	f	namespace:nissa
get_d	src/new_types/float_256.hpp	/^    double get_d(){return num[0];}$/;"	f	struct:nissa::float_256_class
get_dirname	config/ylwrap	/^get_dirname ()$/;"	f
get_dirs	src/operations/smearing/smooth.hpp	/^    static bool* get_dirs(space_or_time_t space_or_time)$/;"	f	struct:nissa::smooth_pars_t
get_eo_photon	src/operations/stag/qed_corr.cpp	/^    void get_eo_photon(spin1field **out,gauge_info photon)$/;"	f	namespace:nissa::stag
get_err	src/operations/remez/remez_algorithm.cpp	/^  float_high_prec_t rat_approx_finder_t::get_err(float_high_prec_t x)$/;"	f	class:nissa::rat_approx_finder_t
get_evn_or_odd_part_of_lx_vector	src/geometry/geometry_mix.hpp	/^  template <class T> void get_evn_or_odd_part_of_lx_vector(T *out_eo,T *in_lx,int par)$/;"	f	namespace:nissa
get_file_ndouble	tools/ave.cpp	/^int get_file_ndouble(char *path)$/;"	f
get_file_size	src/routines/ios.cpp	/^  int get_file_size(std::string path)$/;"	f	namespace:nissa
get_glblx_of_rank_and_loclx	src/geometry/geometry_lx.cpp	/^  int get_glblx_of_rank_and_loclx(int irank,int loclx)$/;"	f	namespace:nissa
get_inverting	projects/semileptonic/new_version/new_types.cpp	/^void prop_group_t::get_inverting(in_source_t &source,gauge_conf_t &gauge_conf,int rotate_to_physical_basis)$/;"	f	class:prop_group_t
get_inverting	projects/semileptonic/new_version/new_types.hpp	/^  int get_inverting;$/;"	m	struct:prop_group_command_t
get_lepton_info	projects/ib/mel.cpp	/^tm_quark_info get_lepton_info(int ilepton,int orie,int r)$/;"	f
get_lepton_info	projects/ib/meslep.cpp	/^  tm_quark_info get_lepton_info(int ilepton,int orie,int r)$/;"	f	namespace:nissa
get_lepton_sink_phase_factor	projects/ib/mel.cpp	/^void get_lepton_sink_phase_factor(complex out,int ivol,int ilepton,tm_quark_info le)$/;"	f
get_lepton_sink_phase_factor	projects/ib/meslep.cpp	/^  void get_lepton_sink_phase_factor(complex out,int ivol,int ilepton,tm_quark_info le)$/;"	f	namespace:nissa
get_lepton_sink_phase_factor	projects/ib/test_prop.cpp	/^void get_lepton_sink_phase_factor(complex out,int ivol)$/;"	f
get_loclx_and_rank_of_coord	src/geometry/geometry_lx.cpp	/^  void get_loclx_and_rank_of_coord(int *ivol,int *rank,coords g)$/;"	f	namespace:nissa
get_loclx_and_rank_of_glblx	src/geometry/geometry_lx.cpp	/^  void get_loclx_and_rank_of_glblx(int *lx,int *rx,int gx)$/;"	f	namespace:nissa
get_method_name	src/operations/smearing/smooth.hpp	/^    std::string get_method_name()$/;"	f	struct:nissa::smooth_pars_t
get_mirrorized_site_coord	src/geometry/geometry_lx.hpp	/^  inline int get_mirrorized_site_coord(int c,int mu,bool flip)$/;"	f	namespace:nissa
get_mirrorized_site_coords	src/geometry/geometry_lx.hpp	/^  inline void get_mirrorized_site_coords(coords cmir,coords c,int imir)$/;"	f	namespace:nissa
get_mpi_tag_ub	test/test_max_tag.cpp	/^int get_mpi_tag_ub()$/;"	f
get_nhits_done_so_far	projects/ib/disco.cpp	/^void get_nhits_done_so_far()$/;"	f
get_ntheta_mass_r	projects/semileptonic/new_version/new_types.cpp	/^void prop_group_t::get_ntheta_mass_r(int &ntheta,int &nmass,int &nr)$/;"	f	class:prop_group_t
get_partial_fraction_expansion	src/operations/remez/remez_algorithm.cpp	/^  void get_partial_fraction_expansion(float_high_prec_t *res,float_high_prec_t *poles,float_high_prec_t *roots,float_high_prec_t cons,int n)$/;"	f	namespace:nissa
get_prop	projects/semileptonic/test_proj.cpp	/^void get_prop()$/;"	f
get_prop_name	projects/ib/disco.cpp	/^std::string get_prop_name(int iquark,insertion_t ins)$/;"	f
get_qprop	projects/ib/mel.cpp	/^void get_qprop(PROP_TYPE *out,PROP_TYPE *in,int imass,bool r)$/;"	f
get_qprop	projects/ib/prop.cpp	/^  void get_qprop(spincolor *out,spincolor *in,double kappa,double mass,int r,double charge,double residue,double *theta)$/;"	f	namespace:nissa
get_reading	projects/semileptonic/new_version/new_types.cpp	/^void prop_group_t::get_reading(const char *ext_template_path,gauge_conf_t &conf,int load_reconstructing,int rotate_to_physical_basis)$/;"	f	class:prop_group_t
get_reading	projects/semileptonic/new_version/new_types.hpp	/^  int get_reading;$/;"	m	struct:prop_group_command_t
get_site_of_tricoords	src/operations/su3_paths/all_rectangles.cpp	/^  int get_site_of_tricoords(tricoords_t c,tricoords_t L)$/;"	f	namespace:nissa
get_skipped	src/new_types/dsfmt.hpp	/^    dsfmt_t get_skipped(const char *skip_string)$/;"	f	class:nissa::dsfmt_t
get_skipped	src/new_types/dsfmt.hpp	/^    dsfmt_t get_skipped(uint64_t skip)$/;"	f	class:nissa::dsfmt_t
get_smallest_nWflow_rounded	src/operations/smearing/recursive_Wflower.hpp	/^    int get_smallest_nWflow_rounded(int nWflow,int is)$/;"	f	struct:nissa::recursive_Wflower_t
get_smearing	projects/semileptonic/new_version/new_types.cpp	/^void prop_group_t::get_smearing(gauge_conf_t &conf,gauss_smear_pars_t &pars,prop_group_t &in)$/;"	f	class:prop_group_t
get_source_from_propgroup_mass	projects/semileptonic/new_version/new_semileptonic.cpp	/^  double get_source_from_propgroup_mass;$/;"	m	struct:source_t	file:
get_source_from_propgroup_of_name	projects/semileptonic/new_version/new_semileptonic.cpp	/^  char get_source_from_propgroup_of_name[1024];$/;"	m	struct:source_t	file:
get_source_from_propgroup_theta	projects/semileptonic/new_version/new_semileptonic.cpp	/^  double get_source_from_propgroup_theta;$/;"	m	struct:source_t	file:
get_space_arg	projects/ib/mel.cpp	/^double get_space_arg(int ivol,momentum_t bc)$/;"	f
get_space_arg	projects/ib/meslep.cpp	/^  double get_space_arg(int ivol,momentum_t bc)$/;"	f	namespace:nissa
get_space_arg	projects/ib/test_prop.cpp	/^double get_space_arg(int ivol,momentum_t bc)$/;"	f
get_spi_coord	src/bgq/spi.cpp	/^  void get_spi_coord()$/;"	f	namespace:nissa
get_spin_from_spinspin	src/free_theory/free_theory_types_routines.cpp	/^  void get_spin_from_spinspin(spin *out,spinspin *in,int id_so)$/;"	f	namespace:nissa
get_spincolor_from_colorspinspin	src/new_types/su3_op.hpp	/^  inline void get_spincolor_from_colorspinspin(spincolor out,const colorspinspin in,int id_source)$/;"	f	namespace:nissa
get_spincolor_from_su3spinspin	src/new_types/su3_op.hpp	/^  inline void get_spincolor_from_su3spinspin(spincolor out,const su3spinspin in,int id_source,int ic_source)$/;"	f	namespace:nissa
get_staple_min_dir	src/operations/smearing/smooth.hpp	/^    static int get_staple_min_dir(space_or_time_t space_or_time)$/;"	f	struct:nissa::smooth_pars_t
get_str	projects/generate_confs/driver.hpp	/^    std::string get_str(bool full=false)$/;"	f	class:nissa::driver_t
get_str	src/hmc/backfield.hpp	/^    std::string get_str(bool full=false)$/;"	f	struct:nissa::em_field_pars_t
get_str	src/hmc/gauge/topological_action.cpp	/^  std::string topotential_pars_t::get_str(bool full)$/;"	f	class:nissa::topotential_pars_t
get_str	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    std::string get_str(int full=false)$/;"	f	struct:nissa::conf_pars_t
get_str	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    std::string get_str(int full=false)$/;"	f	struct:nissa::hmc_evol_pars_t
get_str	src/hmc/quark_pars.hpp	/^    std::string get_str(bool full=false)$/;"	f	struct:nissa::quark_content_t
get_str	src/hmc/theory_pars.cpp	/^  std::string theory_pars_t::get_str(int full)$/;"	f	class:nissa::theory_pars_t
get_str	src/new_types/metadynamics.cpp	/^  std::string meta_pars_t::get_str(bool full)$/;"	f	class:nissa::meta_pars_t
get_str	src/new_types/rat_approx.cpp	/^  std::string rat_approx_t::get_str()$/;"	f	class:nissa::rat_approx_t
get_str	src/operations/gauge_fixing.hpp	/^    std::string get_str(int full=false)$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
get_str	src/operations/gaugeconf.cpp	/^  std::string gauge_obs_meas_pars_t::get_str(bool full)$/;"	f	class:nissa::gauge_obs_meas_pars_t
get_str	src/operations/smearing/APE.hpp	/^    std::string get_str(bool full=false)$/;"	f	struct:nissa::ape_pars_t
get_str	src/operations/smearing/HYP.hpp	/^    std::string get_str(bool full=false)$/;"	f	struct:nissa::hyp_pars_t
get_str	src/operations/smearing/Wflow.hpp	/^    std::string get_str(bool full=false)$/;"	f	struct:nissa::Wflow_pars_t
get_str	src/operations/smearing/cooling.hpp	/^    std::string get_str(bool full=false)$/;"	f	struct:nissa::cool_pars_t
get_str	src/operations/smearing/smooth.cpp	/^  std::string smooth_pars_t::get_str(bool full)$/;"	f	class:nissa::smooth_pars_t
get_str	src/operations/smearing/stout.hpp	/^    std::string get_str(int full=false)$/;"	f	struct:nissa::stout_pars_t
get_str	src/operations/stag/magnetization.cpp	/^  std::string magnetization_meas_pars_t::get_str(bool full)$/;"	f	class:nissa::magnetization_meas_pars_t
get_str	src/operations/stag/mesons.cpp	/^  std::string meson_corr_meas_pars_t::get_str(bool full)$/;"	f	class:nissa::meson_corr_meas_pars_t
get_str	src/operations/stag/nucleon.cpp	/^  std::string nucleon_corr_meas_pars_t::get_str(bool full)$/;"	f	class:nissa::nucleon_corr_meas_pars_t
get_str	src/operations/stag/putpourri.cpp	/^  std::string fermionic_putpourri_meas_pars_t::get_str(bool full)$/;"	f	class:nissa::fermionic_putpourri_meas_pars_t
get_str	src/operations/stag/qed_corr.cpp	/^  std::string qed_corr_meas_pars_t::get_str(bool full)$/;"	f	class:nissa::qed_corr_meas_pars_t
get_str	src/operations/stag/rendens.cpp	/^  std::string quark_rendens_meas_pars_t::get_str(bool full)$/;"	f	class:nissa::quark_rendens_meas_pars_t
get_str	src/operations/stag/spinpol.cpp	/^  std::string spinpol_meas_pars_t::get_str(bool full)$/;"	f	class:nissa::spinpol_meas_pars_t
get_str	src/operations/stag/stag.cpp	/^  std::string base_fermionic_meas_t::get_str(bool full)$/;"	f	class:nissa::base_fermionic_meas_t
get_str	src/operations/stag/zumba.cpp	/^  std::string chir_zumba_meas_pars_t::get_str(bool full)$/;"	f	class:nissa::chir_zumba_meas_pars_t
get_str	src/operations/su3_paths/all_rectangles.cpp	/^  std::string all_rects_meas_pars_t::get_str(bool full)$/;"	f	class:nissa::all_rects_meas_pars_t
get_str	src/operations/su3_paths/topological_charge.cpp	/^  std::string top_meas_pars_t::get_str(bool full)$/;"	f	class:nissa::top_meas_pars_t
get_sweeper	src/operations/su3_paths/gauge_sweeper.hpp	/^  inline gauge_sweeper_t *get_sweeper(gauge_action_name_t gauge_action_name)$/;"	f	namespace:nissa
get_system_random	src/base/random.hpp	/^  void get_system_random(T &t)$/;"	f	namespace:nissa
get_tag	src/io/input.cpp	/^      const std::string get_tag(int &a){return "%d";}$/;"	f	struct:nissa::__anon9::triple_tag
get_tricoords_of_site	src/operations/su3_paths/all_rectangles.cpp	/^  void get_tricoords_of_site(tricoords_t c,int icmp,tricoords_t L)$/;"	f	namespace:nissa
get_updated_conf	projects/ib/conf.cpp	/^  quad_su3* get_updated_conf(double charge,double *theta,quad_su3 *in_conf)$/;"	f	namespace:nissa
get_vect	src/base/vectors.cpp	/^  nissa_vect* get_vect(void *v)$/;"	f	namespace:nissa
get_vect_flag	src/base/vectors.cpp	/^  int get_vect_flag(void *v,unsigned int flag)$/;"	f	namespace:nissa
get_vect_name	src/base/vectors.cpp	/^  char *get_vect_name(void *v)$/;"	f	namespace:nissa
get_zeta_complex_scalar_prod	projects/cpn/cpn.cpp	/^void get_zeta_complex_scalar_prod(complex res,ON_t a,ON_t b)$/;"	f
get_zeta_norm	projects/cpn/cpn.cpp	/^inline double get_zeta_norm(const ON_t z)$/;"	f
get_zeta_norm2	projects/cpn/cpn.cpp	/^inline double get_zeta_norm2(const ON_t z)$/;"	f
get_zeta_real_scalar_prod	projects/cpn/cpn.cpp	/^double get_zeta_real_scalar_prod(const ON_t a,const ON_t b)$/;"	f
give_advice	config/missing	/^give_advice ()$/;"	f
glb_barr_file	src/routines/thread.hpp	/^   EXTERN_THREAD char glb_barr_file[1024];$/;"	m	namespace:nissa
glb_barr_line	src/routines/thread.hpp	/^   EXTERN_THREAD int glb_barr_line;$/;"	m	namespace:nissa
glb_cSW	projects/ib/pars.hpp	/^  EXTERN_PARS double glb_cSW;$/;"	m	namespace:nissa
glb_coord_of_glblx	src/geometry/geometry_lx.cpp	/^  void glb_coord_of_glblx(coords x,int gx)$/;"	f	namespace:nissa
glb_coord_of_loclx	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords *glb_coord_of_loclx;$/;"	m	namespace:nissa
glb_coord_parity	src/geometry/geometry_eo.cpp	/^  int glb_coord_parity(coords c)$/;"	f	namespace:nissa
glb_corr	projects/ib/mel.cpp	/^complex *glb_corr,*loc_corr;$/;"	v
glb_corr	projects/semileptonic/gevp.cpp	/^double *glb_corr,*loc_corr;$/;"	v
glb_corr	projects/semileptonic/gevp_3pts.cpp	/^double *loc_corr,*glb_corr;$/;"	v
glb_diff	projects/x/tests/test_propagator_shift.cpp	/^double glb_diff(spinspin *a,spinspin *b)$/;"	f
glb_double_reduction_buf	src/routines/thread.hpp	/^  EXTERN_THREAD double *glb_double_reduction_buf;$/;"	m	namespace:nissa
glb_max_double	src/routines/mpi_routines.hpp	/^  inline double glb_max_double(double in_loc)$/;"	f	namespace:nissa
glb_nodes_reduce_complex_vect	src/routines/mpi_routines.hpp	/^  inline void glb_nodes_reduce_complex_vect(complex *out_glb,complex *in_loc,int nel)$/;"	f	namespace:nissa
glb_nodes_reduce_complex_vect	src/routines/mpi_routines.hpp	/^  inline void glb_nodes_reduce_complex_vect(complex *vect,int nel)$/;"	f	namespace:nissa
glb_nodes_reduce_double_vect	src/routines/mpi_routines.cpp	/^  void glb_nodes_reduce_double_vect(double *out_glb,double *in_loc,int nel)$/;"	f	namespace:nissa
glb_nodes_reduce_double_vect	src/routines/mpi_routines.hpp	/^  inline void glb_nodes_reduce_double_vect(double *vect,int nel)$/;"	f	namespace:nissa
glb_quadruple_reduction_buf	src/routines/thread.hpp	/^  EXTERN_THREAD float_128 *glb_quadruple_reduction_buf;$/;"	m	namespace:nissa
glb_reduce_complex	src/routines/mpi_routines.cpp	/^  void glb_reduce_complex(complex out_glb,complex in_loc)$/;"	f	namespace:nissa
glb_reduce_complex_128	src/routines/mpi_routines.cpp	/^  void glb_reduce_complex_128(complex_128 out_glb,complex_128 in_loc)$/;"	f	namespace:nissa
glb_reduce_double	src/routines/mpi_routines.cpp	/^  double glb_reduce_double(double in_loc,double (*thread_op)(double,double),MPI_Op mpi_op)$/;"	f	namespace:nissa
glb_reduce_float_128	src/routines/mpi_routines.cpp	/^  void glb_reduce_float_128(float_128 out_glb,float_128 in_loc)$/;"	f	namespace:nissa
glb_reduce_int	src/routines/mpi_routines.cpp	/^  void glb_reduce_int(int *out_glb,int in_loc)$/;"	f	namespace:nissa
glb_reduce_single	src/routines/mpi_routines.cpp	/^  float glb_reduce_single(float in_loc)$/;"	f	namespace:nissa
glb_rnd_gen	src/base/random.cpp	/^  rnd_gen glb_rnd_gen;$/;"	m	namespace:nissa	file:
glb_rnd_gen_inited	src/base/random.cpp	/^  bool glb_rnd_gen_inited;$/;"	m	namespace:nissa	file:
glb_single_reduction_buf	src/routines/thread.hpp	/^  EXTERN_THREAD float *glb_single_reduction_buf;$/;"	m	namespace:nissa
glb_size	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords glb_size,loc_size;$/;"	m	namespace:nissa
glb_source	work_in_prog/eo_inverter/invert2.cpp	/^spincolor *glb_source;$/;"	v
glb_spat_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t glb_vol,glb_spat_vol,glb_volh;$/;"	m	namespace:nissa
glb_threads_reduce_complex_vect	src/routines/thread.hpp	/^  inline complex *glb_threads_reduce_complex_vect(complex *vect,int nel)$/;"	f	namespace:nissa
glb_threads_reduce_double_vect	src/routines/thread.cpp	/^  double *glb_threads_reduce_double_vect(double *vect,int nel)$/;"	f	namespace:nissa
glb_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t glb_vol,glb_spat_vol,glb_volh;$/;"	m	namespace:nissa
glb_vol2	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX double glb_vol2,loc_vol2;$/;"	m	namespace:nissa
glb_volh	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t glb_vol,glb_spat_vol,glb_volh;$/;"	m	namespace:nissa
glblx_neighdw	src/geometry/geometry_lx.cpp	/^  int glblx_neighdw(int gx,int mu)$/;"	f	namespace:nissa
glblx_neighup	src/geometry/geometry_lx.cpp	/^  int glblx_neighup(int gx,int mu)$/;"	f	namespace:nissa
glblx_of_bordlx	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int *glblx_of_bordlx;$/;"	m	namespace:nissa
glblx_of_comb	src/geometry/geometry_lx.cpp	/^  int glblx_of_comb(int b,int wb,int c,int wc)$/;"	f	namespace:nissa
glblx_of_coord	src/geometry/geometry_lx.cpp	/^  int glblx_of_coord(coords x)$/;"	f	namespace:nissa
glblx_of_coord_list	src/geometry/geometry_lx.cpp	/^  int glblx_of_coord_list(int a,int b,int c,int d)$/;"	f	namespace:nissa
glblx_of_diff	src/geometry/geometry_lx.cpp	/^  int glblx_of_diff(int b,int c)$/;"	f	namespace:nissa
glblx_of_edgelx	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int *glblx_of_edgelx;$/;"	m	namespace:nissa
glblx_of_loclx	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int *glblx_of_loclx;$/;"	m	namespace:nissa
glblx_of_summ	src/geometry/geometry_lx.cpp	/^  int glblx_of_summ(int b,int c)$/;"	f	namespace:nissa
glblx_opp	src/geometry/geometry_lx.cpp	/^  int glblx_opp(int b)$/;"	f	namespace:nissa
glblx_parity	src/geometry/geometry_eo.cpp	/^  int glblx_parity(int glx)$/;"	f	namespace:nissa
global_plaquette_eo_conf	src/operations/su3_paths/plaquette.cpp	/^  double global_plaquette_eo_conf(quad_su3 **conf)$/;"	f	namespace:nissa
global_plaquette_lx_conf	src/operations/su3_paths/plaquette.cpp	/^  double global_plaquette_lx_conf(quad_su3 *conf)$/;"	f	namespace:nissa
gluonic_action	src/hmc/gauge/gluonic_action.hpp	/^  template <class T> void gluonic_action(double *gluon_action,T conf,gauge_action_name_t gauge_action_name,double beta)$/;"	f	namespace:nissa
gpar	src/operations/su3_paths/gauge_sweeper.hpp	/^    int nlinks_per_staples_of_link,gpar;$/;"	m	struct:nissa::gauge_sweeper_t
grid	src/new_types/metadynamics.hpp	/^    storable_vector_t<double> grid;$/;"	m	struct:nissa::meta_pars_t
grid	tools/find_best_vir_partitioning/find.cpp	/^  int grid[4];$/;"	m	struct:rank_grid_t	file:
grid	tools/find_best_vir_partitioning/find.cpp	/^  int grid[5];$/;"	m	struct:torus_grid_t	file:
grid_inited	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int grid_inited;$/;"	m	namespace:nissa
gtag	src/new_types/dirac.hpp	/^  EXTERN_DIRAC char gtag[19][3]$/;"	m	namespace:nissa
guard	config/ylwrap	/^guard ()$/;"	f
guess	tools/conf_measure/magn.cpp	/^color *chi[2],*rnd[2],*guess;$/;"	v
hadr	projects/ib/mel.cpp	/^spinspin *hadr;$/;"	v
hadr_contr_time	projects/ib/mel.cpp	/^double inv_time=0,hadr_contr_time=0,lept_contr_time=0,print_time=0;$/;"	v
hadr_corr	projects/ib/mel.cpp	/^complex *hadr_corr;$/;"	v
hadr_corr_length	projects/ib/mel.cpp	/^int hadr_corr_length;$/;"	v
hadrolept_corr	projects/ib/mel.cpp	/^complex *hadrolept_corr;$/;"	v
hadrolept_corrpack_ind	projects/ib/mel.cpp	/^int hadrolept_corrpack_ind(int rl,int orie,int r2,int irev,int qins,int ilepton)$/;"	f
hadrolept_projs	projects/ib/mel.cpp	/^const int nhadrolept_proj=1,hadrolept_projs[nhadrolept_proj]={4};$/;"	v
halfspin	src/new_types/spin.hpp	/^  typedef complex halfspin[2];$/;"	t	namespace:nissa
halfspincolor	src/new_types/su3.hpp	/^  typedef color halfspincolor[NDIRAC\/2];$/;"	t	namespace:nissa
halfspincolor_128	src/new_types/float_128.hpp	/^  typedef color_128 halfspincolor_128[NDIRAC\/2];$/;"	t	namespace:nissa
halfspincolor_copy	src/new_types/su3_op.hpp	/^  inline void halfspincolor_copy(halfspincolor a,const halfspincolor b)$/;"	f	namespace:nissa
halfspincolor_halfspincolor	src/new_types/su3.hpp	/^  typedef color_halfspincolor halfspincolor_halfspincolor[NDIRAC\/2];$/;"	t	namespace:nissa
halfspincolor_norm2	src/new_types/su3_op.hpp	/^  inline double halfspincolor_norm2(halfspincolor a)$/;"	f	namespace:nissa
halfspincolor_put_to_zero	src/new_types/su3_op.hpp	/^  inline void halfspincolor_put_to_zero(halfspincolor a)$/;"	f	namespace:nissa
halfspincolor_scal_prod	src/new_types/su3_op.hpp	/^  inline double halfspincolor_scal_prod(halfspincolor a,const halfspincolor b)$/;"	f	namespace:nissa
halfspincolor_summ_the_prod_double	src/new_types/su3_op.hpp	/^  inline void halfspincolor_summ_the_prod_double(halfspincolor a,const halfspincolor b,const double c)$/;"	f	namespace:nissa
halfspincolor_summ_the_prod_double	src/new_types/su3_op.hpp	/^  inline void halfspincolor_summ_the_prod_double(halfspincolor a,const halfspincolor b,const halfspincolor c,const double d)$/;"	f	namespace:nissa
handcuffs_contr_size	projects/ib/contr.hpp	/^  EXTERN_CONTR int handcuffs_contr_size;$/;"	m	namespace:nissa
handcuffs_map	projects/ib/contr.hpp	/^  EXTERN_CONTR std::vector<handcuffs_map_t> handcuffs_map;$/;"	m	namespace:nissa
handcuffs_map_t	projects/ib/contr.hpp	/^    handcuffs_map_t(std::string name,std::string left,std::string right) : name(name),left(left),right(right) {}$/;"	f	struct:nissa::handcuffs_map_t
handcuffs_map_t	projects/ib/contr.hpp	/^  struct handcuffs_map_t$/;"	s	namespace:nissa
handcuffs_side_map	projects/ib/contr.hpp	/^  EXTERN_CONTR std::vector<handcuffs_side_map_t> handcuffs_side_map;$/;"	m	namespace:nissa
handcuffs_side_map_t	projects/ib/contr.hpp	/^    handcuffs_side_map_t(std::string name,int igamma,std::string bw,std::string fw,int store) : name(name),igamma(igamma),bw(bw),fw(fw),store(store) {}$/;"	f	struct:nissa::handcuffs_side_map_t
handcuffs_side_map_t	projects/ib/contr.hpp	/^  struct handcuffs_side_map_t$/;"	s	namespace:nissa
handle	src/operations/gaugeconf.cpp	/^    void handle(su3 out,su3 staple,int ivol,int mu,void *pars)$/;"	f	namespace:nissa::heatbath_lx_conf_ns
header	src/free_theory/free_theory_types.hpp	/^    bmpfile_header header;$/;"	m	struct:nissa::bmpfile
header_sz	src/free_theory/free_theory_types.hpp	/^    uint32_t header_sz;$/;"	m	struct:nissa::bmpfile_info_header
heatbath_lx_conf_ns	src/operations/gaugeconf.cpp	/^  namespace heatbath_lx_conf_ns$/;"	n	namespace:nissa	file:
height	src/free_theory/free_theory_types.hpp	/^    int32_t height;$/;"	m	struct:nissa::bmpfile_info_header
herm_put_to_gauss	src/base/random.cpp	/^  void herm_put_to_gauss(su3 H,rnd_gen *gen,double sigma)$/;"	f	namespace:nissa
hermitian_exact_i_exponentiate_ingredients	src/new_types/su3_op.cpp	/^  void hermitian_exact_i_exponentiate_ingredients(hermitian_exp_ingredients &out,const su3 Q)$/;"	f	namespace:nissa
hermitian_exp_ingredients	src/new_types/su3_op.hpp	/^  struct hermitian_exp_ingredients$/;"	s	namespace:nissa
high_prec_nbits	src/new_types/high_prec.cpp	/^  int high_prec_nbits() {return 209;}$/;"	f	namespace:nissa
high_prec_nbits	src/new_types/high_prec.cpp	/^  int high_prec_nbits(){return mpf_get_default_prec();}$/;"	f	namespace:nissa
hits	projects/ib/disco.cpp	/^namespace hits$/;"	n	file:
hmc_evol_pars_t	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    hmc_evol_pars_t() :$/;"	f	struct:nissa::hmc_evol_pars_t
hmc_evol_pars_t	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^  struct hmc_evol_pars_t$/;"	s	namespace:nissa
hmc_update	projects/cpn/cpn.cpp	/^void hmc_update(bool skip_test=false)$/;"	f
host	build/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	build/projects/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	build/src/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	build/tools/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host_alias	build/Makefile	/^host_alias = $/;"	m
host_alias	build/projects/Makefile	/^host_alias = $/;"	m
host_alias	build/src/Makefile	/^host_alias = $/;"	m
host_alias	build/tools/Makefile	/^host_alias = $/;"	m
host_cpu	build/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	build/projects/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	build/src/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	build/tools/Makefile	/^host_cpu = x86_64$/;"	m
host_os	build/Makefile	/^host_os = linux-gnu$/;"	m
host_os	build/projects/Makefile	/^host_os = linux-gnu$/;"	m
host_os	build/src/Makefile	/^host_os = linux-gnu$/;"	m
host_os	build/tools/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	build/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	build/projects/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	build/src/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	build/tools/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_vendor	build/Makefile	/^host_vendor = pc$/;"	m
host_vendor	build/projects/Makefile	/^host_vendor = pc$/;"	m
host_vendor	build/src/Makefile	/^host_vendor = pc$/;"	m
host_vendor	build/tools/Makefile	/^host_vendor = pc$/;"	m
hres	src/free_theory/free_theory_types.hpp	/^    int32_t hres;$/;"	m	struct:nissa::bmpfile_info_header
htmldir	build/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	build/projects/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	build/src/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	build/tools/Makefile	/^htmldir = ${docdir}$/;"	m
hyp	src/operations/smearing/smooth.hpp	/^    hyp_pars_t hyp;$/;"	m	struct:nissa::smooth_pars_t
hyp_alpha0	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double hyp_alpha0,hyp_alpha1,hyp_alpha2;$/;"	v
hyp_alpha1	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double hyp_alpha0,hyp_alpha1,hyp_alpha2;$/;"	v
hyp_alpha2	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double hyp_alpha0,hyp_alpha1,hyp_alpha2;$/;"	v
hyp_conf	projects/eight_BK/smeared_BK_all_in_one.cpp	/^quad_su3 *conf,*sme_conf,*hyp_conf;$/;"	v
hyp_pars	build/projects/generate_confs/parser.cpp	/^    nissa::hyp_pars_t *hyp_pars;$/;"	m	union:YYSTYPE	file:
hyp_pars	build/projects/generate_confs/parser.hpp	/^    nissa::hyp_pars_t *hyp_pars;$/;"	m	union:YYSTYPE
hyp_pars_t	src/operations/smearing/HYP.hpp	/^    hyp_pars_t() :$/;"	f	struct:nissa::hyp_pars_t
hyp_pars_t	src/operations/smearing/HYP.hpp	/^  struct hyp_pars_t$/;"	s	namespace:nissa
i2pts_ClCl	projects/semileptonic/gevp_3pts.cpp	/^const int i2pts_ClCl=2,i2pts_PsCl=3,i2pts_CsCl=4;$/;"	v
i2pts_ClCs	projects/semileptonic/gevp_3pts.cpp	/^const int i2pts_ClCs=8,i2pts_PsCs=9,i2pts_CsCs=10;$/;"	v
i2pts_ClPs	projects/semileptonic/gevp_3pts.cpp	/^const int i2pts_ClPs=5,i2pts_PsPs=6,i2pts_CsPs=7;$/;"	v
i2pts_CsCl	projects/semileptonic/gevp_3pts.cpp	/^const int i2pts_ClCl=2,i2pts_PsCl=3,i2pts_CsCl=4;$/;"	v
i2pts_CsCs	projects/semileptonic/gevp_3pts.cpp	/^const int i2pts_ClCs=8,i2pts_PsCs=9,i2pts_CsCs=10;$/;"	v
i2pts_CsPs	projects/semileptonic/gevp_3pts.cpp	/^const int i2pts_ClPs=5,i2pts_PsPs=6,i2pts_CsPs=7;$/;"	v
i2pts_PsCl	projects/semileptonic/gevp_3pts.cpp	/^const int i2pts_ClCl=2,i2pts_PsCl=3,i2pts_CsCl=4;$/;"	v
i2pts_PsCs	projects/semileptonic/gevp_3pts.cpp	/^const int i2pts_ClCs=8,i2pts_PsCs=9,i2pts_CsCs=10;$/;"	v
i2pts_PsPs	projects/semileptonic/gevp_3pts.cpp	/^const int i2pts_ClPs=5,i2pts_PsPs=6,i2pts_CsPs=7;$/;"	v
i2pts_VsVs_mv	projects/semileptonic/gevp_3pts.cpp	/^const int i2pts_VsVs_st=0,i2pts_VsVs_mv=1;$/;"	v
i2pts_VsVs_st	projects/semileptonic/gevp_3pts.cpp	/^const int i2pts_VsVs_st=0,i2pts_VsVs_mv=1;$/;"	v
i3pts_base	projects/semileptonic/gevp_3pts.cpp	/^const int i3pts_base=11;$/;"	v
iS	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int iS(int iwall,int sm_lv,int imass,int r)$/;"	f
iS0H	projects/g/g.cpp	/^int iS0H(int m0p,int itheta)$/;"	f
iS0L	projects/g/g.cpp	/^int iS0L(int mp,int itheta)$/;"	f
iS1	projects/g/g.cpp	/^int iS1(int m0p,int itheta)$/;"	f
icombo	src/operations/stag/mesons.cpp	/^  inline int icombo(int iflav,int iop,int t)$/;"	f	namespace:nissa
icombo	tools/find_best_vir_partitioning/find.cpp	/^  int nfact,ncombo,icombo;$/;"	m	struct:valid_partition_lister_t	file:
iconf	projects/generate_confs/generate_quenched.cpp	/^int iconf,max_nconfs;$/;"	v
id	projects/x/tests/test_twisted_propagator_stochastic_correction.cpp	/^spinspin *q_prop,*id;$/;"	v
id_sea_theory	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int id_sea_theory;$/;"	m	struct:nissa::hmc_evol_pars_t
idirac_pair_t	src/operations/contract/mesons_2pts.hpp	/^    idirac_pair_t(int si,int so) : si(si),so(so) {}$/;"	f	struct:nissa::idirac_pair_t
idirac_pair_t	src/operations/contract/mesons_2pts.hpp	/^  struct idirac_pair_t$/;"	s	namespace:nissa
idum	src/base/random.hpp	/^    int idum;$/;"	m	struct:nissa::rnd_gen
idum2	src/base/random.hpp	/^    int idum2;$/;"	m	struct:nissa::rnd_gen
idx	projects/ib/disco.cpp	/^  int idx(int f1,int f2,int ihit,int single_or_all)$/;"	f	namespace:hits
idx	projects/ib/disco.cpp	/^  int idx(int iEU,int iquark)$/;"	f	namespace:EU1_EU2_EU4_EU6alt
idx	src/new_types/dsfmt.hpp	/^    uint64_t idx;$/;"	m	class:nissa::dsfmt_t
idxof	src/new_types/dsfmt.hpp	/^    int idxof(int i)$/;"	f	class:nissa::dsfmt_t
if_meas_is_due_print	projects/generate_confs/driver.hpp	/^    template <class T> bool if_meas_is_due_print(T &obj,int itheory,int iconf,const char *text)$/;"	f	class:nissa::driver_t
ifield_idx	projects/ib/disco.cpp	/^  int ifield_idx(int iquark,int f)$/;"	f	namespace:curr
ig_hadr_si	projects/ib/mel.cpp	/^const int ig_hadr_si[nhadr_contr]={ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15  , 10,11,12,1, 2, 3,  10,11,12,13,14,15};$/;"	v
ig_hadr_so	projects/ib/mel.cpp	/^const int ig_hadr_so[nhadr_contr]={ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5  , 1, 2, 3, 10,11,12, 10,11,12,13,14,15};$/;"	v
igamma	projects/ib/contr.hpp	/^    int igamma;$/;"	m	struct:nissa::handcuffs_side_map_t
igamma	projects/x/tests/test_nazario2.cpp	/^int igamma=0;$/;"	v
igamma_of_mu	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int igamma_of_mu[4]$/;"	m	namespace:nissa
igauge_conf	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int igauge_conf=0,ngauge_conf,nanalized_conf;$/;"	v
ignore_borders_communications_warning	src/base/vectors.cpp	/^  void ignore_borders_communications_warning(void *data)$/;"	f	namespace:nissa
ildg_crc32	src/io/checksum.cpp	/^  uint32_t ildg_crc32(uint32_t crc,const unsigned char *buf,size_t len)$/;"	f	namespace:nissa
ildg_crc32_fix_endianness	src/io/checksum.cpp	/^  uint32_t ildg_crc32_fix_endianness(uint32_t crc,const unsigned char *buf,size_t len,int prec)$/;"	f	namespace:nissa
ilink_per_staples	src/operations/su3_paths/gauge_sweeper.hpp	/^    int *ilink_per_staples;$/;"	m	struct:nissa::gauge_sweeper_t
ilprop	projects/ib/mel.cpp	/^int ilprop(int ilepton,int ilins,int orie,int r)$/;"	f
im_3pts	projects/nucleons/nucleons_smeared.cpp	/^int nmass,im_3pts;$/;"	v
im_pot	src/hmc/quark_pars.hpp	/^    double im_pot;$/;"	m	struct:nissa::quark_content_t
imass_spec	projects/semileptonic/semileptonic_smeared.cpp	/^int *imass_spec,*r_spec,*ith_spec;$/;"	v
imass_spec	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *imass_spec,*r_spec,*ith_spec;$/;"	v
imass_spec	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *imass_spec,*r_spec,*ith_spec;$/;"	v
import_gauge_conf	src/base/DDalphaAMG_bridge.cpp	/^  void import_gauge_conf(nissa::quad_su3 *conf)$/;"	f	namespace:DD
improved_invert	work_in_prog/eo_inverter/invert2.cpp	/^void improved_invert(spincolor *solution,spincolor *chi,double mu,double kappa)$/;"	f
in_buf_cur_per_rank	src/communicate/all_to_all.hpp	/^    int *out_buf_cur_per_rank,*in_buf_cur_per_rank;$/;"	m	struct:nissa::temp_build_t
in_buf_dest	src/communicate/all_to_all.hpp	/^    int nranks_fr,*list_ranks_fr,*in_buf_dest,*nper_rank_fr,*in_buf_off_per_rank;$/;"	m	struct:nissa::all_to_all_comm_t
in_buf_off_per_rank	src/communicate/all_to_all.hpp	/^    int nranks_fr,*list_ranks_fr,*in_buf_dest,*nper_rank_fr,*in_buf_off_per_rank;$/;"	m	struct:nissa::all_to_all_comm_t
in_buffer	tools/x_clusterize/x_clusterize.cpp	/^double *in_buffer,*out_buffer;$/;"	v
in_main	projects/cosmhol/real_scalar.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/cpn/cpn.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/eight_BK/smeared_BK_all_in_one.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/g/g.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/generate_confs/convert_input.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/generate_confs/generate.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/generate_confs/generate_quenched.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/ib/check_fftw.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/ib/checks.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/ib/disco.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/ib/disco2.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/ib/ib.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/ib/mel.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/ib/nucleons.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/ib/semileptonic.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/ib/test_prop.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/nucleons/nucleons_smeared.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/reno_const/RIMOM.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/semileptonic/gevp_3pts.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/semileptonic/test_proj.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	projects/static_potential/static_potential.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	tools/Gaussiansmear_test.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	tools/benchmarks/stag.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	tools/conf_measure/magn.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	tools/conf_measure/topo.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	tools/conf_transform/convert/eo_to_ildg.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	tools/conf_transform/convert/ildg_to_eo.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	tools/conf_transform/gaugefix/landau.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	tools/conf_transform/gaugefix/random.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	tools/read_ildg/read_double_vector.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	tools/spinors/ildg_to_txt.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	tools/x_clusterize/x_clusterize.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_main	work_in_prog/bgq/src/test_dirac.cpp	/^void in_main(int narg,char **arg)$/;"	f
in_source_t	projects/semileptonic/new_version/new_types.hpp	/^  in_source_t() {reset();}$/;"	f	struct:in_source_t
in_source_t	projects/semileptonic/new_version/new_types.hpp	/^  in_source_t(const in_source_t &in) {copy(in);}$/;"	f	struct:in_source_t
in_source_t	projects/semileptonic/new_version/new_types.hpp	/^struct in_source_t$/;"	s
include_HEADERS	build/projects/Makefile	/^include_HEADERS = ib\/conf.hpp ib\/contr.hpp ib\/meslep.hpp ib\/pars.hpp \\$/;"	m
include_HEADERS	build/src/Makefile	/^include_HEADERS = nissa.hpp base\/bench.hpp base\/close.hpp \\$/;"	m
include_clover	src/hmc/quark_pars.hpp	/^    inline bool include_clover(name_t name)$/;"	f	namespace:nissa::ferm_discretiz
include_static	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int include_static;$/;"	v
includedir	build/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	build/projects/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	build/src/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	build/tools/Makefile	/^includedir = ${prefix}\/include$/;"	m
incr	tools/benchmarks/stag.cpp	/^void incr(double &sx,double &s2x,double init,double fina)$/;"	f
increase_max_time_per_traj	projects/generate_confs/generate.cpp	/^void increase_max_time_per_traj(double init_traj_time)$/;"	f
increase_max_time_per_traj	projects/generate_confs/generate_quenched.cpp	/^void increase_max_time_per_traj(double init_traj_time)$/;"	f
ind_bar2pts_contr	projects/ib/contr.hpp	/^  inline int ind_bar2pts_contr(int icombo,int dir_exc,int t)$/;"	f	namespace:nissa
ind_copy_flav_hit_meas	src/operations/stag/spinpol.cpp	/^    int ind_copy_flav_hit_meas(int icopy,int iflav,int ihit,int imeas){return imeas+nmeas*(ihit+nhits*(iflav+nflavs*icopy));}$/;"	f	namespace:nissa::__anon12
ind_copy_flav_hit_phieta	src/operations/stag/spinpol.cpp	/^    int ind_copy_flav_hit_phieta(int icopy,int iflav,int ihit,int iPHIETA){return iPHIETA+nPHIETA*(ihit+nhits*(iflav+nflavs*icopy));}$/;"	f	namespace:nissa::__anon12
ind_copy_hit	src/operations/stag/spinpol.cpp	/^    int ind_copy_hit(int icopy,int ihit){return ihit+nhits*icopy;}$/;"	f	namespace:nissa::__anon12
ind_handcuffs_contr	projects/ib/contr.hpp	/^  inline int ind_handcuffs_contr(int ihand)$/;"	f	namespace:nissa
ind_mes2pts_contr	projects/ib/contr.hpp	/^  inline int ind_mes2pts_contr(int iquark_combo,int ihadr_contr,int t)$/;"	f	namespace:nissa
ind_nonloc_links_list	src/operations/su3_paths/arbitrary.hpp	/^    int *links_to_send_list,*ind_nonloc_links_list;$/;"	m	struct:nissa::paths_calculation_structure
index_from_ILDG_remapping	src/io/ILDG_File.cpp	/^  void index_from_ILDG_remapping(int &irank_lx,int &iloc_lx,int iloc_ILDG,void *pars)$/;"	f	namespace:nissa
index_from_Neo_to_lx	tools/conf_transform/convert/eo_to_ildg.cpp	/^void index_from_Neo_to_lx(int &rank_out,int &iel_out,int iel_in,void *pars)$/;"	f
index_from_lx_to_Neo	tools/conf_transform/convert/ildg_to_eo.cpp	/^void index_from_lx_to_Neo(int &rank_out,int &iel_out,int iel_in,void *pars)$/;"	f
index_make_loc_dir	src/operations/remap_vector.cpp	/^  void index_make_loc_dir(int &irank_locld,int &iloc_locld,int iloc_lx,void *pars)$/;"	f	namespace:nissa
index_shift	projects/ib/mel.cpp	/^void index_shift(int &irank_out,int &ivol_out,int ivol_in,void *pars)$/;"	f
index_to_ILDG_remapping	src/io/ILDG_File.cpp	/^  void index_to_ILDG_remapping(int &irank_ILDG,int &iloc_ILDG,int iloc_lx,void *pars)$/;"	f	namespace:nissa
index_to_poly_corr_remapping	src/operations/su3_paths/pline.cpp	/^  int index_to_poly_corr_remapping(int iloc_lx,int mu)$/;"	f	namespace:nissa
index_to_poly_corr_remapping	src/operations/su3_paths/pline.cpp	/^  void index_to_poly_corr_remapping(int &irank_poly,int &iloc_poly,int iloc_lx,void *pars)$/;"	f	namespace:nissa
index_to_topo_corr_remapping	src/operations/su3_paths/topological_charge.cpp	/^  int index_to_topo_corr_remapping(int iloc_lx)$/;"	f	namespace:nissa
index_to_topo_corr_remapping	src/operations/su3_paths/topological_charge.cpp	/^  void index_to_topo_corr_remapping(int &irank,int &iloc,int iloc_lx,void *pars)$/;"	f	namespace:nissa
index_transp	src/operations/su3_paths/all_rectangles.cpp	/^  void index_transp(int &irank_transp,int &iloc_transp,int iloc_lx,void *pars)$/;"	f	namespace:nissa
index_unmake_loc_dir	src/operations/remap_vector.cpp	/^  void index_unmake_loc_dir(int &irank_lx,int &iloc_lx,int iloc_locld,void *pars)$/;"	f	namespace:nissa
info_header	src/free_theory/free_theory_types.hpp	/^    bmpfile_info_header info_header;$/;"	m	struct:nissa::bmpfile
infodir	build/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	build/projects/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	build/src/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	build/tools/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
init	projects/cpn/cpn.cpp	/^void init(int seed,int &base_isweep)$/;"	f
init	projects/semileptonic/test_proj.cpp	/^void init(int narg,char **arg)$/;"	f
init	src/new_types/dsfmt.hpp	/^    void init(uint32_t ext_seed,uint64_t nextr=0)$/;"	f	class:nissa::dsfmt_t
init	src/new_types/metadynamics.cpp	/^  void meta_pars_t::init()$/;"	f	class:nissa::meta_pars_t
init	src/routines/ios.hpp	/^    void init()$/;"	f	class:nissa::lock_file_t
init	tools/conf_measure/magn.cpp	/^void init(const char *input_path)$/;"	f
init	work_in_prog/eo_inverter/invert2.cpp	/^void init(char *input_path,double *mu,double *kappa)$/;"	f
init	work_in_prog/eo_inverter/invert3.cpp	/^void init(char *input_path,quad_su3 **conf,spincolor **glb_source,double *kappa,double *mu,int *nitermax,double *residue)$/;"	f
init_MPI_thread	src/routines/mpi_routines.cpp	/^  void init_MPI_thread(int narg,char **arg)$/;"	f	namespace:nissa
init_Symanzik_sweeper	src/operations/su3_paths/gauge_sweeper.cpp	/^  void init_Symanzik_sweeper()$/;"	f	namespace:nissa
init_Wilson_sweeper	src/operations/su3_paths/gauge_sweeper.cpp	/^  void init_Wilson_sweeper()$/;"	f	namespace:nissa
init_as_propagator	projects/ib/prop.hpp	/^    void init_as_propagator(insertion_t _insertion,const std::vector<source_term_t>& _source_terms,int _tins,double _residue,double _kappa,double _mass,int _r,double _charge,double *_theta,bool _store)$/;"	f	struct:nissa::qprop_t
init_as_source	projects/ib/prop.hpp	/^    void init_as_source(rnd_t _noise_type,int _tins,int _r,bool _store)$/;"	f	struct:nissa::qprop_t
init_backfield	src/hmc/backfield.cpp	/^  void theory_pars_t::init_backfield()$/;"	f	class:nissa::theory_pars_t
init_base_gamma	src/new_types/dirac.cpp	/^  void init_base_gamma()$/;"	f	namespace:nissa
init_box_dir_par_geometry	src/operations/su3_paths/gauge_sweeper.cpp	/^  void gauge_sweeper_t::init_box_dir_par_geometry(int ext_gpar,int(*par_comp)(coords ivol_coord,int dir))$/;"	f	class:nissa::gauge_sweeper_t
init_calc	projects/x/progs/average_corr.cpp	/^void init_calc(int narg,char **arg)$/;"	f
init_calc	projects/x/progs/combine.cpp	/^void init_calc(int narg,char **arg)$/;"	f
init_calc	projects/x/progs/compute_self_energy_corrections.cpp	/^void init_calc(int narg,char **arg)$/;"	f
init_calc	projects/x/progs/compute_tadpole_corrections.cpp	/^void init_calc(int narg,char **arg)$/;"	f
init_calc	projects/x/progs/correct.cpp	/^void init_calc(int narg,char **arg)$/;"	f
init_calc	projects/x/progs/integrali_divergenti.cpp	/^void init_calc(int narg,char **arg)$/;"	f
init_calc	projects/x/tests/test_meson_self_energy_stochastic_correction.cpp	/^void init_calc(int narg,char **arg)$/;"	f
init_calc	projects/x/tests/test_meson_tree_level_correction.cpp	/^void init_calc(int narg,char **arg)$/;"	f
init_clusterize	tools/x_clusterize/x_clusterize.cpp	/^void init_clusterize(const char *path)$/;"	f
init_dirac	src/new_types/dirac.hpp	/^  inline void init_dirac(dirac_matr *out,int pos0,double rea0,double ima0,int pos1,double rea1,double ima1,int pos2,double rea2,double ima2,int pos3,double rea3,double ima3)$/;"	f	namespace:nissa
init_fft_filter	projects/ib/prop.cpp	/^  void init_fft_filter()$/;"	f	namespace:nissa
init_high_precision	src/new_types/high_prec.cpp	/^  void init_high_precision()$/;"	f	namespace:nissa
init_nissa	src/base/init.cpp	/^  void init_nissa(int narg,char **arg,const char compile_info[5][1024])$/;"	f	namespace:nissa
init_nissa	src/base/init.hpp	/^  inline void init_nissa(int narg,char **arg)$/;"	f	namespace:nissa
init_nissa_threaded	src/base/init.hpp	/^  inline void init_nissa_threaded(int narg,char **arg,void(*main_function)(int narg,char **arg))$/;"	f	namespace:nissa
init_params	src/base/DDalphaAMG_bridge.cpp	/^  DDalphaAMG_init init_params;$/;"	m	namespace:DD	file:
init_params	src/eigenvalues/eigenvalues_arpack.cpp	/^    void init_params(int *iparam,int niter_max)$/;"	f	namespace:nissa::arpack_data
init_prog	projects/x/progs/bmp_scramble.cpp	/^void init_prog(int narg,char **arg)$/;"	f
init_program	projects/x/progs/compute_corrections.cpp	/^void init_program(int narg,char **arg)$/;"	f
init_program	projects/x/progs/compute_tree_level_corrections.cpp	/^void init_program(int narg,char **arg)$/;"	f
init_program_to_analyze	projects/generate_confs/generate.cpp	/^void init_program_to_analyze()$/;"	f
init_program_to_run	projects/generate_confs/generate.cpp	/^void init_program_to_run(start_conf_cond_t start_conf_cond)$/;"	f
init_rnd_gen	projects/generate_confs/generate.cpp	/^void init_rnd_gen()$/;"	f
init_scanner	build/projects/generate_confs/tokenizer.cpp	/^void nissa::driver_t::init_scanner()$/;"	f	class:nissa::driver_t
init_scanner	build/projects/semileptonic/tokenize_corr.cpp	/^void two_pts_parser_driver::init_scanner()$/;"	f	class:two_pts_parser_driver
init_semileptonic	projects/semileptonic/new_version/new_semileptonic.cpp	/^void init_semileptonic(int narg,char **arg)$/;"	f
init_simulation	projects/generate_confs/generate.cpp	/^void init_simulation(char *path)$/;"	f
init_simulation	projects/generate_confs/generate_quenched.cpp	/^void init_simulation(char *path)$/;"	f
init_simulation	projects/ib/checks.cpp	/^void init_simulation()$/;"	f
init_simulation	projects/ib/disco.cpp	/^void init_simulation(int narg,char **arg)$/;"	f
init_simulation	projects/ib/ib.cpp	/^void init_simulation(int narg,char **arg)$/;"	f
init_simulation	projects/ib/mel.cpp	/^void init_simulation(char *path)$/;"	f
init_simulation	projects/ib/nucleons.cpp	/^void init_simulation(char *path)$/;"	f
init_simulation	projects/ib/semileptonic.cpp	/^void init_simulation(char *path)$/;"	f
init_spi	src/bgq/spi.cpp	/^  void init_spi()$/;"	f	namespace:nissa
init_staples	src/operations/su3_paths/gauge_sweeper.cpp	/^  void gauge_sweeper_t::init_staples(int ext_nlinks_per_staples_of_link,void(*ext_add_staples_per_link)(int *ilink_to_be_used,all_to_all_gathering_list_t &gat,int ivol,int mu),void (*ext_compute_staples)(su3 staples,su3 *links,int *ilinks,double C1))$/;"	f	class:nissa::gauge_sweeper_t
init_sweeper	src/operations/su3_paths/gauge_sweeper.cpp	/^  void init_sweeper(gauge_action_name_t gauge_action_name)$/;"	f	namespace:nissa
init_system_to_cold	projects/cpn/cpn.cpp	/^void init_system_to_cold()$/;"	f
init_test	projects/x/tests/test_Fourier_transform.cpp	/^void init_test(int narg,char **arg)$/;"	f
init_test	projects/x/tests/test_Wilson_gluon_Klein_Gordon_operator.cpp	/^void init_test(int narg,char **arg)$/;"	f
init_test	projects/x/tests/test_Wilson_gluon_propagator.cpp	/^void init_test(int narg,char **arg)$/;"	f
init_test	projects/x/tests/test_propagator_shift.cpp	/^void init_test(int narg,char **arg)$/;"	f
init_test	projects/x/tests/test_stochastic_qqg_vertex.cpp	/^void init_test(int narg,char **arg)$/;"	f
init_test	projects/x/tests/test_stochastic_source_null_mode.cpp	/^void init_test(int narg,char **arg)$/;"	f
init_test	projects/x/tests/test_tlSym_gluon_propagator.cpp	/^void init_test(int narg,char **arg)$/;"	f
init_test	projects/x/tests/test_tlSym_gluon_stochastic_propagator.cpp	/^void init_test(int narg,char **arg)$/;"	f
init_test	projects/x/tests/test_tlSym_gluon_stochastic_propagator_no_null_mode.cpp	/^void init_test(int narg,char **arg)$/;"	f
init_test	projects/x/tests/test_twisted_propagator.cpp	/^void init_test(int narg,char **arg)$/;"	f
init_test	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^void init_test(int narg,char **arg)$/;"	f
init_test	projects/x/tests/test_twisted_propagator_stochastic_correction.cpp	/^void init_test(int narg,char **arg)$/;"	f
init_test	test/nissa/src/common.cpp	/^void init_test()$/;"	f
init_time	projects/generate_confs/generate.cpp	/^double init_time,max_traj_time=0;$/;"	v
init_time	projects/semileptonic/test_proj.cpp	/^double kappa,mass,residue,init_time,wall_time;$/;"	v
inited	src/base/DDalphaAMG_bridge.cpp	/^  bool inited=false;$/;"	m	namespace:DD	file:
inited	src/communicate/all_to_all.hpp	/^    int inited;$/;"	m	struct:nissa::all_to_all_comm_t
initial_time	projects/generate_confs/generate_quenched.cpp	/^double initial_time;$/;"	v
initialize	src/base/DDalphaAMG_bridge.cpp	/^  void initialize(double kappa,double cSW,double mu)$/;"	f	namespace:DD
initialize_Bk	projects/eight_BK/smeared_BK_all_in_one.cpp	/^void initialize_Bk(int narg,char **arg)$/;"	f
initialize_Zcomputation	projects/reno_const/RIMOM.cpp	/^void initialize_Zcomputation(char *input_path)$/;"	f
initialize_eo_edge_receivers_of_kind	src/geometry/geometry_eo.cpp	/^  void initialize_eo_edge_receivers_of_kind(MPI_Datatype *MPI_EDGE_RECE,MPI_Datatype *base)$/;"	f	namespace:nissa
initialize_eo_edge_senders_of_kind	src/geometry/geometry_eo.cpp	/^  void initialize_eo_edge_senders_of_kind(MPI_Datatype *MPI_EO_EDGES_SEND,MPI_Datatype *base)$/;"	f	namespace:nissa
initialize_main_vect	src/base/vectors.cpp	/^  void initialize_main_vect()$/;"	f	namespace:nissa
initialize_nucleons	projects/nucleons/nucleons_smeared.cpp	/^void initialize_nucleons(char *input_path)$/;"	f
initialize_semileptonic	projects/g/g.cpp	/^void initialize_semileptonic(char *input_path)$/;"	f
initialize_semileptonic	projects/semileptonic/gevp.cpp	/^void initialize_semileptonic(char *input_path)$/;"	f
initialize_semileptonic	projects/semileptonic/gevp_3pts.cpp	/^void initialize_semileptonic(char *input_path)$/;"	f
initialize_semileptonic	projects/semileptonic/new_version/test.cpp	/^void initialize_semileptonic(char *input_path)$/;"	f
initialize_semileptonic	projects/semileptonic/semileptonic_smeared.cpp	/^void initialize_semileptonic(char *input_path)$/;"	f
initialize_semileptonic	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^void initialize_semileptonic(char *input_path)$/;"	f
initialize_semileptonic	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void initialize_semileptonic(char *input_path)$/;"	f
initialized	src/communicate/communicate.hpp	/^    bool initialized;$/;"	m	struct:nissa::comm_t
inner_conf_valid	projects/ib/conf.hpp	/^  EXTERN_CONF int inner_conf_valid;$/;"	m	namespace:nissa
input_global	tools/common_tools.cpp	/^FILE *input_global;$/;"	v
input_global_stack	src/io/input.hpp	/^  EXTERN_INPUT std::vector<FILE*> input_global_stack;$/;"	m	namespace:nissa
ins_from_tag	projects/ib/pars.hpp	/^  inline insertion_t ins_from_tag(const char *tag)$/;"	f	namespace:nissa
ins_list	projects/ib/pars.hpp	/^  const insertion_t ins_list[nins_kind]={ PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING, PHASING};$/;"	m	namespace:nissa
ins_map_t	src/operations/stag/qed_corr.cpp	/^      ins_map_t(){};$/;"	f	struct:nissa::__anon13::ins_map_t
ins_map_t	src/operations/stag/qed_corr.cpp	/^      ins_map_t(int sou,int op) : sou(sou),op(op) {}$/;"	f	struct:nissa::__anon13::ins_map_t
ins_map_t	src/operations/stag/qed_corr.cpp	/^    struct ins_map_t$/;"	s	namespace:nissa::__anon13	file:
ins_name	projects/ib/mel.cpp	/^const char ins_name[nins_kind][20]={"ORIGINAL","SCALAR","PSEUDO","PHOTON", "TADPOLE"};\/\/, "VECTOR"};$/;"	v
ins_name	projects/ib/pars.hpp	/^  const char ins_name[nins_kind][20]=   {"PROP","SCALAR","PSEUDO","PHOTON","PHOTON_ETA","PHOTON_PHI","TADPOLE","CVEC","CVEC0","CVEC1","CVEC2","CVEC3","PHOTON0","PHOTON1","PHOTON2","PHOTON3","SMEARING","PHASING"};$/;"	m	namespace:nissa
ins_t	src/operations/stag/qed_corr.cpp	/^    enum ins_t{S,T,F,V};$/;"	g	namespace:nissa::__anon13	file:
ins_tag	projects/ib/pars.hpp	/^  const char ins_tag[nins_kind][10]=    {"-"   ,"S"     ,"P"     ,"F"     ,"A"         ,"C"         ,"T"      ,"V"   ,"V0"   ,"V1"   ,"V2"   ,"V3"   ,"F0"     ,"F1"     ,"F2"     ,"F3"     ,"SM"     ,"PHA"    };$/;"	m	namespace:nissa
insert_conserved_current	projects/ib/prop.cpp	/^  void insert_conserved_current(spincolor *out,quad_su3 *conf,spincolor *ori,int t,int r,bool *dirs)$/;"	f	namespace:nissa
insert_conserved_current_handle	src/operations/covariant_derivative.cpp	/^  void insert_conserved_current_handle(complex out,spin1field *aux,int ivol,int mu,void *pars){out[RE]=((bool*)pars)[mu];out[IM]=0;}$/;"	f	namespace:nissa
insert_conserved_current_handle	src/operations/stag/qed_corr.cpp	/^    void insert_conserved_current_handle(complex out,spin1field **aux,int par,int ieo,int mu,void *pars){out[RE]=((int*)pars)[mu];out[IM]=0;}$/;"	f	namespace:nissa::stag
insert_external_loc_source	projects/ib/mel.cpp	/^void insert_external_loc_source(PROP_TYPE *out,spin1field *curr,PROP_TYPE *in,int t)$/;"	f
insert_external_loc_source	projects/ib/mel.cpp	/^void insert_external_loc_source(PROP_TYPE *out,spin1field *curr,bool *dirs,PROP_TYPE *in,int t)$/;"	f
insert_external_loc_source	projects/ib/prop.cpp	/^  void insert_external_loc_source(spincolor *out,spin1field *curr,spincolor *in,int t,bool* dirs)$/;"	f	namespace:nissa
insert_external_source	projects/ib/mel.cpp	/^void insert_external_source(PROP_TYPE *out,spin1field *curr,PROP_TYPE *ori,int t,int r,int loc)$/;"	f
insert_external_source	projects/ib/prop.cpp	/^  void insert_external_source(spincolor *out,quad_su3 *conf,spin1field *curr,spincolor *ori,int t,int r,bool *dirs,int loc)$/;"	f	namespace:nissa
insert_external_source_handle	src/operations/covariant_derivative.cpp	/^  void insert_external_source_handle(complex out,spin1field *aux,int ivol,int mu,void *pars)$/;"	f	namespace:nissa
insert_external_source_handle	src/operations/stag/stag.cpp	/^    void insert_external_source_handle(complex out,spin1field **aux,int par,int ieo,int mu,void *pars)$/;"	f	namespace:nissa::stag
insert_photon_on_the_source	projects/ib/mel.cpp	/^void insert_photon_on_the_source(spinspin *prop,bool *dirs,tm_quark_info le,int twall)$/;"	f
insert_photon_on_the_source	projects/ib/mel.cpp	/^void insert_photon_on_the_source(spinspin *prop,tm_quark_info &le,int twall)$/;"	f
insert_tadpole	projects/ib/prop.cpp	/^  void insert_tadpole(spincolor *out,quad_su3 *conf,spincolor *ori,int t,int r)$/;"	f	namespace:nissa
insert_tadpole_handle	src/operations/covariant_derivative.cpp	/^  void insert_tadpole_handle(complex out,spin1field *aux,int ivol,int mu,void *pars){out[RE]=((double*)pars)[mu];out[IM]=0;}$/;"	f	namespace:nissa
insert_tadpole_handle	src/operations/stag/qed_corr.cpp	/^    void insert_tadpole_handle(complex out,spin1field **aux,int par,int ieo,int mu,void *pars){out[RE]=((double*)pars)[mu];out[IM]=0;}$/;"	f	namespace:nissa::stag
insert_time_conserved_vector_current_handle	src/operations/stag/qed_corr.cpp	/^    void insert_time_conserved_vector_current_handle(complex out,spin1field **aux,int par,int ieo,int mu,void *pars){out[RE]=(mu==0);out[IM]=0;}$/;"	f	namespace:nissa::stag
insert_vector_vertex	src/operations/stag/stag.cpp	/^    void insert_vector_vertex(color **out,quad_su3 **conf,theory_pars_t *theory_pars,int iflav,spin1field **curr,color **in,complex fact_fw,complex fact_bw,void(*get_curr)(complex out,spin1field **curr,int par,int ieo,int mu,void *pars),int t,void *pars)$/;"	f	namespace:nissa::stag
insertion	projects/ib/prop.hpp	/^    insertion_t insertion;$/;"	m	struct:nissa::qprop_t
insertion_map	projects/ib/mel.cpp	/^const insertion_t insertion_map[nqprop_kind]={ORIGINAL, SCALAR, PSEUDO, TADPOLE,  PHOTON,       PHOTON};\/\/,        VECTOR};$/;"	v
insertion_t	projects/ib/mel.cpp	/^enum insertion_t{                    ORIGINAL,  SCALAR,  PSEUDO,  PHOTON,   TADPOLE};\/\/,  VECTOR};$/;"	g	file:
insertion_t	projects/ib/pars.hpp	/^  enum insertion_t{                       PROP , SCALAR , PSEUDO , PHOTON , PHOTON_ETA , PHOTON_PHI , TADPOLE , CVEC , CVEC0 , CVEC1 , CVEC2 , CVEC3 , PHOTON0 , PHOTON1 , PHOTON2 , PHOTON3 , SMEARING , PHASING };$/;"	g	namespace:nissa
install_sh	build/Makefile	/^install_sh = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/install-sh$/;"	m
install_sh	build/projects/Makefile	/^install_sh = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/install-sh$/;"	m
install_sh	build/src/Makefile	/^install_sh = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/install-sh$/;"	m
install_sh	build/tools/Makefile	/^install_sh = ${SHELL} \/marconi\/home\/userexternal\/mcardina\/phd\/nissa\/config\/install-sh$/;"	m
install_sh_DATA	build/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	build/projects/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	build/src/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	build/tools/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	build/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	build/projects/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	build/src/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	build/tools/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	build/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	build/projects/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	build/src/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	build/tools/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
int2	projects/reno_const/RIMOM.cpp	/^typedef int int2[2];$/;"	t	file:
int_list	build/projects/generate_confs/parser.cpp	/^    std::vector<int> *int_list;$/;"	m	union:YYSTYPE	file:
int_list	build/projects/generate_confs/parser.hpp	/^    std::vector<int> *int_list;$/;"	m	union:YYSTYPE
int_numb	build/projects/generate_confs/parser.cpp	/^    int int_numb;$/;"	m	union:YYSTYPE	file:
int_numb	build/projects/generate_confs/parser.hpp	/^    int int_numb;$/;"	m	union:YYSTYPE
int_pair	build/projects/generate_confs/parser.cpp	/^    std::pair<int,int> *int_pair;$/;"	m	union:YYSTYPE	file:
int_pair	build/projects/generate_confs/parser.hpp	/^    std::pair<int,int> *int_pair;$/;"	m	union:YYSTYPE
int_pair_list	build/projects/generate_confs/parser.cpp	/^    std::vector<std::pair<int,int> > *int_pair_list;$/;"	m	union:YYSTYPE	file:
int_pair_list	build/projects/generate_confs/parser.hpp	/^    std::vector<std::pair<int,int> > *int_pair_list;$/;"	m	union:YYSTYPE
inter_fr_in_pos	src/new_types/two_stage_computation.hpp	/^    int *inter_fr_in_pos; \/\/offset for intermediate result$/;"	m	struct:nissa::two_stage_computation_pos_t
inter_fr_recv_pos	src/new_types/two_stage_computation.hpp	/^    int *inter_fr_recv_pos; \/\/offset for intermediate from nissa_recv_buf$/;"	m	struct:nissa::two_stage_computation_pos_t
internal_crash	src/base/debug.cpp	/^  void internal_crash(int line,const char *file,const char *templ,...)$/;"	f	namespace:nissa
internal_crash_printing_error	src/base/debug.cpp	/^  void internal_crash_printing_error(int line,const char *file,int err_code,const char *templ,...)$/;"	f	namespace:nissa
internal_decript_MPI_error	src/base/debug.cpp	/^  void internal_decript_MPI_error(int line,const char *file,int rc,const char *templ,...)$/;"	f	namespace:nissa
internal_eigenvalues	src/eigenvalues/eigenvalues_autarchic.cpp	/^  namespace internal_eigenvalues$/;"	n	namespace:nissa	file:
internal_eigenvalues	src/eigenvalues/eigenvalues_autarchic.hpp	/^  namespace internal_eigenvalues$/;"	n	namespace:nissa
internal_fermion_flower_t	src/operations/smearing/Wflow.hpp	/^    internal_fermion_flower_t(double dt,bool *ext_dirs,bool stag) : dt(dt)$/;"	f	struct:nissa::internal_fermion_flower_t
internal_fermion_flower_t	src/operations/smearing/Wflow.hpp	/^  struct internal_fermion_flower_t$/;"	s	namespace:nissa
internal_nissa_free	src/base/vectors.cpp	/^  void internal_nissa_free(char **arr,const char *file,int line)$/;"	f	namespace:nissa
internal_nissa_malloc	src/base/vectors.cpp	/^  void *internal_nissa_malloc(const char *tag,int64_t nel,int64_t size_per_el,const char *type,const char *file,int line)$/;"	f	namespace:nissa
internal_vector_copy	src/linalgs/linalgs.cpp	/^  template <class T1,class T2> void internal_vector_copy(T1 *a,T2 *b,int n)$/;"	f	namespace:nissa
interpolator	build/projects/semileptonic/parse_corr.cpp	/^  int interpolator;$/;"	m	union:YYSTYPE	file:
interpolator	build/projects/semileptonic/parse_corr.hpp	/^  int interpolator;$/;"	m	union:YYSTYPE
interv	projects/reno_const/RIMOM.cpp	/^typedef int2 interv[2];$/;"	t	file:
invCl	projects/ib/conf.hpp	/^  EXTERN_CONF inv_clover_term_t *invCl;$/;"	m	namespace:nissa
invCl	projects/reno_const/RIMOM.cpp	/^inv_clover_term_t *invCl;$/;"	v
inv_Dee	work_in_prog/eo_inverter/invert2.cpp	/^void inv_Dee(spincolor *out,spincolor *in,double mu,double kappa){inv_Dee_Doo(out,in,mu,kappa,0);}$/;"	f
inv_Dee_Doo	work_in_prog/eo_inverter/invert2.cpp	/^void inv_Dee_Doo(spincolor *out,spincolor *in,double mu,double kappa,int parity)$/;"	f
inv_Doo	work_in_prog/eo_inverter/invert2.cpp	/^void inv_Doo(spincolor *out,spincolor *in,double mu,double kappa){inv_Dee_Doo(out,in,mu,kappa,1);}$/;"	f
inv_K	work_in_prog/eo_inverter/invert2.cpp	/^void inv_K(spincolor *sol,spincolor *source,double mu,double kappa)$/;"	f
inv_WclovQ_cg	src/inverters/Wclov/cg_invert_WclovQ.cpp	/^  void inv_WclovQ_cg(spincolor *sol,spincolor *guess,quad_su3 *conf,double kappa,clover_term_t *Cl,int niter,double residue,spincolor *source)$/;"	f	namespace:nissa
inv_Wilson_gluon_Klein_Gordon_operator	projects/x/src/inverters/cg_Wilson_gluon_operator.cpp	/^void inv_Wilson_gluon_Klein_Gordon_operator(spin1field *sol,spin1field *guess,gluon_info gl,int niter,int rniter,double residue,spin1field *source)$/;"	f
inv_clover_term_t	src/new_types/su3.hpp	/^  typedef halfspincolor_halfspincolor inv_clover_term_t[2];$/;"	t	namespace:nissa
inv_evn_stD_cg	src/inverters/staggered/cg_invert_evn_stD.cpp	/^  void inv_evn_stD_cg(color *sol,color *guess,quad_su3 **conf,double m,int niter,double residue,color **source)$/;"	f	namespace:nissa
inv_evn_stD_cg	src/inverters/staggered/cg_invert_evn_stD.hpp	/^  inline void inv_evn_stD_cg(color *sol,quad_su3 **conf,double m,int niter,double residue,color **source)$/;"	f	namespace:nissa
inv_stD2ee_m2_cg	src/inverters/staggered/cg_invert_stD2ee_m2.cpp	/^  void inv_stD2ee_m2_cg(color *sol,color *guess,quad_su3 **eo_conf,double m2,int niter,double residue,color *source)$/;"	f	namespace:nissa
inv_stD2ee_m2_cgm_32_run_hm_up_to_comm_prec	src/inverters/staggered/cgm_32_invert_stD2ee_m2.cpp	/^  void inv_stD2ee_m2_cgm_32_run_hm_up_to_comm_prec(color **chi_e,quad_su3 **eo_conf,double *poles,int nterms,int niter_max,double residue,color *pf)$/;"	f	namespace:nissa
inv_stD2ee_m2_cgm_run_hm_up_to_comm_prec	src/inverters/staggered/cgm_invert_stD2ee_m2.cpp	/^  void inv_stD2ee_m2_cgm_run_hm_up_to_comm_prec(color **chi_e,quad_su3 **eo_conf,double *poles,int nterms,int niter_max,double residue,color *pf)$/;"	f	namespace:nissa
inv_stD2ee_m2_cgm_run_hm_up_to_comm_prec	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square.cpp	/^  void inv_stD2ee_m2_cgm_run_hm_up_to_comm_prec(color **chi_e,quad_su3 **eo_conf,double *poles,int nterms,int niter_max,double residue,color *pf)$/;"	f	namespace:nissa
inv_stD_cg	src/inverters/staggered/cg_invert_stD.cpp	/^  void inv_stD_cg(color **sol,color *guess,quad_su3 **conf,double m,int niter,double residue,color **source)$/;"	f	namespace:nissa
inv_stD_cg	src/inverters/staggered/cg_invert_stD.hpp	/^  inline void inv_stD_cg(color **sol,quad_su3 **conf,double m,int niter,double residue,color **source)$/;"	f	namespace:nissa
inv_time	projects/g/g.cpp	/^double tot_prog_time=0,inv_time=0;$/;"	v
inv_time	projects/ib/mel.cpp	/^double inv_time=0,hadr_contr_time=0,lept_contr_time=0,print_time=0;$/;"	v
inv_time	projects/reno_const/RIMOM.cpp	/^double tot_prog_time=0,inv_time=0,contr_time=0,fix_time=0;$/;"	v
inv_time	projects/semileptonic/gevp.cpp	/^double wall_time,conf_smear_time=0,tot_prog_time=0,inv_time=0,smear_time=0,corr_time=0;$/;"	v
inv_time	projects/semileptonic/gevp_3pts.cpp	/^double wall_time,conf_smear_time=0,tot_prog_time=0,inv_time=0,smear_time=0,corr_time=0;$/;"	v
inv_time	projects/semileptonic/semileptonic_smeared.cpp	/^double inv_time=0,conf_smear_time=0;$/;"	v
inv_time	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^double tot_time=0,inv_time=0,contr_time=0;$/;"	v
inv_time	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double tot_time=0,inv_time=0;$/;"	v
inv_tmDQ_cgm	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	/^  void inv_tmDQ_cgm(spincolor **sol,quad_su3 *conf,double kappa,double *m,int nmass,int niter_max,double *req_res,spincolor *source)$/;"	f	namespace:nissa
inv_tmDQ_cgm_left	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	/^  void inv_tmDQ_cgm_left(spincolor **sol,quad_su3 *conf,double kappa,double *m,int nmass,int niter_max,double *req_res,spincolor *source)$/;"	f	namespace:nissa
inv_tmD_cg_eoprec	src/inverters/twisted_mass/cg_invert_tmD_eoprec.cpp	/^  void inv_tmD_cg_eoprec(spincolor *solution_lx,spincolor *guess_Koo,quad_su3 *conf_lx,double kappa,double mass,int nitermax,double residue,spincolor *source_lx)$/;"	f	namespace:nissa
inv_tmD_cg_eoprec_almost_reco_sol	src/inverters/twisted_mass/cg_invert_tmD_eoprec.cpp	/^  void inv_tmD_cg_eoprec_almost_reco_sol(spincolor *varphi,quad_su3 **conf_eos,spincolor *sol_odd,spincolor *source_evn)$/;"	f	namespace:nissa
inv_tmD_cg_eoprec_eos	src/free_theory/cg_eoprec_twisted_free_operator.cpp	/^  void inv_tmD_cg_eoprec_eos(spin *solution_lx,spin *guess_Koo,tm_quark_info qu,int nitermax,double residue,spin *source_lx)$/;"	f	namespace:nissa
inv_tmD_cg_eoprec_prepare_source	src/inverters/twisted_mass/cg_invert_tmD_eoprec.cpp	/^  void inv_tmD_cg_eoprec_prepare_source(spincolor *varphi,quad_su3 **conf_eos,spincolor *eq8a,spincolor *source_odd)$/;"	f	namespace:nissa
inv_tmDee_or_oo_eos	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.cpp	/^  void inv_tmDee_or_oo_eos(vir_spincolor *out,double kappa,double mass,vir_spincolor *in)$/;"	f	namespace:nissa
inv_tmDee_or_oo_eos	src/free_theory/twisted_free_Dirac_eoprec_operator.cpp	/^  void inv_tmDee_or_oo_eos(spin *out,tm_quark_info qu,spin *in)$/;"	f	namespace:nissa
inv_tmDkern_eoprec_square_eos	src/free_theory/cg_eoprec_twisted_free_operator.cpp	/^  void inv_tmDkern_eoprec_square_eos(spin *sol,spin *guess,tm_quark_info qu,int nitermax,double residue,spin *source)$/;"	f	namespace:nissa
inv_tmDkern_eoprec_square_eos_cg	src/inverters/twisted_mass/cg_invert_tmD_eoprec.cpp	/^  void inv_tmDkern_eoprec_square_eos_cg(spincolor *sol,spincolor *guess,quad_su3 **conf,double kappa,double mass,int nitermax,double residue,spincolor *source)$/;"	f	namespace:nissa
inv_tmDkern_eoprec_square_eos_cg_64	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	/^  void inv_tmDkern_eoprec_square_eos_cg_64(spincolor *sol,spincolor *guess,quad_su3 **eo_conf,double kappa,double mu,int niter,double residue,spincolor *source)$/;"	f	namespace:nissa
inv_tmQ2_RL_cg	src/inverters/twisted_mass/cg_invert_tmQ2.cpp	/^  void inv_tmQ2_RL_cg(spincolor *sol,spincolor *guess,quad_su3 *conf,double kappa,int RL,double m,int niter,double residue,spincolor *source)$/;"	f	namespace:nissa
inv_tmQ2_RL_cg_bgq	src/inverters/twisted_mass/cg_invert_tmQ2_bgq.cpp	/^  void inv_tmQ2_RL_cg_bgq(vir_spincolor *sol,vir_spincolor *guess,vir_oct_su3 *conf,double kappa,int RL,double m,int niter,double residue,vir_spincolor *source)$/;"	f	namespace:nissa
inv_tmQ2_RL_cgm	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	/^  void inv_tmQ2_RL_cgm(spincolor **sol,quad_su3 *conf,double kappa,int RL,double *m,int nmass,int niter_max,double *req_res,spincolor *source)$/;"	f	namespace:nissa
inv_tmQ2_cg	src/inverters/twisted_mass/cg_invert_tmQ2_common.cpp	/^  void inv_tmQ2_cg(spincolor *sol,spincolor *guess,quad_su3 *conf,double kappa,double m,int niter,double residue,spincolor *source)$/;"	f	namespace:nissa
inv_tmQ2_cg_128	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	/^  void inv_tmQ2_cg_128(spincolor *sol,spincolor *guess,quad_su3 *conf,double kappa,double mass,int niter,double external_solver_residue,spincolor *external_source)$/;"	f	namespace:nissa
inv_tmQ2_cg_128_bgq	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	/^  void inv_tmQ2_cg_128_bgq(vir_spincolor *sol,vir_spincolor *guess,vir_oct_su3 *conf,double kappa,double mass,int niter,double external_solver_residue,vir_spincolor *external_source)$/;"	f	namespace:nissa
inv_tmQ2_cg_left	src/inverters/twisted_mass/cg_invert_tmQ2_common.cpp	/^  void inv_tmQ2_cg_left(spincolor *sol,spincolor *guess,quad_su3 *conf,double kappa,double m,int niter,double residue,spincolor *source)$/;"	f	namespace:nissa
inv_tmQ2_cgm	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	/^  void inv_tmQ2_cgm(spincolor **sol,quad_su3 *conf,double kappa,double *m,int nmass,int niter_max,double *req_res,spincolor *source)$/;"	f	namespace:nissa
inv_tmQ2_left_cgm	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	/^  void inv_tmQ2_left_cgm(spincolor **sol,quad_su3 *conf,double kappa,double *m,int nmass,int niter_max,double *req_res,spincolor *source)$/;"	f	namespace:nissa
inv_tmQ2_m2_RL_cg_128	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	/^  void inv_tmQ2_m2_RL_cg_128(spincolor *sol,spincolor *guess,quad_su3 *conf,double kappa,int RL,double m2,int niter,double external_solver_residue,spincolor *external_source)$/;"	f	namespace:nissa
inv_tmQ2_m2_RL_cg_128_bgq	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	/^  void inv_tmQ2_m2_RL_cg_128_bgq(vir_spincolor *sol,vir_spincolor *guess,vir_oct_su3 *conf,double kappa,int RL,double m2,int niter,double external_solver_residue,vir_spincolor *external_source)$/;"	f	namespace:nissa
inv_tmclovDQ_cgm	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	/^  void inv_tmclovDQ_cgm(spincolor **sol,quad_su3 *conf,double kappa,clover_term_t *Cl,double *m,int nmass,int niter_max,double *req_res,spincolor *source)$/;"	f	namespace:nissa
inv_tmclovD_cg_eoprec	src/inverters/twisted_clover/cg_invert_tmclovD_eoprec.cpp	/^  void inv_tmclovD_cg_eoprec(spincolor *solution_lx,spincolor *guess_Koo,quad_su3 *conf_lx,double kappa,clover_term_t *Cl_lx,inv_clover_term_t *ext_invCl_lx,double cSW,double mass,int nitermax,double residue,spincolor *source_lx)$/;"	f	namespace:nissa
inv_tmclovDee_or_oo_eos	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_bgq.cpp	/^  void inv_tmclovDee_or_oo_eos(vir_spincolor *out,vir_inv_clover_term_t *invCl,bool dag,vir_spincolor *in)$/;"	f	namespace:nissa
inv_tmclovDkern_eoprec_square_eos_cg	src/inverters/twisted_clover/cg_invert_tmclovD_eoprec.cpp	/^  void inv_tmclovDkern_eoprec_square_eos_cg(spincolor *sol,spincolor *guess,quad_su3 **conf,double kappa,clover_term_t *Cl_odd,inv_clover_term_t *invCl_evn,double mass,int nitermax,double residue,spincolor *source)$/;"	f	namespace:nissa
inv_tmclovDkern_eoprec_square_eos_cg_64	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	/^  void inv_tmclovDkern_eoprec_square_eos_cg_64(spincolor *sol,spincolor *guess,quad_su3 **eo_conf,double kappa,clover_term_t *Cl_odd,inv_clover_term_t *invCl_evn,double mu,int niter,double residue,spincolor *source)$/;"	f	namespace:nissa
inv_tmclovQ2_cg	src/inverters/twisted_clover/cg_invert_tmclovQ2.cpp	/^  void inv_tmclovQ2_cg(spincolor *sol,spincolor *guess,quad_su3 *conf,double kappa,clover_term_t *Cl,double m,int niter,double residue,spincolor *source)$/;"	f	namespace:nissa
inv_tmclovQ2_cg_64	src/inverters/twisted_clover/cg_64_invert_tmclovQ2.hpp	/^  inline void inv_tmclovQ2_cg_64(spincolor *sol,spincolor *guess,quad_su3 *conf,double kappa,clover_term_t *Cl,double mu,int niter,double residue,spincolor *source)$/;"	f	namespace:nissa
inv_tmclovQ2_cgm	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	/^  void inv_tmclovQ2_cgm(spincolor **sol,quad_su3 *conf,double kappa,clover_term_t *Cl,double *m,int nmass,int niter_max,double *req_res,spincolor *source)$/;"	f	namespace:nissa
inv_tmclovQ2_m2_cg_128	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	/^  void inv_tmclovQ2_m2_cg_128(spincolor *sol,spincolor *guess,quad_su3 *conf,double kappa,clover_term_t *Cl,double m2,int niter,double external_solver_residue,spincolor *external_source)$/;"	f	namespace:nissa
inv_tmclovQ2_m2_cg_128_bgq	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	/^  void inv_tmclovQ2_m2_cg_128_bgq(vir_spincolor *sol,vir_spincolor *guess,vir_oct_su3 *conf,double kappa,vir_clover_term_t *Cl,double m2,int niter,double external_solver_residue,vir_spincolor *external_source)$/;"	f	namespace:nissa
inv_tmclovQ_cg	src/inverters/twisted_clover/cg_invert_tmclovQ.cpp	/^  void inv_tmclovQ_cg(spincolor *sol,spincolor *guess,quad_su3 *conf,double kappa,clover_term_t *Cl,double mu,int niter,double residue,spincolor *source)$/;"	f	namespace:nissa
invert_point_twisted_clover_term	src/operations/su3_paths/clover_term.cpp	/^  void invert_point_twisted_clover_term(inv_clover_term_t inv,double mass,double kappa,clover_term_t Cl)$/;"	f	namespace:nissa
iof	projects/x/src/routines/bmp.cpp	/^int iof(int x,int y,int ic,int width,int height,int bpp)$/;"	f
iparam	src/eigenvalues/eigenvalues_arpack.hpp	/^    EXTERN_ARPACK int iparam[11];$/;"	m	namespace:nissa::arpack_data
ipntr	src/eigenvalues/eigenvalues_arpack.hpp	/^    EXTERN_ARPACK int ipntr[14];$/;"	m	namespace:nissa::arpack_data
iprop	projects/semileptonic/new_version/new_types.cpp	/^int prop_group_t::iprop(int itheta,int imass,int r)$/;"	f	class:prop_group_t
ipropS0	projects/semileptonic/semileptonic_smeared.cpp	/^int ipropS0(int itheta,int imass,int mu_der)$/;"	f
ipropS1	projects/semileptonic/semileptonic_smeared.cpp	/^int ipropS1(int itheta,int imass)$/;"	f
iprop_of	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int iprop_of(int itheta,int imass){return itheta*nmass+imass;}$/;"	f
iprop_of	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int iprop_of(int itheta,int imass){return itheta*nmass+imass;}$/;"	f
iqprop	projects/ib/mel.cpp	/^int iqprop(int imass,int ip,int r)$/;"	f
is_allocated	projects/semileptonic/new_version/new_types.hpp	/^  int is_allocated() {return !(S==NULL);}$/;"	f	struct:prop_group_t
is_allocated	projects/semileptonic/new_version/new_types.hpp	/^  int is_allocated() {return !(U==NULL);}$/;"	f	struct:gauge_conf_t
is_allocated	projects/semileptonic/new_version/new_types.hpp	/^  int is_allocated() {return !(coeff==NULL);}$/;"	f	struct:gauss_smear_pars_t
is_allocated	projects/semileptonic/new_version/new_types.hpp	/^  int is_allocated() {return !(corr_list==NULL);}$/;"	f	struct:two_pts_corr_group_t
is_allocated	projects/semileptonic/new_version/new_types.hpp	/^  int is_allocated() {return !(eta==NULL);}$/;"	f	struct:in_source_t
is_allocated	projects/semileptonic/new_version/new_types.hpp	/^  int is_allocated() {return !(mass==residues && mass==NULL);}$/;"	f	struct:mass_res_group_t
is_allocated	projects/semileptonic/new_version/new_types.hpp	/^  int is_allocated() {return !(pair_list==NULL);}$/;"	f	struct:corr_command_t
is_allocated	projects/semileptonic/new_version/new_types.hpp	/^  int is_allocated() {return !(thppeta==NULL);}$/;"	f	struct:thppeta_group_t
is_closed	projects/semileptonic/test_bgq.cpp	/^coords is_closed;$/;"	v
is_last	src/io/ILDG_File.hpp	/^    bool is_last;$/;"	m	struct:nissa::ILDG_message
is_nonstandard	src/hmc/backfield.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::em_field_pars_t
is_nonstandard	src/hmc/gauge/topological_action.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::topotential_pars_t
is_nonstandard	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::conf_pars_t
is_nonstandard	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::hmc_evol_pars_t
is_nonstandard	src/hmc/quark_pars.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::quark_content_t
is_nonstandard	src/hmc/theory_pars.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::theory_pars_t
is_nonstandard	src/new_types/metadynamics.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::meta_pars_t
is_nonstandard	src/operations/gauge_fixing.hpp	/^    bool is_nonstandard()$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
is_nonstandard	src/operations/gaugeconf.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::gauge_obs_meas_pars_t
is_nonstandard	src/operations/smearing/APE.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::ape_pars_t
is_nonstandard	src/operations/smearing/HYP.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::hyp_pars_t
is_nonstandard	src/operations/smearing/Wflow.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::Wflow_pars_t
is_nonstandard	src/operations/smearing/cooling.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::cool_pars_t
is_nonstandard	src/operations/smearing/smooth.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::smooth_pars_t
is_nonstandard	src/operations/smearing/stout.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::stout_pars_t
is_nonstandard	src/operations/stag/magnetization.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::magnetization_meas_pars_t
is_nonstandard	src/operations/stag/mesons.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::meson_corr_meas_pars_t
is_nonstandard	src/operations/stag/nucleon.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::nucleon_corr_meas_pars_t
is_nonstandard	src/operations/stag/putpourri.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::fermionic_putpourri_meas_pars_t
is_nonstandard	src/operations/stag/qed_corr.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::qed_corr_meas_pars_t
is_nonstandard	src/operations/stag/rendens.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::quark_rendens_meas_pars_t
is_nonstandard	src/operations/stag/spinpol.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::spinpol_meas_pars_t
is_nonstandard	src/operations/stag/stag.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::base_fermionic_meas_t
is_nonstandard	src/operations/stag/zumba.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::chir_zumba_meas_pars_t
is_nonstandard	src/operations/su3_paths/all_rectangles.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::all_rects_meas_pars_t
is_nonstandard	src/operations/su3_paths/pline.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::poly_corr_meas_pars_t
is_nonstandard	src/operations/su3_paths/topological_charge.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::top_meas_pars_t
is_nonstandard	src/operations/su3_paths/watusso.hpp	/^    int is_nonstandard()$/;"	f	struct:nissa::watusso_meas_pars_t
is_photon_ins	projects/ib/pars.hpp	/^  inline int is_photon_ins(insertion_t ins)$/;"	f	namespace:nissa
is_source	projects/ib/prop.hpp	/^    bool is_source;$/;"	m	struct:nissa::qprop_t
is_stag	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int is_stag;$/;"	m	struct:nissa::pseudofermion_t
is_stag	src/hmc/quark_pars.hpp	/^    inline bool is_stag(name_t name)$/;"	f	namespace:nissa::ferm_discretiz
is_torus	tools/find_best_vir_partitioning/find.cpp	/^  bool is_torus(torus_grid_t &torus)$/;"	f	struct:assignement_t
is_torus	tools/find_best_vir_partitioning/find.cpp	/^  bool is_torus[5];$/;"	m	struct:torus_grid_t	file:
iterated_classical_GS	src/eigenvalues/eigenvalues_autarchic.cpp	/^    double iterated_classical_GS(complex *v,int vec_length,int nvec,complex **A,const int max_cgs_it)$/;"	f	namespace:nissa::internal_eigenvalues
ith_spec	projects/semileptonic/semileptonic_smeared.cpp	/^int *imass_spec,*r_spec,*ith_spec;$/;"	v
ith_spec	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *imass_spec,*r_spec,*ith_spec;$/;"	v
ith_spec	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *imass_spec,*r_spec,*ith_spec;$/;"	v
itheory	src/operations/stag/stag.hpp	/^    int itheory;$/;"	m	struct:nissa::base_fermionic_meas_t
ithetaS0_max	projects/semileptonic/semileptonic_smeared.cpp	/^int ithetaS0_min,ithetaS0_max;$/;"	v
ithetaS0_min	projects/semileptonic/semileptonic_smeared.cpp	/^int ithetaS0_min,ithetaS0_max;$/;"	v
itraj	projects/generate_confs/generate.cpp	/^int itraj;$/;"	v
iv	src/base/random.hpp	/^    int iv[RAN2_NTAB];$/;"	m	struct:nissa::rnd_gen
ivol_of_box_dir_par	src/operations/su3_paths/gauge_sweeper.hpp	/^    int *ivol_of_box_dir_par;$/;"	m	struct:nissa::gauge_sweeper_t
iy	src/base/random.hpp	/^    int iy;$/;"	m	struct:nissa::rnd_gen
j	projects/ib/disco.cpp	/^  enum field_t{J,j,xi,J_tot};$/;"	e	enum:curr::field_t	file:
jacobi_kappa	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^double jacobi_kappa,ape_alpha;$/;"	v
jacobi_kappa	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double jacobi_kappa,ape_alpha;$/;"	v
jacobi_niter_se	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *jacobi_niter_se,nsm_lev_se;$/;"	v
jacobi_niter_se	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *jacobi_niter_se,nsm_lev_se;$/;"	v
jacobi_niter_si	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *jacobi_niter_si,nsm_lev_si;$/;"	v
jacobi_niter_si	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *jacobi_niter_si,nsm_lev_si;$/;"	v
jacobi_niter_so	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *jacobi_niter_so,nsm_lev_so;$/;"	v
jacobi_niter_so	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *jacobi_niter_so,nsm_lev_so;$/;"	v
kappa	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double kappa;$/;"	v
kappa	projects/g/g.cpp	/^double kappa;$/;"	v
kappa	projects/ib/mel.cpp	/^double kappa;$/;"	v
kappa	projects/ib/prop.hpp	/^    double kappa;$/;"	m	struct:nissa::qprop_t
kappa	projects/nucleons/nucleons_smeared.cpp	/^double kappa;$/;"	v
kappa	projects/reno_const/RIMOM.cpp	/^double kappa,cSW;$/;"	v
kappa	projects/semileptonic/gevp.cpp	/^double mass,residue,kappa,gaussian_kappa;$/;"	v
kappa	projects/semileptonic/gevp_3pts.cpp	/^double theta_needed,mass,residue,kappa;$/;"	v
kappa	projects/semileptonic/new_version/new_semileptonic.cpp	/^double kappa,ape_alpha;$/;"	v
kappa	projects/semileptonic/new_version/new_types.hpp	/^  double kappa;$/;"	m	struct:gauge_conf_t
kappa	projects/semileptonic/new_version/new_types.hpp	/^  double kappa;$/;"	m	struct:gauss_smear_pars_t
kappa	projects/semileptonic/semileptonic_smeared.cpp	/^double kappa;$/;"	v
kappa	projects/semileptonic/test_bgq.cpp	/^double mu=0.03,kappa=0.137;$/;"	v
kappa	projects/semileptonic/test_proj.cpp	/^double kappa,mass,residue,init_time,wall_time;$/;"	v
kappa	src/free_theory/free_theory_types.hpp	/^    double kappa;$/;"	m	struct:nissa::tm_quark_info
kappa	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^    double kappa;$/;"	m	struct:nissa::pure_gauge_evol_pars_t
kappa	src/hmc/quark_pars.hpp	/^    double kappa;$/;"	m	struct:nissa::quark_content_t
kappa	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^double kappa;$/;"	v
kappa	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double kappa;$/;"	v
kappa_of_m0	src/free_theory/twisted_propagator.hpp	/^  inline double kappa_of_m0(double m0)$/;"	f	namespace:nissa
l1	src/operations/smearing/Wflow.hpp	/^    color *l1,*l2;$/;"	m	struct:nissa::fermion_adjoint_flower_t
l2	src/operations/smearing/Wflow.hpp	/^    color *l1,*l2;$/;"	m	struct:nissa::fermion_adjoint_flower_t
label_all_sites	src/geometry/geometry_lx.cpp	/^  void label_all_sites()$/;"	f	namespace:nissa
lambda	projects/cpn/cpn.cpp	/^quad_u1 *lambda,*lambda_old;$/;"	v
lambda_old	projects/cpn/cpn.cpp	/^quad_u1 *lambda,*lambda_old;$/;"	v
lambda_unitarize	projects/cpn/cpn.cpp	/^double lambda_unitarize(complex l)$/;"	f
last_column	build/projects/generate_confs/parser.cpp	/^  int last_column;$/;"	m	struct:YYLTYPE	file:
last_column	build/projects/generate_confs/parser.hpp	/^  int last_column;$/;"	m	struct:YYLTYPE
last_column	build/projects/semileptonic/parse_corr.cpp	/^  int last_column;$/;"	m	struct:YYLTYPE	file:
last_column	build/projects/semileptonic/parse_corr.hpp	/^  int last_column;$/;"	m	struct:YYLTYPE
last_line	build/projects/generate_confs/parser.cpp	/^  int last_line;$/;"	m	struct:YYLTYPE	file:
last_line	build/projects/generate_confs/parser.hpp	/^  int last_line;$/;"	m	struct:YYLTYPE
last_line	build/projects/semileptonic/parse_corr.cpp	/^  int last_line;$/;"	m	struct:YYLTYPE	file:
last_line	build/projects/semileptonic/parse_corr.hpp	/^  int last_line;$/;"	m	struct:YYLTYPE
last_vect	src/base/vectors.hpp	/^  EXTERN_VECTORS nissa_vect *last_vect;$/;"	m	namespace:nissa
last_vect_content_printf	src/base/vectors.cpp	/^  void last_vect_content_printf()$/;"	f	namespace:nissa
left	projects/ib/contr.hpp	/^    std::string left,right;$/;"	m	struct:nissa::handcuffs_map_t
legacy_read_Wflow_pars	projects/generate_confs/convert_input.cpp	/^void legacy_read_Wflow_pars(Wflow_pars_t &pars)$/;"	f
lep_contr_iq1	projects/ib/meslep.hpp	/^  EXTERN_MESLEP int *lep_contr_iq1;$/;"	m	namespace:nissa
lep_contr_iq2	projects/ib/meslep.hpp	/^  EXTERN_MESLEP int *lep_contr_iq2;$/;"	m	namespace:nissa
lep_corr_iq1	projects/ib/mel.cpp	/^int *lep_corr_iq1;$/;"	v
lep_corr_iq2	projects/ib/mel.cpp	/^int *lep_corr_iq2;$/;"	v
lep_energy	projects/ib/mel.cpp	/^double *lep_energy,*neu_energy;$/;"	v
lep_energy	projects/ib/meslep.hpp	/^  EXTERN_MESLEP double *lep_energy,*neu_energy;$/;"	m	namespace:nissa
lep_energy	projects/ib/test_prop.cpp	/^double lep_energy,neu_energy;$/;"	v
leps	projects/ib/mel.cpp	/^tm_quark_info *leps;$/;"	v
leps	projects/ib/meslep.hpp	/^  EXTERN_MESLEP tm_quark_info *leps;$/;"	m	namespace:nissa
lept_contr_time	projects/ib/mel.cpp	/^double inv_time=0,hadr_contr_time=0,lept_contr_time=0,print_time=0;$/;"	v
lepton_prop_time	projects/ib/mel.cpp	/^double source_time=0,photon_prop_time=0,lepton_prop_time=0;$/;"	v
levs	src/operations/smearing/recursive_Wflower.hpp	/^    std::vector<Wflow_lev_t> levs;$/;"	m	struct:nissa::recursive_Wflower_t
lfact	src/routines/math_routines.cpp	/^  double lfact(double n)$/;"	f	namespace:nissa
lib_LIBRARIES	build/src/Makefile	/^lib_LIBRARIES = $(top_builddir)\/lib\/libnissa.a$/;"	m
libdir	build/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	build/projects/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	build/src/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	build/tools/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	build/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	build/projects/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	build/src/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	build/tools/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
line	src/base/vectors.hpp	/^    int line;$/;"	m	struct:nissa::nissa_vect
line_comm	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Comm line_comm[NDIM];$/;"	m	namespace:nissa
line_coord_rank	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords plan_rank,line_rank,line_coord_rank;$/;"	m	namespace:nissa
line_rank	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords plan_rank,line_rank,line_coord_rank;$/;"	m	namespace:nissa
linear_system_solve	src/operations/remez/remez_algorithm.cpp	/^  void linear_system_solve(float_high_prec_t *A,float_high_prec_t *x,float_high_prec_t *b,int n)$/;"	f	namespace:nissa
link_for_movements	src/operations/su3_paths/arbitrary.hpp	/^    int *link_for_movements;$/;"	m	struct:nissa::paths_calculation_structure
link_id	src/operations/su3_paths/arbitrary.hpp	/^    int link_id;$/;"	m	struct:nissa::movement_link_id
links_to_send_list	src/operations/su3_paths/arbitrary.hpp	/^    int *links_to_send_list,*ind_nonloc_links_list;$/;"	m	struct:nissa::paths_calculation_structure
list	src/hmc/quark_pars.hpp	/^    const name_t list[nknown]={ROOT_STAG,ROOT_TM_CLOV};$/;"	m	namespace:nissa::ferm_discretiz
list_2pt_op1	projects/nucleons/nucleons_smeared.cpp	/^int list_2pt_op1[32]={5,0,5,0, 1,2,3,4, 6,7,8,9, 1,2,3,4, 6,7,8,9, 10,11,12, 13,14,15, 10,11,12, 13,14,15};$/;"	v
list_2pt_op2	projects/nucleons/nucleons_smeared.cpp	/^int list_2pt_op2[32]={0,5,5,0, 6,7,8,9, 1,2,3,4, 1,2,3,4, 6,7,8,9, 10,11,12, 13,14,15, 13,14,15, 10,11,12};$/;"	v
list_3pt_chromo_op	projects/nucleons/nucleons_smeared.cpp	/^int list_3pt_chromo_op[2]={0,5};$/;"	v
list_3pt_op	projects/nucleons/nucleons_smeared.cpp	/^int list_3pt_op[16]={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};$/;"	v
list_fact	tools/find_best_vir_partitioning/find.cpp	/^  std::vector<int> list_fact;$/;"	m	struct:valid_partition_lister_t	file:
list_ranks_fr	src/communicate/all_to_all.hpp	/^    int nranks_fr,*list_ranks_fr,*in_buf_dest,*nper_rank_fr,*in_buf_off_per_rank;$/;"	m	struct:nissa::all_to_all_comm_t
list_ranks_to	src/communicate/all_to_all.hpp	/^    int nranks_to,*list_ranks_to,*out_buf_source,*nper_rank_to,*out_buf_off_per_rank;$/;"	m	struct:nissa::all_to_all_comm_t
list_weak_ind_contr	projects/ib/mel.cpp	/^const int list_weak_ind_contr[nweak_ins]={0,0,0,1, 2,2,2,3,  4,4,4,5, 6,6,6,7, 8};$/;"	v
list_weak_ind_contr	projects/ib/meslep.hpp	/^  const int list_weak_ind_contr[nmeslep_weak_ins]={0,0,0,1, 2,2,2,3,  4,4,4,5, 6,6,6,7, 8};$/;"	m	namespace:nissa
list_weak_ind_namel	projects/ib/mel.cpp	/^const char list_weak_ind_namel[nweak_ind][3]={"VK","V0","AK","A0","AK","A0","VK","V0","V0"};$/;"	v
list_weak_ind_namel	projects/ib/meslep.hpp	/^  const char list_weak_ind_namel[nindep_meslep_weak][3]={"VK","V0","AK","A0","AK","A0","VK","V0","V0"};$/;"	m	namespace:nissa
list_weak_ind_nameq	projects/ib/mel.cpp	/^const char list_weak_ind_nameq[nweak_ind][3]={"VK","V0","AK","A0","VK","V0","AK","A0","P5"};$/;"	v
list_weak_ind_nameq	projects/ib/meslep.hpp	/^  const char list_weak_ind_nameq[nindep_meslep_weak][3]={"VK","V0","AK","A0","VK","V0","AK","A0","P5"};$/;"	m	namespace:nissa
list_weak_insl	projects/ib/mel.cpp	/^const int list_weak_insl[nweak_ins]=     {1,2,3,4, 6,7,8,9,  6,7,8,9, 1,2,3,4, 5};$/;"	v
list_weak_insl	projects/ib/meslep.hpp	/^  const int list_weak_insl[nmeslep_weak_ins]=     {1,2,3,4, 6,7,8,9,  6,7,8,9, 1,2,3,4, 5};$/;"	m	namespace:nissa
list_weak_insq	projects/ib/mel.cpp	/^const int list_weak_insq[nweak_ins]=     {1,2,3,4, 6,7,8,9,  1,2,3,4, 6,7,8,9, 5};$/;"	v
list_weak_insq	projects/ib/meslep.hpp	/^  const int list_weak_insq[nmeslep_weak_ins]=     {1,2,3,4, 6,7,8,9,  1,2,3,4, 6,7,8,9, 5};$/;"	m	namespace:nissa
little_endian	src/io/endianness.hpp	/^  EXTERN_ENDIANNESS int little_endian;$/;"	m	namespace:nissa
little_endian	tools/common_tools.cpp	/^int little_endian;$/;"	v
little_endian	tools/conf_transform/edit/ILDG_File_light.cpp	/^int little_endian;$/;"	v
load	projects/ib/disco.cpp	/^  void load(int nh)$/;"	f	namespace:hits
load	src/new_types/metadynamics.cpp	/^  void meta_pars_t::load(const char *path)$/;"	f	class:nissa::meta_pars_t
load_S0	projects/semileptonic/semileptonic_smeared.cpp	/^int load_S0,save_S0;$/;"	v
load_all_or_reset	projects/ib/disco.cpp	/^  void load_all_or_reset()$/;"	f	namespace:curr
load_all_or_reset	projects/ib/disco.cpp	/^  void load_all_or_reset(int nh)$/;"	f	namespace:EU1_EU2_EU4_EU6alt
load_base_source	projects/semileptonic/new_version/test.cpp	/^int load_base_source;$/;"	v
load_correction	projects/x/progs/correct.cpp	/^void load_correction(corr16 *out,const char *inf,int icorr,const char *suff)$/;"	f
load_data	tools/x_clusterize/x_clusterize.cpp	/^void load_data(const char *path)$/;"	f
load_demo_averaged_text_corr	projects/x/progs/correct.cpp	/^void load_demo_averaged_text_corr(double *out,char *path)$/;"	f
load_demo_ildg_corr	projects/x/progs/correct.cpp	/^void load_demo_ildg_corr(corr16 *out,char *path,bool average=false)$/;"	f
load_file	tools/err.cpp	/^void load_file(double *in,char *path,int nel_exp)$/;"	f
load_gauge_conf	projects/eight_BK/smeared_BK_all_in_one.cpp	/^void load_gauge_conf()$/;"	f
load_gauge_conf	projects/reno_const/RIMOM.cpp	/^void load_gauge_conf()$/;"	f
load_props	projects/semileptonic/new_version/new_semileptonic.cpp	/^  int load_props;$/;"	m	struct:propgroup_t	file:
load_reconstructing	projects/semileptonic/new_version/new_types.hpp	/^  int load_reconstructing;$/;"	m	struct:prop_group_command_t
load_save_S0_time	projects/semileptonic/semileptonic_smeared.cpp	/^double load_save_S0_time=0;$/;"	v
load_time	projects/g/g.cpp	/^double load_time=0,contr_time;$/;"	v
load_time	projects/reno_const/RIMOM.cpp	/^double fft_time=0,save_prop_time=0,load_time=0,filter_prop_time=0;$/;"	v
load_time	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double load_time=0,contr_time;$/;"	v
load_topodynamical_potential	src/hmc/gauge/topological_action.cpp	/^  void load_topodynamical_potential(topotential_pars_t &pars,bool mandatory)$/;"	f	namespace:nissa
loc_2pts	projects/eight_BK/smeared_BK_all_in_one.cpp	/^complex *contr_2pts,*loc_2pts;$/;"	v
loc_2pts	projects/reno_const/RIMOM.cpp	/^complex *contr_2pts,*loc_2pts;$/;"	v
loc_coord_of_loclx	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords *loc_coord_of_loclx;$/;"	m	namespace:nissa
loc_corr	projects/ib/mel.cpp	/^complex *glb_corr,*loc_corr;$/;"	v
loc_corr	projects/semileptonic/gevp.cpp	/^double *glb_corr,*loc_corr;$/;"	v
loc_corr	projects/semileptonic/gevp_3pts.cpp	/^double *loc_corr,*glb_corr;$/;"	v
loc_muon_curr	projects/ib/mel.cpp	/^int loc_muon_curr;$/;"	v
loc_pion_curr	projects/ib/mel.cpp	/^int loc_pion_curr;$/;"	v
loc_rnd_gen	src/base/random.cpp	/^  rnd_gen *loc_rnd_gen;$/;"	m	namespace:nissa	file:
loc_rnd_gen_inited	src/base/random.cpp	/^  bool loc_rnd_gen_inited;$/;"	m	namespace:nissa	file:
loc_size	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords glb_size,loc_size;$/;"	m	namespace:nissa
loc_source	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *loc_source,*sme_source,*seq_source,*C_loc_source,*C_sme_source,*S1;$/;"	v
loc_spat_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t loc_vol,loc_spat_vol,loc_volh;$/;"	m	namespace:nissa
loc_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t loc_vol,loc_spat_vol,loc_volh;$/;"	m	namespace:nissa
loc_vol2	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX double glb_vol2,loc_vol2;$/;"	m	namespace:nissa
loc_volh	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t loc_vol,loc_spat_vol,loc_volh;$/;"	m	namespace:nissa
local_gauge_transform	src/operations/gauge_fixing.cpp	/^  void local_gauge_transform(quad_su3 *conf,su3 g,int ivol)$/;"	f	namespace:nissa
local_or_conserved_vector_current_mel	projects/ib/contr.cpp	/^  void local_or_conserved_vector_current_mel(spin1field *si,dirac_matr &g,const std::string &prop_name_bw,const std::string &prop_name_fw,bool revert)$/;"	f	namespace:nissa
localedir	build/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	build/projects/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	build/src/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	build/tools/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	build/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	build/projects/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	build/src/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	build/tools/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
locd_perp_size_per_dir	src/operations/remap_vector.hpp	/^  EXTERN_REMAP int max_locd_perp_size_per_dir[NDIM],locd_perp_size_per_dir[NDIM];$/;"	m	namespace:nissa
locd_size_per_dir	src/operations/remap_vector.hpp	/^  EXTERN_REMAP int max_locd_size,locd_size_per_dir[NDIM];$/;"	m	namespace:nissa
loceo_neighdw	src/geometry/geometry_eo.hpp	/^  EXTERN_GEOMETRY_EO coords *loceo_neighdw[2];$/;"	m	namespace:nissa
loceo_neighup	src/geometry/geometry_eo.hpp	/^  EXTERN_GEOMETRY_EO coords *loceo_neighup[2];$/;"	m	namespace:nissa
loceo_of_Lebeo	src/geometry/geometry_Leb.hpp	/^  EXTERN_GEOMETRY_LEB int *loceo_of_Lebeo[2];$/;"	m	namespace:nissa
loceo_of_loclx	src/geometry/geometry_eo.hpp	/^  EXTERN_GEOMETRY_EO int *loceo_of_loclx;$/;"	m	namespace:nissa
loceo_of_vireo	src/geometry/geometry_vir.hpp	/^  EXTERN_GEOMETRY_VIR int *vireo_of_loceo[2],*loceo_of_vireo[2];$/;"	m	namespace:nissa
lock_fd	projects/ib/conf.hpp	/^  EXTERN_CONF int lock_fd;$/;"	m	namespace:nissa
lock_file	projects/ib/pars.hpp	/^  EXTERN_PARS lock_file_t<uint64_t> lock_file;$/;"	m	namespace:nissa
lock_file_t	src/routines/ios.hpp	/^  class lock_file_t$/;"	c	namespace:nissa
loclx_coord_of_Leblx	src/geometry/geometry_Leb.cpp	/^  void loclx_coord_of_Leblx(coords c,const Leb_factors_t &factors,int Leblx)$/;"	f	namespace:nissa
loclx_neigh	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords *loclx_neigh[2];$/;"	m	namespace:nissa
loclx_neighdw	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords *loclx_neighdw,*loclx_neighup;$/;"	m	namespace:nissa
loclx_neighup	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords *loclx_neighdw,*loclx_neighup;$/;"	m	namespace:nissa
loclx_of_Leblx	src/geometry/geometry_Leb.hpp	/^  EXTERN_GEOMETRY_LEB int *loclx_of_Leblx;$/;"	m	namespace:nissa
loclx_of_bgqlx	work_in_prog/bgq/src/new_vars_and_types.cpp	/^EXTERN int *bgqlx_of_loclx,*loclx_of_bgqlx;$/;"	v
loclx_of_bordlx	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int *loclx_of_bordlx;$/;"	m	namespace:nissa
loclx_of_bulklx	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int *loclx_of_bulklx;$/;"	m	namespace:nissa
loclx_of_bw_surflx	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int *loclx_of_bw_surflx;$/;"	m	namespace:nissa
loclx_of_coord	src/geometry/geometry_lx.cpp	/^  int loclx_of_coord(coords x)$/;"	f	namespace:nissa
loclx_of_coord_list	src/geometry/geometry_lx.hpp	/^  inline int loclx_of_coord_list(int x0,int x1,int x2,int x3)$/;"	f	namespace:nissa
loclx_of_demo	projects/x/progs/correct.cpp	/^int *demo_of_loclx,*loclx_of_demo,*npoints_dist2;$/;"	v
loclx_of_fw_surflx	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int *loclx_of_fw_surflx;$/;"	m	namespace:nissa
loclx_of_loceo	src/geometry/geometry_eo.hpp	/^  EXTERN_GEOMETRY_EO int *loclx_of_loceo[2];$/;"	m	namespace:nissa
loclx_of_non_bw_surflx	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int *loclx_of_non_bw_surflx;$/;"	m	namespace:nissa
loclx_of_non_fw_surflx	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int *loclx_of_non_fw_surflx;$/;"	m	namespace:nissa
loclx_of_surflx	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int *loclx_of_surflx;$/;"	m	namespace:nissa
loclx_of_vireo	src/geometry/geometry_vir.hpp	/^  EXTERN_GEOMETRY_VIR int *loclx_of_vireo[2],*vireo_of_loclx;$/;"	m	namespace:nissa
loclx_of_virlx	src/geometry/geometry_vir.hpp	/^  EXTERN_GEOMETRY_VIR int *virlx_of_loclx,*loclx_of_virlx;$/;"	m	namespace:nissa
loclx_parity	src/geometry/geometry_eo.hpp	/^  EXTERN_GEOMETRY_EO int *loclx_parity;$/;"	m	namespace:nissa
log2N	src/routines/math_routines.cpp	/^  int log2N(int N)$/;"	f	namespace:nissa
loop_source	projects/ib/prop.hpp	/^  EXTERN_PROP spincolor *loop_source;$/;"	m	namespace:nissa
luppoli_meas	build/projects/generate_confs/parser.cpp	/^    nissa::poly_corr_meas_pars_t *luppoli_meas;$/;"	m	union:YYSTYPE	file:
luppoli_meas	build/projects/generate_confs/parser.hpp	/^    nissa::poly_corr_meas_pars_t *luppoli_meas;$/;"	m	union:YYSTYPE
luppoli_meas	projects/generate_confs/driver.hpp	/^    std::vector<poly_corr_meas_pars_t> luppoli_meas;$/;"	m	class:nissa::driver_t
lx_ON_t_comm	projects/cpn/cpn.cpp	/^comm_t lx_ON_t_comm,eo_ON_t_comm;$/;"	v
lx_clover_term_t_remap_to_virlx	src/geometry/geometry_vir.hpp	/^  inline void lx_clover_term_t_remap_to_virlx(vir_clover_term_t *out,clover_term_t *in)$/;"	f	namespace:nissa
lx_geom_inited	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int lx_geom_inited;$/;"	m	namespace:nissa
lx_of_coord	src/geometry/geometry_lx.cpp	/^  int lx_of_coord(coords x,coords s)$/;"	f	namespace:nissa
lx_quad_u1_comm	projects/cpn/cpn.cpp	/^comm_t lx_quad_u1_comm,eo_quad_u1_comm;$/;"	v
m0	projects/reno_const/fourier.c	/^double g_beta,m0,s;$/;"	v
m0_of_kappa	src/free_theory/twisted_propagator.hpp	/^  inline double m0_of_kappa(double kappa)$/;"	f	namespace:nissa
magic	src/free_theory/free_theory_types.hpp	/^    bmpfile_magic magic;$/;"	m	struct:nissa::bmpfile
magic	src/free_theory/free_theory_types.hpp	/^  struct bmpfile_magic{unsigned char magic[2];};$/;"	m	struct:nissa::bmpfile_magic
magic_no	src/io/ILDG_File.hpp	/^    uint32_t magic_no;$/;"	m	struct:nissa::ILDG_header
magic_no	tools/conf_transform/edit/ILDG_File_light.hpp	/^  uint32_t magic_no;$/;"	m	struct:ILDG_header
magnetization	src/operations/stag/magnetization.cpp	/^  void magnetization(complex *magn,complex *magn_proj_x,rnd_t rnd_type,quad_su3 **conf,int quantization,quad_u1 **u1b,quark_content_t *quark,double residue)$/;"	f	namespace:nissa
magnetization_meas	build/projects/generate_confs/parser.cpp	/^    nissa::magnetization_meas_pars_t *magnetization_meas;$/;"	m	union:YYSTYPE	file:
magnetization_meas	build/projects/generate_confs/parser.hpp	/^    nissa::magnetization_meas_pars_t *magnetization_meas;$/;"	m	union:YYSTYPE
magnetization_meas	projects/generate_confs/driver.hpp	/^    std::vector<magnetization_meas_pars_t> magnetization_meas;$/;"	m	class:nissa::driver_t
magnetization_meas_pars_t	src/operations/stag/magnetization.hpp	/^    magnetization_meas_pars_t() :$/;"	f	struct:nissa::magnetization_meas_pars_t
magnetization_meas_pars_t	src/operations/stag/magnetization.hpp	/^  struct magnetization_meas_pars_t : base_fermionic_meas_t$/;"	s	namespace:nissa
main	config/config.guess	/^		main()$/;"	f
main	config/config.guess	/^	main ()$/;"	f
main	projects/cosmhol/real_scalar.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/cpn/cpn.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/eight_BK/eight_BK.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/g/g.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/generate_confs/convert_input.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/generate_confs/generate.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/generate_confs/generate_quenched.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/ib/check_fftw.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/ib/checks.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/ib/disco.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/ib/disco2.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/ib/ib.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/ib/mel.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/ib/nucleons.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/ib/semileptonic.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/ib/test_prop.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/nucleons/nucleons_smeared.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/reno_const/RIMOM.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/reno_const/fourier.c	/^int main(int argc, char *argv[]){$/;"	f
main	projects/semileptonic/gevp_3pts.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/semileptonic/new_version/new_semileptonic.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/semileptonic/new_version/test.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/semileptonic/test_proj.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/static_potential/static_potential.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/progs/average_corr.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/progs/bmp_scramble.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/progs/combine.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/progs/compute_corrections.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/progs/compute_self_energy_corrections.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/progs/compute_tadpole_corrections.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/progs/compute_tree_level_corrections.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/progs/correct.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/progs/integrali_divergenti.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_Fourier_transform.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_Wilson_gluon_Klein_Gordon_operator.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_Wilson_gluon_propagator.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_meson_exchange_correction.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_meson_self_energy_stochastic_correction.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_meson_tad_pole_correction.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_meson_tree_level_correction.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_nazario.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_nazario2.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_propagator_shift.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_stochastic_qqg_vertex.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_stochastic_source_null_mode.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_tlSym_gluon_propagator.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_tlSym_gluon_stochastic_propagator.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_tlSym_gluon_stochastic_propagator_no_null_mode.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_twisted_propagator.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_twisted_propagator_correction.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_twisted_propagator_self.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_twisted_propagator_stochastic_correction.cpp	/^int main(int narg,char **arg)$/;"	f
main	projects/x/tests/test_twisted_propagator_tadpole.cpp	/^int main(int narg,char **arg)$/;"	f
main	test/nissa/contract/contract_test.cpp	/^int main(int narg,char **arg)$/;"	f
main	test/nissa/contract/reduction_test/reduction_test.cpp	/^int main(int narg,char **arg)$/;"	f
main	test/nissa/eo_geometry.cpp	/^int main()$/;"	f
main	test/nissa/mega_test.cpp	/^int main()$/;"	f
main	test/nissa/plaquette_computation.cpp	/^int main()$/;"	f
main	test/nissa/random_source_generation.cpp	/^int main()$/;"	f
main	test/nissa/read_colorspinspin_reco_test/read_colorspinspin_reco.cpp	/^int main(int narg,char **arg)$/;"	f
main	test/nissa/read_colorspinspin_test/read_colorspinspin.cpp	/^int main(int narg,char **arg)$/;"	f
main	test/nissa/stupid_read_and_write/spincolor_read.cpp	/^int main(int narg,char **arg)$/;"	f
main	test/nissa/stupid_read_and_write/spincolor_write.cpp	/^int main(int narg,char **arg)$/;"	f
main	test/nissa/write_and_read.cpp	/^int main()$/;"	f
main	test/test_max_tag.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/APE_smear/smear.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/Gaussiansmear_test.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/Jacobi_smear/fitgauss.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/Jacobi_smear/smear.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/ave.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/benchmarks/stag.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/clusterize.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/clusterize2.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_measure/magn.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_measure/topo.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/convert/Claudio_to_ildg.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/convert/eo_to_ildg.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/convert/ge_to_ildg.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/convert/gpu_to_ildg.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/convert/ildg_to_eo.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/convert/ildg_to_gpu.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/convert/usqcd_to_ildg.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/create/create_cold.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/create/create_hot.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/edit/build_from_raw.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/edit/grab_ildg_data.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/edit/rewind_random.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/edit/skip_random.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/edit/unitarize.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/gaugefix/landau.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/gaugefix/random.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/conf_transform/gaugefix/temporal.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/endianness/endianness_check.cpp	/^int main()$/;"	f
main	tools/endianness/endianness_swap.cpp	/^int main()$/;"	f
main	tools/err.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/find_best_vir_partitioning/find.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/fourier/write_fourier_transform.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/generate_allplusone_timeslice/generate_allplusone_timeslice.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/generate_stochastic_source/generate.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/generate_stochastic_source/generate_stochastic_source.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/meson_2pts/meson_2pts.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/meson_2pts/meson_2pts_point_source.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/meson_2pts/meson_2pts_reco.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/meson_3pts_check/mesonic_3pts_check.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/pack.c	/^int main(int narg,char **arg)$/;"	f
main	tools/pline/pline.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/print_gamma/gamma_comm.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/print_gamma/gamma_test.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/read_ildg/read_double_vector.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/read_ildg/read_ildg.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/remez_algorithm/remez_create.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/select_timeslice/select_timeslice.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/spincolor_compare/spincolor_compare.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/spinors/eo_color_to_ildg.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/spinors/ev_color_to_ildg.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/spinors/generate_random.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/spinors/ildg_to_txt.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/spinors/od_color_to_ildg.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/spinors/take_parity.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/unitarity_check/unitarity_check.cpp	/^int main(int narg,char **arg)$/;"	f
main	tools/x_clusterize/x_clusterize.cpp	/^int main(int narg,char **arg)$/;"	f
main	work_in_prog/bgq/src/test_dirac.cpp	/^int main(int narg,char **arg)$/;"	f
main	work_in_prog/detM/detM_est.cpp	/^int main(int narg,char **arg)$/;"	f
main	work_in_prog/detM/detM_est2.cpp	/^int main(int narg,char **arg)$/;"	f
main	work_in_prog/eo_inverter/invert2.cpp	/^int main(int narg,char **arg)$/;"	f
main	work_in_prog/eo_inverter/invert3.cpp	/^int main(int narg,char **arg)$/;"	f
main	work_in_prog/quad/main.cpp	/^int main(int narg,char **arg)$/;"	f
main	work_in_prog/quad/tests.cpp	/^int main()$/;"	f
main	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int main(int narg,char **arg)$/;"	f
main	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int main(int narg,char **arg)$/;"	f
main_arr	src/base/vectors.hpp	/^  EXTERN_VECTORS void *main_arr;$/;"	m	namespace:nissa
main_vect	src/base/vectors.hpp	/^  EXTERN_VECTORS nissa_vect main_vect;$/;"	m	namespace:nissa
make_dummy_depfile	config/depcomp	/^make_dummy_depfile ()$/;"	f
mandir	build/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	build/projects/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	build/src/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	build/tools/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
map_mu	projects/ib/mel.cpp	/^int map_mu[4]={4,1,2,3};$/;"	v
mapdens_t	tools/Gaussiansmear_test.cpp	/^typedef std::map<int,dens_t> mapdens_t;$/;"	t	file:
mapping_t	tools/find_best_vir_partitioning/find.cpp	/^struct mapping_t: std::map<int,coords5D_t>{};$/;"	s	file:
mark_finished	projects/ib/conf.cpp	/^  void mark_finished()$/;"	f	namespace:nissa
mark_vir_of_loclx	src/geometry/geometry_vir.cpp	/^  void mark_vir_of_loclx(int &virlx,int *vireo,int &loclx)$/;"	f	namespace:nissa
mass	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double *mass;$/;"	v
mass	projects/g/g.cpp	/^double *mass;$/;"	v
mass	projects/ib/prop.hpp	/^    double mass;$/;"	m	struct:nissa::qprop_t
mass	projects/nucleons/nucleons_smeared.cpp	/^double *mass;$/;"	v
mass	projects/reno_const/RIMOM.cpp	/^double *mass;$/;"	v
mass	projects/semileptonic/gevp.cpp	/^double mass,residue,kappa,gaussian_kappa;$/;"	v
mass	projects/semileptonic/gevp_3pts.cpp	/^double theta_needed,mass,residue,kappa;$/;"	v
mass	projects/semileptonic/new_version/new_semileptonic.cpp	/^  double *mass;$/;"	m	struct:propgroup_t	file:
mass	projects/semileptonic/new_version/new_types.hpp	/^  double *mass;$/;"	m	struct:mass_res_group_t
mass	projects/semileptonic/test_proj.cpp	/^double kappa,mass,residue,init_time,wall_time;$/;"	v
mass	projects/x/progs/compute_corrections.cpp	/^  int mass;$/;"	m	struct:flags	file:
mass	projects/x/progs/correct.cpp	/^double beta,mass,g2;$/;"	v
mass	src/free_theory/free_theory_types.hpp	/^    double mass;$/;"	m	struct:nissa::tm_quark_info
mass	src/hmc/quark_pars.hpp	/^    double mass;$/;"	m	struct:nissa::quark_content_t
mass	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^double *mass,*theta;$/;"	v
mass	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double *mass,*theta;$/;"	v
massS0	projects/semileptonic/semileptonic_smeared.cpp	/^double *massS0,*thetaS0;$/;"	v
massS0der	projects/semileptonic/semileptonic_smeared.cpp	/^double *massS0der;$/;"	v
massS1	projects/semileptonic/semileptonic_smeared.cpp	/^double *massS1,*thetaS1;$/;"	v
mass_res	projects/semileptonic/new_version/new_types.hpp	/^  mass_res_group_t *mass_res;$/;"	m	struct:prop_group_t
mass_res_group	projects/semileptonic/new_version/test.cpp	/^mass_res_group_t *mass_res_group;$/;"	v
mass_res_group_t	projects/semileptonic/new_version/new_types.hpp	/^  mass_res_group_t() {mass=residues=NULL;}$/;"	f	struct:mass_res_group_t
mass_res_group_t	projects/semileptonic/new_version/new_types.hpp	/^  mass_res_group_t(int n) {create(n);}$/;"	f	struct:mass_res_group_t
mass_res_group_t	projects/semileptonic/new_version/new_types.hpp	/^struct mass_res_group_t$/;"	s
master_fprintf	projects/generate_confs/driver.hpp	/^    int master_fprintf(FILE *fout,bool full=false) {return nissa::master_fprintf(fout,"%s",get_str(full).c_str());}$/;"	f	class:nissa::driver_t
master_fprintf	src/hmc/backfield.hpp	/^    int master_fprintf(FILE *fout,int full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::em_field_pars_t
master_fprintf	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int master_fprintf(FILE *fout,int full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::conf_pars_t
master_fprintf	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int master_fprintf(FILE *fout,int full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::hmc_evol_pars_t
master_fprintf	src/hmc/quark_pars.hpp	/^    int master_fprintf(FILE *fout,int full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::quark_content_t
master_fprintf	src/hmc/theory_pars.hpp	/^    int master_fprintf(FILE *fout,int full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::theory_pars_t
master_fprintf	src/new_types/metadynamics.hpp	/^    int master_fprintf(FILE *fout,int full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::meta_pars_t
master_fprintf	src/new_types/rat_approx.hpp	/^    int master_fprintf(FILE *fout,int full=false) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::rat_approx_t
master_fprintf	src/operations/gauge_fixing.hpp	/^    int master_fprintf(FILE *fout,int full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
master_fprintf	src/operations/gaugeconf.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::gauge_obs_meas_pars_t
master_fprintf	src/operations/smearing/APE.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::ape_pars_t
master_fprintf	src/operations/smearing/HYP.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::hyp_pars_t
master_fprintf	src/operations/smearing/Wflow.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::Wflow_pars_t
master_fprintf	src/operations/smearing/cooling.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::cool_pars_t
master_fprintf	src/operations/smearing/smooth.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::smooth_pars_t
master_fprintf	src/operations/smearing/stout.hpp	/^    int master_fprintf(FILE *fout,int full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::stout_pars_t
master_fprintf	src/operations/stag/magnetization.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::magnetization_meas_pars_t
master_fprintf	src/operations/stag/mesons.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::meson_corr_meas_pars_t
master_fprintf	src/operations/stag/nucleon.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::nucleon_corr_meas_pars_t
master_fprintf	src/operations/stag/putpourri.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::fermionic_putpourri_meas_pars_t
master_fprintf	src/operations/stag/qed_corr.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::qed_corr_meas_pars_t
master_fprintf	src/operations/stag/rendens.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::quark_rendens_meas_pars_t
master_fprintf	src/operations/stag/spinpol.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::spinpol_meas_pars_t
master_fprintf	src/operations/stag/stag.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::base_fermionic_meas_t
master_fprintf	src/operations/stag/zumba.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::chir_zumba_meas_pars_t
master_fprintf	src/operations/su3_paths/all_rectangles.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::all_rects_meas_pars_t
master_fprintf	src/operations/su3_paths/topological_charge.hpp	/^    int master_fprintf(FILE *fout,bool full) {return nissa::master_fprintf(fout,"%s",get_str().c_str());}$/;"	f	struct:nissa::top_meas_pars_t
master_fprintf	src/routines/ios.cpp	/^  int master_fprintf(FILE *stream,const char *format,...)$/;"	f	namespace:nissa
master_fprintf_geometry	projects/generate_confs/driver.hpp	/^    int master_fprintf_geometry(FILE *fout,bool full){return nissa::master_fprintf(fout,"%s",geo_get_str(full).c_str());}$/;"	f	class:nissa::driver_t
master_fprintf_vector	projects/generate_confs/driver.hpp	/^    template <class T> int master_fprintf_vector(FILE *fout,std::vector<T> &v,bool full)$/;"	f	class:nissa::driver_t
master_fprintf_walltime_seed	projects/generate_confs/driver.hpp	/^    int master_fprintf_walltime_seed(FILE *fout,bool full){return nissa::master_fprintf(fout,"%s",walltime_seed_get_str(full).c_str());}$/;"	f	class:nissa::driver_t
master_fscan	src/routines/ios.hpp	/^  template <class T> T master_fscan(FILE *stream,const char *tag)$/;"	f	namespace:nissa
master_fscan	src/routines/ios.hpp	/^  template <class T> T master_fscan(std::string path,const char *tag)$/;"	f	namespace:nissa
master_fscan_double	src/routines/ios.hpp	/^  template <class T> double master_fscan_double(T par)$/;"	f	namespace:nissa
master_fscan_int	src/routines/ios.hpp	/^  template <class T> int master_fscan_int(T par)$/;"	f	namespace:nissa
master_get_temp_file	src/routines/ios.cpp	/^  void master_get_temp_file(FILE *&fout,std::string &prefix)$/;"	f	namespace:nissa
master_printf	src/routines/ios.hpp	23;"	d
matrix_determinant	src/routines/math_routines.cpp	/^  void matrix_determinant(complex d,complex *m,int n)$/;"	f	namespace:nissa
max_cached_link	src/operations/su3_paths/gauge_sweeper.hpp	/^    int max_cached_link,max_sending_link;$/;"	m	struct:nissa::gauge_sweeper_t
max_diff	src/operations/gaugeconf.hpp	/^    double max_diff;$/;"	m	struct:nissa::unitarity_check_result_t
max_locd_perp_size_per_dir	src/operations/remap_vector.hpp	/^  EXTERN_REMAP int max_locd_perp_size_per_dir[NDIM],locd_perp_size_per_dir[NDIM];$/;"	m	namespace:nissa
max_locd_size	src/operations/remap_vector.hpp	/^  EXTERN_REMAP int max_locd_size,locd_size_per_dir[NDIM];$/;"	m	namespace:nissa
max_nconfs	projects/generate_confs/generate_quenched.cpp	/^int iconf,max_nconfs;$/;"	v
max_order	src/operations/stag/rendens.hpp	/^    int max_order;$/;"	m	struct:nissa::quark_rendens_meas_pars_t
max_order	src/operations/stag/zumba.hpp	/^    int max_order;$/;"	m	struct:nissa::chir_zumba_meas_pars_t
max_required_memory	src/base/vectors.hpp	/^  EXTERN_VECTORS int64_t max_required_memory;$/;"	m	namespace:nissa
max_sending_link	src/operations/su3_paths/gauge_sweeper.hpp	/^    int max_cached_link,max_sending_link;$/;"	m	struct:nissa::gauge_sweeper_t
max_traj_time	projects/generate_confs/generate.cpp	/^double init_time,max_traj_time=0;$/;"	v
max_traj_time	projects/generate_confs/generate_quenched.cpp	/^double max_traj_time=0;$/;"	v
maxerr	src/new_types/rat_approx.hpp	/^    double maxerr;$/;"	m	struct:nissa::rat_approx_t
maximum	src/new_types/rat_approx.hpp	/^    double maximum;$/;"	m	struct:nissa::rat_approx_t
maximum	src/operations/remez/remez_algorithm.hpp	/^    double minimum,maximum;$/;"	m	struct:nissa::rat_approx_finder_t
mbme_flag	src/io/ILDG_File.hpp	/^    uint16_t mbme_flag;$/;"	m	struct:nissa::ILDG_header
mbme_flag	tools/conf_transform/edit/ILDG_File_light.hpp	/^  uint16_t mbme_flag;$/;"	m	struct:ILDG_header
md_residue	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    double md_residue;$/;"	m	struct:nissa::hmc_evol_pars_t
meas_corr	src/operations/su3_paths/topological_charge.hpp	/^    int meas_corr;$/;"	m	struct:nissa::top_meas_pars_t
meas_each_nsmooth	src/operations/smearing/smooth.hpp	/^    int meas_each_nsmooth;$/;"	m	struct:nissa::smooth_pars_t
meas_energy	src/operations/gaugeconf.hpp	/^    int meas_energy;$/;"	m	struct:nissa::gauge_obs_meas_pars_t
meas_plaq	src/operations/gaugeconf.hpp	/^    int meas_plaq;$/;"	m	struct:nissa::gauge_obs_meas_pars_t
meas_poly	src/operations/gaugeconf.hpp	/^    int meas_poly;$/;"	m	struct:nissa::gauge_obs_meas_pars_t
meas_time	projects/generate_confs/generate_quenched.cpp	/^double meas_time=0;$/;"	v
meas_x_corr	projects/generate_confs/generate_quenched.cpp	/^void meas_x_corr(const char *path,quad_su3 *conf,bool conf_created)$/;"	f
meas_x_corr_stoch	projects/generate_confs/generate_quenched.cpp	/^void meas_x_corr_stoch(const char *path,quad_su3 *conf,bool conf_created)$/;"	f
measure_all_rectangular_paths	src/operations/su3_paths/all_rectangles.cpp	/^  void measure_all_rectangular_paths(all_rects_meas_pars_t *pars,quad_su3 **conf_eo,int iconf,int create_output_file)$/;"	f	namespace:nissa
measure_chir_zumba	src/operations/stag/zumba.cpp	/^  void measure_chir_zumba(quad_su3 **conf,theory_pars_t &theory_pars,chir_zumba_meas_pars_t &meas_pars,int iconf,int conf_created)$/;"	f	namespace:nissa
measure_fermionic_putpourri	src/operations/stag/putpourri.cpp	/^  void measure_fermionic_putpourri(quad_su3 **conf,theory_pars_t &theory_pars,fermionic_putpourri_meas_pars_t &meas_pars,int iconf,int conf_created)$/;"	f	namespace:nissa
measure_gauge_obs	projects/generate_confs/generate.cpp	/^void measure_gauge_obs(gauge_obs_meas_pars_t &pars,quad_su3 **conf,int iconf,int acc,gauge_action_name_t gauge_action_name)$/;"	f
measure_gauge_obs	projects/generate_confs/generate_quenched.cpp	/^void measure_gauge_obs()$/;"	f
measure_gauge_obs_internal	projects/generate_confs/generate.cpp	/^void measure_gauge_obs_internal(FILE *file,quad_su3 *conf,gauge_obs_meas_pars_t &pars,gauge_action_name_t gauge_action_name)$/;"	f
measure_is_due	projects/generate_confs/driver.hpp	/^    template <class T> int measure_is_due(std::vector<T> &pars,int itheory,int iconf)$/;"	f	class:nissa::driver_t
measure_is_due	projects/generate_confs/driver.hpp	/^  template <class T> int measure_is_due(T &pars,int iconf)$/;"	f	namespace:nissa
measure_is_due	src/operations/stag/stag.hpp	/^    int measure_is_due(int ext_itheory,int iconf)$/;"	f	struct:nissa::base_fermionic_meas_t
measure_magnetization	src/operations/stag/magnetization.cpp	/^  void measure_magnetization(quad_su3 **conf,theory_pars_t &theory_pars,magnetization_meas_pars_t &meas_pars,int iconf,int conf_created)$/;"	f	namespace:nissa
measure_meson_corr	src/operations/stag/mesons.cpp	/^  void measure_meson_corr(quad_su3 **ext_conf,theory_pars_t &tp,meson_corr_meas_pars_t &meas_pars,int iconf,int conf_created)$/;"	f	namespace:nissa
measure_poly_corrs	projects/generate_confs/generate.cpp	/^void measure_poly_corrs(poly_corr_meas_pars_t &pars,quad_su3 **eo_conf,bool conf_created)$/;"	f
measure_quark_rendens	src/operations/stag/rendens.cpp	/^  void measure_quark_rendens(quad_su3 **conf,theory_pars_t &theory_pars,quark_rendens_meas_pars_t &meas_pars,int iconf,int conf_created)$/;"	f	namespace:nissa
measure_spinpol	src/operations/stag/spinpol.hpp	/^  inline void measure_spinpol(quad_su3 **ferm__ignored_conf,theory_pars_t &tp,spinpol_meas_pars_t &mp,int iconf,int conf_created,stout_pars_t &stout_pars,quad_su3 **glu_conf)$/;"	f	namespace:nissa
measure_topology	projects/generate_confs/generate_quenched.cpp	/^void measure_topology(top_meas_pars_t &pars,quad_su3 *uncooled_conf,int iconf,bool conf_created,bool preserve_uncooled)$/;"	f
measure_topology_eo_conf	src/operations/su3_paths/topological_charge.cpp	/^  void measure_topology_eo_conf(top_meas_pars_t &pars,quad_su3 **unsmoothed_conf_eo,int iconf,bool conf_created)$/;"	f	namespace:nissa
measure_topology_lx_conf	src/operations/su3_paths/topological_charge.cpp	/^  void measure_topology_lx_conf(top_meas_pars_t &pars,quad_su3 *unsmoothed_conf,int iconf,bool conf_created,bool preserve_unsmoothed)$/;"	f	namespace:nissa
measurements	projects/generate_confs/generate.cpp	/^void measurements(quad_su3 **temp,quad_su3 **conf,int iconf,int acc,gauge_action_name_t gauge_action_name)$/;"	f
mel	projects/ib/disco2.cpp	/^namespace mel$/;"	n	file:
mem_needed	tools/clusterize2.cpp	/^uint64_t mem_needed;$/;"	v
mes2pts_contr_map	projects/ib/contr.hpp	/^  EXTERN_CONTR std::vector<mes_contr_map_t> mes2pts_contr_map;$/;"	m	namespace:nissa
mes2pts_contr_size	projects/ib/contr.hpp	/^  EXTERN_CONTR int mes2pts_contr_size;$/;"	m	namespace:nissa
mes2pts_known_t	projects/ib/pars.cpp	/^  enum mes2pts_known_t                      { P5P5 , GIP5 , P5GI , V0V0 , AKAK , VKVK , VKTK , TKVK , TKTK , BKBK , GIS0 , S0GI , V0P5 , VKP5 , S0S0 , A0A0 , AKBK , BKAK , V0S0 , S0V0};$/;"	g	namespace:nissa	file:
mes2pts_tag	projects/ib/pars.cpp	/^  const char mes2pts_tag[nmes2pts_known][5]={"P5P5","GIP5","P5GI","V0V0","AKAK","VKVK","VKTK","TKVK","TKTK","BKBK","GIS0","S0GI","V0P5","VKP5","S0S0","A0A0","AKBK","BKAK","V0S0","S0V0"};$/;"	m	namespace:nissa	file:
mes_contr_map_t	projects/ib/contr.hpp	/^    mes_contr_map_t(std::string name,std::string a,std::string b) : name(name),a(a),b(b) {}$/;"	f	struct:nissa::mes_contr_map_t
mes_contr_map_t	projects/ib/contr.hpp	/^  struct mes_contr_map_t$/;"	s	namespace:nissa
mes_gamma_list	projects/ib/contr.hpp	/^  EXTERN_CONTR std::vector<idirac_pair_t> mes_gamma_list;$/;"	m	namespace:nissa
mes_transf	projects/ib/checks.cpp	/^void mes_transf(complex *co,tm_quark_info qu)$/;"	f
meslep_contr	projects/ib/meslep.hpp	/^  EXTERN_MESLEP complex *meslep_contr;$/;"	m	namespace:nissa
meslep_hadr_part	projects/ib/meslep.hpp	/^  EXTERN_MESLEP spinspin *meslep_hadr_part;$/;"	m	namespace:nissa
meslep_projs	projects/ib/meslep.hpp	/^  const int nmeslep_proj=1,meslep_projs[nmeslep_proj]={4};$/;"	m	namespace:nissa
meson_corr_meas	build/projects/generate_confs/parser.cpp	/^    nissa::meson_corr_meas_pars_t *meson_corr_meas;$/;"	m	union:YYSTYPE	file:
meson_corr_meas	build/projects/generate_confs/parser.hpp	/^    nissa::meson_corr_meas_pars_t *meson_corr_meas;$/;"	m	union:YYSTYPE
meson_corr_meas	projects/generate_confs/driver.hpp	/^    std::vector<meson_corr_meas_pars_t> meson_corr_meas;$/;"	m	class:nissa::driver_t
meson_corr_meas_pars_t	src/operations/stag/mesons.hpp	/^    meson_corr_meas_pars_t() :$/;"	f	struct:nissa::meson_corr_meas_pars_t
meson_corr_meas_pars_t	src/operations/stag/mesons.hpp	/^  struct meson_corr_meas_pars_t : base_fermionic_meas_t$/;"	s	namespace:nissa
meson_two_points	projects/eight_BK/eight_BK.cpp	/^void meson_two_points(complex **corr,int *list_op1,colorspinspin *s1,int *list_op2,colorspinspin *s2,int ncontr,int f1,int r1,int f2,int r2)$/;"	f
meson_two_points	projects/eight_BK/smeared_BK_all_in_one.cpp	/^void meson_two_points(colorspinspin *s1,colorspinspin *s2)$/;"	f
meson_two_points	projects/g/g.cpp	/^void meson_two_points(complex *corr,int *list_op1,colorspinspin *s1,int *list_op2,colorspinspin *s2,int ncontr)$/;"	f
meson_two_points	projects/reno_const/RIMOM.cpp	/^void meson_two_points(complex *corr,complex *loc_corr,int *list_op1,su3spinspin *s1,int *list_op2,su3spinspin *s2,int ncontr)$/;"	f
meson_two_points	tools/meson_2pts/common.cpp	/^void meson_two_points(complex *corr,int *list_op1,colorspinspin *s1,int *list_op2,colorspinspin *s2,int ncontr,int f1,int r1,int f2,int r2)$/;"	f
meson_two_points	tools/meson_2pts/meson_2pts.cpp	/^void meson_two_points(complex *corr,int *list_op1,colorspinspin *s1,int *list_op2,colorspinspin *s2,int ncontr,int f1,int r1,int f2,int r2)$/;"	f
meson_two_points	tools/meson_2pts/meson_2pts_point_source.cpp	/^void meson_two_points(complex *corr,int *list_op1,su3spinspin *s1,int *list_op2,su3spinspin *s2,int ncontr,int f1,int r1,int f2,int r2)$/;"	f
meson_two_points	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^void meson_two_points(complex *corr,int *list_op1,su3spinspin *s1,int *list_op2,su3spinspin *s2,int ncontr)$/;"	f
meson_two_points	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void meson_two_points(complex *corr,int *list_op1,colorspinspin *s1,int *list_op2,colorspinspin *s2,int ncontr)$/;"	f
meson_two_points_Wilson_prop	src/operations/contract/mesons_2pts.hpp	/^  template <class T> void meson_two_points_Wilson_prop(complex *corr,complex* loc_corr,T *s1,T *s2,std::vector<idirac_pair_t> &list)$/;"	f	namespace:nissa
mesons	src/operations/stag/mesons.hpp	/^    std::vector<std::pair<int,int> > mesons;$/;"	m	struct:nissa::meson_corr_meas_pars_t
message_length	src/communicate/communicate.hpp	/^    int send_offset[8],message_length[8],recv_offset[8];$/;"	m	struct:nissa::comm_t
mesu3_t	src/new_types/su3_op.hpp	/^ typedef Map<esu3_t> mesu3_t;$/;"	t
meta_pars_t	src/new_types/metadynamics.hpp	/^    meta_pars_t() :$/;"	f	struct:nissa::meta_pars_t
meta_pars_t	src/new_types/metadynamics.hpp	/^  struct meta_pars_t$/;"	s	namespace:nissa
method	src/operations/gauge_fixing.hpp	/^    method_t method;$/;"	m	struct:nissa::LC_gauge_fixing_pars_t
method	src/operations/smearing/smooth.hpp	/^    method_t method;$/;"	m	struct:nissa::smooth_pars_t
method_from_tag	src/operations/gauge_fixing.hpp	/^    static inline method_t method_from_tag(const char *tag)$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
method_t	src/operations/gauge_fixing.hpp	/^    enum method_t{overrelax,exponentiate};$/;"	g	struct:nissa::LC_gauge_fixing_pars_t
method_t	src/operations/smearing/smooth.hpp	/^    enum method_t{COOLING,STOUT,WFLOW,APE,HYP};$/;"	g	struct:nissa::smooth_pars_t
method_tag	src/operations/gauge_fixing.hpp	/^    static inline std::string method_tag(method_t method)$/;"	f	struct:nissa::LC_gauge_fixing_pars_t
metro_test	src/routines/math_routines.cpp	/^  int metro_test(double arg)$/;"	f	namespace:nissa
metro_tresh	src/routines/math_routines.cpp	/^  double metro_tresh(double arg)$/;"	f	namespace:nissa
minimum	src/new_types/rat_approx.hpp	/^    double minimum;$/;"	m	struct:nissa::rat_approx_t
minimum	src/operations/remez/remez_algorithm.hpp	/^    double minimum,maximum;$/;"	m	struct:nissa::rat_approx_finder_t
minus_one_quarter_subt_tmD_or_Qee_or_oo_eos	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.cpp	/^  void minus_one_quarter_subt_tmD_or_Qee_or_oo_eos(vir_spincolor *out,double kappa,double mass,vir_spincolor *in,int D_or_Q)$/;"	f	namespace:nissa
minus_one_quarter_subt_tmclovDee_or_oo_eos	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_bgq.cpp	/^  void minus_one_quarter_subt_tmclovDee_or_oo_eos(vir_spincolor *out,double kappa,vir_clover_term_t *Cl,bool dag,double mass,vir_spincolor *in)$/;"	f	namespace:nissa
mkdir_p	build/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	build/projects/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	build/src/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	build/tools/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	build/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	build/projects/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	build/src/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	build/tools/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mmap_allocate	src/base/vectors.cpp	/^  void* mmap_allocate(uint64_t size)$/;"	f	namespace:nissa
modified_GS	src/eigenvalues/eigenvalues_autarchic.cpp	/^    void modified_GS(complex *v,complex **V,int nvec,int vec_length)$/;"	f	namespace:nissa::internal_eigenvalues
mom_comp_of_coord	projects/ib/checks.cpp	/^double mom_comp_of_coord(int ip_mu,tm_quark_info qu,int mu)$/;"	f
mom_comp_of_site	projects/ib/checks.cpp	/^double mom_comp_of_site(int ip,tm_quark_info qu,int mu)$/;"	f
mom_prod	projects/ib/checks.cpp	/^double mom_prod(momentum_t p,momentum_t q)$/;"	f
mom_space_qq_vertex_function	projects/x/src/vertex/vertex.cpp	/^void mom_space_qq_vertex_function(spinspin v,double p1,double p2,quark_info qu,int mu)$/;"	f
mom_space_tlSym_gauge_propagator_of_imom	src/free_theory/tlSym_gauge_propagator.cpp	/^  void mom_space_tlSym_gauge_propagator_of_imom(spin1prop prop,gauge_info gl,int imom)$/;"	f	namespace:nissa
mom_space_twisted_operator_of_imom	src/free_theory/twisted_propagator.cpp	/^  void mom_space_twisted_operator_of_imom(spinspin out,tm_quark_info qu,int imom,tm_basis_t base)$/;"	f	namespace:nissa
mom_space_twisted_propagator_g2_d2_corr_of_imom	projects/x/src/propagators/twisted_propagator_g2_corr.cpp	/^void mom_space_twisted_propagator_g2_d2_corr_of_imom(spin1prop prop,quark_info qu,gluon_info gl,int imom)$/;"	f
mom_space_twisted_propagator_of_imom	src/free_theory/twisted_propagator.cpp	/^  void mom_space_twisted_propagator_of_imom(spinspin prop,tm_quark_info qu,int imom,tm_basis_t base)$/;"	f	namespace:nissa
momenta_action	projects/cpn/cpn.cpp	/^double momenta_action()$/;"	f
momenta_action	src/hmc/momenta/momenta_action.cpp	/^  double momenta_action(quad_su3 **H)$/;"	f	namespace:nissa
momenta_action	src/hmc/momenta/momenta_action.cpp	/^  double momenta_action(quad_su3 *H)$/;"	f	namespace:nissa
momenta_action_with_FACC	src/hmc/momenta/momenta_action.cpp	/^  double momenta_action_with_FACC(quad_su3 *conf,double kappa,int niter,double residue,quad_su3 *H)$/;"	f	namespace:nissa
momentum_t	src/geometry/geometry_lx.hpp	/^  typedef double momentum_t[NDIM];$/;"	t	namespace:nissa
mov	src/operations/su3_paths/arbitrary.hpp	/^    int mov;$/;"	m	struct:nissa::movement_link_id
move_backward	src/operations/su3_paths/arbitrary.cpp	/^  void paths_calculation_structure::move_backward(int mu)$/;"	f	class:nissa::paths_calculation_structure
move_forward	src/operations/su3_paths/arbitrary.cpp	/^  void paths_calculation_structure::move_forward(int mu)$/;"	f	class:nissa::paths_calculation_structure
movement_link_id	src/operations/su3_paths/arbitrary.hpp	/^  struct movement_link_id$/;"	s	namespace:nissa
movements_nonloc_links_id_list	src/operations/su3_paths/arbitrary.hpp	/^    movement_link_id *movements_nonloc_links_id_list;$/;"	m	struct:nissa::paths_calculation_structure
mpf_precision	src/new_types/high_prec.cpp	/^  int mpf_precision;$/;"	m	namespace:nissa	file:
mu	projects/semileptonic/test_bgq.cpp	/^double mu=0.03,kappa=0.137;$/;"	v
mu	tools/conf_measure/magn.cpp	/^const int mu=1,nu=2;$/;"	v
mu_factor	src/base/DDalphaAMG_bridge.cpp	/^  double mu_factor[MAX_MG_LEVELS];$/;"	m	namespace:DD	file:
mu_orsay	projects/reno_const/RIMOM.cpp	/^coords mu_orsay={0,1,2,3};$/;"	v
mu_rome	projects/reno_const/RIMOM.cpp	/^coords mu_rome= {0,2,3,1};$/;"	v
mult_Minv	src/operations/stag/stag.cpp	/^    void mult_Minv(color **prop,quad_su3 **conf,theory_pars_t *pars,int iflav,double residue,color **source)$/;"	f	namespace:nissa::stag
multiply_by_x_space_Wilson_gluon_propagator_by_inv	projects/x/src/propagators/Wilson_gluon_propagator.cpp	/^void multiply_by_x_space_Wilson_gluon_propagator_by_inv(spin1prop *prop_out,spin1prop *prop_in,gluon_info gl)$/;"	f
multiply_from_left_by_x_space_twisted_propagator_by_fft	src/free_theory/twisted_propagator.hpp	/^  void multiply_from_left_by_x_space_twisted_propagator_by_fft(T *out,T *in,tm_quark_info qu,tm_basis_t base,bool include_phases)$/;"	f	namespace:nissa
multiply_from_left_by_x_space_twisted_propagator_by_inv	src/free_theory/twisted_propagator.cpp	/^  void multiply_from_left_by_x_space_twisted_propagator_by_inv(spin *prop,spin *ext_source,tm_quark_info qu,tm_basis_t base)$/;"	f	namespace:nissa
multiply_from_left_by_x_space_twisted_propagator_by_inv	src/free_theory/twisted_propagator.cpp	/^  void multiply_from_left_by_x_space_twisted_propagator_by_inv(spinspin *prop,spinspin *ext_source,tm_quark_info qu,tm_basis_t base)$/;"	f	namespace:nissa
multiply_from_left_or_right_by_mom_space_twisted_propagator	src/free_theory/twisted_propagator.hpp	/^  template <class T> void multiply_from_left_or_right_by_mom_space_twisted_propagator(T *out,T *in,tm_quark_info qu,bool lr,tm_basis_t base)$/;"	f	namespace:nissa
multiply_from_right_by_x_space_twisted_propagator_by_fft	src/free_theory/twisted_propagator.hpp	/^  void multiply_from_right_by_x_space_twisted_propagator_by_fft(T *out,T *in,tm_quark_info qu,tm_basis_t base,bool include_phases)$/;"	f	namespace:nissa
multipseudo_rhmc_step	src/hmc/multipseudo/multipseudo_rhmc_step.cpp	/^  double multipseudo_rhmc_step(quad_su3 **out_conf,quad_su3 **in_conf,theory_pars_t &theory_pars,hmc_evol_pars_t &simul_pars,std::vector<rat_approx_t> &rat_appr,int itraj)$/;"	f	namespace:nissa
myname	projects/reno_const/fourier.c	/^static char *myname;$/;"	v	file:
n	tools/Gaussiansmear_test.cpp	/^  int n;$/;"	m	struct:dens_t	file:
n0max	projects/reno_const/fourier.c	/^int nmin, nmax, n0min, n0max;$/;"	v
n0min	projects/reno_const/fourier.c	/^int nmin, nmax, n0min, n0max;$/;"	v
nEU	projects/ib/disco.cpp	/^  int nEU;$/;"	m	namespace:EU1_EU2_EU4_EU6alt	file:
nPHIETA	src/operations/stag/spinpol.cpp	/^    const int nPHIETA=2,PHI=0,ETA=1;$/;"	m	namespace:nissa::__anon12	file:
nWflow	src/operations/smearing/recursive_Wflower.hpp	/^      int nWflow; \/\/current Wflow in terms of the fundamental$/;"	m	struct:nissa::recursive_Wflower_t::Wflow_lev_t
n_P_interv	projects/reno_const/RIMOM.cpp	/^int n_X_interv[2],n_P_interv[2];$/;"	v
n_X_interv	projects/reno_const/RIMOM.cpp	/^int n_X_interv[2],n_P_interv[2];$/;"	v
nacc	projects/cpn/cpn.cpp	/^int nhmc_steps,nacc;$/;"	v
naive_massless_on_shell_operator_of_imom	src/free_theory/twisted_propagator.cpp	/^  double naive_massless_on_shell_operator_of_imom(spinspin proj,momentum_t bc,int imom,int esign)$/;"	f	namespace:nissa
naive_massless_quark_energy	src/free_theory/twisted_propagator.cpp	/^  double naive_massless_quark_energy(momentum_t bc,int imom)$/;"	f	namespace:nissa
naive_massless_wavefunction_of_imom	src/free_theory/twisted_propagator.cpp	/^  void naive_massless_wavefunction_of_imom(spin wf,momentum_t bc,int imom,int par_apar,int s)$/;"	f	namespace:nissa
name	projects/ib/contr.hpp	/^    std::string name;$/;"	m	struct:nissa::bar_triplet_t
name	projects/ib/contr.hpp	/^    std::string name;$/;"	m	struct:nissa::handcuffs_map_t
name	projects/ib/contr.hpp	/^    std::string name;$/;"	m	struct:nissa::handcuffs_side_map_t
name	projects/ib/contr.hpp	/^    std::string name;$/;"	m	struct:nissa::mes_contr_map_t
name	projects/semileptonic/new_version/new_semileptonic.cpp	/^  char name[1024];$/;"	m	struct:propgroup_t	file:
name	projects/semileptonic/new_version/new_semileptonic.cpp	/^  char name[1024];$/;"	m	struct:source_t	file:
name	projects/semileptonic/new_version/new_types.hpp	/^  chppar name[10];$/;"	m	struct:two_pts_corr_pars_t
name	src/hmc/quark_pars.hpp	/^    std::string name;$/;"	m	struct:nissa::quark_content_t
name	src/io/ILDG_File.hpp	/^    char *name;$/;"	m	struct:nissa::ILDG_message
name	src/io/input.cpp	/^      std::string name;$/;"	m	struct:nissa::__anon9::triple_tag	file:
name	src/new_types/rat_approx.hpp	/^    char name[20];$/;"	m	struct:nissa::rat_approx_t
name	tools/pack.c	/^typedef char name[10];$/;"	t	file:
name_from_str	src/hmc/quark_pars.hpp	/^    inline name_t name_from_str(const char *in)$/;"	f	namespace:nissa::ferm_discretiz
name_t	src/hmc/quark_pars.hpp	/^    enum name_t{ROOT_STAG,ROOT_TM_CLOV};$/;"	g	namespace:nissa::ferm_discretiz
nanalized_conf	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int igauge_conf=0,ngauge_conf,nanalized_conf;$/;"	v
nanalized_conf	projects/g/g.cpp	/^int ngauge_conf,nanalized_conf=0;$/;"	v
nanalized_conf	projects/reno_const/RIMOM.cpp	/^int ngauge_conf,nanalized_conf;$/;"	v
nanalized_conf	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int ngauge_conf,nanalized_conf=0;$/;"	v
nanalyzed_conf	projects/ib/conf.hpp	/^  EXTERN_CONF int nanalyzed_conf;$/;"	m	namespace:nissa
nanalyzed_conf	projects/ib/mel.cpp	/^int nanalyzed_conf=0;$/;"	v
nanalyzed_conf	projects/semileptonic/gevp.cpp	/^int ngauge_conf,nanalyzed_conf;$/;"	v
nanalyzed_conf	projects/semileptonic/gevp_3pts.cpp	/^int ngauge_conf,nanalyzed_conf;$/;"	v
nanalyzed_conf	projects/semileptonic/semileptonic_smeared.cpp	/^int ngauge_conf,nanalyzed_conf=0;$/;"	v
nappr_per_quark	src/hmc/hmc.hpp	/^  const int nappr_per_quark=3;$/;"	m	namespace:nissa
nassigned_torus_dirs	tools/find_best_vir_partitioning/find.cpp	/^  int nassigned_torus_dirs[4];$/;"	m	struct:assignement_t	file:
naux_fields	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^    int naux_fields;$/;"	m	struct:nissa::pure_gauge_evol_pars_t
navail_two_pts_corr	projects/semileptonic/new_version/new_types.cpp	/^const int navail_two_pts_corr=12;$/;"	v
nbench	projects/semileptonic/test_bgq.cpp	/^const int nbench=10,nbench_port=10;$/;"	v
nbench_port	projects/semileptonic/test_bgq.cpp	/^const int nbench=10,nbench_port=10;$/;"	v
nbicgstab_inv	src/inverters/templates/bicgstab_invert_template_threaded.cpp	/^  int nbicgstab_inv=0;$/;"	m	namespace:nissa	file:
nbroken_links	src/operations/gaugeconf.hpp	/^    int nbroken_links;$/;"	m	struct:nissa::unitarity_check_result_t
nbytes_per_site	src/communicate/communicate.hpp	/^    uint64_t nbytes_per_site;$/;"	m	struct:nissa::comm_t
ncgm_inv	src/base/bench.hpp	/^  EXTERN int ncgm_inv,ncg_inv EQUAL_ZERO;$/;"	m	namespace:nissa
ncgm_solution	projects/semileptonic/semileptonic_smeared.cpp	/^int ncgm_solution;$/;"	v
nch_contr_2pts	projects/semileptonic/semileptonic_smeared.cpp	/^int nch_contr_2pts;$/;"	v
nch_contr_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int nch_contr_2pts;$/;"	v
nch_contr_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int nch_contr_2pts;$/;"	v
nch_contr_3pts	projects/semileptonic/semileptonic_smeared.cpp	/^int nch_contr_3pts;$/;"	v
nch_contr_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int nch_contr_3pts;$/;"	v
nch_contr_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int nch_contr_3pts;$/;"	v
ncolors	src/free_theory/free_theory_types.hpp	/^    uint32_t ncolors;$/;"	m	struct:nissa::bmpfile_info_header
ncombo	src/operations/stag/mesons.cpp	/^    int ncombo;$/;"	m	namespace:nissa::__anon11	file:
ncombo	tools/clusterize2.cpp	/^int T,ncorr,ncombo,ncorr_type,ntriple;$/;"	v
ncombo	tools/find_best_vir_partitioning/find.cpp	/^  int nfact,ncombo,icombo;$/;"	m	struct:valid_partition_lister_t	file:
ncombo_hadr_corr	projects/ib/mel.cpp	/^const int ncombo_hadr_corr=6;$/;"	v
ncomm_allocated	src/communicate/communicate.hpp	/^  EXTERN_COMMUNICATE int ncomm_allocated;$/;"	m	namespace:nissa
nconf	projects/nucleons/nucleons_smeared.cpp	/^int nconf;$/;"	v
nconf_load	projects/ib/conf.hpp	/^  EXTERN_CONF int nconf_load;$/;"	m	namespace:nissa
nconfs	tools/clusterize2.cpp	/^int start_conf_id,nconfs,nconfs_teo,confs_each;$/;"	v
nconfs	tools/conf_measure/magn.cpp	/^int nconfs,nflavs,nintervals,nhits;$/;"	v
nconfs	tools/x_clusterize/x_clusterize.cpp	/^int nconfs,nterm,njacks,each,clust_size;$/;"	v
nconfs_teo	tools/clusterize2.cpp	/^int start_conf_id,nconfs,nconfs_teo,confs_each;$/;"	v
ncontr	projects/semileptonic/new_version/new_types.hpp	/^  int ncontr;$/;"	m	struct:two_pts_corr_pars_t
ncontr_2pts	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int ncontr_2pts;$/;"	v
ncontr_2pts	projects/g/g.cpp	/^int ncontr_2pts;$/;"	v
ncontr_2pts	projects/reno_const/RIMOM.cpp	/^int ncontr_2pts;$/;"	v
ncontr_2pts	projects/semileptonic/semileptonic_smeared.cpp	/^int ncontr_2pts;$/;"	v
ncontr_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int ncontr_2pts;$/;"	v
ncontr_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int ncontr_2pts;$/;"	v
ncontr_3pts	projects/g/g.cpp	/^int ncontr_3pts;$/;"	v
ncontr_3pts	projects/semileptonic/semileptonic_smeared.cpp	/^int ncontr_3pts;$/;"	v
ncontr_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int ncontr_3pts;$/;"	v
ncontr_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int ncontr_3pts;$/;"	v
ncontr_tot	projects/g/g.cpp	/^int ninv_tot=0,ncontr_tot=0,nsmear_tot=0;$/;"	v
ncontr_tot	projects/reno_const/RIMOM.cpp	/^int ninv_tot=0,ncontr_tot=0,nsaved_prop_tot=0;$/;"	v
ncontr_tot	projects/semileptonic/semileptonic_smeared.cpp	/^int ninv_tot=0,ncontr_tot=0;$/;"	v
ncontr_tot	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int ninv_tot=0,ncontr_tot=0;$/;"	v
ncontr_tot	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int ninv_tot=0,ncontr_tot=0;$/;"	v
ncopies	src/operations/stag/spinpol.cpp	/^    int ncopies,nflavs,nhits,nmeas,nops;$/;"	m	namespace:nissa::__anon12	file:
ncopies	src/operations/stag/stag.hpp	/^    int ncopies;$/;"	m	struct:nissa::base_fermionic_meas_t
ncopies	tools/clusterize2.cpp	/^int start_copy_id,ncopies;$/;"	v
ncorr	projects/semileptonic/driver_corr.hpp	/^  int ncorr;$/;"	m	class:two_pts_parser_driver
ncorr	projects/semileptonic/new_version/new_types.hpp	/^  int ncorr,ntot_contr;$/;"	m	struct:two_pts_corr_group_t
ncorr	src/operations/contract/optimized_mesons_2pts.hpp	/^      int ncorr;$/;"	m	struct:nissa::two_pts_comp_t
ncorr	tools/clusterize2.cpp	/^int T,ncorr,ncombo,ncorr_type,ntriple;$/;"	v
ncorr_command	projects/semileptonic/new_version/test.cpp	/^int ncorr_command;$/;"	v
ncorr_computed_tot	projects/semileptonic/gevp.cpp	/^int ncorr_computed_tot,nsources;$/;"	v
ncorr_tot	projects/semileptonic/gevp.cpp	/^int ncorr_tot=0;$/;"	v
ncorr_tot	projects/semileptonic/gevp_3pts.cpp	/^int ncorr_tot=0;$/;"	v
ncorr_type	tools/clusterize2.cpp	/^int T,ncorr,ncombo,ncorr_type,ntriple;$/;"	v
nd	src/operations/smearing/Wflow.hpp	/^    int nd;$/;"	m	struct:nissa::internal_fermion_flower_t
ndemo_points	projects/x/progs/correct.cpp	/^int ndemo_points,dist2_max;$/;"	v
ndoubles	projects/semileptonic/gevp.cpp	/^int ndoubles,twall;$/;"	v
ndoubles	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int ndoubles;$/;"	m	struct:nissa::pseudofermion_t
ndyn_mass	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int ndyn_mass,nmass;$/;"	v
nel	src/base/vectors.hpp	/^    int64_t nel;$/;"	m	struct:nissa::nissa_vect
nel_in	src/communicate/all_to_all.hpp	/^    int nel_out,nel_in;$/;"	m	struct:nissa::all_to_all_comm_t
nel_out	src/communicate/all_to_all.hpp	/^    int nel_out,nel_in;$/;"	m	struct:nissa::all_to_all_comm_t
neu_energy	projects/ib/mel.cpp	/^double *lep_energy,*neu_energy;$/;"	v
neu_energy	projects/ib/meslep.hpp	/^  EXTERN_MESLEP double *lep_energy,*neu_energy;$/;"	m	namespace:nissa
neu_energy	projects/ib/test_prop.cpp	/^double lep_energy,neu_energy;$/;"	v
new_conf	projects/generate_confs/generate.cpp	/^quad_su3 *new_conf[2];$/;"	v
new_contr_2pts	projects/semileptonic/semileptonic_smeared.cpp	/^double *new_contr_2pts;$/;"	v
new_contr_3pts	projects/semileptonic/semileptonic_smeared.cpp	/^double *new_contr_3pts;$/;"	v
new_step	src/operations/remez/remez_algorithm.cpp	/^  void rat_approx_finder_t::new_step(int iter)$/;"	f	class:nissa::rat_approx_finder_t
next	src/base/vectors.hpp	/^    nissa_vect *next;$/;"	m	struct:nissa::nissa_vect
next	src/io/ILDG_File.hpp	/^    ILDG_message *next;$/;"	m	struct:nissa::ILDG_message
next_nsmooth_meas	src/operations/smearing/smooth.hpp	/^    int next_nsmooth_meas(int nsmooth)$/;"	f	struct:nissa::smooth_pars_t
next_state	src/new_types/dsfmt.hpp	/^    void next_state()$/;"	f	class:nissa::dsfmt_t
nextr	src/new_types/dsfmt.hpp	/^    uint64_t nextr;$/;"	m	class:nissa::dsfmt_t
nfact	tools/find_best_vir_partitioning/find.cpp	/^  int nfact,ncombo,icombo;$/;"	m	struct:valid_partition_lister_t	file:
nfft_filtered	projects/ib/prop.hpp	/^  EXTERN_PROP int nfft_filtered;$/;"	m	namespace:nissa
nfields_type	projects/ib/disco.cpp	/^  int nfields_type=4;$/;"	m	namespace:curr	file:
nfile_names	tools/clusterize2.cpp	/^int nfile_names;$/;"	v
nflavs	src/hmc/theory_pars.hpp	/^    int nflavs()$/;"	f	struct:nissa::theory_pars_t
nflavs	src/operations/stag/mesons.cpp	/^    int nflavs;$/;"	m	namespace:nissa::__anon11	file:
nflavs	src/operations/stag/spinpol.cpp	/^    int ncopies,nflavs,nhits,nmeas,nops;$/;"	m	namespace:nissa::__anon12	file:
nflavs	tools/conf_measure/magn.cpp	/^int nconfs,nflavs,nintervals,nhits;$/;"	v
nflows	src/operations/smearing/Wflow.hpp	/^    int nflows;$/;"	m	struct:nissa::Wflow_pars_t
ngauge_conf	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int igauge_conf=0,ngauge_conf,nanalized_conf;$/;"	v
ngauge_conf	projects/g/g.cpp	/^int ngauge_conf,nanalized_conf=0;$/;"	v
ngauge_conf	projects/ib/conf.hpp	/^  EXTERN_CONF int ngauge_conf;$/;"	m	namespace:nissa
ngauge_conf	projects/ib/mel.cpp	/^int ngauge_conf;$/;"	v
ngauge_conf	projects/reno_const/RIMOM.cpp	/^int ngauge_conf,nanalized_conf;$/;"	v
ngauge_conf	projects/semileptonic/gevp.cpp	/^int ngauge_conf,nanalyzed_conf;$/;"	v
ngauge_conf	projects/semileptonic/gevp_3pts.cpp	/^int ngauge_conf,nanalyzed_conf;$/;"	v
ngauge_conf	projects/semileptonic/semileptonic_smeared.cpp	/^int ngauge_conf,nanalyzed_conf=0;$/;"	v
ngauge_conf	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int ngauge_conf,nanalized_conf=0;$/;"	v
ngauge_substeps	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int ngauge_substeps;$/;"	m	struct:nissa::hmc_evol_pars_t
ngauss_sm_op	projects/semileptonic/new_version/test.cpp	/^int ngauss_sm_op;$/;"	v
ngrid	src/new_types/metadynamics.hpp	/^    int ngrid;$/;"	m	struct:nissa::meta_pars_t
nhadr_contr	projects/ib/mel.cpp	/^const int nhadr_contr=16+12;$/;"	v
nhadr_contr_tot	projects/ib/mel.cpp	/^int ninv_tot=0,nhadr_contr_tot=0,nlept_contr_tot=0,nsource_tot=0,nphoton_prop_tot=0;$/;"	v
nhadrolept_proj	projects/ib/mel.cpp	/^const int nhadrolept_proj=1,hadrolept_projs[nhadrolept_proj]={4};$/;"	v
nhb_hits	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^    int nhb_hits;$/;"	m	struct:nissa::pure_gauge_evol_pars_t
nhb_sweeps	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^    int nhb_sweeps;$/;"	m	struct:nissa::pure_gauge_evol_pars_t
nheavy	projects/g/g.cpp	/^int nmass,nheavy,ntheta;$/;"	v
nhits	src/operations/gaugeconf.cpp	/^      int nhits;$/;"	m	struct:nissa::heatbath_lx_conf_ns::pars_t	file:
nhits	src/operations/stag/spinpol.cpp	/^    int ncopies,nflavs,nhits,nmeas,nops;$/;"	m	namespace:nissa::__anon12	file:
nhits	src/operations/stag/stag.hpp	/^    int nhits;$/;"	m	struct:nissa::base_fermionic_meas_t
nhits	tools/conf_measure/magn.cpp	/^int nconfs,nflavs,nintervals,nhits;$/;"	v
nhits_done_so_far	projects/ib/disco.cpp	/^int nhits_done_so_far;$/;"	v
nhits_done_so_far_path	projects/ib/disco.cpp	/^std::string nhits_done_so_far_path()$/;"	f
nhmc_steps	projects/cpn/cpn.cpp	/^int nhmc_steps,nacc;$/;"	v
nimpcolors	src/free_theory/free_theory_types.hpp	/^    uint32_t nimpcolors;$/;"	m	struct:nissa::bmpfile_info_header
nind	projects/ib/mel.cpp	/^int nind;$/;"	v
nind_nonloc_links	src/operations/su3_paths/arbitrary.hpp	/^    int nnonloc_links,nind_nonloc_links;$/;"	m	struct:nissa::paths_calculation_structure
nindep_meslep_weak	projects/ib/meslep.hpp	/^  const int nindep_meslep_weak=9;$/;"	m	namespace:nissa
nins	projects/ib/mel.cpp	/^const int nins=3;$/;"	v
nins_kind	projects/ib/mel.cpp	/^const int nins_kind=5;$/;"	v
nins_kind	projects/ib/pars.hpp	/^  const int nins_kind=18;$/;"	m	namespace:nissa
nintervals	tools/conf_measure/magn.cpp	/^int nconfs,nflavs,nintervals,nhits;$/;"	v
ninv_tot	projects/g/g.cpp	/^int ninv_tot=0,ncontr_tot=0,nsmear_tot=0;$/;"	v
ninv_tot	projects/ib/mel.cpp	/^int ninv_tot=0,nhadr_contr_tot=0,nlept_contr_tot=0,nsource_tot=0,nphoton_prop_tot=0;$/;"	v
ninv_tot	projects/reno_const/RIMOM.cpp	/^int ninv_tot=0,ncontr_tot=0,nsaved_prop_tot=0;$/;"	v
ninv_tot	projects/semileptonic/gevp.cpp	/^int ninv_tot=0;$/;"	v
ninv_tot	projects/semileptonic/gevp_3pts.cpp	/^int ninv_tot=0;$/;"	v
ninv_tot	projects/semileptonic/semileptonic_smeared.cpp	/^int ninv_tot=0,ncontr_tot=0;$/;"	v
ninv_tot	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int ninv_tot=0,ncontr_tot=0;$/;"	v
ninv_tot	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int ninv_tot=0,ncontr_tot=0;$/;"	v
nissa	projects/generate_confs/driver.hpp	/^namespace nissa$/;"	n
nissa	projects/generate_confs/generate_quenched.cpp	/^namespace nissa$/;"	n	file:
nissa	projects/ib/conf.cpp	/^namespace nissa$/;"	n	file:
nissa	projects/ib/conf.hpp	/^namespace nissa$/;"	n
nissa	projects/ib/contr.cpp	/^namespace nissa$/;"	n	file:
nissa	projects/ib/contr.hpp	/^namespace nissa$/;"	n
nissa	projects/ib/meslep.cpp	/^namespace nissa$/;"	n	file:
nissa	projects/ib/meslep.hpp	/^namespace nissa$/;"	n
nissa	projects/ib/pars.cpp	/^namespace nissa$/;"	n	file:
nissa	projects/ib/pars.hpp	/^namespace nissa$/;"	n
nissa	projects/ib/prop.cpp	/^namespace nissa$/;"	n	file:
nissa	projects/ib/prop.hpp	/^namespace nissa$/;"	n
nissa	src/base/DDalphaAMG_bridge.hpp	/^namespace nissa$/;"	n
nissa	src/base/bench.cpp	/^namespace nissa$/;"	n	file:
nissa	src/base/bench.hpp	/^namespace nissa$/;"	n
nissa	src/base/close.cpp	/^namespace nissa$/;"	n	file:
nissa	src/base/close.hpp	/^namespace nissa$/;"	n
nissa	src/base/debug.cpp	/^namespace nissa$/;"	n	file:
nissa	src/base/debug.hpp	/^namespace nissa$/;"	n
nissa	src/base/init.cpp	/^namespace nissa$/;"	n	file:
nissa	src/base/init.hpp	/^namespace nissa$/;"	n
nissa	src/base/random.cpp	/^namespace nissa$/;"	n	file:
nissa	src/base/random.hpp	/^namespace nissa$/;"	n
nissa	src/base/thread_macros.hpp	/^namespace nissa$/;"	n
nissa	src/base/tmLQCD_bridge.cpp	/^namespace nissa$/;"	n	file:
nissa	src/base/tmLQCD_bridge.hpp	/^namespace nissa$/;"	n
nissa	src/base/vectors.cpp	/^namespace nissa$/;"	n	file:
nissa	src/base/vectors.hpp	/^namespace nissa$/;"	n
nissa	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/bgq/Wilson_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^namespace nissa$/;"	n
nissa	src/bgq/Wilson_hopping_matrix_lx_bgq.cpp	/^namespace nissa$/;"	n	file:
nissa	src/bgq/Wilson_hopping_matrix_lx_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/bgq/clover_term_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/bgq/intrinsic.hpp	/^namespace nissa$/;"	n
nissa	src/bgq/spi.cpp	/^namespace nissa$/;"	n	file:
nissa	src/bgq/spi.hpp	/^namespace nissa$/;"	n
nissa	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/bgq/staggered_hopping_matrix_eo_or_oe_bgq_32_64.hpp	/^namespace nissa$/;"	n
nissa	src/communicate/all_to_all.cpp	/^namespace nissa$/;"	n	file:
nissa	src/communicate/all_to_all.hpp	/^namespace nissa$/;"	n
nissa	src/communicate/borders.cpp	/^namespace nissa$/;"	n	file:
nissa	src/communicate/borders.hpp	/^namespace nissa$/;"	n
nissa	src/communicate/communicate.cpp	/^namespace nissa$/;"	n	file:
nissa	src/communicate/communicate.hpp	/^namespace nissa$/;"	n
nissa	src/communicate/edges.cpp	/^namespace nissa$/;"	n	file:
nissa	src/communicate/edges.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/WclovQ/dirac_operator_WclovQ.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/WclovQ/dirac_operator_WclovQ_portable.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/WclovQ2/dirac_operator_WclovQ2.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/WclovQ2/dirac_operator_WclovQ2.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/Wstat/dirac_operator_Wstat.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/Wstat/dirac_operator_Wstat.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/Wstat/reconstruct_tm_doublet.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/momenta/MFACC.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/momenta/MFACC.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/stD/dirac_operator_stD.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/stD/dirac_operator_stD.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/stD/dirac_operator_stDLeb_portable.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/stD/dirac_operator_stD_32_portable.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/stD/dirac_operator_stD_bgq.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/stD/dirac_operator_stD_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/stD/dirac_operator_stD_portable.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_128.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_128.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_portable.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmQ/dirac_operator_tmQ.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmQ/dirac_operator_tmQ.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmQ/dirac_operator_tmQ_128.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmQ/dirac_operator_tmQ_128.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmQ/dirac_operator_tmQ_bgq.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmQ/dirac_operator_tmQ_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmQ/dirac_operator_tmQ_portable.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmQ/reconstruct_tm_doublet.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmQ/reconstruct_tm_doublet.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmQ2/dirac_operator_tmQ2.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmQ2/dirac_operator_tmQ2.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmQ2/dirac_operator_tmQ2_128.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmQ2/dirac_operator_tmQ2_128.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmQ2/dirac_operator_tmQ2_128_bgq.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmQ2/dirac_operator_tmQ2_128_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmQ2/dirac_operator_tmQ2_bgq.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmQ2/dirac_operator_tmQ2_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmQ_left/dirac_operator_tmQ_left.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmQ_left/dirac_operator_tmQ_left_portable.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_128.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_128.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_bgq.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_portable.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmclovQ/dirac_operator_tmclovQ.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmclovQ/dirac_operator_tmclovQ.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmclovQ/dirac_operator_tmclovQ_128.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmclovQ/dirac_operator_tmclovQ_128.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmclovQ/dirac_operator_tmclovQ_bgq.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmclovQ/dirac_operator_tmclovQ_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmclovQ/reconstruct_tmclov_doublet.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmclovQ/reconstruct_tmclov_doublet.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2_128.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2_128.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2_128_bgq.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2_128_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2_bgq.cpp	/^namespace nissa$/;"	n	file:
nissa	src/dirac_operators/tmclovQ2/dirac_operator_tmclovQ2_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/eigenvalues/eigenvalues.hpp	/^namespace nissa$/;"	n
nissa	src/eigenvalues/eigenvalues_all.hpp	/^namespace nissa$/;"	n
nissa	src/eigenvalues/eigenvalues_arpack.cpp	/^namespace nissa$/;"	n	file:
nissa	src/eigenvalues/eigenvalues_arpack.hpp	/^namespace nissa$/;"	n
nissa	src/eigenvalues/eigenvalues_autarchic.cpp	/^namespace nissa$/;"	n	file:
nissa	src/eigenvalues/eigenvalues_autarchic.hpp	/^namespace nissa$/;"	n
nissa	src/free_theory/cg_eoprec_twisted_free_operator.cpp	/^namespace nissa$/;"	n	file:
nissa	src/free_theory/cg_eoprec_twisted_free_operator.hpp	/^namespace nissa$/;"	n
nissa	src/free_theory/free_theory_types.hpp	/^namespace nissa$/;"	n
nissa	src/free_theory/free_theory_types_routines.cpp	/^namespace nissa$/;"	n	file:
nissa	src/free_theory/free_theory_types_routines.hpp	/^namespace nissa$/;"	n
nissa	src/free_theory/tlSym_gauge_propagator.cpp	/^namespace nissa$/;"	n	file:
nissa	src/free_theory/tlSym_gauge_propagator.hpp	/^namespace nissa$/;"	n
nissa	src/free_theory/twisted_free_Dirac_eoprec_operator.cpp	/^namespace nissa$/;"	n	file:
nissa	src/free_theory/twisted_free_Dirac_eoprec_operator.hpp	/^namespace nissa$/;"	n
nissa	src/free_theory/twisted_propagator.cpp	/^namespace nissa$/;"	n	file:
nissa	src/free_theory/twisted_propagator.hpp	/^namespace nissa$/;"	n
nissa	src/geometry/geometry_Leb.cpp	/^namespace nissa$/;"	n	file:
nissa	src/geometry/geometry_Leb.hpp	/^namespace nissa$/;"	n
nissa	src/geometry/geometry_eo.cpp	/^namespace nissa$/;"	n	file:
nissa	src/geometry/geometry_eo.hpp	/^namespace nissa$/;"	n
nissa	src/geometry/geometry_lx.cpp	/^namespace nissa$/;"	n	file:
nissa	src/geometry/geometry_lx.hpp	/^namespace nissa$/;"	n
nissa	src/geometry/geometry_mix.cpp	/^namespace nissa$/;"	n	file:
nissa	src/geometry/geometry_mix.hpp	/^namespace nissa$/;"	n
nissa	src/geometry/geometry_vir.cpp	/^namespace nissa$/;"	n	file:
nissa	src/geometry/geometry_vir.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/backfield.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/backfield.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/fermions/pseudofermions_generation.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/fermions/pseudofermions_generation.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/fermions/rootst_eoimpr_quark_force.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/fermions/rootst_eoimpr_quark_force.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/gauge/MFACC_fields.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/gauge/MFACC_fields.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/gauge/Symanzik_action.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/gauge/Symanzik_action.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/gauge/Symanzik_force.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/gauge/Symanzik_force.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/gauge/Wilson_action.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/gauge/Wilson_action.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/gauge/Wilson_force.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/gauge/Wilson_force.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/gauge/gluonic_action.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/gauge/gluonic_force.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/gauge/gluonic_force.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/gauge/pure_gauge_Omelyan_integrator.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/gauge/pure_gauge_hmc_step.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/gauge/pure_gauge_hmc_step.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/gauge/pure_gauge_implicit_integrator.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/gauge/pure_gauge_implicit_integrator.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/gauge/topological_action.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/gauge/topological_action.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/gauge/topological_force.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/gauge/topological_force.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/hmc.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/momenta/momenta_action.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/momenta/momenta_action.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/momenta/momenta_evolve.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/momenta/momenta_evolve.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/momenta/momenta_generation.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/momenta/momenta_generation.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/multipseudo/Omelyan_integrator.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/multipseudo/Omelyan_integrator.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/multipseudo/multipseudo_rhmc_step.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/multipseudo/quark_force.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/multipseudo/quark_force.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/multipseudo/set_expansions.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/multipseudo/set_expansions.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/multipseudo/theory_action.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/multipseudo/theory_action.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/quark_pars.hpp	/^namespace nissa$/;"	n
nissa	src/hmc/theory_pars.cpp	/^namespace nissa$/;"	n	file:
nissa	src/hmc/theory_pars.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/Wclov/cg_invert_WclovQ.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/Wclov/cg_invert_WclovQ.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/Wclov/cg_invert_WclovQ2.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/momenta/cg_invert_MFACC.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/momenta/cg_invert_MFACC.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/momenta/cgm_invert_MFACC.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/momenta/cgm_invert_MFACC.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/staggered/cg_invert_evn_stD.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/staggered/cg_invert_evn_stD.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/staggered/cg_invert_stD.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/staggered/cg_invert_stD.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/staggered/cg_invert_stD2Leb_ee_m2_portable.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/staggered/cg_invert_stD2ee_m2.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/staggered/cg_invert_stD2ee_m2.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/staggered/cg_invert_stD2ee_m2_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/staggered/cg_invert_stD2ee_m2_portable.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/staggered/cgm_32_invert_stD2ee_m2.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/staggered/cgm_32_invert_stD2ee_m2.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/staggered/cgm_32_invert_stD2ee_m2_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/staggered/cgm_32_invert_stD2ee_m2_portable.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/staggered/cgm_invert_stD2ee_m2.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/staggered/cgm_invert_stD2ee_m2.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/staggered/cgm_invert_stD2ee_m2_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/staggered/cgm_invert_stD2ee_m2_portable.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/templates/bicgstab_invert_template_threaded.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/templates/cg_128_invert_template_threaded.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/templates/cg_invert_template_threaded.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/templates/cgm_32_invert_template_threaded.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/templates/cgm_invert_template_threaded.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/templates/modern_cg.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cg_128_invert_tmclovD_eoprec.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_clover/cg_128_invert_tmclovQ2.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_clover/cg_128_invert_tmclovQ2_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cg_64_invert_tmclovD_eoprec_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cg_64_invert_tmclovQ2.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cg_64_invert_tmclovQ2_portable.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cg_invert_tmclovD_eoprec.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_clover/cg_invert_tmclovD_eoprec.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cg_invert_tmclovQ.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_clover/cg_invert_tmclovQ.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cg_invert_tmclovQ2.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_clover/cg_invert_tmclovQ2.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cgm_invert_tmclovQ2.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_clover/cgm_invert_tmclovQ2.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/cgm_invert_tmclovQ2_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_clover/tmclov_frontends.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_clover/tmclov_frontends.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_mass/cg_128_invert_tmD_eoprec.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_mass/cg_128_invert_tmQ2.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_mass/cg_128_invert_tmQ2.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_mass/cg_128_invert_tmQ2_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_mass/cg_64_invert_tmD_eoprec_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_mass/cg_64_invert_tmQ2.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_mass/cg_64_invert_tmQ2_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_mass/cg_invert_tmD_eoprec.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_mass/cg_invert_tmD_eoprec.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_mass/cg_invert_tmQ2.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_mass/cg_invert_tmQ2.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_mass/cg_invert_tmQ2_bgq.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_mass/cg_invert_tmQ2_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_mass/cg_invert_tmQ2_common.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_mass/cgm_invert_tmQ2.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_mass/cgm_invert_tmQ2.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_mass/cgm_invert_tmQ2_bgq.hpp	/^namespace nissa$/;"	n
nissa	src/inverters/twisted_mass/tm_frontends.cpp	/^namespace nissa$/;"	n	file:
nissa	src/inverters/twisted_mass/tm_frontends.hpp	/^namespace nissa$/;"	n
nissa	src/io/ILDG_File.cpp	/^namespace nissa$/;"	n	file:
nissa	src/io/ILDG_File.hpp	/^namespace nissa$/;"	n
nissa	src/io/buffer.hpp	/^namespace nissa$/;"	n
nissa	src/io/checksum.cpp	/^namespace nissa$/;"	n	file:
nissa	src/io/checksum.hpp	/^namespace nissa$/;"	n
nissa	src/io/endianness.cpp	/^namespace nissa$/;"	n	file:
nissa	src/io/endianness.hpp	/^namespace nissa$/;"	n
nissa	src/io/input.cpp	/^namespace nissa$/;"	n	file:
nissa	src/io/input.hpp	/^namespace nissa$/;"	n
nissa	src/io/reader.cpp	/^namespace nissa$/;"	n	file:
nissa	src/io/reader.hpp	/^namespace nissa$/;"	n
nissa	src/io/writer.cpp	/^namespace nissa$/;"	n	file:
nissa	src/io/writer.hpp	/^namespace nissa$/;"	n
nissa	src/linalgs/linalgs.cpp	/^namespace nissa$/;"	n	file:
nissa	src/linalgs/linalgs.hpp	/^namespace nissa$/;"	n
nissa	src/new_types/complex.cpp	/^namespace nissa$/;"	n	file:
nissa	src/new_types/complex.hpp	/^namespace nissa$/;"	n
nissa	src/new_types/dirac.cpp	/^namespace nissa$/;"	n	file:
nissa	src/new_types/dirac.hpp	/^namespace nissa$/;"	n
nissa	src/new_types/dsfmt.cpp	/^namespace nissa$/;"	n	file:
nissa	src/new_types/dsfmt.hpp	/^namespace nissa$/;"	n
nissa	src/new_types/float_128.hpp	/^namespace nissa$/;"	n
nissa	src/new_types/float_256.cpp	/^namespace nissa$/;"	n	file:
nissa	src/new_types/float_256.hpp	/^namespace nissa$/;"	n
nissa	src/new_types/high_prec.cpp	/^namespace nissa$/;"	n	file:
nissa	src/new_types/high_prec.hpp	/^namespace nissa$/;"	n
nissa	src/new_types/metadynamics.cpp	/^namespace nissa$/;"	n	file:
nissa	src/new_types/metadynamics.hpp	/^namespace nissa$/;"	n
nissa	src/new_types/rat_approx.cpp	/^namespace nissa$/;"	n	file:
nissa	src/new_types/rat_approx.hpp	/^namespace nissa$/;"	n
nissa	src/new_types/read_new_types.cpp	/^namespace nissa$/;"	n	file:
nissa	src/new_types/read_new_types.hpp	/^namespace nissa$/;"	n
nissa	src/new_types/spin.cpp	/^namespace nissa$/;"	n	file:
nissa	src/new_types/spin.hpp	/^namespace nissa$/;"	n
nissa	src/new_types/su3.hpp	/^namespace nissa$/;"	n
nissa	src/new_types/su3_op.cpp	/^namespace nissa$/;"	n	file:
nissa	src/new_types/su3_op.hpp	/^namespace nissa$/;"	n
nissa	src/new_types/two_stage_computation.hpp	/^namespace nissa$/;"	n
nissa	src/operations/contract/mesons_2pts.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/contract/mesons_2pts.hpp	/^namespace nissa$/;"	n
nissa	src/operations/contract/mesons_eight.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/contract/mesons_eight.hpp	/^namespace nissa$/;"	n
nissa	src/operations/contract/optimized_mesons_2pts.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/contract/optimized_mesons_2pts.hpp	/^namespace nissa$/;"	n
nissa	src/operations/contract/site_contract.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/contract/site_contract.hpp	/^namespace nissa$/;"	n
nissa	src/operations/covariant_derivative.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/covariant_derivative.hpp	/^namespace nissa$/;"	n
nissa	src/operations/fft.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/fft.hpp	/^namespace nissa$/;"	n
nissa	src/operations/fourier_transform.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/fourier_transform.hpp	/^namespace nissa$/;"	n
nissa	src/operations/gauge_fixing.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/gauge_fixing.hpp	/^namespace nissa$/;"	n
nissa	src/operations/gaugeconf.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/gaugeconf.hpp	/^namespace nissa$/;"	n
nissa	src/operations/remap_vector.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/remap_vector.hpp	/^namespace nissa$/;"	n
nissa	src/operations/remez/remez_algorithm.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/remez/remez_algorithm.hpp	/^namespace nissa$/;"	n
nissa	src/operations/shift.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/shift.hpp	/^namespace nissa$/;"	n
nissa	src/operations/smearing/APE.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/smearing/APE.hpp	/^namespace nissa$/;"	n
nissa	src/operations/smearing/HYP.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/smearing/HYP.hpp	/^namespace nissa$/;"	n
nissa	src/operations/smearing/Wflow.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/smearing/Wflow.hpp	/^namespace nissa$/;"	n
nissa	src/operations/smearing/cooling.hpp	/^namespace nissa$/;"	n
nissa	src/operations/smearing/gaussian.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/smearing/gaussian.hpp	/^namespace nissa$/;"	n
nissa	src/operations/smearing/recursive_Wflower.hpp	/^namespace nissa$/;"	n
nissa	src/operations/smearing/smooth.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/smearing/smooth.hpp	/^namespace nissa$/;"	n
nissa	src/operations/smearing/stout.hpp	/^namespace nissa$/;"	n
nissa	src/operations/smearing/stout_common.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/smearing/stout_eo.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/smearing/stout_lx.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/source.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/source.hpp	/^namespace nissa$/;"	n
nissa	src/operations/stag/Laplace_op_2links.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/stag/Laplace_op_2links.hpp	/^namespace nissa$/;"	n
nissa	src/operations/stag/magnetization.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/stag/magnetization.hpp	/^namespace nissa$/;"	n
nissa	src/operations/stag/mesons.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/stag/mesons.hpp	/^namespace nissa$/;"	n
nissa	src/operations/stag/nucleon.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/stag/nucleon.hpp	/^namespace nissa$/;"	n
nissa	src/operations/stag/putpourri.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/stag/putpourri.hpp	/^namespace nissa$/;"	n
nissa	src/operations/stag/qed_corr.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/stag/qed_corr.hpp	/^namespace nissa$/;"	n
nissa	src/operations/stag/rendens.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/stag/rendens.hpp	/^namespace nissa$/;"	n
nissa	src/operations/stag/spinpol.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/stag/spinpol.hpp	/^namespace nissa$/;"	n
nissa	src/operations/stag/stag.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/stag/stag.hpp	/^namespace nissa$/;"	n
nissa	src/operations/stag/zumba.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/stag/zumba.hpp	/^namespace nissa$/;"	n
nissa	src/operations/su3_paths/all_rectangles.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/su3_paths/all_rectangles.hpp	/^namespace nissa$/;"	n
nissa	src/operations/su3_paths/arbitrary.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/su3_paths/arbitrary.hpp	/^namespace nissa$/;"	n
nissa	src/operations/su3_paths/clover_term.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/su3_paths/clover_term.hpp	/^namespace nissa$/;"	n
nissa	src/operations/su3_paths/gauge_sweeper.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/su3_paths/gauge_sweeper.hpp	/^namespace nissa$/;"	n
nissa	src/operations/su3_paths/plaquette.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/su3_paths/plaquette.hpp	/^namespace nissa$/;"	n
nissa	src/operations/su3_paths/pline.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/su3_paths/pline.hpp	/^namespace nissa$/;"	n
nissa	src/operations/su3_paths/rectangles.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/su3_paths/rectangles.hpp	/^namespace nissa$/;"	n
nissa	src/operations/su3_paths/rectangular_staples.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/su3_paths/rectangular_staples.hpp	/^namespace nissa$/;"	n
nissa	src/operations/su3_paths/squared_staples.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/su3_paths/squared_staples.hpp	/^namespace nissa$/;"	n
nissa	src/operations/su3_paths/topological_charge.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/su3_paths/topological_charge.hpp	/^namespace nissa$/;"	n
nissa	src/operations/su3_paths/watusso.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/su3_paths/watusso.hpp	/^namespace nissa$/;"	n
nissa	src/operations/vector_gather.cpp	/^namespace nissa$/;"	n	file:
nissa	src/operations/vector_gather.hpp	/^namespace nissa$/;"	n
nissa	src/routines/ios.cpp	/^namespace nissa$/;"	n	file:
nissa	src/routines/ios.hpp	/^namespace nissa$/;"	n
nissa	src/routines/math_routines.cpp	/^namespace nissa$/;"	n	file:
nissa	src/routines/math_routines.hpp	/^namespace nissa$/;"	n
nissa	src/routines/mpi_routines.cpp	/^namespace nissa$/;"	n	file:
nissa	src/routines/mpi_routines.hpp	/^namespace nissa$/;"	n
nissa	src/routines/thread.cpp	/^namespace nissa$/;"	n	file:
nissa	src/routines/thread.hpp	/^namespace nissa$/;"	n
nissa	tools/conf_transform/convert/gpu_stagphase.cpp	/^namespace nissa$/;"	n	file:
nissa	tools/conf_transform/convert/gpu_stagphase.hpp	/^namespace nissa$/;"	n
nissa_feed_conf_to_tmLQCD	src/base/tmLQCD_bridge.hpp	/^  inline void nissa_feed_conf_to_tmLQCD(tmLQCD::su3 *ext,int t,int x,int y,int z,int mu)$/;"	f	namespace:nissa
nissa_free	src/base/vectors.hpp	39;"	d
nissa_malloc	src/base/vectors.hpp	38;"	d
nissa_max	src/routines/math_routines.hpp	/^  T nissa_max(T a,T b)$/;"	f	namespace:nissa
nissa_vect	src/base/vectors.hpp	/^  struct nissa_vect$/;"	s	namespace:nissa
niter	projects/semileptonic/new_version/new_types.hpp	/^  int niter;$/;"	m	struct:ape_smear_pars_t
niter_max	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int niter_max=1000000;$/;"	v
niter_max	projects/g/g.cpp	/^int niter_max;$/;"	v
niter_max	projects/nucleons/nucleons_smeared.cpp	/^int niter_max=100000;$/;"	v
niter_max	projects/reno_const/RIMOM.cpp	/^int niter_max=1000000;$/;"	v
niter_max	projects/semileptonic/semileptonic_smeared.cpp	/^int niter_max=1000000;$/;"	v
niter_max	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int niter_max=100000;$/;"	v
niter_max	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int niter_max=100000;$/;"	v
nitermax	work_in_prog/eo_inverter/invert2.cpp	/^int nitermax;$/;"	v
njack	tools/clusterize2.cpp	/^int njack,clust_size;$/;"	v
njacks	tools/x_clusterize/x_clusterize.cpp	/^int nconfs,nterm,njacks,each,clust_size;$/;"	v
nknown	src/hmc/quark_pars.hpp	/^    const int nknown=2;$/;"	m	namespace:nissa::ferm_discretiz
nl	src/operations/smearing/recursive_Wflower.hpp	/^    int nl()$/;"	f	struct:nissa::recursive_Wflower_t
nlept_contr_tot	projects/ib/mel.cpp	/^int ninv_tot=0,nhadr_contr_tot=0,nlept_contr_tot=0,nsource_tot=0,nphoton_prop_tot=0;$/;"	v
nleptons	projects/ib/mel.cpp	/^int nleptons;$/;"	v
nlevels	src/base/DDalphaAMG_bridge.cpp	/^  int &nlevels=init_params.number_of_levels;$/;"	m	namespace:DD	file:
nlevels	src/operations/smearing/APE.hpp	/^    int nlevels;$/;"	m	struct:nissa::ape_pars_t
nlevels	src/operations/smearing/HYP.hpp	/^    int nlevels;$/;"	m	struct:nissa::hyp_pars_t
nlevels	src/operations/smearing/stout.hpp	/^    int nlevels;$/;"	m	struct:nissa::stout_pars_t
nlinks_per_staples_of_link	src/operations/su3_paths/gauge_sweeper.hpp	/^    int nlinks_per_staples_of_link,gpar;$/;"	m	struct:nissa::gauge_sweeper_t
nlinks_to_recv_list	src/operations/su3_paths/arbitrary.hpp	/^    int nranks_to_recv,*ranks_to_recv_list,*nlinks_to_recv_list,ntot_links_to_recv;$/;"	m	struct:nissa::paths_calculation_structure
nlinks_to_send_list	src/operations/su3_paths/arbitrary.hpp	/^    int nranks_to_send,*ranks_to_send_list,*nlinks_to_send_list,ntot_links_to_send;$/;"	m	struct:nissa::paths_calculation_structure
nlins	projects/ib/mel.cpp	/^const int nlins=2;$/;"	v
nlprop	projects/ib/mel.cpp	/^int nqprop,nlprop;$/;"	v
nlprop	projects/ib/prop.hpp	/^  EXTERN_PROP int nlprop;$/;"	m	namespace:nissa
nmass	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int ndyn_mass,nmass;$/;"	v
nmass	projects/g/g.cpp	/^int nmass,nheavy,ntheta;$/;"	v
nmass	projects/nucleons/nucleons_smeared.cpp	/^int nmass,im_3pts;$/;"	v
nmass	projects/reno_const/RIMOM.cpp	/^int nmass;$/;"	v
nmass	projects/semileptonic/new_version/new_semileptonic.cpp	/^  int nmass;$/;"	m	struct:propgroup_t	file:
nmass	projects/semileptonic/new_version/new_types.hpp	/^  int nmass;$/;"	m	struct:mass_res_group_t
nmass	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int nmass,ntheta;$/;"	v
nmass	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int nmass,ntheta;$/;"	v
nmassS0	projects/semileptonic/semileptonic_smeared.cpp	/^int nmassS0,nthetaS0;$/;"	v
nmassS0der	projects/semileptonic/semileptonic_smeared.cpp	/^int nmassS0der;$/;"	v
nmassS1	projects/semileptonic/semileptonic_smeared.cpp	/^int nmassS1,nthetaS1;$/;"	v
nmass_res_group	projects/semileptonic/new_version/test.cpp	/^int nmass_res_group,ntheta_group;$/;"	v
nmax	projects/reno_const/fourier.c	/^int nmin, nmax, n0min, n0max;$/;"	v
nmax_err_points	src/operations/remez/remez_algorithm.hpp	/^    int degree,nmax_err_points,nzero_err_points;$/;"	m	struct:nissa::rat_approx_finder_t
nmax_iterations	src/operations/gauge_fixing.hpp	/^    int nmax_iterations;$/;"	m	struct:nissa::LC_gauge_fixing_pars_t
nmd_steps	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^    int nmd_steps;$/;"	m	struct:nissa::pure_gauge_evol_pars_t
nmd_steps	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int nmd_steps;$/;"	m	struct:nissa::hmc_evol_pars_t
nmeas	src/operations/stag/spinpol.cpp	/^    int ncopies,nflavs,nhits,nmeas,nops;$/;"	m	namespace:nissa::__anon12	file:
nmeas_nonzero	src/operations/smearing/smooth.hpp	/^    int nmeas_nonzero()$/;"	f	struct:nissa::smooth_pars_t
nmes2pts_known	projects/ib/pars.cpp	/^  const int nmes2pts_known=20;$/;"	m	namespace:nissa	file:
nmeslep_corr	projects/ib/meslep.hpp	/^  EXTERN_MESLEP int nmeslep_corr;$/;"	m	namespace:nissa
nmeslep_proj	projects/ib/meslep.hpp	/^  const int nmeslep_proj=1,meslep_projs[nmeslep_proj]={4};$/;"	m	namespace:nissa
nmeslep_weak_ins	projects/ib/meslep.hpp	/^  const int nmeslep_weak_ins=17;$/;"	m	namespace:nissa
nmin	projects/reno_const/fourier.c	/^int nmin, nmax, n0min, n0max;$/;"	v
nmuS	projects/semileptonic/semileptonic_smeared.cpp	/^int compute_der,nmuS;$/;"	v
nnonloc_links	src/operations/su3_paths/arbitrary.hpp	/^    int nnonloc_links,nind_nonloc_links;$/;"	m	struct:nissa::paths_calculation_structure
no_conf_smearing	projects/semileptonic/semileptonic_smeared.cpp	/^enum conf_smearing_t{no_conf_smearing,ape_conf_smearing,stout_conf_smearing};$/;"	e	enum:conf_smearing_t	file:
noise_type	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int seed,noise_type;$/;"	v
noise_type	projects/g/g.cpp	/^int seed,noise_type,twall;$/;"	v
noise_type	projects/ib/mel.cpp	/^int seed,noise_type;$/;"	v
noise_type	projects/ib/prop.hpp	/^    rnd_t noise_type;$/;"	m	struct:nissa::qprop_t
noise_type	projects/semileptonic/new_version/new_semileptonic.cpp	/^  int noise_type;$/;"	m	struct:source_t	file:
noise_type	projects/semileptonic/new_version/test.cpp	/^int noise_type;$/;"	v
noise_type	projects/semileptonic/semileptonic_smeared.cpp	/^rnd_t noise_type;$/;"	v
noise_type	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int seed,noise_type,twall;$/;"	v
non_bw_surf_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t bulk_vol,non_bw_surf_vol,non_fw_surf_vol;$/;"	m	namespace:nissa
non_fw_surf_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t bulk_vol,non_bw_surf_vol,non_fw_surf_vol;$/;"	m	namespace:nissa
nop	src/operations/stag/mesons.cpp	/^    int nop;$/;"	m	namespace:nissa::__anon11	file:
nop_t	src/operations/stag/qed_corr.cpp	/^    const int nop_t=4;$/;"	m	namespace:nissa::__anon13	file:
nop_tot	projects/semileptonic/gevp_3pts.cpp	/^const int nop_tot=i3pts_base+3;$/;"	v
nops	src/operations/stag/spinpol.cpp	/^    int ncopies,nflavs,nhits,nmeas,nops;$/;"	m	namespace:nissa::__anon12	file:
nops	src/operations/stag/spinpol.hpp	/^    int nops(){return operators.size();}$/;"	f	struct:nissa::spinpol_meas_pars_t
norie	projects/ib/mel.cpp	/^const int norie=2;$/;"	v
norm2	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    double norm2(){return scal_prod_with(*this);}$/;"	f	struct:nissa::pseudofermion_t
normalize	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    double normalize(double norm=1)$/;"	f	struct:nissa::pseudofermion_t
normalize	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    double normalize(pseudofermion_t &other_vector,double norm=1)$/;"	f	struct:nissa::pseudofermion_t
nov_hits	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^    int nov_hits;$/;"	m	struct:nissa::pure_gauge_evol_pars_t
nov_sweeps	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^    int nov_sweeps;$/;"	m	struct:nissa::pure_gauge_evol_pars_t
nparal_dir	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int nparal_dir;$/;"	m	namespace:nissa
npassed_conf	projects/semileptonic/test_proj.cpp	/^int T,L,seed,tsource,npassed_conf,ntot_conf,rprop,binary_ascii;$/;"	v
npaths	src/operations/su3_paths/arbitrary.hpp	/^    int npaths,ntot_mov;$/;"	m	struct:nissa::paths_calculation_structure
npaths_per_action	projects/generate_confs/generate_quenched.cpp	/^int npaths_per_action;$/;"	v
nper_rank_fr	src/communicate/all_to_all.hpp	/^    int nranks_fr,*list_ranks_fr,*in_buf_dest,*nper_rank_fr,*in_buf_off_per_rank;$/;"	m	struct:nissa::all_to_all_comm_t
nper_rank_fr_temp	src/communicate/all_to_all.hpp	/^    int *nper_rank_to_temp,*nper_rank_fr_temp;$/;"	m	struct:nissa::temp_build_t
nper_rank_to	src/communicate/all_to_all.hpp	/^    int nranks_to,*list_ranks_to,*out_buf_source,*nper_rank_to,*out_buf_off_per_rank;$/;"	m	struct:nissa::all_to_all_comm_t
nper_rank_to_temp	src/communicate/all_to_all.hpp	/^    int *nper_rank_to_temp,*nper_rank_fr_temp;$/;"	m	struct:nissa::temp_build_t
nphoton_prop_tot	projects/ib/mel.cpp	/^int ninv_tot=0,nhadr_contr_tot=0,nlept_contr_tot=0,nsource_tot=0,nphoton_prop_tot=0;$/;"	v
nplanes	src/free_theory/free_theory_types.hpp	/^    uint16_t nplanes;$/;"	m	struct:nissa::bmpfile_info_header
npoints_dist2	projects/x/progs/correct.cpp	/^int *demo_of_loclx,*loclx_of_demo,*npoints_dist2;$/;"	v
nposs_path_flags	src/operations/su3_paths/arbitrary.hpp	16;"	d
nprod_confs	projects/generate_confs/generate_quenched.cpp	/^int nprod_confs;$/;"	v
nprop	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int nprop;$/;"	v
nprop	projects/semileptonic/new_version/new_types.cpp	/^int prop_group_t::nprop()$/;"	f	class:prop_group_t
npropS0	projects/semileptonic/semileptonic_smeared.cpp	/^int npropS0;$/;"	v
npropS0	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int npropS0;$/;"	v
npropS0	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int npropS0;$/;"	v
npropS1	projects/semileptonic/semileptonic_smeared.cpp	/^int npropS1;$/;"	v
npropS1	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int npropS1;$/;"	v
npropS1	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int npropS1;$/;"	v
nprop_group	projects/semileptonic/new_version/test.cpp	/^int nprop_group;$/;"	v
nprop_group_pair	projects/semileptonic/new_version/new_types.hpp	/^  int nprop_group_pair;$/;"	m	struct:corr_command_t
nprop_t	src/operations/stag/qed_corr.cpp	/^    const int nprop_t=6;$/;"	m	namespace:nissa::__anon13	file:
nproton_2pt_contr	projects/nucleons/nucleons_smeared.cpp	/^int nproton_2pt_contr=32;      \/\/VA     AV       VV       AA       TT        BB        TB        BT$/;"	v
nproton_3pt_chromo_contr	projects/nucleons/nucleons_smeared.cpp	/^int nproton_3pt_chromo_contr=2;$/;"	v
nproton_3pt_contr	projects/nucleons/nucleons_smeared.cpp	/^int nproton_3pt_contr=16;$/;"	v
npseudo_fs	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    std::vector<int> npseudo_fs;$/;"	m	struct:nissa::hmc_evol_pars_t
nqmass	projects/ib/mel.cpp	/^int nqmass,nr,nsources;$/;"	v
nqprop	projects/ib/mel.cpp	/^int nqprop,nlprop;$/;"	v
nqprop_kind	projects/ib/mel.cpp	/^const int nqprop_kind=6;$/;"	v
nquarks	projects/ib/disco.cpp	/^int nquarks;$/;"	v
nr	projects/ib/mel.cpp	/^int nqmass,nr,nsources;$/;"	v
nr	tools/x_clusterize/x_clusterize.cpp	/^int nr;$/;"	v
nrank_dir	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords nrank_dir;$/;"	m	namespace:nissa
nranks	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int rank,nranks,cart_rank;$/;"	m	namespace:nissa
nranks_fr	src/communicate/all_to_all.hpp	/^    int nranks_fr,*list_ranks_fr,*in_buf_dest,*nper_rank_fr,*in_buf_off_per_rank;$/;"	m	struct:nissa::all_to_all_comm_t
nranks_to	src/communicate/all_to_all.hpp	/^    int nranks_to,*list_ranks_to,*out_buf_source,*nper_rank_to,*out_buf_off_per_rank;$/;"	m	struct:nissa::all_to_all_comm_t
nranks_to_recv	src/operations/su3_paths/arbitrary.hpp	/^    int nranks_to_recv,*ranks_to_recv_list,*nlinks_to_recv_list,ntot_links_to_recv;$/;"	m	struct:nissa::paths_calculation_structure
nranks_to_send	src/operations/su3_paths/arbitrary.hpp	/^    int nranks_to_send,*ranks_to_send_list,*nlinks_to_send_list,ntot_links_to_send;$/;"	m	struct:nissa::paths_calculation_structure
nread_conf	projects/generate_confs/generate.cpp	/^int nread_conf=0;$/;"	v
nrecu	src/operations/smearing/Wflow.hpp	/^    int nrecu;$/;"	m	struct:nissa::Wflow_pars_t
nrev	projects/ib/mel.cpp	/^const int nrev=2;$/;"	v
nrnd_type	src/base/random.hpp	/^  const int nrnd_type=7;$/;"	m	namespace:nissa
nsaved_prop_tot	projects/reno_const/RIMOM.cpp	/^int ninv_tot=0,ncontr_tot=0,nsaved_prop_tot=0;$/;"	v
nsepa	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int nsepa,*tsepa;$/;"	v
nsetups	src/base/DDalphaAMG_bridge.cpp	/^  int nsetups[MAX_MG_LEVELS];$/;"	m	namespace:DD	file:
nsingle_or_all	projects/ib/disco.cpp	/^  int nsingle_or_all=2;$/;"	m	namespace:hits	file:
nsite_per_box	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int nsite_per_box[1<<NDIM];$/;"	m	namespace:nissa
nsite_per_box_dir_par	src/operations/su3_paths/gauge_sweeper.hpp	/^    int *nsite_per_box_dir_par;$/;"	m	struct:nissa::gauge_sweeper_t
nsm_lev	projects/semileptonic/gevp.cpp	/^int nsm_lev,*gaussian_niter;$/;"	v
nsm_lev_se	projects/semileptonic/semileptonic_smeared.cpp	/^int *gaussian_niter_se,nsm_lev_se;$/;"	v
nsm_lev_se	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *jacobi_niter_se,nsm_lev_se;$/;"	v
nsm_lev_se	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *jacobi_niter_se,nsm_lev_se;$/;"	v
nsm_lev_si	projects/semileptonic/semileptonic_smeared.cpp	/^int *gaussian_niter_si,nsm_lev_si;$/;"	v
nsm_lev_si	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *jacobi_niter_si,nsm_lev_si;$/;"	v
nsm_lev_si	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *jacobi_niter_si,nsm_lev_si;$/;"	v
nsm_lev_so	projects/semileptonic/semileptonic_smeared.cpp	/^int *gaussian_niter_so,nsm_lev_so;$/;"	v
nsm_lev_so	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *jacobi_niter_so,nsm_lev_so;$/;"	v
nsm_lev_so	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *jacobi_niter_so,nsm_lev_so;$/;"	v
nsmear_tot	projects/g/g.cpp	/^int ninv_tot=0,ncontr_tot=0,nsmear_tot=0;$/;"	v
nsmooth	src/operations/smearing/smooth.hpp	/^    int nsmooth()$/;"	f	struct:nissa::smooth_pars_t
nso_col	projects/ib/pars.hpp	/^  EXTERN_PARS int nso_spi,nso_col;$/;"	m	namespace:nissa
nso_spi	projects/ib/pars.hpp	/^  EXTERN_PARS int nso_spi,nso_col;$/;"	m	namespace:nissa
nsource	projects/semileptonic/new_version/new_semileptonic.cpp	/^int nsource;$/;"	v
nsource	projects/semileptonic/new_version/test.cpp	/^int nsource;$/;"	v
nsource_tot	projects/ib/mel.cpp	/^int ninv_tot=0,nhadr_contr_tot=0,nlept_contr_tot=0,nsource_tot=0,nphoton_prop_tot=0;$/;"	v
nsources	projects/ib/mel.cpp	/^int nqmass,nr,nsources;$/;"	v
nsources	projects/semileptonic/gevp.cpp	/^int ncorr_computed_tot,nsources;$/;"	v
nsources	projects/semileptonic/gevp_3pts.cpp	/^int nsources,twall,tsep;$/;"	v
nspec	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int nspec;$/;"	v
nspec	projects/semileptonic/semileptonic_smeared.cpp	/^int nspec;$/;"	v
nspec	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int nspec;$/;"	v
nspec	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int nspec;$/;"	v
nsteps	src/operations/smearing/cooling.hpp	/^    int nsteps;$/;"	m	struct:nissa::cool_pars_t
nsweep	projects/cpn/cpn.cpp	/^int nsweep,nterm;$/;"	v
nterm	projects/cpn/cpn.cpp	/^int nsweep,nterm;$/;"	v
nterm	projects/semileptonic/new_version/new_types.hpp	/^  int nterm;$/;"	m	struct:gauss_smear_pars_t
nterm	tools/x_clusterize/x_clusterize.cpp	/^int nconfs,nterm,njacks,each,clust_size;$/;"	v
ntheories	projects/generate_confs/driver.hpp	/^    int ntheories(){return theories.size();}$/;"	f	class:nissa::driver_t
ntheta	projects/g/g.cpp	/^int nmass,nheavy,ntheta;$/;"	v
ntheta	projects/semileptonic/new_version/new_semileptonic.cpp	/^  int ntheta;$/;"	m	struct:propgroup_t	file:
ntheta	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int nmass,ntheta;$/;"	v
ntheta	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int nmass,ntheta;$/;"	v
nthetaS0	projects/semileptonic/semileptonic_smeared.cpp	/^int nmassS0,nthetaS0;$/;"	v
nthetaS1	projects/semileptonic/semileptonic_smeared.cpp	/^int nmassS1,nthetaS1;$/;"	v
ntheta_group	projects/semileptonic/new_version/test.cpp	/^int nmass_res_group,ntheta_group;$/;"	v
nthppeta	projects/semileptonic/new_version/new_types.hpp	/^  int nthppeta;$/;"	m	struct:thppeta_group_t
ntot_conf	projects/semileptonic/test_proj.cpp	/^int T,L,seed,tsource,npassed_conf,ntot_conf,rprop,binary_ascii;$/;"	v
ntot_contr	projects/semileptonic/new_version/new_types.hpp	/^  int ncorr,ntot_contr;$/;"	m	struct:two_pts_corr_group_t
ntot_contr_2pts	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int ntot_contr_2pts=0;$/;"	v
ntot_contr_3pts	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int ntot_contr_3pts=0;$/;"	v
ntot_fields	projects/ib/disco.cpp	/^  int ntot_fields;$/;"	m	namespace:curr	file:
ntot_inv	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int wall_time,ntot_inv=0;$/;"	v
ntot_links_to_recv	src/operations/su3_paths/arbitrary.hpp	/^    int nranks_to_recv,*ranks_to_recv_list,*nlinks_to_recv_list,ntot_links_to_recv;$/;"	m	struct:nissa::paths_calculation_structure
ntot_links_to_send	src/operations/su3_paths/arbitrary.hpp	/^    int nranks_to_send,*ranks_to_send_list,*nlinks_to_send_list,ntot_links_to_send;$/;"	m	struct:nissa::paths_calculation_structure
ntot_mov	src/operations/su3_paths/arbitrary.hpp	/^    int npaths,ntot_mov;$/;"	m	struct:nissa::paths_calculation_structure
ntraj_prod	projects/generate_confs/generate.cpp	/^int ntraj_prod;$/;"	v
ntraj_tot	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int ntraj_tot;$/;"	m	struct:nissa::hmc_evol_pars_t
ntriple	tools/clusterize2.cpp	/^int T,ncorr,ncombo,ncorr_type,ntriple;$/;"	v
ntwo_pts_corr_group	projects/semileptonic/new_version/test.cpp	/^int ntwo_pts_corr_group;$/;"	v
nu	tools/conf_measure/magn.cpp	/^const int mu=1,nu=2;$/;"	v
nucleon_corr_meas	build/projects/generate_confs/parser.cpp	/^    nissa::nucleon_corr_meas_pars_t *nucleon_corr_meas;$/;"	m	union:YYSTYPE	file:
nucleon_corr_meas	build/projects/generate_confs/parser.hpp	/^    nissa::nucleon_corr_meas_pars_t *nucleon_corr_meas;$/;"	m	union:YYSTYPE
nucleon_corr_meas	projects/generate_confs/driver.hpp	/^    std::vector<nucleon_corr_meas_pars_t> nucleon_corr_meas;$/;"	m	class:nissa::driver_t
nucleon_corr_meas_pars_t	src/operations/stag/nucleon.hpp	/^    nucleon_corr_meas_pars_t() :$/;"	f	struct:nissa::nucleon_corr_meas_pars_t
nucleon_corr_meas_pars_t	src/operations/stag/nucleon.hpp	/^  struct nucleon_corr_meas_pars_t : base_fermionic_meas_t$/;"	s	namespace:nissa
num	src/new_types/float_256.hpp	/^    float_256 num;$/;"	m	struct:nissa::float_256_class
num	src/new_types/rat_approx.hpp	/^    int num,den;$/;"	m	struct:nissa::rat_approx_t
num	src/operations/remez/remez_algorithm.hpp	/^    int num,den;$/;"	m	struct:nissa::rat_approx_finder_t
nwall	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int nwall,*twall;$/;"	v
nweak_ind	projects/ib/mel.cpp	/^const int nweak_ind=9;$/;"	v
nweak_ins	projects/ib/mel.cpp	/^const int nweak_ins=17;$/;"	v
nwrite_conf	projects/generate_confs/generate.cpp	/^int nwrite_conf=0;$/;"	v
nzero_err_points	src/operations/remez/remez_algorithm.hpp	/^    int degree,nmax_err_points,nzero_err_points;$/;"	m	struct:nissa::rat_approx_finder_t
obtain_source_applying_sm_op	projects/semileptonic/new_version/test.cpp	/^int *obtain_source_applying_sm_op;$/;"	v
obtain_source_from	projects/semileptonic/new_version/test.cpp	/^int *obtain_source_from;$/;"	v
oct_su3	src/new_types/su3.hpp	/^  typedef su3 oct_su3[2*NDIM];$/;"	t	namespace:nissa
odd_apply_stD	src/dirac_operators/stD/dirac_operator_stD.cpp	/^  void odd_apply_stD(color *out,quad_su3 **conf,double m,color **in,double sign=1)$/;"	f	namespace:nissa
odd_apply_stD_dag	src/dirac_operators/stD/dirac_operator_stD.cpp	/^  void odd_apply_stD_dag(color *out,quad_su3 **conf,double m,color **in)$/;"	f	namespace:nissa
off	src/operations/smearing/recursive_Wflower.hpp	/^      int off() \/\/offset of the level$/;"	f	struct:nissa::recursive_Wflower_t::Wflow_lev_t
offs	projects/ib/pars.hpp	/^    coords offs;$/;"	m	struct:nissa::fft_mom_range_t
old_partitionings	tools/find_best_vir_partitioning/find.cpp	/^  std::map<coords4D_t,int> old_partitionings;$/;"	m	struct:valid_partition_lister_t	file:
old_theta	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double put_theta[4],old_theta[4]={0,0,0,0};$/;"	v
old_theta	projects/g/g.cpp	/^double put_theta[4],old_theta[4]={0,0,0,0};$/;"	v
old_theta	projects/ib/mel.cpp	/^double put_theta[4],old_theta[4]={0,0,0,0};$/;"	v
old_theta	projects/reno_const/RIMOM.cpp	/^momentum_t put_theta,old_theta={0,0,0,0};$/;"	v
old_theta	projects/semileptonic/gevp_3pts.cpp	/^momentum_t old_theta,put_theta;$/;"	v
old_theta	projects/semileptonic/semileptonic_smeared.cpp	/^double put_theta[4],old_theta[4]={0,0,0,0};$/;"	v
old_theta	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^double put_theta[4],old_theta[4]={0,0,0,0};$/;"	v
old_theta	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double put_theta[4],old_theta[4]={0,0,0,0};$/;"	v
oldincludedir	build/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	build/projects/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	build/src/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	build/tools/Makefile	/^oldincludedir = \/usr\/include$/;"	m
omega	projects/cpn/cpn.cpp	/^momentum_t *omega,*fomega;$/;"	v
omelyan_lambda	src/hmc/hmc.hpp	/^  const double omelyan_lambda=0.1931833;$/;"	m	namespace:nissa
omg	src/new_types/spin.hpp	/^  EXTERN_SPIN spinspin opg[4],omg[4];$/;"	m	namespace:nissa
ompg0_eig	src/free_theory/twisted_propagator.cpp	/^  spin ompg0_eig[2][2]={{{{+W, 0},{ 0, 0},{+W, 0},{ 0, 0}},$/;"	m	namespace:nissa	file:
only_charged_2pts	projects/semileptonic/semileptonic_smeared.cpp	/^int only_charged_2pts;$/;"	v
only_dir	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX bool only_dir[NDIM][NDIM];$/;"	m	namespace:nissa
only_standing_2pts	projects/semileptonic/semileptonic_smeared.cpp	/^int only_standing_2pts;$/;"	v
op	src/operations/stag/qed_corr.cpp	/^      int op;$/;"	m	struct:nissa::__anon13::ins_map_t	file:
op1_2pts	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int *op1_2pts,*op2_2pts;$/;"	v
op1_2pts	projects/g/g.cpp	/^int *op1_2pts,*op2_2pts;$/;"	v
op1_2pts	projects/reno_const/RIMOM.cpp	/^int *op1_2pts,*op2_2pts;$/;"	v
op1_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *op1_2pts,*op2_2pts;$/;"	v
op1_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *op1_2pts,*op2_2pts;$/;"	v
op1_3pts	projects/g/g.cpp	/^int *op1_3pts,*op2_3pts;$/;"	v
op1_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *op1_3pts,*op2_3pts;$/;"	v
op1_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *op1_3pts,*op2_3pts;$/;"	v
op2_2pts	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int *op1_2pts,*op2_2pts;$/;"	v
op2_2pts	projects/g/g.cpp	/^int *op1_2pts,*op2_2pts;$/;"	v
op2_2pts	projects/reno_const/RIMOM.cpp	/^int *op1_2pts,*op2_2pts;$/;"	v
op2_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *op1_2pts,*op2_2pts;$/;"	v
op2_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *op1_2pts,*op2_2pts;$/;"	v
op2_3pts	projects/g/g.cpp	/^int *op1_3pts,*op2_3pts;$/;"	v
op2_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *op1_3pts,*op2_3pts;$/;"	v
op2_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *op1_3pts,*op2_3pts;$/;"	v
op_list_t	src/operations/stag/spinpol.cpp	/^  typedef std::vector<std::pair<int,int> > op_list_t;$/;"	t	namespace:nissa	file:
op_name	src/operations/stag/qed_corr.cpp	/^    char op_name[nop_t][2]={"S","T","F","V"};$/;"	m	namespace:nissa::__anon13	file:
op_sink_2pts	projects/semileptonic/semileptonic_smeared.cpp	/^int *op_sour_2pts,*op_sink_2pts;$/;"	v
op_sink_3pts	projects/semileptonic/semileptonic_smeared.cpp	/^int *op_sour_3pts,*op_sink_3pts;$/;"	v
op_sour_2pts	projects/semileptonic/semileptonic_smeared.cpp	/^int *op_sour_2pts,*op_sink_2pts;$/;"	v
op_sour_3pts	projects/semileptonic/semileptonic_smeared.cpp	/^int *op_sour_3pts,*op_sink_3pts;$/;"	v
open	projects/ib/contr.cpp	/^    FILE *open(const std::string &path,int force_append=false)$/;"	f	class:nissa::open_or_append_t
open_file	src/routines/ios.cpp	/^  FILE *open_file(std::string outfile,const char *mode,int ext_rank)$/;"	f	namespace:nissa
open_file	tools/common_tools.cpp	/^FILE* open_file(const char *outfile,const char *mode)$/;"	f
open_file	tools/pack.c	/^FILE *open_file(const char *path,const char *mode)$/;"	f
open_input	src/io/input.cpp	/^  void open_input(std::string input_path)$/;"	f	namespace:nissa
open_input	tools/common_tools.cpp	/^void open_input(char *input_path)$/;"	f
open_or_append_t	projects/ib/contr.cpp	/^  class open_or_append_t$/;"	c	namespace:nissa	file:
open_pipe	tools/pack.c	/^FILE *open_pipe(const char *path,const char *mode)$/;"	f
open_prepare_input_file_for_tmLQCD	src/base/tmLQCD_bridge.cpp	/^  FILE* open_prepare_input_file_for_tmLQCD()$/;"	f	namespace:nissa
open_text_file_for_input	src/routines/ios.cpp	/^  FILE* open_text_file_for_input(std::string infile)$/;"	f	namespace:nissa
open_text_file_for_output	src/routines/ios.cpp	/^  FILE* open_text_file_for_output(std::string outfile)$/;"	f	namespace:nissa
opened	projects/ib/contr.cpp	/^    std::set<std::string> opened;$/;"	m	class:nissa::open_or_append_t	file:
operator !	src/io/buffer.hpp	/^    bool operator!(){return !st;}$/;"	f	struct:nissa::buffer_t
operator !=	src/new_types/float_256.hpp	/^    bool operator!=(float_256_class a){return !(operator==(a));}$/;"	f	struct:nissa::float_256_class
operator !=	src/operations/su3_paths/arbitrary.hpp	/^    bool operator!=(coords_t i){return !((*this)==i);}$/;"	f	struct:nissa::coords_t
operator *	src/new_types/float_256.hpp	/^    float_256_class operator*(double a){float_256_class b;float_256_prod_double(b.num,this->num,a);return b;}$/;"	f	struct:nissa::float_256_class
operator *	src/new_types/float_256.hpp	/^    float_256_class operator*(float_256_class a){float_256_class b;float_256_prod(b.num,this->num,a.num);return b;}$/;"	f	struct:nissa::float_256_class
operator *	src/new_types/float_256.hpp	/^  inline float_256_class operator*(double a,float_256_class b){return b*a;}$/;"	f	namespace:nissa
operator *=	src/new_types/float_256.hpp	/^    float_256_class operator*=(float_256_class a){return (*this)=(*this)*a;}$/;"	f	struct:nissa::float_256_class
operator *=	src/operations/contract/optimized_mesons_2pts.cpp	/^  two_pts_comp_t operator*=(two_pts_comp_t &a,double b)$/;"	f	namespace:nissa
operator +	src/new_types/float_256.hpp	/^    float_256_class operator+(double a){float_256_class b;float_256_summ_double(b.num,this->num,a);return b;}$/;"	f	struct:nissa::float_256_class
operator +	src/new_types/float_256.hpp	/^    float_256_class operator+(float_256_class a){float_256_class b;float_256_summ(b.num,this->num,a.num);return b;}$/;"	f	struct:nissa::float_256_class
operator +	src/new_types/float_256.hpp	/^  inline float_256_class operator+(double a,float_256_class b){return b+a;}$/;"	f	namespace:nissa
operator +=	src/new_types/float_256.hpp	/^    float_256_class operator+=(float_256_class a){return (*this)=(*this)+a;}$/;"	f	struct:nissa::float_256_class
operator +=	src/operations/contract/optimized_mesons_2pts.cpp	/^  two_pts_comp_t operator+=(two_pts_comp_t &a,two_pts_comp_t &b)$/;"	f	namespace:nissa
operator -	src/new_types/float_256.hpp	/^    float_256_class operator-(){float_256_class a;float_256_uminus(a.num,this->num);return a;}$/;"	f	struct:nissa::float_256_class
operator -	src/new_types/float_256.hpp	/^    float_256_class operator-(double a){return operator+(-a);}$/;"	f	struct:nissa::float_256_class
operator -	src/new_types/float_256.hpp	/^    float_256_class operator-(float_256_class a){float_256_class b;float_256_subt(b.num,this->num,a.num);return b;}$/;"	f	struct:nissa::float_256_class
operator -	src/new_types/float_256.hpp	/^  inline float_256_class operator-(double a,float_256_class b){return (-b)+a;}$/;"	f	namespace:nissa
operator -=	src/new_types/float_256.hpp	/^    float_256_class operator-=(float_256_class a){return (*this)=(*this)-a;}$/;"	f	struct:nissa::float_256_class
operator -=	src/operations/contract/optimized_mesons_2pts.cpp	/^  two_pts_comp_t operator-=(two_pts_comp_t &a,two_pts_comp_t &b)$/;"	f	namespace:nissa
operator /	src/new_types/float_256.hpp	/^    float_256_class operator\/(double a){return operator*(1\/a);}$/;"	f	struct:nissa::float_256_class
operator /	src/new_types/float_256.hpp	/^    float_256_class operator\/(float_256_class a){float_256_class b;float_256_div(b.num,this->num,a.num);return b;}$/;"	f	struct:nissa::float_256_class
operator /	src/new_types/float_256.hpp	/^  inline float_256_class operator\/(double a,float_256_class b){return (float_256_class)a\/b;}$/;"	f	namespace:nissa
operator /=	src/new_types/float_256.hpp	/^    float_256_class operator\/=(float_256_class a){return (*this)=(*this)\/a;}$/;"	f	struct:nissa::float_256_class
operator /=	src/operations/contract/optimized_mesons_2pts.cpp	/^  two_pts_comp_t operator\/=(two_pts_comp_t &a,double b)$/;"	f	namespace:nissa
operator <	src/new_types/float_256.hpp	/^    bool operator<(float_256_class a){return float_256_is_smaller(this->num,a.num);}$/;"	f	struct:nissa::float_256_class
operator <<	src/io/buffer.hpp	/^  template <class T> buffer_t &operator<<(buffer_t &out,T in)$/;"	f	namespace:nissa
operator <<	src/new_types/rat_approx.hpp	/^  inline buffer_t& operator<<(buffer_t &s,rat_approx_t appr)$/;"	f	namespace:nissa
operator <=	src/new_types/float_256.hpp	/^    bool operator<=(float_256_class a){return !(operator>(a));}$/;"	f	struct:nissa::float_256_class
operator =	projects/semileptonic/new_version/new_types.hpp	/^  gauge_conf_t& operator=(gauge_conf_t &in) {copy(in);return *thppis;}$/;"	f	struct:gauge_conf_t
operator =	projects/semileptonic/new_version/new_types.hpp	/^  in_source_t& operator=(const in_source_t &in) {copy(in);return *thppis;}$/;"	f	struct:in_source_t
operator ==	src/new_types/float_256.hpp	/^    bool operator==(float_256_class a){return float_256_is_equal(this->num,a.num);}$/;"	f	struct:nissa::float_256_class
operator ==	src/operations/su3_paths/arbitrary.hpp	/^    bool operator==(coords_t in){bool out=true;for(int i=0;i<NDIM;i++) out&=(c[i]==in.c[i]);return out;}$/;"	f	struct:nissa::coords_t
operator >	src/new_types/float_256.hpp	/^    bool operator>(float_256_class a){return float_256_is_greater(this->num,a.num);}$/;"	f	struct:nissa::float_256_class
operator >=	src/new_types/float_256.hpp	/^    bool operator>=(float_256_class a){return !(operator<(a));}$/;"	f	struct:nissa::float_256_class
operator >>	src/io/buffer.hpp	/^  template <class T> buffer_t &operator>>(buffer_t &in,T &out)$/;"	f	namespace:nissa
operator >>	src/new_types/rat_approx.hpp	/^  inline buffer_t& operator>>(buffer_t &s,rat_approx_t &appr)$/;"	f	namespace:nissa
operator []	projects/ib/prop.hpp	/^    spincolor* &operator[](int i){return sp[i];}$/;"	f	struct:nissa::qprop_t
operator []	src/new_types/float_256.hpp	/^    double &operator[](int i){return num[i];}$/;"	f	struct:nissa::float_256_class
operator []	src/operations/su3_paths/arbitrary.hpp	/^    int &operator[](int i){return c[i];}$/;"	f	struct:nissa::coords_t
operators	src/operations/stag/spinpol.hpp	/^    std::vector<std::pair<int,int> > operators;$/;"	m	struct:nissa::spinpol_meas_pars_t
opg	src/new_types/spin.hpp	/^  EXTERN_SPIN spinspin opg[4],omg[4];$/;"	m	namespace:nissa
ord	src/operations/su3_paths/arbitrary.hpp	/^    int ord;$/;"	m	struct:nissa::movement_link_id
ori_source	projects/semileptonic/gevp.cpp	/^colorspinspin *ori_source,*temp_transp,*S0[2][4][4];$/;"	v
ori_source_name_list	projects/ib/prop.hpp	/^  EXTERN_PROP std::vector<std::string> ori_source_name_list;$/;"	m	namespace:nissa
ori_source_norm2	projects/ib/prop.hpp	/^    double ori_source_norm2;$/;"	m	struct:nissa::qprop_t
original_source	projects/eight_BK/smeared_BK_all_in_one.cpp	/^colorspinspin *original_source;$/;"	v
original_source	projects/g/g.cpp	/^colorspinspin *original_source;$/;"	v
original_source	projects/ib/mel.cpp	/^PROP_TYPE *source,*original_source;$/;"	v
original_source	projects/nucleons/nucleons_smeared.cpp	/^su3spinspin *original_source;$/;"	v
original_source	projects/reno_const/RIMOM.cpp	/^su3spinspin *original_source;$/;"	v
original_source	projects/semileptonic/semileptonic_smeared.cpp	/^PROP_TYPE *original_source;$/;"	v
original_source	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^su3spinspin *original_source;$/;"	v
original_source	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^colorspinspin *original_source;$/;"	v
out_buf_cur_per_rank	src/communicate/all_to_all.hpp	/^    int *out_buf_cur_per_rank,*in_buf_cur_per_rank;$/;"	m	struct:nissa::temp_build_t
out_buf_off_per_rank	src/communicate/all_to_all.hpp	/^    int nranks_to,*list_ranks_to,*out_buf_source,*nper_rank_to,*out_buf_off_per_rank;$/;"	m	struct:nissa::all_to_all_comm_t
out_buf_source	src/communicate/all_to_all.hpp	/^    int nranks_to,*list_ranks_to,*out_buf_source,*nper_rank_to,*out_buf_off_per_rank;$/;"	m	struct:nissa::all_to_all_comm_t
out_buffer	tools/x_clusterize/x_clusterize.cpp	/^double *in_buffer,*out_buffer;$/;"	v
out_path	projects/nucleons/nucleons_smeared.cpp	/^char **conf_path,**out_path;$/;"	v
out_path	projects/semileptonic/test_proj.cpp	/^char conf_path[1024],out_path[1024];$/;"	v
out_path	tools/conf_measure/magn.cpp	/^char out_path[1024];$/;"	v
outfile	tools/conf_measure/magn.cpp	/^FILE *outfile;$/;"	v
outfile_2pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^char outfile_2pts[1024];$/;"	v
outfile_3pts	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^char outfile_3pts[1024];$/;"	v
outfolder	projects/eight_BK/smeared_BK_all_in_one.cpp	/^char conf_path[1024],outfolder[1024];$/;"	v
outfolder	projects/g/g.cpp	/^char outfolder[1024];$/;"	v
outfolder	projects/ib/conf.hpp	/^  EXTERN_CONF char conf_path[1024],outfolder[1024];$/;"	m	namespace:nissa
outfolder	projects/ib/mel.cpp	/^char conf_path[1024],outfolder[1024];$/;"	v
outfolder	projects/reno_const/RIMOM.cpp	/^char outfolder[1024];$/;"	v
outfolder	projects/semileptonic/gevp.cpp	/^char outfolder[100],conf_path[100];$/;"	v
outfolder	projects/semileptonic/gevp_3pts.cpp	/^char outfolder[100],conf_path[100];$/;"	v
outfolder	projects/semileptonic/semileptonic_smeared.cpp	/^char conf_path[1024],outfolder[1024];$/;"	v
outfolder	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^char outfolder[1024];$/;"	v
outpath	tools/clusterize2.cpp	/^sa_string *corr_name,*outpath;$/;"	v
output	projects/semileptonic/driver_corr.hpp	/^  two_pts_comp_t output;$/;"	m	class:two_pts_parser_driver
overrelax	src/operations/gauge_fixing.hpp	/^    enum method_t{overrelax,exponentiate};$/;"	e	enum:nissa::LC_gauge_fixing_pars_t::method_t
overrelax_exp	src/operations/smearing/cooling.hpp	/^    double overrelax_exp;$/;"	m	struct:nissa::cool_pars_t
overrelax_flag	src/operations/smearing/cooling.hpp	/^    int overrelax_flag;$/;"	m	struct:nissa::cool_pars_t
overrelax_lx_conf_handle	src/operations/gaugeconf.cpp	/^  void overrelax_lx_conf_handle(su3 out,su3 staple,int ivol,int mu,void *pars)$/;"	f	namespace:nissa
overrelax_prob	src/operations/gauge_fixing.hpp	/^    double overrelax_prob;$/;"	m	struct:nissa::LC_gauge_fixing_pars_t
p0max	projects/reno_const/fourier.c	/^double pmin, pmax, p0min, p0max;$/;"	v
p0min	projects/reno_const/fourier.c	/^double pmin, pmax, p0min, p0max;$/;"	v
pack_links	src/operations/su3_paths/gauge_sweeper.cpp	/^  void gauge_sweeper_t::pack_links(quad_su3 *conf,int ibase,int nbox_dir_par)$/;"	f	class:nissa::gauge_sweeper_t
packing_inited	src/operations/su3_paths/gauge_sweeper.hpp	/^    bool staples_inited,par_geom_inited,packing_inited;$/;"	m	struct:nissa::gauge_sweeper_t
packing_link_buf	src/operations/su3_paths/gauge_sweeper.hpp	/^    su3 *packing_link_buf;$/;"	m	struct:nissa::gauge_sweeper_t
packing_link_source_dest	src/operations/su3_paths/gauge_sweeper.hpp	/^    int *packing_link_source_dest;\/\/std::map<int,std::vector<int> > *packing_index;$/;"	m	struct:nissa::gauge_sweeper_t
pad	src/base/vectors.hpp	/^    char pad[(NISSA_VECT_ALIGNMENT-(2*sizeof(int64_t)+3*NISSA_VECT_STRING_LENGTH+sizeof(int)+2*sizeof(nissa_vect*)+sizeof(uint32_t))%NISSA_VECT_ALIGNMENT)%$/;"	m	struct:nissa::nissa_vect
pair_list	projects/semileptonic/new_version/new_types.hpp	/^  prop_group_pair_t *pair_list;$/;"	m	struct:corr_command_t
pana_c1_id_corr	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^double pana_c1_id_corr(double a2p2,gluon_info gl)$/;"	f
pana_c1_ig_corr	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^double pana_c1_ig_corr(double ap_mu,double a2p2,gluon_info gl)$/;"	f
pana_c2_id_corr	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^double pana_c2_id_corr(double a2p2,gluon_info gl)$/;"	f
pana_c2_ig_corr	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^double pana_c2_ig_corr(double ap_mu,double a2p2,gluon_info gl)$/;"	f
par_geom_inited	src/operations/su3_paths/gauge_sweeper.hpp	/^    bool staples_inited,par_geom_inited,packing_inited;$/;"	m	struct:nissa::gauge_sweeper_t
paral_dir	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords paral_dir;$/;"	m	namespace:nissa
params	src/base/DDalphaAMG_bridge.cpp	/^  DDalphaAMG_parameters params;$/;"	m	namespace:DD	file:
pars_t	src/operations/gaugeconf.cpp	/^      pars_t(double beta,int nhits) : beta(beta),nhits(nhits){}$/;"	f	struct:nissa::heatbath_lx_conf_ns::pars_t
pars_t	src/operations/gaugeconf.cpp	/^    struct pars_t$/;"	s	namespace:nissa::heatbath_lx_conf_ns	file:
parse_conf	tools/clusterize2.cpp	/^void parse_conf(int iconf,char *path)$/;"	f
parse_corr_error	build/projects/semileptonic/parse_corr.cpp	/^  void parse_corr_error(YYLTYPE *locp,two_pts_parser_driver *driver,const char *err)$/;"	f
parse_corr_lex	build/projects/semileptonic/parse_corr.cpp	83;"	d	file:
parse_file	tools/pack.c	/^void parse_file(const char *path_out,const char *path_in,int ncorr,name *corr_name,int *npieces)$/;"	f
parse_input	projects/x/progs/compute_corrections.cpp	/^void parse_input(quark_info &quark,gluon_info &gluon,char *output_folder,int &nests,flags &comp,char *input_path)$/;"	f
parse_input	projects/x/progs/compute_tree_level_corrections.cpp	/^void parse_input(quark_info &quark,char *output_folder,char *input_path)$/;"	f
parse_input	tools/clusterize2.cpp	/^void parse_input(char *path)$/;"	f
parser_error	build/projects/generate_confs/parser.cpp	/^  void parser_error(YYLTYPE *locp,driver_t *driver,const char *err)$/;"	f
parser_lex	build/projects/generate_confs/parser.cpp	88;"	d	file:
paste_eo_parts_and_write_ildg_gauge_conf	src/io/writer.cpp	/^  void paste_eo_parts_and_write_ildg_gauge_conf(std::string path,quad_su3 **eo_conf,size_t prec,ILDG_message *mess=NULL)$/;"	f	namespace:nissa
paste_eo_parts_into_lx_vector	src/geometry/geometry_mix.hpp	/^  template <class T> void paste_eo_parts_into_lx_vector(T *out_lx,T **in_eo)$/;"	f	namespace:nissa
path	projects/ib/disco.cpp	/^  std::string path()$/;"	f	namespace:hits
path	projects/ib/disco.cpp	/^  std::string path(int iEU)$/;"	f	namespace:EU1_EU2_EU4_EU6alt
path	projects/ib/disco.cpp	/^  std::string path(int iquark,int nhits)$/;"	f	namespace:curr
path	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    std::string path;$/;"	m	struct:nissa::conf_pars_t
path	src/operations/gaugeconf.hpp	/^    std::string path;$/;"	m	struct:nissa::gauge_obs_meas_pars_t
path	src/operations/stag/stag.hpp	/^    std::string path;$/;"	m	struct:nissa::base_fermionic_meas_t
path	src/operations/su3_paths/all_rectangles.hpp	/^    std::string path;$/;"	m	struct:nissa::all_rects_meas_pars_t
path	src/operations/su3_paths/pline.hpp	/^    std::string path;$/;"	m	struct:nissa::poly_corr_meas_pars_t
path	src/operations/su3_paths/topological_charge.hpp	/^    std::string path;$/;"	m	struct:nissa::top_meas_pars_t
path	src/operations/su3_paths/watusso.hpp	/^    std::string path;$/;"	m	struct:nissa::watusso_meas_pars_t
path	src/routines/ios.hpp	/^    std::string path;$/;"	m	class:nissa::lock_file_t
path_drawing_t	src/operations/su3_paths/arbitrary.hpp	/^  typedef std::deque<coords_t> path_drawing_t;$/;"	t	namespace:nissa
path_in	tools/x_clusterize/x_clusterize.cpp	/^char path_in[200];$/;"	v
path_list_steps_t	src/operations/su3_paths/arbitrary.hpp	/^  typedef std::vector<path_step_pars_t> path_list_steps_t;$/;"	t	namespace:nissa
path_out	tools/x_clusterize/x_clusterize.cpp	/^char path_out[200];$/;"	v
path_step_pars_t	src/operations/su3_paths/arbitrary.hpp	/^  typedef std::pair<int,int> path_step_pars_t;$/;"	t	namespace:nissa
pathpp	projects/semileptonic/new_version/new_types.hpp	/^  char pathpp[1024];$/;"	m	struct:corr_command_t
paths_calculation_structure	src/operations/su3_paths/arbitrary.hpp	/^    paths_calculation_structure(int ext_npaths,int ext_ntot_mov) {$/;"	f	struct:nissa::paths_calculation_structure
paths_calculation_structure	src/operations/su3_paths/arbitrary.hpp	/^  struct paths_calculation_structure$/;"	s	namespace:nissa
pattern_list	src/operations/contract/optimized_mesons_2pts.hpp	/^      std::vector<int> pattern_list;$/;"	m	struct:nissa::two_pts_comp_t
pdfdir	build/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	build/projects/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	build/src/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	build/tools/Makefile	/^pdfdir = ${docdir}$/;"	m
perp2_dir	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int perp2_dir[NDIM][NDIM-1][NDIM-2];$/;"	m	namespace:nissa
perp3_dir	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int perp3_dir[NDIM][NDIM-1][NDIM-2][NDIM-3];$/;"	m	namespace:nissa
perp_dir	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int perp_dir[NDIM][NDIM-1];$/;"	m	namespace:nissa
pf_action_residue	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    double pf_action_residue;$/;"	m	struct:nissa::hmc_evol_pars_t
ph	projects/ib/disco2.cpp	/^  spin1prop *ph;$/;"	m	namespace:free_th	file:
phases	tools/conf_measure/magn.cpp	/^coords *phases;$/;"	v
phi	projects/x/tests/test_stochastic_qqg_vertex.cpp	/^spin1field *phi,*eta;$/;"	v
phi	projects/x/tests/test_tlSym_gluon_stochastic_propagator.cpp	/^spin1field *phi,*eta;$/;"	v
phi	projects/x/tests/test_twisted_propagator_stochastic_correction.cpp	/^spin1field *phi,*eta;$/;"	v
phi	src/hmc/gauge/pure_gauge_hmc_step.cpp	/^    su3 **phi,**pi;$/;"	m	namespace:nissa::aux	file:
phi_old	src/hmc/gauge/pure_gauge_hmc_step.cpp	/^    su3 **phi_old,**pi_old;$/;"	m	namespace:nissa::aux	file:
photon	projects/ib/checks.cpp	/^gauge_info photon;$/;"	v
photon	projects/ib/mel.cpp	/^gauge_info photon;$/;"	v
photon	projects/ib/pars.hpp	/^  EXTERN_PARS gauge_info photon;$/;"	m	namespace:nissa
photon_eta	projects/ib/prop.hpp	/^  EXTERN_PROP spin1field *photon_eta;$/;"	m	namespace:nissa
photon_field	projects/ib/mel.cpp	/^spin1field *photon_field;$/;"	v
photon_field	projects/ib/prop.hpp	/^  EXTERN_PROP spin1field *photon_field;$/;"	m	namespace:nissa
photon_pars	projects/ib/disco2.cpp	/^gauge_info photon_pars;$/;"	v
photon_phi	projects/ib/prop.hpp	/^  EXTERN_PROP spin1field *photon_phi;$/;"	m	namespace:nissa
photon_prop_time	projects/ib/mel.cpp	/^double source_time=0,photon_prop_time=0,lepton_prop_time=0;$/;"	v
pi	projects/cpn/cpn.cpp	/^ON_t *zeta,*zeta_old,*pi,*fpi;$/;"	v
pi	src/hmc/gauge/pure_gauge_hmc_step.cpp	/^    su3 **phi,**pi;$/;"	m	namespace:nissa::aux	file:
pi_old	src/hmc/gauge/pure_gauge_hmc_step.cpp	/^    su3 **phi_old,**pi_old;$/;"	m	namespace:nissa::aux	file:
pkgdatadir	build/Makefile	/^pkgdatadir = $(datadir)\/nissa$/;"	m
pkgdatadir	build/projects/Makefile	/^pkgdatadir = $(datadir)\/nissa$/;"	m
pkgdatadir	build/src/Makefile	/^pkgdatadir = $(datadir)\/nissa$/;"	m
pkgdatadir	build/tools/Makefile	/^pkgdatadir = $(datadir)\/nissa$/;"	m
pkgincludedir	build/Makefile	/^pkgincludedir = $(includedir)\/nissa$/;"	m
pkgincludedir	build/projects/Makefile	/^pkgincludedir = $(includedir)\/nissa$/;"	m
pkgincludedir	build/src/Makefile	/^pkgincludedir = $(includedir)\/nissa$/;"	m
pkgincludedir	build/tools/Makefile	/^pkgincludedir = $(includedir)\/nissa$/;"	m
pkglibdir	build/Makefile	/^pkglibdir = $(libdir)\/nissa$/;"	m
pkglibdir	build/projects/Makefile	/^pkglibdir = $(libdir)\/nissa$/;"	m
pkglibdir	build/src/Makefile	/^pkglibdir = $(libdir)\/nissa$/;"	m
pkglibdir	build/tools/Makefile	/^pkglibdir = $(libdir)\/nissa$/;"	m
pkglibexecdir	build/Makefile	/^pkglibexecdir = $(libexecdir)\/nissa$/;"	m
pkglibexecdir	build/projects/Makefile	/^pkglibexecdir = $(libexecdir)\/nissa$/;"	m
pkglibexecdir	build/src/Makefile	/^pkglibexecdir = $(libexecdir)\/nissa$/;"	m
pkglibexecdir	build/tools/Makefile	/^pkglibexecdir = $(libexecdir)\/nissa$/;"	m
plan_comm	src/routines/mpi_routines.hpp	/^  EXTERN_MPI MPI_Comm plan_comm[NDIM];$/;"	m	namespace:nissa
plan_rank	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords plan_rank,line_rank,line_coord_rank;$/;"	m	namespace:nissa
plaq_pol_meas	build/projects/generate_confs/parser.cpp	/^    nissa::gauge_obs_meas_pars_t *plaq_pol_meas;$/;"	m	union:YYSTYPE	file:
plaq_pol_meas	build/projects/generate_confs/parser.hpp	/^    nissa::gauge_obs_meas_pars_t *plaq_pol_meas;$/;"	m	union:YYSTYPE
plaq_pol_meas	projects/generate_confs/driver.hpp	/^    std::vector<gauge_obs_meas_pars_t> plaq_pol_meas;$/;"	m	class:nissa::driver_t
plot_d2_max	projects/x/progs/correct.cpp	/^const int plot_d2_max=70;$/;"	v
pmax	projects/reno_const/fourier.c	/^double pmin, pmax, p0min, p0max;$/;"	v
pmin	projects/reno_const/fourier.c	/^double pmin, pmax, p0min, p0max;$/;"	v
point_chromo_operator	src/operations/su3_paths/clover_term.cpp	/^  void point_chromo_operator(clover_term_t Cl,quad_su3 *conf,int X)$/;"	f	namespace:nissa
point_gamma_proj_summ	projects/semileptonic/test_proj.cpp	/^void point_gamma_proj_summ(proj_prop_t out,su3spinspin in)$/;"	f
point_magn	tools/conf_measure/magn.cpp	/^complex *point_magn;$/;"	v
point_plaquette_eo_conf	src/operations/su3_paths/plaquette.cpp	/^  void point_plaquette_eo_conf(complex loc_plaq,quad_su3 **conf,int par,int A)$/;"	f	namespace:nissa
point_plaquette_lx_conf	src/operations/su3_paths/plaquette.cpp	/^  void point_plaquette_lx_conf(complex loc_plaq,quad_su3 *conf,int A)$/;"	f	namespace:nissa
point_proton_sequential_contraction	projects/nucleons/nucleons_smeared.cpp	/^void point_proton_sequential_contraction(complex contr,su3spinspin S0,dirac_matr g,su3spinspin S1)$/;"	f
pointer	src/io/input.cpp	/^      void *pointer;$/;"	m	struct:nissa::__anon9::triple_tag	file:
poles	src/new_types/rat_approx.hpp	/^    std::vector<double> poles;$/;"	m	struct:nissa::rat_approx_t
poly	src/operations/remez/remez_algorithm.hpp	/^    float_high_prec_t *zero,*xmax,*step,*yy,*poly;$/;"	m	struct:nissa::rat_approx_finder_t
poly_corr_meas_pars_t	src/operations/su3_paths/pline.hpp	/^    poly_corr_meas_pars_t() :$/;"	f	struct:nissa::poly_corr_meas_pars_t
poly_corr_meas_pars_t	src/operations/su3_paths/pline.hpp	/^  struct poly_corr_meas_pars_t$/;"	s	namespace:nissa
poly_der	src/operations/remez/remez_algorithm.cpp	/^  float_high_prec_t rat_approx_finder_t::poly_der(float_high_prec_t x,float_high_prec_t *poly,int size) $/;"	f	class:nissa::rat_approx_finder_t
poly_eval	src/operations/remez/remez_algorithm.cpp	/^  float_high_prec_t rat_approx_finder_t::poly_eval(float_high_prec_t x,float_high_prec_t *poly,int size)$/;"	f	class:nissa::rat_approx_finder_t
pos	src/io/ILDG_File.hpp	/^    MPI_Offset pos;$/;"	m	struct:nissa::ILDG_File_view
pos	src/new_types/dirac.hpp	/^    int pos[NDIRAC];$/;"	m	struct:nissa::dirac_matr
pos	src/operations/su3_paths/arbitrary.hpp	/^    int pos;$/;"	m	struct:nissa::paths_calculation_structure
precompute_propagators	projects/ib/disco2.cpp	/^  void precompute_propagators()$/;"	f	namespace:free_th
prefix	build/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	build/projects/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	build/src/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	build/tools/Makefile	/^prefix = \/usr\/local$/;"	m
prepare_conf	projects/semileptonic/test_proj.cpp	/^void prepare_conf()$/;"	f
prepare_demo_table	projects/x/progs/correct.cpp	/^void prepare_demo_table(double cut_angle,int max_dist)$/;"	f
prepare_dislike_sequential_source	projects/nucleons/nucleons_smeared.cpp	/^void prepare_dislike_sequential_source(int rlike,int rdislike,int slice_to_take)$/;"	f
prepare_for_next_flow	src/operations/smearing/Wflow.hpp	/^    void prepare_for_next_flow(quad_su3 *ext_conf)$/;"	f	struct:nissa::fermion_flower_t
prepare_like_sequential_source	projects/nucleons/nucleons_smeared.cpp	/^void prepare_like_sequential_source(int rlike,int rdislike,int slice_to_take)$/;"	f
pressure_dens	src/operations/stag/putpourri.cpp	/^    complex pressure_dens;$/;"	m	struct:nissa::fermionic_putpourri_t	file:
prev	src/base/vectors.hpp	/^    nissa_vect *prev;$/;"	m	struct:nissa::nissa_vect
prev_der	src/operations/gauge_fixing.cpp	/^    su3 *prev_der;$/;"	m	namespace:nissa::GCG	file:
print	src/operations/contract/optimized_mesons_2pts.cpp	/^  void two_pts_comp_t::print(FILE *fout)$/;"	f	class:nissa::two_pts_comp_t
print_all_eigenstuff	src/eigenvalues/eigenvalues_all.hpp	/^  void print_all_eigenstuff(const F &f,int mat_size)$/;"	f	namespace:nissa
print_all_vect_content	src/base/vectors.cpp	/^  void print_all_vect_content()$/;"	f	namespace:nissa
print_ave	projects/x/progs/average_corr.cpp	/^void print_ave(const char *outf,const char *suff)$/;"	f
print_backtrace_list	src/base/debug.cpp	/^  void print_backtrace_list()$/;"	f	namespace:nissa
print_banner	src/base/init.cpp	/^  void print_banner()$/;"	f	namespace:nissa
print_bar2pts_contr	projects/ib/contr.cpp	/^  void print_bar2pts_contr()$/;"	f	namespace:nissa
print_bmp_header	projects/x/src/routines/bmp.cpp	/^void print_bmp_header(bmpfile_magic &Bitmap_File_Magic,bmpfile_header &Bitmap_File_Header,bmpfile_info_header &Bitmap_Info_Header)$/;"	f
print_contraction_to_file	src/routines/ios.cpp	/^  void print_contraction_to_file(FILE *fout,int op_sour,int op_sink,complex *contr,int twall,const char *tag,double norm,int skip_header)$/;"	f	namespace:nissa
print_contractions	projects/ib/contr.hpp	/^  inline void print_contractions()$/;"	f	namespace:nissa
print_contractions_to_file	src/routines/ios.cpp	/^  void print_contractions_to_file(FILE *fout,int ncontr,const int *op_sour,const int *op_sink,complex *contr,int twall,const char *tag,double norm,int skip_header)$/;"	f	namespace:nissa
print_contractions_to_file	src/routines/ios.hpp	/^  inline void print_contractions_to_file(FILE *fout,std::vector<idirac_pair_t> &list,complex *contr,int twall,const char *tag,double norm,int skip_header=false)$/;"	f	namespace:nissa
print_corr	projects/x/tests/test_meson_exchange_correction.cpp	/^void print_corr(quark_info qu,gluon_info gl,int n)$/;"	f
print_correlations	projects/ib/mel.cpp	/^void print_correlations()$/;"	f
print_correlations_to_file	src/operations/contract/optimized_mesons_2pts.cpp	/^  void two_pts_comp_t::print_correlations_to_file(FILE *fout,double *corr)$/;"	f	class:nissa::two_pts_comp_t
print_dirac	src/new_types/dirac.hpp	/^  inline void print_dirac(dirac_matr *in)$/;"	f	namespace:nissa
print_handcuffs_contr	projects/ib/contr.cpp	/^  void print_handcuffs_contr()$/;"	f	namespace:nissa
print_mes2pts_contr	projects/ib/contr.cpp	/^  void print_mes2pts_contr(int n,int force_append,int skip_inner_header,const std::string &alternative_header_template)$/;"	f	namespace:nissa
print_meslep_contr	projects/ib/meslep.cpp	/^  void print_meslep_contr()$/;"	f	namespace:nissa
print_ottos_contractions_to_file	projects/eight_BK/smeared_BK_all_in_one.cpp	/^void print_ottos_contractions_to_file(FILE *fout)$/;"	f
print_propagator_subsets	projects/reno_const/RIMOM.cpp	/^void print_propagator_subsets(int nsubset,interv *inte,const char *setname,int *do_iparr,coords mul)$/;"	f
print_ref_prop	projects/ib/checks.cpp	/^void print_ref_prop()$/;"	f
print_single_statistic	projects/ib/conf.cpp	/^  inline void print_single_statistic(double frac_time,double tot_time,int niter,const char *tag)$/;"	f	namespace:nissa
print_stat	projects/generate_confs/generate.cpp	/^void print_stat(const char *what,double time,int n,int flops=0)$/;"	f
print_stat	tools/benchmarks/stag.cpp	/^void print_stat(const char *what,double time,int n,int flops)$/;"	f
print_statistics	projects/ib/conf.cpp	/^  void print_statistics()$/;"	f	namespace:nissa
print_time	projects/ib/mel.cpp	/^double inv_time=0,hadr_contr_time=0,lept_contr_time=0,print_time=0;$/;"	v
print_time_momentum_propagator	projects/reno_const/RIMOM.cpp	/^void print_time_momentum_propagator()$/;"	f
print_two_points_contractions_to_file	projects/eight_BK/smeared_BK_all_in_one.cpp	/^void print_two_points_contractions_to_file(FILE *fout)$/;"	f
printf	projects/semileptonic/new_version/new_types.hpp	/^  void printf() {master_printf("List of masses and residues\\n");for(int i=0;i<nmass;i++){master_printf("%lg %lg\\n",mass[i],residues[i]);}}$/;"	f	struct:mass_res_group_t
printf	projects/semileptonic/new_version/new_types.hpp	/^  void printf() {master_printf("List of thetas\\n");for(int i=0;i<ntheta;i++) master_printf("%lg\\n",thppeta[i]);}$/;"	f	struct:thppeta_group_t
process_gaussianity	tools/Gaussiansmear_test.cpp	/^void process_gaussianity(double *a,double *e,double *x,int maxpow)$/;"	f
program_details	config/missing	/^program_details ()$/;"	f
program_transform_name	build/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	build/projects/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	build/src/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	build/tools/Makefile	/^program_transform_name = s,x,x,$/;"	m
proj	projects/nucleons/nucleons_smeared.cpp	/^spinspin proj[3]; \/\/projectors over N and N*, and 00 compont of N (in the spinorial representation)$/;"	v
proj_couples	projects/nucleons/nucleons_smeared.cpp	/^int proj_couples[4][2]={{0,5},{2,7},{1,4},{3,6}}; \/\/independent couples$/;"	v
proj_entr	projects/nucleons/nucleons_smeared.cpp	/^int proj_entr[3][4]={{1,1,-1,-1},{1,1,1,1},{1,0,-1,0}};$/;"	v
proj_ind1	projects/nucleons/nucleons_smeared.cpp	/^int proj_ind1[8]={0,0,1,1,2,2,3,3},proj_ind2[8]={0,2,1,3,0,2,1,3}; \/\/indices different from 0$/;"	v
proj_ind2	projects/nucleons/nucleons_smeared.cpp	/^int proj_ind1[8]={0,0,1,1,2,2,3,3},proj_ind2[8]={0,2,1,3,0,2,1,3}; \/\/indices different from 0$/;"	v
proj_prop_t	projects/semileptonic/test_proj.cpp	/^typedef double proj_prop_t[NGAMMA];$/;"	t	file:
prop	projects/semileptonic/test_proj.cpp	/^su3spinspin *source,**solution[2],*prop;$/;"	v
prop	projects/x/tests/test_meson_self_energy_stochastic_correction.cpp	/^spinspin *prop,*self_prop;\/\/,*id;$/;"	v
prop1_hadr_map	projects/ib/mel.cpp	/^const qprop_t prop1_hadr_map[ncombo_hadr_corr]={PROP_0,PROP_0,PROP_0,PROP_0,PROP_0      ,PROP_PHOTON};\/\/,PROP_0};$/;"	v
prop2_hadr_map	projects/ib/mel.cpp	/^const qprop_t prop2_hadr_map[ncombo_hadr_corr]={PROP_0,PROP_S,PROP_P,PROP_T,PROP_PHOTON2,PROP_PHOTON};\/\/,PROP_VECTOR};$/;"	v
prop_abbr	projects/ib/mel.cpp	/^const char prop_abbr[]=                       "0"       "S"     "P"     "T"       "L"           "M";\/\/            "V";$/;"	v
prop_group	projects/semileptonic/new_version/test.cpp	/^prop_group_t *prop_group;$/;"	v
prop_group_command	projects/semileptonic/new_version/test.cpp	/^prop_group_command_t *prop_group_command;$/;"	v
prop_group_command_t	projects/semileptonic/new_version/new_types.hpp	/^struct prop_group_command_t$/;"	s
prop_group_in	projects/semileptonic/new_version/new_types.hpp	/^  prop_group_t *prop_group_in;$/;"	m	struct:prop_group_command_t
prop_group_out	projects/semileptonic/new_version/new_types.hpp	/^  prop_group_t *prop_group_out;$/;"	m	struct:prop_group_command_t
prop_group_pair_t	projects/semileptonic/new_version/new_types.hpp	/^  prop_group_pair_t(prop_group_t &a,prop_group_t &b) : first(&a),second(&b) {}$/;"	f	struct:prop_group_pair_t
prop_group_pair_t	projects/semileptonic/new_version/new_types.hpp	/^struct prop_group_pair_t$/;"	s
prop_group_t	projects/semileptonic/new_version/new_types.hpp	/^  prop_group_t() {reset();}$/;"	f	struct:prop_group_t
prop_group_t	projects/semileptonic/new_version/new_types.hpp	/^  prop_group_t(thppeta_group_t &t,mass_res_group_t &m,TMR r) {create(t,m,r);}$/;"	f	struct:prop_group_t
prop_group_t	projects/semileptonic/new_version/new_types.hpp	/^struct prop_group_t$/;"	s
prop_inv	projects/x/tests/test_tlSym_gluon_propagator.cpp	/^spin1prop *prop_inv;$/;"	v
prop_inv	projects/x/tests/test_twisted_propagator.cpp	/^spinspin *prop_inv;$/;"	v
prop_map	projects/ib/mel.cpp	/^const qprop_t prop_map[nqprop_kind]=         {PROP_0,   PROP_S, PROP_P, PROP_T,   PROP_PHOTON,  PROP_PHOTON2};\/\/,  PROP_VECTOR};$/;"	v
prop_name	projects/ib/mel.cpp	/^const char prop_name[nqprop_kind][20]={"PROP_0","PROP_S","PROP_P","PROP_T","PROP_PHOTON","PROP_PHOTON2"};\/\/,"PROP_VECTOR"};$/;"	v
prop_name	src/operations/stag/qed_corr.cpp	/^    char prop_name[nprop_t][2]={"0","S","T","1","2","V"};$/;"	m	namespace:nissa::__anon13	file:
prop_t	src/operations/stag/qed_corr.cpp	/^    enum prop_t{P0,PS,PT,P1,P2,PV};$/;"	g	namespace:nissa::__anon13	file:
prop_tl_fft	projects/x/tests/test_Wilson_gluon_propagator.cpp	/^spin1prop *prop_tl_fft;$/;"	v
prop_wi_inv	projects/x/tests/test_Wilson_gluon_propagator.cpp	/^spin1prop *prop_wi_inv;$/;"	v
prop_wi_stoch	projects/x/tests/test_tlSym_gluon_stochastic_propagator.cpp	/^spin1prop *prop_wi_stoch;$/;"	v
propagators_fft	projects/ib/prop.cpp	/^  void propagators_fft(int ihit)$/;"	f	namespace:nissa
propgroup_t	projects/semileptonic/new_version/new_semileptonic.cpp	/^struct propgroup_t$/;"	s	file:
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	build/Makefile	/^psdir = ${docdir}$/;"	m
psdir	build/projects/Makefile	/^psdir = ${docdir}$/;"	m
psdir	build/src/Makefile	/^psdir = ${docdir}$/;"	m
psdir	build/tools/Makefile	/^psdir = ${docdir}$/;"	m
pseudofermion_t	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    pseudofermion_t()$/;"	f	struct:nissa::pseudofermion_t
pseudofermion_t	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    pseudofermion_t(ferm_discretiz::name_t regul,const char *name="pf"){create(regul,name);}$/;"	f	struct:nissa::pseudofermion_t
pseudofermion_t	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^  struct pseudofermion_t$/;"	s	namespace:nissa
pure_gauge_action	src/hmc/gauge/pure_gauge_hmc_step.cpp	/^  double pure_gauge_action(quad_su3 *conf,theory_pars_t &theory_pars,pure_gauge_evol_pars_t &evol_pars,quad_su3 *H,su3 **phi,su3 **pi,int naux_fields)$/;"	f	namespace:nissa
pure_gauge_evol_pars_t	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^    pure_gauge_evol_pars_t() : use_hmc(0),traj_length(1.0),skip_mtest_ntraj(30),nmd_steps(13),use_Facc(0),kappa(0.0),residue(1e-12),naux_fields(NDIM),nhb_sweeps(1),nhb_hits(1),nov_sweeps(3),nov_hits(3) {}$/;"	f	struct:nissa::pure_gauge_evol_pars_t
pure_gauge_evol_pars_t	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^  struct pure_gauge_evol_pars_t$/;"	s	namespace:nissa
pure_gauge_hmc_step	src/hmc/gauge/pure_gauge_hmc_step.cpp	/^  double pure_gauge_hmc_step(quad_su3 *out_conf,quad_su3 *in_conf,theory_pars_t &theory_pars,pure_gauge_evol_pars_t &evol_pars,rat_approx_t *rat_exp_H,int itraj)$/;"	f	namespace:nissa
pure_wilson	projects/ib/mel.cpp	/^int pure_wilson;$/;"	v
put_boundaries_conditions	src/operations/gaugeconf.cpp	/^  void put_boundaries_conditions(quad_su3 *conf,double *theta_in_pi,int putonbords,int putonedges)$/;"	f	namespace:nissa
put_color_into_colorspinspin	src/new_types/su3_op.hpp	/^  inline void put_color_into_colorspinspin(colorspinspin out,color in,int id1,int id2)$/;"	f	namespace:nissa
put_color_into_spincolor	src/new_types/su3_op.hpp	/^  inline void put_color_into_spincolor(spincolor out,color in,int id)$/;"	f	namespace:nissa
put_color_into_su3	src/new_types/su3_op.hpp	/^  inline void put_color_into_su3(su3 out,color in,int ic_source)$/;"	f	namespace:nissa
put_dirac_matr_into_spinspin	projects/nucleons/nucleons_smeared.cpp	/^void put_dirac_matr_into_spinspin(spinspin out,dirac_matr *in)$/;"	f
put_spin_into_spinspin	src/free_theory/free_theory_types_routines.cpp	/^  void put_spin_into_spinspin(spinspin *out,spin *in,int id_so)$/;"	f	namespace:nissa
put_spincolor_into_colorspinspin	src/new_types/su3_op.hpp	/^  inline void put_spincolor_into_colorspinspin(colorspinspin out,const spincolor in,int id_source)$/;"	f	namespace:nissa
put_spincolor_into_su3spinspin	src/new_types/su3_op.hpp	/^  inline void put_spincolor_into_su3spinspin(su3spinspin out,const spincolor in,int id_source,int ic_source)$/;"	f	namespace:nissa
put_theta	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double put_theta[4],old_theta[4]={0,0,0,0};$/;"	v
put_theta	projects/g/g.cpp	/^double put_theta[4],old_theta[4]={0,0,0,0};$/;"	v
put_theta	projects/ib/mel.cpp	/^double put_theta[4],old_theta[4]={0,0,0,0};$/;"	v
put_theta	projects/nucleons/nucleons_smeared.cpp	/^double put_theta[4]={0,0,0,0};$/;"	v
put_theta	projects/reno_const/RIMOM.cpp	/^momentum_t put_theta,old_theta={0,0,0,0};$/;"	v
put_theta	projects/semileptonic/gevp_3pts.cpp	/^momentum_t old_theta,put_theta;$/;"	v
put_theta	projects/semileptonic/semileptonic_smeared.cpp	/^double put_theta[4],old_theta[4]={0,0,0,0};$/;"	v
put_theta	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^double put_theta[4],old_theta[4]={0,0,0,0};$/;"	v
put_theta	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double put_theta[4],old_theta[4]={0,0,0,0};$/;"	v
q_prop	projects/x/tests/test_twisted_propagator_stochastic_correction.cpp	/^spinspin *q_prop,*id;$/;"	v
qed_corr_meas	build/projects/generate_confs/parser.cpp	/^    nissa::qed_corr_meas_pars_t *qed_corr_meas;$/;"	m	union:YYSTYPE	file:
qed_corr_meas	build/projects/generate_confs/parser.hpp	/^    nissa::qed_corr_meas_pars_t *qed_corr_meas;$/;"	m	union:YYSTYPE
qed_corr_meas	projects/generate_confs/driver.hpp	/^    std::vector<qed_corr_meas_pars_t> qed_corr_meas;$/;"	m	class:nissa::driver_t
qed_corr_meas_pars_t	src/operations/stag/qed_corr.hpp	/^    qed_corr_meas_pars_t() :$/;"	f	struct:nissa::qed_corr_meas_pars_t
qed_corr_meas_pars_t	src/operations/stag/qed_corr.hpp	/^  struct qed_corr_meas_pars_t : base_fermionic_meas_t$/;"	s	namespace:nissa
qkappa	projects/ib/checks.cpp	/^double qkappa=0.177;$/;"	v
qkappa	projects/ib/mel.cpp	/^double *qmass,*qkappa,*residue;$/;"	v
qmass	projects/ib/checks.cpp	/^double qmass=0.01;$/;"	v
qmass	projects/ib/mel.cpp	/^double *qmass,*qkappa,*residue;$/;"	v
qprop_name_list	projects/ib/prop.hpp	/^  EXTERN_PROP std::vector<std::string> qprop_name_list;$/;"	m	namespace:nissa
qprop_t	projects/ib/mel.cpp	/^enum qprop_t{                           PROP_0,  PROP_S,  PROP_P,  PROP_T,  PROP_PHOTON,  PROP_PHOTON2};\/\/,  PROP_VECTOR};$/;"	g	file:
qprop_t	projects/ib/prop.hpp	/^    qprop_t() {is_source=0;}$/;"	f	struct:nissa::qprop_t
qprop_t	projects/ib/prop.hpp	/^    qprop_t(insertion_t insertion,const std::vector<source_term_t>& source_terms,int tins,double residue,double kappa,double mass,int r,double charge,double *theta,bool store)$/;"	f	struct:nissa::qprop_t
qprop_t	projects/ib/prop.hpp	/^    qprop_t(rnd_t noise_type,int tins,int r,bool store) {init_as_source(noise_type,tins,r,store);}$/;"	f	struct:nissa::qprop_t
qprop_t	projects/ib/prop.hpp	/^  struct qprop_t$/;"	s	namespace:nissa
qr	projects/ib/checks.cpp	/^double qr=0;$/;"	v
qu	projects/ib/disco2.cpp	/^  spinspin *qu;$/;"	m	namespace:free_th	file:
quad_su3	src/new_types/su3.hpp	/^  typedef su3 quad_su3[NDIM];$/;"	t	namespace:nissa
quad_su3_copy	src/new_types/su3_op.hpp	/^  inline void quad_su3_copy(quad_su3 b,const quad_su3 a) {for(size_t i=0;i<NDIM;i++) su3_copy(b[i],a[i]);}$/;"	f	namespace:nissa
quad_su3_ildg_to_nissa_reord	src/new_types/su3_op.hpp	/^  inline void quad_su3_ildg_to_nissa_reord(quad_su3 out,const quad_su3 in)$/;"	f	namespace:nissa
quad_su3_nissa_to_ildg_reord	src/new_types/su3_op.hpp	/^  inline void quad_su3_nissa_to_ildg_reord(quad_su3 out,const quad_su3 in)$/;"	f	namespace:nissa
quad_u1	src/new_types/complex.hpp	/^  typedef complex quad_u1[NDIM];$/;"	t	namespace:nissa
quark	build/projects/generate_confs/parser.cpp	/^    nissa::quark_content_t *quark;$/;"	m	union:YYSTYPE	file:
quark	build/projects/generate_confs/parser.hpp	/^    nissa::quark_content_t *quark;$/;"	m	union:YYSTYPE
quark_content	tools/conf_measure/magn.cpp	/^quark_content_t *quark_content;$/;"	v
quark_content_t	src/hmc/quark_pars.hpp	/^    quark_content_t() :$/;"	f	struct:nissa::quark_content_t
quark_content_t	src/hmc/quark_pars.hpp	/^  struct quark_content_t$/;"	s	namespace:nissa
quark_dens	src/operations/stag/putpourri.cpp	/^    complex quark_dens;$/;"	m	struct:nissa::fermionic_putpourri_t	file:
quark_dens_susc	src/operations/stag/putpourri.cpp	/^    complex quark_dens_susc;$/;"	m	struct:nissa::fermionic_putpourri_t	file:
quark_rendens_meas	build/projects/generate_confs/parser.cpp	/^    nissa::quark_rendens_meas_pars_t *quark_rendens_meas;$/;"	m	union:YYSTYPE	file:
quark_rendens_meas	build/projects/generate_confs/parser.hpp	/^    nissa::quark_rendens_meas_pars_t *quark_rendens_meas;$/;"	m	union:YYSTYPE
quark_rendens_meas	projects/generate_confs/driver.hpp	/^    std::vector<quark_rendens_meas_pars_t> quark_rendens_meas;$/;"	m	class:nissa::driver_t
quark_rendens_meas_pars_t	src/operations/stag/rendens.hpp	/^    quark_rendens_meas_pars_t() :$/;"	f	struct:nissa::quark_rendens_meas_pars_t
quark_rendens_meas_pars_t	src/operations/stag/rendens.hpp	/^  struct quark_rendens_meas_pars_t : base_fermionic_meas_t$/;"	s	namespace:nissa
quarks	src/hmc/theory_pars.hpp	/^    std::vector<quark_content_t> quarks;$/;"	m	struct:nissa::theory_pars_t
quick_three_accum	src/new_types/float_256.cpp	/^  double quick_three_accum(double &a,double &b,double c)$/;"	f	namespace:nissa
quick_two_summ	src/new_types/float_256.cpp	/^  void quick_two_summ(double &s,double &e,double a,double b)$/;"	f	namespace:nissa
quote_for_sed	config/ylwrap	/^quote_for_sed ()$/;"	f
r	projects/ib/prop.hpp	/^    int r;$/;"	m	struct:nissa::qprop_t
r	src/free_theory/free_theory_types.hpp	/^    int r;$/;"	m	struct:nissa::tm_quark_info
r_spec	projects/g/g.cpp	/^int r_spec;$/;"	v
r_spec	projects/semileptonic/semileptonic_smeared.cpp	/^int *imass_spec,*r_spec,*ith_spec;$/;"	v
r_spec	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int *imass_spec,*r_spec,*ith_spec;$/;"	v
r_spec	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int *imass_spec,*r_spec,*ith_spec;$/;"	v
rad2	work_in_prog/detM/detM_est.cpp	/^const double rad2=1.414213562373095048801688724209;$/;"	v
rad2	work_in_prog/detM/detM_est2.cpp	/^const double rad2=1.414213562373095048801688724209;$/;"	v
random_conf	projects/ib/disco2.cpp	/^int random_conf;$/;"	v
random_shift_gauge_conf	projects/ib/mel.cpp	/^void random_shift_gauge_conf(quad_su3 *conf,momentum_t old_theta,momentum_t put_theta)$/;"	f
rank	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int rank,nranks,cart_rank;$/;"	m	namespace:nissa
rank_coord	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords rank_coord;$/;"	m	namespace:nissa
rank_coord_of_site_of_coord	src/geometry/geometry_lx.cpp	/^  void rank_coord_of_site_of_coord(coords rank_coord,coords glb_coord)$/;"	f	namespace:nissa
rank_fr_map_list_ranks_fr	src/communicate/all_to_all.hpp	/^    std::map<int,int> rank_to_map_list_ranks_to,rank_fr_map_list_ranks_fr;$/;"	m	struct:nissa::temp_build_t
rank_grid_t	tools/find_best_vir_partitioning/find.cpp	/^  rank_grid_t() {*this=rank_grid_t(0,0,0,0);}$/;"	f	struct:rank_grid_t
rank_grid_t	tools/find_best_vir_partitioning/find.cpp	/^  rank_grid_t(coords4D_t &c){*this=rank_grid_t(c[0],c[1],c[2],c[3]);}$/;"	f	struct:rank_grid_t
rank_grid_t	tools/find_best_vir_partitioning/find.cpp	/^  rank_grid_t(int a,int b,int c,int d)$/;"	f	struct:rank_grid_t
rank_grid_t	tools/find_best_vir_partitioning/find.cpp	/^struct rank_grid_t$/;"	s	file:
rank_hosting_glblx	src/geometry/geometry_lx.cpp	/^  int rank_hosting_glblx(int gx)$/;"	f	namespace:nissa
rank_hosting_site_of_coord	src/geometry/geometry_lx.cpp	/^  int rank_hosting_site_of_coord(coords x)$/;"	f	namespace:nissa
rank_neigh	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords rank_neigh[2],rank_neighdw,rank_neighup;$/;"	m	namespace:nissa
rank_neighdw	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords rank_neigh[2],rank_neighdw,rank_neighup;$/;"	m	namespace:nissa
rank_neighup	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords rank_neigh[2],rank_neighdw,rank_neighup;$/;"	m	namespace:nissa
rank_of_coord	src/geometry/geometry_lx.cpp	/^  int rank_of_coord(coords x)$/;"	f	namespace:nissa
rank_to_map_list_ranks_to	src/communicate/all_to_all.hpp	/^    std::map<int,int> rank_to_map_list_ranks_to,rank_fr_map_list_ranks_fr;$/;"	m	struct:nissa::temp_build_t
ranks_abort	src/routines/mpi_routines.cpp	/^  void ranks_abort(int err)$/;"	f	namespace:nissa
ranks_barrier	src/routines/mpi_routines.cpp	/^  void ranks_barrier()$/;"	f	namespace:nissa
ranks_to_recv_list	src/operations/su3_paths/arbitrary.hpp	/^    int nranks_to_recv,*ranks_to_recv_list,*nlinks_to_recv_list,ntot_links_to_recv;$/;"	m	struct:nissa::paths_calculation_structure
ranks_to_send_list	src/operations/su3_paths/arbitrary.hpp	/^    int nranks_to_send,*ranks_to_send_list,*nlinks_to_send_list,ntot_links_to_send;$/;"	m	struct:nissa::paths_calculation_structure
rat_appr	projects/generate_confs/generate.cpp	/^std::vector<rat_approx_t> rat_appr;$/;"	v
rat_approx_finder_t	src/operations/remez/remez_algorithm.hpp	/^  struct rat_approx_finder_t$/;"	s	namespace:nissa
rat_approx_hmc_t	src/hmc/hmc.hpp	/^  enum rat_approx_hmc_t{RAT_APPR_PF_GEN,RAT_APPR_QUARK_ACTION,RAT_APPR_QUARK_FORCE};$/;"	g	namespace:nissa
rat_approx_t	src/new_types/rat_approx.hpp	/^    rat_approx_t() :$/;"	f	struct:nissa::rat_approx_t
rat_approx_t	src/new_types/rat_approx.hpp	/^  struct rat_approx_t$/;"	s	namespace:nissa
rat_exp_H	projects/generate_confs/generate_quenched.cpp	/^rat_approx_t rat_exp_H;$/;"	v
re_pot	src/hmc/quark_pars.hpp	/^    double re_pot;$/;"	m	struct:nissa::quark_content_t
read	projects/semileptonic/new_version/new_types.cpp	/^void corr_command_t::read(int ntwo_pts_group_avail,two_pts_corr_group_t *ext_two_pts_corr_group,int nprop_group,prop_group_t *prop_group)$/;"	f	class:corr_command_t
read	projects/semileptonic/new_version/new_types.cpp	/^void gauge_conf_t::read(const char *path)$/;"	f	class:gauge_conf_t
read	projects/semileptonic/new_version/new_types.cpp	/^void gauss_smear_pars_t::read()$/;"	f	class:gauss_smear_pars_t
read	projects/semileptonic/new_version/new_types.cpp	/^void two_pts_corr_group_t::read()$/;"	f	class:two_pts_corr_group_t
read	projects/semileptonic/new_version/new_types.hpp	/^  void read() {destroy();int n;read_str_int("NMassRes",&n);create(n);for(int i=0;i<n;i++){read_double(&mass[i]);read_double(&residues[i]);}}$/;"	f	struct:mass_res_group_t
read	projects/semileptonic/new_version/new_types.hpp	/^  void read() {destroy();int n;read_str_int("NTheta",&n);create(n);for(int i=0;i<n;i++) read_double(&thppeta[i]);}$/;"	f	struct:thppeta_group_t
read	projects/semileptonic/new_version/new_types.hpp	/^  void read() {read_str_double("ApeAlpha",&alphppa);read_str_int("ApeNiter",&niter);}$/;"	f	struct:ape_smear_pars_t
read	projects/semileptonic/new_version/new_types.hpp	/^  void read(const chppar *name) {create();read_colorspinspin(eta,name,NULL);}$/;"	f	struct:in_source_t
read	src/io/buffer.hpp	/^    std::istream& read(char *s,std::streamsize n){return st.read(s,n);}$/;"	f	struct:nissa::buffer_t
read	src/io/input.cpp	/^      void read(){read_var((char*)pointer,type.c_str(),size);}$/;"	f	struct:nissa::__anon9::triple_tag
read_2pts_tag	projects/ib/pars.cpp	/^  mes2pts_known_t read_2pts_tag()$/;"	f	namespace:nissa
read_DDalphaAMG_pars	src/base/DDalphaAMG_bridge.cpp	/^  void read_DDalphaAMG_pars()$/;"	f	namespace:DD
read_LC_gauge_fixing_pars	src/operations/gauge_fixing.hpp	/^  inline void read_LC_gauge_fixing_pars(LC_gauge_fixing_pars_t &pars)$/;"	f	namespace:nissa
read_Landau_gauge_fix	projects/ib/pars.hpp	/^  inline void read_Landau_gauge_fix()$/;"	f	namespace:nissa
read_Wflow_pars	src/new_types/read_new_types.cpp	/^  void read_Wflow_pars(Wflow_pars_t &pars)$/;"	f	namespace:nissa
read_all_rect_meas_pars	projects/generate_confs/convert_input.cpp	/^void read_all_rect_meas_pars(std::vector<all_rects_meas_pars_t> &pars,int flag=false)$/;"	f
read_ape_pars	src/new_types/read_new_types.cpp	/^  void read_ape_pars(ape_pars_t &ape_pars)$/;"	f	namespace:nissa
read_ape_smearing_pars	projects/ib/pars.hpp	/^  inline void read_ape_smearing_pars()$/;"	f	namespace:nissa
read_bar2pts_contr_pars	projects/ib/pars.cpp	/^  void read_bar2pts_contr_pars()$/;"	f	namespace:nissa
read_bmpfile	projects/x/src/routines/bmp.cpp	/^void read_bmpfile(bmpfile &in,const char *path)$/;"	f
read_clover_run	projects/ib/pars.hpp	/^  inline void read_clover_run()$/;"	f	namespace:nissa
read_command	projects/semileptonic/new_version/new_types.cpp	/^void prop_group_command_t::read_command(prop_group_t &ext_prop_group_out,in_source_t *ext_source,prop_group_t *ext_prop_group_in,gauge_conf_t *ext_conf,gauss_smear_pars_t *ext_smear_pars)$/;"	f	class:prop_group_command_t
read_complex	tools/conf_transform/convert/gpu_to_ildg.cpp	/^void read_complex(complex out,FILE *in)$/;"	f
read_conf	projects/cpn/cpn.cpp	/^void read_conf(const char *path,int &iconf)$/;"	f
read_conf	projects/generate_confs/generate.cpp	/^void read_conf(quad_su3 **conf,const char *path)$/;"	f
read_conf	projects/generate_confs/generate_quenched.cpp	/^void read_conf()$/;"	f
read_conf_and_put_antiperiodic	projects/nucleons/nucleons_smeared.cpp	/^void read_conf_and_put_antiperiodic(quad_su3 *conf,char *conf_path,int tsource)$/;"	f
read_conf_parameters	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int read_conf_parameters()$/;"	f
read_conf_parameters	projects/g/g.cpp	/^int read_conf_parameters(int *iconf)$/;"	f
read_conf_parameters	projects/ib/conf.cpp	/^  int read_conf_parameters(int &iconf,bool(*external_condition)())$/;"	f	namespace:nissa
read_conf_parameters	projects/ib/mel.cpp	/^int read_conf_parameters(int &iconf)$/;"	f
read_conf_parameters	projects/reno_const/RIMOM.cpp	/^int read_conf_parameters(int &iconf)$/;"	f
read_conf_parameters	projects/semileptonic/gevp.cpp	/^int read_conf_parameters(int *iconf)$/;"	f
read_conf_parameters	projects/semileptonic/gevp_3pts.cpp	/^int read_conf_parameters(int *iconf)$/;"	f
read_conf_parameters	projects/semileptonic/semileptonic_smeared.cpp	/^int read_conf_parameters(int *iconf)$/;"	f
read_conf_parameters	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int read_conf_parameters(int *iconf)$/;"	f
read_conf_path	projects/semileptonic/test_proj.cpp	/^void read_conf_path()$/;"	f
read_conf_smearing_pars	projects/semileptonic/semileptonic_smeared.cpp	/^void read_conf_smearing_pars()$/;"	f
read_conf_time	projects/generate_confs/generate.cpp	/^double read_conf_time=0;$/;"	v
read_cool_pars	projects/generate_confs/convert_input.cpp	/^void read_cool_pars(cool_pars_t &cool_pars)$/;"	f
read_cool_pars	projects/generate_confs/generate_quenched.cpp	/^void read_cool_pars(cool_pars_t &cool_pars)$/;"	f
read_cool_pars	src/new_types/read_new_types.cpp	/^  void read_cool_pars(cool_pars_t &cool_pars)$/;"	f	namespace:nissa
read_cool_pars	tools/conf_measure/topo.cpp	/^void read_cool_pars(cool_pars_t &cool_pars)$/;"	f
read_corr16	projects/x/src/routines/read_and_write.cpp	/^void read_corr16(corr16 *v,const char *path)$/;"	f
read_corr_group	projects/semileptonic/new_version/new_types.cpp	/^void corr_command_t::read_corr_group(int ntwo_pts_corr_group_avail,two_pts_corr_group_t *ext_two_pts_corr_group)$/;"	f	class:corr_command_t
read_double	src/io/input.cpp	/^  void read_double(double *out)$/;"	f	namespace:nissa
read_double	tools/common_tools.cpp	/^void read_double(double *out)$/;"	f
read_double	tools/conf_transform/convert/Claudio_to_ildg.cpp	/^double read_double(FILE *in)$/;"	f
read_em_field_pars	projects/generate_confs/convert_input.cpp	/^void read_em_field_pars(em_field_pars_t &pars)$/;"	f
read_fermionic_putpourri_meas_pars	projects/generate_confs/convert_input.cpp	/^void read_fermionic_putpourri_meas_pars(std::vector<fermionic_putpourri_meas_pars_t> &pars,int itheory)$/;"	f
read_fft_prop_pars	projects/ib/pars.cpp	/^  void read_fft_prop_pars()$/;"	f	namespace:nissa
read_file	tools/ave.cpp	/^void read_file(char *inpath)$/;"	f
read_free_theory_flag	projects/ib/pars.hpp	/^  inline void read_free_theory_flag()$/;"	f	namespace:nissa
read_from_ILDG_file	src/io/ILDG_File.hpp	/^    void read_from_ILDG_file(ILDG_File fin, const char *tag)$/;"	f	struct:nissa::storable_vector_t
read_gauge_obs_meas_pars	projects/generate_confs/convert_input.cpp	/^void read_gauge_obs_meas_pars(std::vector<gauge_obs_meas_pars_t> &pars,int flag=false)$/;"	f
read_gauge_obs_temp_smear_pars	projects/generate_confs/convert_input.cpp	/^void read_gauge_obs_temp_smear_pars(smooth_pars_t &pars)$/;"	f
read_gospel_convention	projects/ib/pars.hpp	/^  inline void read_gospel_convention()$/;"	f	namespace:nissa
read_handcuffs_contr_pars	projects/ib/pars.cpp	/^  void read_handcuffs_contr_pars()$/;"	f	namespace:nissa
read_hmc_evol_pars	projects/generate_confs/convert_input.cpp	/^void read_hmc_evol_pars(hmc_evol_pars_t &pars,theory_pars_t &th)$/;"	f
read_ildg_gauge_conf	src/io/reader.cpp	/^  void read_ildg_gauge_conf(quad_su3 *conf,std::string path,ILDG_message *mess)$/;"	f	namespace:nissa
read_ildg_gauge_conf_and_split_into_eo_parts	src/io/reader.cpp	/^  void read_ildg_gauge_conf_and_split_into_eo_parts(quad_su3 **eo_conf,std::string path,ILDG_message *mess)$/;"	f	namespace:nissa
read_init_grid	projects/ib/conf.cpp	/^  void read_init_grid()$/;"	f	namespace:nissa
read_input	projects/cpn/cpn.cpp	/^void read_input(int &seed,const char *path)$/;"	f
read_input_header	projects/semileptonic/test_proj.cpp	/^void read_input_header(char *input_path)$/;"	f
read_int	src/io/input.cpp	/^  void read_int(int *out)$/;"	f	namespace:nissa
read_int	tools/common_tools.cpp	/^void read_int(int *out)$/;"	f
read_iso_theta	projects/ib/pars.hpp	/^  inline void read_iso_theta()$/;"	f	namespace:nissa
read_list_of_chars	src/io/input.cpp	/^  void read_list_of_chars(const char *tag,int *nentries,char ***list,int nchar_per_entry)$/;"	f	namespace:nissa
read_list_of_double_pairs	src/io/input.cpp	/^  void read_list_of_double_pairs(const char *tag,int *nentries,double **list1,double **list2)$/;"	f	namespace:nissa
read_list_of_double_triples	src/io/input.cpp	/^  void read_list_of_double_triples(const char *tag,int *nentries,double **list1,double **list2,double **list3)$/;"	f	namespace:nissa
read_list_of_doubles	src/io/input.cpp	/^  void read_list_of_doubles(const char *tag,int *nentries,double **list)$/;"	f	namespace:nissa
read_list_of_ints	src/io/input.cpp	/^  void read_list_of_ints(const char *tag,int *nentries,int **list)$/;"	f	namespace:nissa
read_list_of_var	src/io/input.cpp	/^  void read_list_of_var(const char *tag,int *nentries,char **list,int size_of_el,const char *par)$/;"	f	namespace:nissa
read_list_of_var_pairs	src/io/input.cpp	/^  void read_list_of_var_pairs(const char *tag,int *nentries,char **list1,char **list2,int size_of_el,const char *par)$/;"	f	namespace:nissa
read_list_of_var_triples	src/io/input.cpp	/^  void read_list_of_var_triples(const char *tag,int *nentries,char **list1,char **list2,char **list3,int size_of_el,const char *par)$/;"	f	namespace:nissa
read_loc_hadr_curr	projects/ib/pars.hpp	/^  inline void read_loc_hadr_curr()$/;"	f	namespace:nissa
read_loc_muon_curr	projects/ib/pars.hpp	/^  inline void read_loc_muon_curr()$/;"	f	namespace:nissa
read_magnetization_meas_pars	projects/generate_confs/convert_input.cpp	/^void read_magnetization_meas_pars(std::vector<magnetization_meas_pars_t> &pars,int itheory)$/;"	f
read_mes2pts_contr_gamma_list	projects/ib/pars.cpp	/^  void read_mes2pts_contr_gamma_list()$/;"	f	namespace:nissa
read_mes2pts_contr_pars	projects/ib/pars.cpp	/^  void read_mes2pts_contr_pars()$/;"	f	namespace:nissa
read_meslep_contr_pars	projects/ib/meslep.cpp	/^  void read_meslep_contr_pars()$/;"	f	namespace:nissa
read_next	tools/ave.cpp	/^int read_next(char *tok,char *&line)$/;"	f
read_next_token	src/io/input.cpp	/^  int read_next_token(char *tok)$/;"	f	namespace:nissa
read_next_token	tools/common_tools.cpp	/^int read_next_token(char *tok)$/;"	f
read_ngauge_conf	projects/ib/pars.hpp	/^  inline void read_ngauge_conf()$/;"	f	namespace:nissa
read_nhits	projects/ib/pars.hpp	/^  inline void read_nhits()$/;"	f	namespace:nissa
read_nissa_config_file	src/io/input.cpp	/^  void read_nissa_config_file()$/;"	f	namespace:nissa
read_nucleon_corr_meas_pars	projects/generate_confs/convert_input.cpp	/^void read_nucleon_corr_meas_pars(std::vector<nucleon_corr_meas_pars_t> &pars,int itheory)$/;"	f
read_pars	projects/semileptonic/new_version/new_types.cpp	/^void prop_group_t::read_pars(int ntheta_group,theta_group_t *theta_group,int nmass_res_group,mass_res_group_t *mass_res_group)$/;"	f	class:prop_group_t
read_pars	src/new_types/metadynamics.cpp	/^  void meta_pars_t::read_pars()$/;"	f	class:nissa::meta_pars_t
read_path	projects/generate_confs/convert_input.cpp	/^std::string read_path()$/;"	f
read_path	projects/generate_confs/generate_quenched.cpp	/^std::string read_path()$/;"	f
read_path	src/new_types/read_new_types.cpp	/^  std::string read_path()$/;"	f	namespace:nissa
read_path	tools/conf_measure/topo.cpp	/^std::string read_path()$/;"	f
read_photon_pars	projects/ib/pars.cpp	/^  void read_photon_pars()$/;"	f	namespace:nissa
read_poly_corr_meas_pars	projects/generate_confs/convert_input.cpp	/^void read_poly_corr_meas_pars(std::vector<poly_corr_meas_pars_t> &pars,int flag=false)$/;"	f
read_prop_group_pair	projects/semileptonic/new_version/new_types.cpp	/^void corr_command_t::read_prop_group_pair(int nprop_group,prop_group_t *prop_group,int ipair)$/;"	f	class:corr_command_t
read_prop_prec	projects/reno_const/RIMOM.cpp	/^int read_prop_prec(const char *name)$/;"	f
read_pure_gauge_evol_pars	projects/generate_confs/generate_quenched.cpp	/^void read_pure_gauge_evol_pars(pure_gauge_evol_pars_t &pars)$/;"	f
read_quark_content	projects/generate_confs/convert_input.cpp	/^void read_quark_content(quark_content_t &quark_content,bool flag=false)$/;"	f
read_quark_content	src/new_types/read_new_types.cpp	/^  void read_quark_content(quark_content_t &quark_content,bool flag=false)$/;"	f	namespace:nissa
read_quark_rendens_meas_pars	projects/generate_confs/convert_input.cpp	/^void read_quark_rendens_meas_pars(std::vector<quark_rendens_meas_pars_t> &pars,int itheory)$/;"	f
read_random_gauge_transform	projects/ib/pars.hpp	/^  inline void read_random_gauge_transform()$/;"	f	namespace:nissa
read_raw_spinor	projects/reno_const/fourier.c	/^void read_raw_spinor(spinor *propa, char *s1){$/;"	f
read_real_vector	src/io/reader.cpp	/^  void read_real_vector(double *out,ILDG_File file,ILDG_header &header,uint64_t nreals_per_site)$/;"	f	namespace:nissa
read_real_vector	src/io/reader.hpp	/^  template <class T> void read_real_vector(T *out,ILDG_File file,ILDG_header &header)$/;"	f	namespace:nissa
read_real_vector	src/io/reader.hpp	/^  template <class T> void read_real_vector(T *out,std::string path,const char *record_name,ILDG_message *mess=NULL)$/;"	f	namespace:nissa
read_seed_start_random	projects/ib/pars.hpp	/^  inline void read_seed_start_random()$/;"	f	namespace:nissa
read_set_dilutions_if_stoch_source	projects/ib/pars.hpp	/^  inline void read_set_dilutions_if_stoch_source(int stoch_source)$/;"	f	namespace:nissa
read_size	tools/ave.cpp	/^int read_size;$/;"	v
read_smooth_pars	projects/generate_confs/convert_input.cpp	/^void read_smooth_pars(smooth_pars_t &smooth_pars,int flag=false)$/;"	f
read_smooth_pars	projects/generate_confs/generate_quenched.cpp	/^void read_smooth_pars(smooth_pars_t &smooth_pars,int flag=false)$/;"	f
read_smooth_pars	tools/conf_measure/topo.cpp	/^void read_smooth_pars(smooth_pars_t &smooth_pars,int flag=false)$/;"	f
read_spinpol_meas_pars	projects/generate_confs/convert_input.cpp	/^void read_spinpol_meas_pars(std::vector<spinpol_meas_pars_t> &pars,int itheory)$/;"	f
read_stag_meson_corr_meas_pars	projects/generate_confs/convert_input.cpp	/^void read_stag_meson_corr_meas_pars(std::vector<meson_corr_meas_pars_t> &pars,int itheory)$/;"	f
read_stoch_source	projects/ib/pars.hpp	/^  inline void read_stoch_source()$/;"	f	namespace:nissa
read_store_conf	projects/ib/pars.hpp	/^  inline void read_store_conf()$/;"	f	namespace:nissa
read_stout_pars	src/new_types/read_new_types.cpp	/^  void read_stout_pars(stout_pars_t &stout_pars)$/;"	f	namespace:nissa
read_str	src/io/input.cpp	/^  void read_str(char *str,int length)$/;"	f	namespace:nissa
read_str	tools/common_tools.cpp	/^void read_str(char *str,int length)$/;"	f
read_str_double	src/io/input.cpp	/^  void read_str_double(const char *exp_str,double *in)$/;"	f	namespace:nissa
read_str_double	tools/common_tools.cpp	/^void read_str_double(const char *exp_str,double *in)$/;"	f
read_str_enum	projects/semileptonic/new_version/new_semileptonic.cpp	/^int read_str_enum(int n,char **tags,int stl)$/;"	f
read_str_int	src/io/input.cpp	/^  void read_str_int(const char *exp_str,int *in)$/;"	f	namespace:nissa
read_str_int	tools/common_tools.cpp	/^void read_str_int(const char *exp_str,int *in)$/;"	f
read_str_momentum_t	src/io/input.cpp	/^  void read_str_momentum_t(const char *exp_str,momentum_t in)$/;"	f	namespace:nissa
read_str_str	src/io/input.cpp	/^  void read_str_str(const char *exp_str,char *in,int length)$/;"	f	namespace:nissa
read_str_str	tools/common_tools.cpp	/^void read_str_str(const char *exp_str,char *in,int length)$/;"	f
read_su3	tools/conf_transform/convert/Claudio_to_ildg.cpp	/^void read_su3(su3 out,FILE *in)$/;"	f
read_su3	tools/conf_transform/convert/gpu_to_ildg.cpp	/^void read_su3(su3 out,FILE *in)$/;"	f
read_subset_list	projects/reno_const/RIMOM.cpp	/^interv* read_subset_list(int *n_subset,const char *name,const char *tag)$/;"	f
read_theory_pars	projects/generate_confs/convert_input.cpp	/^void read_theory_pars(theory_pars_t &theory_pars)$/;"	f
read_theta	projects/ib/pars.hpp	/^  inline void read_theta(double *theta)$/;"	f	namespace:nissa
read_time	projects/generate_confs/generate_quenched.cpp	/^double read_time=0;$/;"	v
read_top_meas_pars	projects/generate_confs/convert_input.cpp	/^void read_top_meas_pars(top_meas_pars_t &pars,int flag=false)$/;"	f
read_top_meas_pars	projects/generate_confs/generate_quenched.cpp	/^void read_top_meas_pars(top_meas_pars_t &pars,int flag=false)$/;"	f
read_top_meas_pars	tools/conf_measure/topo.cpp	/^void read_top_meas_pars(top_meas_pars_t &pars,int flag=false)$/;"	f
read_topotential_pars	projects/generate_confs/convert_input.cpp	/^void read_topotential_pars(topotential_pars_t &pars,int flag=0)$/;"	f
read_topotential_pars	src/new_types/read_new_types.cpp	/^  void read_topotential_pars(topotential_pars_t &pars,int flag=0)$/;"	f	namespace:nissa
read_twisted_run	projects/ib/pars.hpp	/^  inline void read_twisted_run()$/;"	f	namespace:nissa
read_two_pts_sink_source_corr_from_file	build/projects/semileptonic/tokenize_corr.cpp	/^two_pts_comp_t read_two_pts_sink_source_corr_from_file(const char *path)$/;"	f
read_unave	projects/x/progs/average_corr.cpp	/^void read_unave(corr16 *out,const char *name)$/;"	f
read_up_to_end_of_comment	src/io/input.cpp	/^  void read_up_to_end_of_comment()$/;"	f	namespace:nissa
read_up_to_end_of_comment	tools/common_tools.cpp	/^void read_up_to_end_of_comment()$/;"	f
read_var	src/io/input.cpp	/^  void read_var(char *out,const char *par,int size_of)$/;"	f	namespace:nissa
read_var	tools/common_tools.cpp	/^void read_var(char *out,const char *par,int size_of)$/;"	f
read_var_catcherr	src/io/input.cpp	/^  int read_var_catcherr(char *out,const char *par,int size_of)$/;"	f	namespace:nissa
read_var_catcherr	tools/common_tools.cpp	/^int read_var_catcherr(char *out,const char *par,int size_of)$/;"	f
read_watusso_meas_pars	projects/generate_confs/convert_input.cpp	/^void read_watusso_meas_pars(std::vector<watusso_meas_pars_t> &pars,int flag=false)$/;"	f
real_part_of_complex_prod	src/new_types/complex.hpp	/^  inline double real_part_of_complex_prod(const complex a,const complex b)$/;"	f	namespace:nissa
real_part_of_complex_scalar_prod	src/new_types/complex.hpp	/^  inline double real_part_of_complex_scalar_prod(const complex a,const complex b)$/;"	f	namespace:nissa
real_part_of_trace_spinspin_prod_spinspin_dag	src/new_types/spin.hpp	/^  inline double real_part_of_trace_spinspin_prod_spinspin_dag(const spinspin a,const spinspin b)$/;"	f	namespace:nissa
real_part_of_trace_su3_prod_su3_dag	src/new_types/su3_op.hpp	/^  inline double real_part_of_trace_su3_prod_su3_dag(su3 a,const su3 b)$/;"	f	namespace:nissa
real_part_of_trace_with_id	projects/x/tests/test_twisted_propagator_correction.cpp	/^double real_part_of_trace_with_id(spinspin *q,int imom)$/;"	f
real_part_of_trace_with_id	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^double real_part_of_trace_with_id(spinspin *q,int imom,quark_info qu)$/;"	f
real_part_of_trace_with_id	projects/x/tests/test_twisted_propagator_self.cpp	/^double real_part_of_trace_with_id(spinspin *q,int imom)$/;"	f
real_part_of_trace_with_id	projects/x/tests/test_twisted_propagator_tadpole.cpp	/^double real_part_of_trace_with_id(spinspin *q,int imom)$/;"	f
real_part_of_trace_with_igamma	projects/x/tests/test_twisted_propagator_correction.cpp	/^double real_part_of_trace_with_igamma(spinspin *q,int imom)$/;"	f
real_part_of_trace_with_igamma	projects/x/tests/test_twisted_propagator_correction_old.cpp	/^double real_part_of_trace_with_igamma(spinspin *q,int imom,int mu,quark_info qu)$/;"	f
real_part_of_trace_with_igamma	projects/x/tests/test_twisted_propagator_self.cpp	/^double real_part_of_trace_with_igamma(spinspin *q,int imom)$/;"	f
real_part_of_trace_with_igamma	projects/x/tests/test_twisted_propagator_tadpole.cpp	/^double real_part_of_trace_with_igamma(spinspin *q,int imom)$/;"	f
recompute_first	projects/x/progs/correct.cpp	/^const int recompute_first=0;$/;"	v
rectangular_staples_lx_conf_compute_and_start_communicating_fw_surf_bw_staples	src/operations/su3_paths/rectangular_staples.cpp	/^  void rectangular_staples_lx_conf_compute_and_start_communicating_fw_surf_bw_staples(rectangular_staples_t *out,quad_su3 *conf,squared_staples_t *sq_staples,int thread_id)$/;"	f	namespace:nissa
rectangular_staples_lx_conf_compute_fw_surf_fw_staples	src/operations/su3_paths/rectangular_staples.cpp	/^  void rectangular_staples_lx_conf_compute_fw_surf_fw_staples(rectangular_staples_t *out,quad_su3 *conf,squared_staples_t *sq_staples,int thread_id)$/;"	f	namespace:nissa
rectangular_staples_lx_conf_compute_non_fw_surf_bw_staples	src/operations/su3_paths/rectangular_staples.cpp	/^  void rectangular_staples_lx_conf_compute_non_fw_surf_bw_staples(rectangular_staples_t *out,quad_su3 *conf,squared_staples_t *sq_staples,int thread_id)$/;"	f	namespace:nissa
rectangular_staples_lx_conf_compute_non_fw_surf_fw_staples	src/operations/su3_paths/rectangular_staples.cpp	/^  void rectangular_staples_lx_conf_compute_non_fw_surf_fw_staples(rectangular_staples_t *out,quad_su3 *conf,squared_staples_t *sq_staples,int thread_id)$/;"	f	namespace:nissa
rectangular_staples_lx_conf_finish_communicating_fw_surf_bw_staples	src/operations/su3_paths/rectangular_staples.cpp	/^  void rectangular_staples_lx_conf_finish_communicating_fw_surf_bw_staples(rectangular_staples_t *out,int thread_id)$/;"	f	namespace:nissa
rectangular_staples_lx_conf_finish_communicating_lower_surface_fw_squared_staples	src/operations/su3_paths/rectangular_staples.cpp	/^  void rectangular_staples_lx_conf_finish_communicating_lower_surface_fw_squared_staples(squared_staples_t *sq_staples,int thread_id)$/;"	f	namespace:nissa
rectangular_staples_lx_conf_start_communicating_lower_surface_fw_squared_staples	src/operations/su3_paths/rectangular_staples.cpp	/^  void rectangular_staples_lx_conf_start_communicating_lower_surface_fw_squared_staples(squared_staples_t *sq_staples,int thread_id)$/;"	f	namespace:nissa
rectangular_staples_t	src/operations/su3_paths/rectangular_staples.hpp	/^  typedef squared_staples_t rectangular_staples_t;$/;"	t	namespace:nissa
recursive_Wflower_t	src/operations/smearing/recursive_Wflower.hpp	/^    recursive_Wflower_t(const Wflow_pars_t &Wflower,quad_su3 *ori_conf) : Wflower(Wflower)$/;"	f	struct:nissa::recursive_Wflower_t
recursive_Wflower_t	src/operations/smearing/recursive_Wflower.hpp	/^  struct recursive_Wflower_t$/;"	s	namespace:nissa
recv_buf	src/communicate/communicate.hpp	/^  EXTERN_COMMUNICATE char *recv_buf,*send_buf;$/;"	m	namespace:nissa
recv_buf	work_in_prog/bgq/src/add_var.hpp	/^  chppar *send_buf,*recv_buf;$/;"	m	struct:spi_comm_t
recv_buf_size	src/communicate/communicate.hpp	/^  EXTERN_COMMUNICATE uint64_t recv_buf_size,send_buf_size;$/;"	m	namespace:nissa
recv_counter	work_in_prog/bgq/src/add_var.hpp	/^  volatile uint64_t recv_counter;$/;"	m	struct:spi_comm_t
recv_offset	src/communicate/communicate.hpp	/^    int send_offset[8],message_length[8],recv_offset[8];$/;"	m	struct:nissa::comm_t
reg_vir_complex	src/bgq/intrinsic.hpp	/^  typedef vector4double reg_vir_complex;$/;"	t	namespace:nissa
reim	build/projects/semileptonic/parse_corr.cpp	/^  bool reim;$/;"	m	union:YYSTYPE	file:
reim	build/projects/semileptonic/parse_corr.hpp	/^  bool reim;$/;"	m	union:YYSTYPE
rel_coord_of_glb_coord	projects/ib/pars.hpp	/^  inline int rel_coord_of_glb_coord(int c,int mu)$/;"	f	namespace:nissa
rel_coord_of_loclx	projects/ib/pars.hpp	/^  inline int rel_coord_of_loclx(int loclx,int mu)$/;"	f	namespace:nissa
rel_time_of_glb_time	projects/ib/pars.hpp	/^  inline int rel_time_of_glb_time(int t)$/;"	f	namespace:nissa
rel_time_of_loclx	projects/ib/pars.hpp	/^  inline int rel_time_of_loclx(int loclx)$/;"	f	namespace:nissa
rem_backfield_with_stagphases_from_conf	src/hmc/backfield.hpp	/^  void rem_backfield_with_stagphases_from_conf(T3 conf,T1 u1)$/;"	f	namespace:nissa
rem_backfield_without_stagphases_from_conf	src/hmc/backfield.hpp	/^  void rem_backfield_without_stagphases_from_conf(T3 conf,T1 u1)$/;"	f	namespace:nissa
rem_boundaries_conditions	src/operations/gaugeconf.cpp	/^  void rem_boundaries_conditions(quad_su3 *conf,double *theta_in_pi,int putonbords,int putonedges)$/;"	f	namespace:nissa
rem_photon_field_to_conf	projects/ib/prop.cpp	/^  void rem_photon_field_to_conf(quad_su3 *conf,double q)$/;"	f	namespace:nissa
remap	src/operations/remap_vector.hpp	/^    void remap(void *out,void *in,size_t bps){communicate(out,in,bps);}$/;"	f	struct:nissa::vector_remap_t
remap_Leb_ev_or_od_to_loc_vector	src/geometry/geometry_mix.hpp	/^  template <class T> void remap_Leb_ev_or_od_to_loc_vector(T *out,T *in,int par)$/;"	f	namespace:nissa
remap_Lebeo_to_loceo_vector	src/geometry/geometry_mix.hpp	/^  template <class T> void remap_Lebeo_to_loceo_vector(T **out,T **in)$/;"	f	namespace:nissa
remap_coord	src/base/DDalphaAMG_bridge.cpp	/^  void remap_coord(nissa::coords out,const nissa::coords in)$/;"	f	namespace:DD
remap_loc_ev_or_od_to_Leb_vector	src/geometry/geometry_mix.hpp	/^  template <class T> void remap_loc_ev_or_od_to_Leb_vector(T *out,T *in,int par)$/;"	f	namespace:nissa
remap_locd_to_lx	src/operations/remap_vector.hpp	/^  EXTERN_REMAP vector_remap_t *remap_locd_to_lx[NDIM];$/;"	m	namespace:nissa
remap_locd_vector_to_lx	src/operations/remap_vector.cpp	/^  void remap_locd_vector_to_lx(void *out,void *in,int nbytes,int mu)$/;"	f	namespace:nissa
remap_loceo_to_Lebeo_vector	src/geometry/geometry_mix.hpp	/^  template <class T> void remap_loceo_to_Lebeo_vector(T **out,T **in)$/;"	f	namespace:nissa
remap_lx_to_locd	src/operations/remap_vector.hpp	/^  EXTERN_REMAP vector_remap_t *remap_lx_to_locd[NDIM];$/;"	m	namespace:nissa
remap_lx_vector_to_locd	src/operations/remap_vector.cpp	/^  void remap_lx_vector_to_locd(void *out,void *in,int nbytes,int mu)$/;"	f	namespace:nissa
remapper	tools/conf_transform/convert/eo_to_ildg.cpp	/^vector_remap_t *remapper;$/;"	v
remapper	tools/conf_transform/convert/ildg_to_eo.cpp	/^vector_remap_t *remapper;$/;"	v
renormalize	src/new_types/float_256.cpp	/^  void renormalize(float_256 b,double a0,double a1,double a2,double a3,double a4)$/;"	f	namespace:nissa
renormalize	src/new_types/float_256.cpp	/^  void renormalize(float_256 b,double c0,double c1,double c2,double c3)$/;"	f	namespace:nissa
renormalize	src/new_types/float_256.cpp	/^  void renormalize(float_256 b,float_256_unr a)$/;"	f	namespace:nissa
reorder_read_corr16	projects/x/src/routines/read_and_write.cpp	/^void reorder_read_corr16(corr16 *c)$/;"	f
required_memory	src/base/vectors.hpp	/^  EXTERN_VECTORS int64_t required_memory;$/;"	m	namespace:nissa
reset	projects/semileptonic/new_version/new_types.hpp	/^  void reset() {U=NULL;kappa=beta=0;memset(thppeta,0,sizeof(momentum_t));}$/;"	f	struct:gauge_conf_t
reset	projects/semileptonic/new_version/new_types.hpp	/^  void reset() {corr_list=NULL;}$/;"	f	struct:two_pts_corr_group_t
reset	projects/semileptonic/new_version/new_types.hpp	/^  void reset() {eta=NULL;}$/;"	f	struct:in_source_t
reset	projects/semileptonic/new_version/new_types.hpp	/^  void reset() {nterm=-1;kappa=-1;coeff=NULL;expnt=NULL;}$/;"	f	struct:gauss_smear_pars_t
reset	projects/semileptonic/new_version/new_types.hpp	/^  void reset() {pair_list=NULL;}$/;"	f	struct:corr_command_t
reset	projects/semileptonic/new_version/new_types.hpp	/^  void reset(){S=NULL;}$/;"	f	struct:prop_group_t
reset	src/operations/stag/putpourri.cpp	/^    void reset()$/;"	f	struct:nissa::fermionic_putpourri_t
reset	tools/find_best_vir_partitioning/find.cpp	/^  void reset(){nassigned_torus_dirs[0]=nassigned_torus_dirs[1]=nassigned_torus_dirs[2]=nassigned_torus_dirs[3]=0;}$/;"	f	struct:assignement_t
reset_theta	projects/semileptonic/new_version/new_types.hpp	/^  void reset_theta() {for(int mu=0;mu<4;mu++) thppeta[mu]=0;}$/;"	f	struct:gauge_conf_t
residue	projects/ib/mel.cpp	/^double *qmass,*qkappa,*residue;$/;"	v
residue	projects/ib/prop.hpp	/^    double residue;$/;"	m	struct:nissa::qprop_t
residue	projects/semileptonic/gevp.cpp	/^double mass,residue,kappa,gaussian_kappa;$/;"	v
residue	projects/semileptonic/gevp_3pts.cpp	/^double theta_needed,mass,residue,kappa;$/;"	v
residue	projects/semileptonic/test_proj.cpp	/^double kappa,mass,residue,init_time,wall_time;$/;"	v
residue	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^    double residue;$/;"	m	struct:nissa::pure_gauge_evol_pars_t
residue	src/operations/stag/stag.hpp	/^    double residue;$/;"	m	struct:nissa::base_fermionic_meas_t
residue	work_in_prog/eo_inverter/invert2.cpp	/^double residue;$/;"	v
residues	projects/semileptonic/new_version/new_types.hpp	/^  double *residues;$/;"	m	struct:mass_res_group_t
resize	src/new_types/rat_approx.hpp	/^    void resize(int size){poles.resize(size);weights.resize(size);}$/;"	f	struct:nissa::rat_approx_t
return_malloc_ptr	src/base/vectors.hpp	/^  EXTERN_VECTORS void *return_malloc_ptr;$/;"	m	namespace:nissa
rho	src/operations/smearing/stout.hpp	/^    double rho;$/;"	m	struct:nissa::stout_pars_t
right	projects/ib/contr.hpp	/^    std::string left,right;$/;"	m	struct:nissa::handcuffs_map_t
rnd	tools/conf_measure/magn.cpp	/^color *chi[2],*rnd[2],*guess;$/;"	v
rnd_gauge_transform	projects/ib/mel.cpp	/^int free_theory,rnd_gauge_transform;$/;"	v
rnd_gen	src/base/random.hpp	/^  struct rnd_gen$/;"	s	namespace:nissa
rnd_gen_diff	tools/conf_transform/edit/rewind_random.cpp	/^bool rnd_gen_diff(rnd_gen &a,rnd_gen &b,int tot)$/;"	f
rnd_gen_mess	projects/generate_confs/generate.cpp	/^std::string rnd_gen_mess;$/;"	v
rnd_get_Z2	src/base/random.cpp	/^  void rnd_get_Z2(complex out,rnd_gen *gen)$/;"	f	namespace:nissa
rnd_get_Z3	src/base/random.hpp	/^  inline void rnd_get_Z3(complex out,rnd_gen *gen)$/;"	f	namespace:nissa
rnd_get_Z4	src/base/random.cpp	/^  void rnd_get_Z4(complex out,rnd_gen *gen)$/;"	f	namespace:nissa
rnd_get_ZN	src/base/random.cpp	/^  void rnd_get_ZN(complex out,rnd_gen *gen,int N)$/;"	f	namespace:nissa
rnd_get_gauss_complex	src/base/random.cpp	/^  void rnd_get_gauss_complex(complex out,rnd_gen *gen,complex ave,double sig)$/;"	f	namespace:nissa
rnd_get_gauss_double	src/base/random.cpp	/^  double rnd_get_gauss_double(rnd_gen *gen,double ave,double sig)$/;"	f	namespace:nissa
rnd_get_pm_one	src/base/random.cpp	/^  int rnd_get_pm_one(rnd_gen *gen)$/;"	f	namespace:nissa
rnd_get_unif	src/base/random.cpp	/^  double rnd_get_unif(rnd_gen *gen,double min,double max)$/;"	f	namespace:nissa
rnd_t	src/base/random.hpp	/^  enum rnd_t{RND_ALL_PLUS_ONE,RND_ALL_MINUS_ONE,RND_UNIF,RND_Z2,RND_Z3,RND_Z4,RND_GAUSS};$/;"	g	namespace:nissa
rnd_t_str	src/base/random.hpp	/^  const char rnd_t_str[nrnd_type][20]={"AllPlusOne","AllMinusOne","Unif","Z2","Z3","Z4","Gauss"};$/;"	m	namespace:nissa
rnd_type	build/projects/generate_confs/parser.cpp	/^    nissa::rnd_t rnd_type;$/;"	m	union:YYSTYPE	file:
rnd_type	build/projects/generate_confs/parser.hpp	/^    nissa::rnd_t rnd_type;$/;"	m	union:YYSTYPE
rnd_type	src/operations/stag/stag.hpp	/^    rnd_t rnd_type;$/;"	m	struct:nissa::base_fermionic_meas_t
root_find	src/operations/remez/remez_algorithm.cpp	/^  void rat_approx_finder_t::root_find(float_high_prec_t *roots,float_high_prec_t *poles,float_high_prec_t &cons)$/;"	f	class:nissa::rat_approx_finder_t
root_find_Newton	src/operations/remez/remez_algorithm.cpp	/^  float_high_prec_t rat_approx_finder_t::root_find_Newton(float_high_prec_t *poly,int size,double x1,double x2,double acc)$/;"	f	class:nissa::rat_approx_finder_t
root_needed	src/hmc/quark_pars.hpp	/^    inline int root_needed(name_t name)$/;"	f	namespace:nissa::ferm_discretiz
rotate_spinspin_to_physical_basis	src/new_types/spin.hpp	/^  inline void rotate_spinspin_to_physical_basis(spinspin s,int rsi,int rso)$/;"	f	namespace:nissa
rotate_to_phppysical_basis	projects/semileptonic/new_version/new_types.hpp	/^  int rotate_to_phppysical_basis;$/;"	m	struct:prop_group_command_t
rotate_to_phys_basis	projects/semileptonic/semileptonic_smeared.cpp	/^int rotate_to_phys_basis;$/;"	v
rprop	projects/semileptonic/test_proj.cpp	/^int T,L,seed,tsource,npassed_conf,ntot_conf,rprop,binary_ascii;$/;"	v
rspec	projects/semileptonic/gevp_3pts.cpp	/^int rspec=0;$/;"	v
run_mode	projects/generate_confs/driver.hpp	/^    run_mode_t run_mode;$/;"	m	class:nissa::driver_t
run_mode_t	projects/generate_confs/driver.hpp	/^    enum run_mode_t{EVOLUTION_MODE,ANALYSIS_MODE};$/;"	g	class:nissa::driver_t
run_program_for_analysis	projects/generate_confs/generate.cpp	/^void run_program_for_analysis()$/;"	f
run_program_for_production	projects/generate_confs/generate.cpp	/^void run_program_for_production()$/;"	f
s	projects/reno_const/fourier.c	/^double g_beta,m0,s;$/;"	v
s	src/operations/gauge_fixing.cpp	/^    su3 *s;$/;"	m	namespace:nissa::GCG	file:
s	tools/Gaussiansmear_test.cpp	/^  double s;$/;"	m	struct:dens_t	file:
s2u	src/new_types/su3_op.hpp	/^    double c2u,s2u;$/;"	m	struct:nissa::hermitian_exp_ingredients
sa_string	tools/clusterize2.cpp	/^typedef char sa_string[300];$/;"	t	file:
safe_anti_hermitian_exact_exponentiate	src/new_types/su3_op.hpp	/^  inline void safe_anti_hermitian_exact_exponentiate(su3 out,const su3 iQ)$/;"	f	namespace:nissa
safe_color_prod_complex	src/new_types/su3_op.hpp	/^  inline void safe_color_prod_complex(color out,const color in,const complex factor)$/;"	f	namespace:nissa
safe_color_prod_complex_conj	src/new_types/su3_op.hpp	/^  inline void safe_color_prod_complex_conj(color out,const color in,const complex factor)$/;"	f	namespace:nissa
safe_color_prod_su3	src/new_types/su3_op.hpp	/^  inline void safe_color_prod_su3(color a,const color b,const su3 c)$/;"	f	namespace:nissa
safe_complex_conj1_prod	src/new_types/complex.hpp	/^  inline void safe_complex_conj1_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
safe_complex_conj1_prod_minus	src/new_types/complex.hpp	/^  inline void safe_complex_conj1_prod_minus(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
safe_complex_conj2_prod	src/new_types/complex.hpp	/^  inline void safe_complex_conj2_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
safe_complex_conj2_prod_minus	src/new_types/complex.hpp	/^  inline void safe_complex_conj2_prod_minus(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
safe_complex_prod	src/new_types/complex.hpp	/^  inline void safe_complex_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
safe_complex_prod_i	src/new_types/complex.hpp	/^  inline void safe_complex_prod_i(complex a,const complex b)$/;"	f	namespace:nissa
safe_complex_prod_minus	src/new_types/complex.hpp	/^  inline void safe_complex_prod_minus(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
safe_complex_prod_minus_i	src/new_types/complex.hpp	/^  inline void safe_complex_prod_minus_i(complex a,const complex b)$/;"	f	namespace:nissa
safe_dirac_compl_prod	src/new_types/dirac.hpp	/^  inline void safe_dirac_compl_prod(dirac_matr *out,dirac_matr *in,complex c)$/;"	f	namespace:nissa
safe_dirac_prod_colorspinspin	src/new_types/su3_op.hpp	/^  inline void safe_dirac_prod_colorspinspin(colorspinspin out,const dirac_matr *m,const colorspinspin in)$/;"	f	namespace:nissa
safe_dirac_prod_complex	src/new_types/dirac.hpp	/^  inline void safe_dirac_prod_complex(dirac_matr *out,dirac_matr *in1,complex in2)$/;"	f	namespace:nissa
safe_dirac_prod_spin	src/new_types/spin.hpp	/^  inline void safe_dirac_prod_spin(spin out,const dirac_matr *m,const spin in){spin tmp;unsafe_dirac_prod_spin(tmp,m,in);spin_copy(out,tmp);}$/;"	f	namespace:nissa
safe_dirac_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void safe_dirac_prod_spincolor(spincolor out,const dirac_matr *m,const spincolor in)$/;"	f	namespace:nissa
safe_dirac_prod_spinspin	src/new_types/spin.hpp	/^  inline void safe_dirac_prod_spinspin(spinspin out,const dirac_matr *m,const spinspin in)$/;"	f	namespace:nissa
safe_dirac_prod_spinspin_dag	src/new_types/spin.hpp	/^  inline void safe_dirac_prod_spinspin_dag(spinspin out,const dirac_matr *m,const spinspin in)$/;"	f	namespace:nissa
safe_dirac_prod_spinspin_transp	src/new_types/spin.hpp	/^  inline void safe_dirac_prod_spinspin_transp(spinspin out,const dirac_matr *m,const spinspin in)$/;"	f	namespace:nissa
safe_dirac_prod_su3spinspin	src/new_types/su3_op.hpp	/^  inline void safe_dirac_prod_su3spinspin(su3spinspin out,const dirac_matr *m,const su3spinspin in)$/;"	f	namespace:nissa
safe_hermitian_exact_i_exponentiate	src/new_types/su3_op.hpp	/^  inline void safe_hermitian_exact_i_exponentiate(su3 out,const su3 Q)$/;"	f	namespace:nissa
safe_hermitian_exact_i_exponentiate	src/new_types/su3_op.hpp	/^  inline void safe_hermitian_exact_i_exponentiate(su3 out,hermitian_exp_ingredients &ing)$/;"	f	namespace:nissa
safe_snprintf	src/routines/ios.hpp	/^  void safe_snprintf(char *buf,int n,const char *pattern,const Args&...args)$/;"	f	namespace:nissa
safe_spin_prod_spin	src/new_types/spin.hpp	/^  inline void safe_spin_prod_spin(spin out,const spin in,const dirac_matr *m){spin tmp;unsafe_spin_prod_dirac(tmp,in,m);spin_copy(out,tmp);}$/;"	f	namespace:nissa
safe_spin_prod_spinspin	src/new_types/spin.hpp	/^  inline void safe_spin_prod_spinspin(spin out,const spin a,const spinspin b)$/;"	f	namespace:nissa
safe_spincolor_prod_complex	src/new_types/su3_op.hpp	/^  inline void safe_spincolor_prod_complex(spincolor a,const spincolor b,const complex factor)$/;"	f	namespace:nissa
safe_spincolor_prod_dirac	src/new_types/su3_op.hpp	/^  inline void safe_spincolor_prod_dirac(spincolor out,const spincolor in,const dirac_matr *m)$/;"	f	namespace:nissa
safe_spincolor_prod_spinspin	src/new_types/su3_op.hpp	/^  inline void safe_spincolor_prod_spinspin(spincolor out,const spincolor a,const spinspin b)$/;"	f	namespace:nissa
safe_spinspin_hermitian	src/new_types/spin.hpp	/^  inline void safe_spinspin_hermitian(spinspin b,const spinspin a)$/;"	f	namespace:nissa
safe_spinspin_prod_complex	src/new_types/spin.hpp	/^  inline void safe_spinspin_prod_complex(spinspin a,const spinspin b,const complex c)$/;"	f	namespace:nissa
safe_spinspin_prod_complex_conj2	src/new_types/spin.hpp	/^  inline void safe_spinspin_prod_complex_conj2(spinspin a,const spinspin b,const complex c)$/;"	f	namespace:nissa
safe_spinspin_prod_dirac	src/new_types/spin.hpp	/^  inline void safe_spinspin_prod_dirac(spinspin out,const spinspin in,const dirac_matr *m)$/;"	f	namespace:nissa
safe_spinspin_prod_spin	src/new_types/spin.hpp	/^  inline void safe_spinspin_prod_spin(spin out,const spinspin a,spin b)$/;"	f	namespace:nissa
safe_spinspin_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void safe_spinspin_prod_spincolor(spincolor out,const spinspin a,spincolor b)$/;"	f	namespace:nissa
safe_spinspin_prod_spinspin	src/new_types/spin.hpp	/^  inline void safe_spinspin_prod_spinspin(spinspin out,const spinspin a,const spinspin b)$/;"	f	namespace:nissa
safe_spinspin_prod_spinspin_dag	src/new_types/spin.hpp	/^  inline void safe_spinspin_prod_spinspin_dag(spinspin out,const spinspin a,const spinspin b)$/;"	f	namespace:nissa
safe_su3_dag_prod_color	src/new_types/su3_op.hpp	/^  inline void safe_su3_dag_prod_color(color a,const su3 b,const color c)$/;"	f	namespace:nissa
safe_su3_dag_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void safe_su3_dag_prod_spincolor(spincolor out,const su3 U,const spincolor in)$/;"	f	namespace:nissa
safe_su3_dag_prod_su3	src/new_types/su3_op.hpp	/^  inline void safe_su3_dag_prod_su3(su3 a,const su3 b,const su3 c) {su3 d;unsafe_su3_dag_prod_su3(d,b,c);su3_copy(a,d);}$/;"	f	namespace:nissa
safe_su3_dag_prod_su3_dag	src/new_types/su3_op.hpp	/^  inline void safe_su3_dag_prod_su3_dag(su3 a,const su3 b,const su3 c)$/;"	f	namespace:nissa
safe_su3_explicit_inverse	src/new_types/su3_op.hpp	/^  inline void safe_su3_explicit_inverse(su3 invU,const su3 U)$/;"	f	namespace:nissa
safe_su3_hermitian	src/new_types/su3_op.hpp	/^  inline void safe_su3_hermitian(su3 out,const su3 in)$/;"	f	namespace:nissa
safe_su3_hermitian_prod_double	src/new_types/su3_op.hpp	/^  inline void safe_su3_hermitian_prod_double(su3 a,const su3 b,const double r)$/;"	f	namespace:nissa
safe_su3_prod_color	src/new_types/su3_op.hpp	/^  inline void safe_su3_prod_color(color a,const su3 b,const color c) {color t;unsafe_su3_prod_color(t,b,c);color_copy(a,t);}$/;"	f	namespace:nissa
safe_su3_prod_complex	src/new_types/su3_op.hpp	/^  inline void safe_su3_prod_complex(su3 a,const su3 b,const complex c)$/;"	f	namespace:nissa
safe_su3_prod_complex_conj	src/new_types/su3_op.hpp	/^  inline void safe_su3_prod_complex_conj(su3 a,const su3 b,const complex c)$/;"	f	namespace:nissa
safe_su3_prod_su3	src/new_types/su3_op.hpp	/^  inline void safe_su3_prod_su3(su3 a,const su3 b,const su3 c) {su3 d;unsafe_su3_prod_su3(d,b,c);su3_copy(a,d);}$/;"	f	namespace:nissa
safe_su3_prod_su3_dag	src/new_types/su3_op.hpp	/^  inline void safe_su3_prod_su3_dag(su3 a,const su3 b,const su3 c) {su3 d;unsafe_su3_prod_su3_dag(d,b,c);su3_copy(a,d);}$/;"	f	namespace:nissa
safe_su3_sqrt	src/new_types/su3_op.hpp	/^  inline void safe_su3_sqrt(su3 x,const su3 y) {su3 t;unsafe_su3_sqrt(t,y);su3_copy(x,t);}$/;"	f	namespace:nissa
safe_su3_transpose	src/new_types/su3_op.hpp	/^  inline void safe_su3_transpose(su3 out,const su3 in)$/;"	f	namespace:nissa
safe_su3spinspin_prod_complex	src/new_types/su3_op.hpp	/^  inline void safe_su3spinspin_prod_complex(su3spinspin out,const su3spinspin in,const complex factor)$/;"	f	namespace:nissa
save	projects/semileptonic/new_version/new_types.hpp	/^  int save;$/;"	m	struct:prop_group_command_t
save	src/new_types/metadynamics.cpp	/^  void meta_pars_t::save(const char *path)$/;"	f	class:nissa::meta_pars_t
save_S0	projects/semileptonic/semileptonic_smeared.cpp	/^int load_S0,save_S0;$/;"	v
save_base_source	projects/semileptonic/new_version/test.cpp	/^int save_base_source;$/;"	v
save_correlators	projects/x/progs/compute_corrections.cpp	/^void save_correlators(const char *output_folder,const char *filename,corr16 *corr)$/;"	f
save_data	tools/x_clusterize/x_clusterize.cpp	/^void save_data(const char *path)$/;"	f
save_poly_loop_correlator	src/operations/su3_paths/pline.cpp	/^  void save_poly_loop_correlator(FILE *file,complex *loop,int mu,double *tra,int itraj)$/;"	f	namespace:nissa
save_prop_time	projects/reno_const/RIMOM.cpp	/^double fft_time=0,save_prop_time=0,load_time=0,filter_prop_time=0;$/;"	v
save_props	projects/semileptonic/new_version/new_semileptonic.cpp	/^  int save_props;$/;"	m	struct:propgroup_t	file:
save_reconstructing	projects/semileptonic/new_version/new_types.hpp	/^  int save_reconstructing;$/;"	m	struct:prop_group_command_t
save_source	projects/semileptonic/new_version/new_semileptonic.cpp	/^  int save_source;$/;"	m	struct:source_t	file:
save_source	projects/semileptonic/semileptonic_smeared.cpp	/^int save_source;$/;"	v
save_topodynamical_potential	src/hmc/gauge/topological_action.cpp	/^  void save_topodynamical_potential(topotential_pars_t &pars)$/;"	f	namespace:nissa
sbindir	build/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	build/projects/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	build/src/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	build/tools/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
scal_prod	work_in_prog/detM/detM_est.cpp	/^void scal_prod(complex c,spincolor *a,spincolor *b)$/;"	f
scal_prod	work_in_prog/detM/detM_est2.cpp	/^void scal_prod(complex c,spincolor *a,spincolor *b)$/;"	f
scal_prod_with	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    double scal_prod_with(pseudofermion_t &oth)$/;"	f	struct:nissa::pseudofermion_t
scanner	build/projects/generate_confs/parser.cpp	93;"	d	file:
scanner	build/projects/semileptonic/parse_corr.cpp	87;"	d	file:
scanner	projects/generate_confs/driver.hpp	/^    void *scanner;$/;"	m	class:nissa::driver_t
scanner	projects/semileptonic/driver_corr.hpp	/^  void *scanner;$/;"	m	class:two_pts_parser_driver
scidac_mapping	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX coords scidac_mapping;$/;"	m	namespace:nissa
scomplex_t	src/new_types/su3_op.hpp	/^ typedef std::complex<double> scomplex_t;$/;"	t
scream	src/operations/contract/optimized_mesons_2pts.cpp	/^  void two_pts_comp_t::scream()$/;"	f	class:nissa::two_pts_comp_t
sea_theory	projects/generate_confs/driver.hpp	/^    theory_pars_t &sea_theory(){return theories[evol_pars.id_sea_theory];}$/;"	f	class:nissa::driver_t
second	projects/semileptonic/new_version/new_types.hpp	/^  prop_group_t *second;$/;"	m	struct:prop_group_pair_t
seed	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int seed,noise_type;$/;"	v
seed	projects/g/g.cpp	/^int seed,noise_type,twall;$/;"	v
seed	projects/generate_confs/driver.hpp	/^    int seed;$/;"	m	class:nissa::driver_t
seed	projects/generate_confs/generate_quenched.cpp	/^int seed;$/;"	v
seed	projects/ib/mel.cpp	/^int seed,noise_type;$/;"	v
seed	projects/semileptonic/gevp.cpp	/^int T,L,seed;$/;"	v
seed	projects/semileptonic/gevp_3pts.cpp	/^int T,L,seed;$/;"	v
seed	projects/semileptonic/new_version/new_semileptonic.cpp	/^int wall_time,seed,ape_niter;$/;"	v
seed	projects/semileptonic/semileptonic_smeared.cpp	/^int seed;$/;"	v
seed	projects/semileptonic/test_bgq.cpp	/^int seed=100;$/;"	v
seed	projects/semileptonic/test_proj.cpp	/^int T,L,seed,tsource,npassed_conf,ntot_conf,rprop,binary_ascii;$/;"	v
seed	src/new_types/dsfmt.hpp	/^    uint32_t seed;$/;"	m	class:nissa::dsfmt_t
seed	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int seed,noise_type,twall;$/;"	v
select_new_delay_pattern	src/routines/thread.cpp	/^  void select_new_delay_pattern()$/;"	f	namespace:nissa
select_propagator_timeslice	src/operations/source.hpp	/^  template<class prop_type> void select_propagator_timeslice(prop_type *prop_out,prop_type *prop_in,int timeslice)$/;"	f	namespace:nissa
select_timeslice	projects/semileptonic/new_version/new_semileptonic.cpp	/^  int select_timeslice;$/;"	m	struct:source_t	file:
self	projects/x/progs/compute_corrections.cpp	/^  int self;$/;"	m	struct:flags	file:
self_prop	projects/x/tests/test_meson_self_energy_stochastic_correction.cpp	/^spinspin *prop,*self_prop;\/\/,*id;$/;"	v
semileptonic_smeared_parser_built_sources	build/projects/Makefile	/^semileptonic_smeared_parser_built_sources = \\$/;"	m
semileptonic_smeared_parser_sources	build/projects/Makefile	/^semileptonic_smeared_parser_sources = \\$/;"	m
send_buf	src/communicate/communicate.hpp	/^  EXTERN_COMMUNICATE char *recv_buf,*send_buf;$/;"	m	namespace:nissa
send_buf	work_in_prog/bgq/src/add_var.hpp	/^  chppar *send_buf,*recv_buf;$/;"	m	struct:spi_comm_t
send_buf_size	src/communicate/communicate.hpp	/^  EXTERN_COMMUNICATE uint64_t recv_buf_size,send_buf_size;$/;"	m	namespace:nissa
send_offset	src/communicate/communicate.hpp	/^    int send_offset[8],message_length[8],recv_offset[8];$/;"	m	struct:nissa::comm_t
seq_source	projects/nucleons/nucleons_smeared.cpp	/^su3spinspin *seq_source;$/;"	v
seq_source	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *loc_source,*sme_source,*seq_source,*C_loc_source,*C_sme_source,*S1;$/;"	v
sequential_source	projects/g/g.cpp	/^colorspinspin *sequential_source;$/;"	v
sequential_source	projects/semileptonic/semileptonic_smeared.cpp	/^PROP_TYPE *sequential_source;$/;"	v
sequential_source	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^su3spinspin *sequential_source;$/;"	v
sequential_source	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^colorspinspin *sequential_source;$/;"	v
set	src/operations/su3_paths/arbitrary.hpp	/^    void set(int ext_mov,int gx,int mu){$/;"	f	struct:nissa::movement_link_id
set_Cg5	projects/ib/contr.cpp	/^  void set_Cg5()$/;"	f	namespace:nissa
set_Leb_geometry	src/geometry/geometry_Leb.cpp	/^  void set_Leb_geometry()$/;"	f	namespace:nissa
set_antiperodic_theta	projects/semileptonic/new_version/new_types.hpp	/^  void set_antiperodic_theta() {momentum_t anti={1,theta[1],theta[2],theta[3]};adapt_thppeta(anti);}$/;"	f	struct:gauge_conf_t
set_base_from	config/depcomp	/^set_base_from ()$/;"	f
set_beta	projects/semileptonic/new_version/new_types.hpp	/^  void set_beta(double ext_beta) {beta=ext_beta;};$/;"	f	struct:gauge_conf_t
set_borders_invalid	src/base/vectors.cpp	/^  void set_borders_invalid(void *data)$/;"	f	namespace:nissa
set_borders_valid	src/base/vectors.cpp	/^  void set_borders_valid(void *data)$/;"	f	namespace:nissa
set_diluted_color	projects/ib/pars.hpp	/^  inline void set_diluted_color(int c)$/;"	f	namespace:nissa
set_diluted_space	projects/ib/pars.hpp	/^  inline void set_diluted_space(int s)$/;"	f	namespace:nissa
set_diluted_spin	projects/ib/pars.hpp	/^  inline void set_diluted_spin(int s)$/;"	f	namespace:nissa
set_dir_from	config/depcomp	/^set_dir_from ()$/;"	f
set_edges_invalid	src/base/vectors.cpp	/^  void set_edges_invalid(void *data)$/;"	f	namespace:nissa
set_edges_valid	src/base/vectors.cpp	/^  void set_edges_valid(void *data)$/;"	f	namespace:nissa
set_eo_comm	src/communicate/borders.cpp	/^  void set_eo_comm(comm_t &comm,int nbytes_per_site)$/;"	f	namespace:nissa
set_eo_edge_senders_and_receivers	src/geometry/geometry_eo.cpp	/^  void set_eo_edge_senders_and_receivers(MPI_Datatype *MPI_EO_EDGES_SEND,MPI_Datatype *MPI_EO_EDGES_RECE,MPI_Datatype *base)$/;"	f	namespace:nissa
set_eo_geometry	src/geometry/geometry_eo.cpp	/^  void set_eo_geometry()$/;"	f	namespace:nissa
set_from_way	tools/find_best_vir_partitioning/find.cpp	/^  void set_from_way(int iway)$/;"	f	struct:assignement_t
set_kappa	projects/semileptonic/new_version/new_types.hpp	/^  void set_kappa(double ext_kappa) {kappa=ext_kappa;}$/;"	f	struct:gauge_conf_t
set_kappa	projects/semileptonic/new_version/new_types.hpp	/^  void set_kappa(double ext_kappa) {kappa=ext_kappa;}$/;"	f	struct:gauss_smear_pars_t
set_linear_system	src/operations/remez/remez_algorithm.cpp	/^  void rat_approx_finder_t::set_linear_system(float_high_prec_t *matr,float_high_prec_t *vec)$/;"	f	class:nissa::rat_approx_finder_t
set_lx_comm	src/communicate/borders.cpp	/^  void set_lx_comm(comm_t &comm,int nbytes_per_site)$/;"	f	namespace:nissa
set_lx_geometry	src/geometry/geometry_lx.cpp	/^  void set_lx_geometry()$/;"	f	namespace:nissa
set_lx_or_eo_comm	src/communicate/borders.cpp	/^  void set_lx_or_eo_comm(comm_t &comm,int lx_eo,int nbytes_per_site)$/;"	f	namespace:nissa
set_spi_geometry	src/bgq/spi.cpp	/^  void set_spi_geometry()$/;"	f	namespace:nissa
set_spi_hints	src/bgq/spi.cpp	/^  void set_spi_hints()$/;"	f	namespace:nissa
set_spi_neighbours	src/bgq/spi.cpp	/^  void set_spi_neighbours()$/;"	f	namespace:nissa
set_spinspin_to_delta	projects/x/tests/test_twisted_propagator_stochastic_correction.cpp	/^void set_spinspin_to_delta(spinspin *in)$/;"	f
set_step	src/operations/remez/remez_algorithm.cpp	/^  void rat_approx_finder_t::set_step()$/;"	f	class:nissa::rat_approx_finder_t
set_to_lepton_sink_phase_factor	projects/ib/mel.cpp	/^void set_to_lepton_sink_phase_factor(spinspin *prop,int ilepton,tm_quark_info &le)$/;"	f
set_to_lepton_sink_phase_factor	projects/ib/meslep.cpp	/^  void set_to_lepton_sink_phase_factor(spinspin *prop,int ilepton,tm_quark_info &le)$/;"	f	namespace:nissa
set_to_lepton_sink_phase_factor	projects/ib/test_prop.cpp	/^void set_to_lepton_sink_phase_factor(spinspin *prop,int twall)$/;"	f
set_vect_flag	src/base/vectors.cpp	/^  void set_vect_flag(void *v,unsigned int flag)$/;"	f	namespace:nissa
set_vect_flag_non_blocking	src/base/vectors.cpp	/^  void set_vect_flag_non_blocking(void *v,unsigned int flag)$/;"	f	namespace:nissa
set_vir_geometry	src/geometry/geometry_vir.cpp	/^  void set_vir_geometry()$/;"	f	namespace:nissa
setup_conf	projects/g/g.cpp	/^void setup_conf()$/;"	f
setup_conf	projects/ib/conf.cpp	/^  void setup_conf(quad_su3 *conf,const char *conf_path,int rnd_gauge_transform,int free_theory)$/;"	f	namespace:nissa
setup_conf	projects/ib/mel.cpp	/^void setup_conf(quad_su3 *conf,momentum_t old_theta,momentum_t put_theta,const char *conf_path,int rnd_gauge_transform,int free_theory)$/;"	f
setup_conf	projects/semileptonic/gevp.cpp	/^void setup_conf()$/;"	f
setup_conf	projects/semileptonic/gevp_3pts.cpp	/^void setup_conf()$/;"	f
setup_conf	projects/semileptonic/semileptonic_smeared.cpp	/^void setup_conf()$/;"	f
setup_conf	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void setup_conf()$/;"	f
setup_knowing_what_to_ask	src/communicate/all_to_all.cpp	/^  void all_to_all_comm_t::setup_knowing_what_to_ask(all_to_all_gathering_list_t &gl)$/;"	f	class:nissa::all_to_all_comm_t
setup_knowing_where_to_send	src/communicate/all_to_all.cpp	/^  void all_to_all_comm_t::setup_knowing_where_to_send(all_to_all_scattering_list_t &sl)$/;"	f	class:nissa::all_to_all_comm_t
setup_nper_rank_other_temp	src/communicate/all_to_all.cpp	/^  void all_to_all_comm_t::setup_nper_rank_other_temp(int *nper_rank_other_temp,int *nper_rank_temp)$/;"	f	class:nissa::all_to_all_comm_t
setup_sender_receivers	src/operations/su3_paths/arbitrary.cpp	/^  void paths_calculation_structure::setup_sender_receivers()$/;"	f	class:nissa::paths_calculation_structure
setup_valid	src/base/DDalphaAMG_bridge.cpp	/^  bool setup_valid=false;$/;"	m	namespace:DD	file:
sharedstatedir	build/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	build/projects/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	build/src/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	build/tools/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shift_all_ROOT_STAG_poles	src/hmc/multipseudo/multipseudo_rhmc_step.cpp	/^    void shift_all_ROOT_STAG_poles(theory_pars_t &theory_pars,std::vector<rat_approx_t> &rat_appr,const double sign)$/;"	f	namespace:nissa::__anon8
shift_all_poles	src/new_types/rat_approx.hpp	/^    void shift_all_poles(double sh) {for(int iterm=0;iterm<degree();iterm++) poles[iterm]+=sh;}$/;"	f	struct:nissa::rat_approx_t
shift_orie_t	src/operations/stag/stag.hpp	/^    enum shift_orie_t{UP,DW,BOTH};$/;"	g	namespace:nissa::stag
shift_poles	src/hmc/multipseudo/multipseudo_rhmc_step.cpp	/^    const double shift_poles=1,shift_poles_back=-1;$/;"	m	namespace:nissa::__anon8	file:
shift_poles_back	src/hmc/multipseudo/multipseudo_rhmc_step.cpp	/^    const double shift_poles=1,shift_poles_back=-1;$/;"	m	namespace:nissa::__anon8	file:
shift_spin1field_dw	projects/x/src/routines/shift.cpp	/^void shift_spin1field_dw(spin1field *out,spin1field *in,momentum_t bc,int mu)$/;"	f
shift_spin1field_up	projects/x/src/routines/shift.cpp	/^void shift_spin1field_up(spin1field *out,spin1field *in,momentum_t bc,int mu)$/;"	f
shift_spin_dw	projects/x/src/routines/shift.cpp	/^void shift_spin_dw(spin *out,spin *in,momentum_t bc,int mu)$/;"	f
shift_spin_up	projects/x/src/routines/shift.cpp	/^void shift_spin_up(spin *out,spin *in,momentum_t bc,int mu)$/;"	f
shift_spin_updw	projects/x/src/routines/shift.cpp	/^void shift_spin_updw(spin *out,spin *in,momentum_t bc,int mu,int ud)$/;"	f
shift_spinspin_sink_dw	projects/x/src/routines/shift.cpp	/^void shift_spinspin_sink_dw(spinspin *out,spinspin *in,momentum_t bc,int mu)$/;"	f
shift_spinspin_sink_up	projects/x/src/routines/shift.cpp	/^void shift_spinspin_sink_up(spinspin *out,spinspin *in,momentum_t bc,int mu)$/;"	f
shift_spinspin_source	projects/x/src/routines/shift.cpp	/^void shift_spinspin_source(spinspin *out,spinspin *in,momentum_t bc,coords r)$/;"	f
shift_spinspin_source_dw	projects/x/src/routines/shift.cpp	/^void shift_spinspin_source_dw(spinspin *out,spinspin *in,momentum_t bc,int mu)$/;"	f
shift_spinspin_source_up	projects/x/src/routines/shift.cpp	/^void shift_spinspin_source_up(spinspin *out,spinspin *in,momentum_t bc,int mu)$/;"	f
shift_spinspin_source_updw	projects/x/src/routines/shift.cpp	/^void shift_spinspin_source_updw(spinspin *out,spinspin *in,momentum_t bc,int mu,int ud)$/;"	f
short	build/projects/generate_confs/parser.cpp	482;"	d	file:
short	build/projects/semileptonic/parse_corr.cpp	189;"	d	file:
shppift	projects/semileptonic/new_version/new_types.hpp	/^  int shppift;$/;"	m	struct:corr_command_t
si	src/operations/contract/mesons_2pts.hpp	/^    int si;$/;"	m	struct:nissa::idirac_pair_t
si_gnit	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int *si_gnit,si_gnlv;$/;"	v
si_gnlv	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int *si_gnit,si_gnlv;$/;"	v
sign	src/new_types/su3_op.hpp	/^    int sign;$/;"	m	struct:nissa::hermitian_exp_ingredients
sign_orie	projects/ib/mel.cpp	/^const int sign_orie[2]={-1,+1};$/;"	v
sign_orie	projects/ib/meslep.hpp	/^  const int sign_orie[2]={-1,+1};$/;"	m	namespace:nissa
sign_r	projects/g/g.cpp	/^int sign_r[2]={-1,+1};$/;"	v
signal_handler	src/base/debug.cpp	/^  void signal_handler(int sig)$/;"	f	namespace:nissa
sin2	projects/ib/test_prop.cpp	/^double sin2(coords cp,momentum_t bc)$/;"	f
sin2_mom	projects/ib/checks.cpp	/^double sin2_mom(int imom,tm_quark_info qu)$/;"	f
sin2h	projects/ib/test_prop.cpp	/^double sin2h(coords cp,momentum_t bc)$/;"	f
sin_mom	projects/ib/checks.cpp	/^void sin_mom(momentum_t sin_mom,int imom,tm_quark_info qu)$/;"	f
single_color	src/new_types/su3.hpp	/^  typedef single_complex single_color[NCOL];$/;"	t	namespace:nissa
single_complex	src/new_types/complex.hpp	/^  typedef float single_complex[2];$/;"	t	namespace:nissa
single_complex_copy_from_complex	src/new_types/complex.hpp	/^  inline void single_complex_copy_from_complex(single_complex a,const complex b)$/;"	f	namespace:nissa
single_complex_subt_the_conj1_prod	src/new_types/complex.hpp	/^  inline void single_complex_subt_the_conj1_prod(single_complex a,const single_complex b,const single_complex c)$/;"	f	namespace:nissa
single_complex_subt_the_conj2_prod	src/new_types/complex.hpp	/^  inline void single_complex_subt_the_conj2_prod(single_complex a,const single_complex b,const single_complex c)$/;"	f	namespace:nissa
single_complex_summ_the_conj1_prod	src/new_types/complex.hpp	/^  inline void single_complex_summ_the_conj1_prod(single_complex a,const single_complex b,const single_complex c)$/;"	f	namespace:nissa
single_complex_summ_the_conj2_prod	src/new_types/complex.hpp	/^  inline void single_complex_summ_the_conj2_prod(single_complex a,const single_complex b,const single_complex c)$/;"	f	namespace:nissa
single_complex_summ_the_prod	src/new_types/complex.hpp	/^  inline void single_complex_summ_the_prod(single_complex a,const single_complex b,const single_complex c)$/;"	f	namespace:nissa
single_halfspincolor	src/new_types/su3.hpp	/^  typedef single_color single_halfspincolor[2];$/;"	t	namespace:nissa
single_quad_su3	src/new_types/su3.hpp	/^  typedef single_su3 single_quad_su3[NDIRAC];$/;"	t	namespace:nissa
single_spincolor	src/new_types/su3.hpp	/^  typedef single_color single_spincolor[NDIRAC];$/;"	t	namespace:nissa
single_su3	src/new_types/su3.hpp	/^  typedef single_color single_su3[NCOL];$/;"	t	namespace:nissa
single_su3_dag_subt_the_prod_single_color	src/new_types/su3_op.hpp	/^  inline void single_su3_dag_subt_the_prod_single_color(single_color a,const single_su3 b,const single_color c)$/;"	f	namespace:nissa
single_su3_dag_summ_the_prod_single_color	src/new_types/su3_op.hpp	/^  inline void single_su3_dag_summ_the_prod_single_color(single_color a,const single_su3 b,const single_color c)$/;"	f	namespace:nissa
single_su3_summ_the_prod_single_color	src/new_types/su3_op.hpp	/^  inline void single_su3_summ_the_prod_single_color(single_color a,const single_su3 b,const single_color c)$/;"	f	namespace:nissa
single_vector_copy	src/linalgs/linalgs.cpp	/^  void single_vector_copy(float *a,float *b,int n)$/;"	f	namespace:nissa
single_vector_init_to_zero	src/linalgs/linalgs.cpp	/^  void single_vector_init_to_zero(float *a,int n)$/;"	f	namespace:nissa
sink_op	projects/semileptonic/new_version/new_types.hpp	/^  int *sink_op;$/;"	m	struct:two_pts_corr_pars_t
sinp	projects/ib/test_prop.cpp	/^double sinp(coords cp1,coords cp2,momentum_t bc,double fr=1)$/;"	f
site_shift	src/operations/su3_paths/all_rectangles.cpp	/^  int site_shift(int icmp,tricoords_t L,int mu,int shift)$/;"	f	namespace:nissa
site_staple	projects/cpn/cpn.cpp	/^inline void site_staple(ON_t staple,ON_t *z,quad_u1 *l,int ivol)$/;"	f
size	src/io/buffer.hpp	/^    int size()$/;"	f	struct:nissa::buffer_t
size	src/io/input.cpp	/^      size_t size;$/;"	m	struct:nissa::__anon9::triple_tag	file:
size_per_el	src/base/vectors.hpp	/^    int64_t size_per_el;$/;"	m	struct:nissa::nissa_vect
sizes	src/operations/su3_paths/watusso.hpp	/^    std::vector<int> sizes;$/;"	m	struct:nissa::watusso_meas_pars_t
skip_conf	projects/ib/conf.cpp	/^  void skip_conf()$/;"	f	namespace:nissa
skip_hits_done_so_far	projects/ib/disco.cpp	/^void skip_hits_done_so_far()$/;"	f
skip_mtest_ntraj	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^    int skip_mtest_ntraj;$/;"	m	struct:nissa::pure_gauge_evol_pars_t
skip_mtest_ntraj	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int skip_mtest_ntraj;$/;"	m	struct:nissa::hmc_evol_pars_t
skip_nhits	projects/ib/conf.cpp	/^  void skip_nhits(int a,int b)$/;"	f	namespace:nissa
sme_conf	projects/eight_BK/smeared_BK_all_in_one.cpp	/^quad_su3 *conf,*sme_conf,*hyp_conf;$/;"	v
sme_conf	projects/g/g.cpp	/^quad_su3 *conf,*sme_conf;$/;"	v
sme_conf	projects/semileptonic/gevp.cpp	/^quad_su3 *conf,*sme_conf;$/;"	v
sme_conf	projects/semileptonic/gevp_3pts.cpp	/^quad_su3 *conf,*sme_conf;$/;"	v
sme_conf	projects/semileptonic/semileptonic_smeared.cpp	/^quad_su3 *conf,*sme_conf;$/;"	v
sme_conf	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^quad_su3 *conf,*sme_conf;$/;"	v
sme_conf	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^quad_su3 *conf,*sme_conf;$/;"	v
sme_source	projects/semileptonic/gevp_3pts.cpp	/^colorspinspin *loc_source,*sme_source,*seq_source,*C_loc_source,*C_sme_source,*S1;$/;"	v
smea_conf	projects/nucleons/nucleons_smeared.cpp	/^quad_su3 *conf,*smea_conf;$/;"	v
smear	projects/semileptonic/new_version/new_types.cpp	/^void in_source_t::smear(gauge_conf_t &conf,gauss_smear_pars_t &pars)$/;"	f	class:in_source_t
smear	projects/semileptonic/new_version/new_types.cpp	/^void prop_group_t::smear(gauge_conf_t &conf,gauss_smear_pars_t &pars)$/;"	f	class:prop_group_t
smear_additive_colorspinspin	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^void smear_additive_colorspinspin(colorspinspin *out,colorspinspin *in,int ism_lev,int *jacobi_niter)$/;"	f
smear_additive_propagator	projects/semileptonic/semileptonic_smeared.cpp	/^void smear_additive_propagator(PROP_TYPE *out,PROP_TYPE *in,int ism_lev,int *gaussian_niter)$/;"	f
smear_additive_su3spinspin	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^void smear_additive_su3spinspin(su3spinspin *out,su3spinspin *in,int ism_lev,int *jacobi_niter)$/;"	f
smear_all_S0	projects/g/g.cpp	/^void smear_all_S0()$/;"	f
smear_pars	projects/semileptonic/new_version/new_types.hpp	/^  gauss_smear_pars_t *smear_pars;$/;"	m	struct:prop_group_command_t
smear_pars	src/operations/su3_paths/pline.hpp	/^    smooth_pars_t smear_pars;$/;"	m	struct:nissa::poly_corr_meas_pars_t
smear_prop	projects/ib/prop.cpp	/^  void smear_prop(spincolor *out,quad_su3 *conf,spincolor *ori,int t,double kappa,int nlevels)$/;"	f	namespace:nissa
smear_time	projects/g/g.cpp	/^double smear_time=0;$/;"	v
smear_time	projects/semileptonic/gevp.cpp	/^double wall_time,conf_smear_time=0,tot_prog_time=0,inv_time=0,smear_time=0,corr_time=0;$/;"	v
smear_time	projects/semileptonic/gevp_3pts.cpp	/^double wall_time,conf_smear_time=0,tot_prog_time=0,inv_time=0,smear_time=0,corr_time=0;$/;"	v
smear_time	projects/semileptonic/semileptonic_smeared.cpp	/^double smear_time=0;$/;"	v
smooth_lx_conf	src/operations/smearing/smooth.cpp	/^  void smooth_lx_conf(quad_su3 *smoothed_conf,smooth_pars_t &sp,bool *dirs,int staple_min_dir)$/;"	f	namespace:nissa
smooth_lx_conf_one_step	src/operations/smearing/smooth.cpp	/^  void smooth_lx_conf_one_step(quad_su3 *smoothed_conf,smooth_pars_t &sp,bool *dirs,int staple_min_dir)$/;"	f	namespace:nissa
smooth_lx_conf_until_next_meas	src/operations/smearing/smooth.cpp	/^  bool smooth_lx_conf_until_next_meas(quad_su3 *smoothed_conf,smooth_pars_t &sp,int &nsmooth,bool *dirs,int staple_min_dir)$/;"	f	namespace:nissa
smooth_method_name_from_str	projects/generate_confs/convert_input.cpp	/^  smooth_pars_t::method_t smooth_method_name_from_str(const char *name)$/;"	f
smooth_method_name_from_str	projects/generate_confs/generate_quenched.cpp	/^smooth_pars_t::method_t smooth_method_name_from_str(const char *name)$/;"	f
smooth_method_name_from_str	tools/conf_measure/topo.cpp	/^smooth_pars_t::method_t smooth_method_name_from_str(const char *name)$/;"	f
smooth_pars	build/projects/generate_confs/parser.cpp	/^    nissa::smooth_pars_t *smooth_pars;$/;"	m	union:YYSTYPE	file:
smooth_pars	build/projects/generate_confs/parser.hpp	/^    nissa::smooth_pars_t *smooth_pars;$/;"	m	union:YYSTYPE
smooth_pars	src/operations/gaugeconf.hpp	/^    smooth_pars_t smooth_pars;$/;"	m	struct:nissa::gauge_obs_meas_pars_t
smooth_pars	src/operations/stag/spinpol.hpp	/^    smooth_pars_t smooth_pars;$/;"	m	struct:nissa::spinpol_meas_pars_t
smooth_pars	src/operations/su3_paths/topological_charge.hpp	/^    smooth_pars_t smooth_pars;$/;"	m	struct:nissa::top_meas_pars_t
smooth_pars_t	src/operations/smearing/smooth.hpp	/^    smooth_pars_t() :$/;"	f	struct:nissa::smooth_pars_t
smooth_pars_t	src/operations/smearing/smooth.hpp	/^  struct smooth_pars_t$/;"	s	namespace:nissa
smoother_iterations	src/base/DDalphaAMG_bridge.cpp	/^  int smoother_iterations;$/;"	m	namespace:DD	file:
smunu_entr	src/new_types/spin.hpp	/^  EXTERN_SPIN as2t smunu_entr[4];   \/\/these are the sigma matrices entries$/;"	m	namespace:nissa
smunu_pos	src/new_types/spin.hpp	/^  EXTERN_SPIN int smunu_pos[4][6];  \/\/and positions$/;"	m	namespace:nissa
snum	tools/conf_transform/convert/Claudio_to_ildg.cpp	/^int snum(int x,int y,int z,int t)$/;"	f
snum	tools/conf_transform/convert/gpu_to_ildg.cpp	/^int snum(int x,int y,int z,int t)$/;"	f
snum	tools/conf_transform/convert/ildg_to_gpu.cpp	/^int snum(int x,int y,int z,int t)$/;"	f
so	src/operations/contract/mesons_2pts.hpp	/^    int so;$/;"	m	struct:nissa::idirac_pair_t
so_gnit	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int **so_gnit,*so_gnlv; \/\/one per wall$/;"	v
so_gnlv	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int **so_gnit,*so_gnlv; \/\/one per wall$/;"	v
so_sp_col_ind	projects/ib/prop.hpp	/^  inline int so_sp_col_ind(int sp,int col){return col+nso_col*sp;}$/;"	f	namespace:nissa
solDD	projects/nucleons/nucleons_smeared.cpp	/^spincolor **solDD,*sol_reco[2];$/;"	v
sol_reco	projects/nucleons/nucleons_smeared.cpp	/^spincolor **solDD,*sol_reco[2];$/;"	v
solution	projects/semileptonic/test_proj.cpp	/^su3spinspin *source,**solution[2],*prop;$/;"	v
solve	src/base/DDalphaAMG_bridge.cpp	/^  int solve(nissa::spincolor *out,nissa::quad_su3 *conf,double kappa,double cSW,double mu,double precision2,nissa::spincolor *in)$/;"	f	namespace:DD
sou	src/operations/stag/qed_corr.cpp	/^      int sou;$/;"	m	struct:nissa::__anon13::ins_map_t	file:
source	projects/eight_BK/smeared_BK_all_in_one.cpp	/^spincolor *source;$/;"	v
source	projects/g/g.cpp	/^spincolor *source,*temp_sol;$/;"	v
source	projects/generate_confs/generate_quenched.cpp	/^spincolor *source,*temp_solution;$/;"	v
source	projects/ib/mel.cpp	/^PROP_TYPE *source,*original_source;$/;"	v
source	projects/nucleons/nucleons_smeared.cpp	/^spincolor *source,*temp_source;$/;"	v
source	projects/semileptonic/gevp.cpp	/^spincolor *source,*temp_vec[2],*cgm_solution[1];$/;"	v
source	projects/semileptonic/gevp_3pts.cpp	/^spincolor *source,*cgm_solution[1],*temp_vec[2];$/;"	v
source	projects/semileptonic/new_version/new_types.hpp	/^  in_source_t *source;$/;"	m	struct:prop_group_command_t
source	projects/semileptonic/new_version/test.cpp	/^in_source_t *source;$/;"	v
source	projects/semileptonic/semileptonic_smeared.cpp	/^spincolor *source;$/;"	v
source	projects/semileptonic/test_proj.cpp	/^su3spinspin *source,**solution[2],*prop;$/;"	v
source	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^spincolor *source;$/;"	v
source	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^spincolor *source;$/;"	v
source_coord	projects/ib/pars.hpp	/^  EXTERN_PARS coords source_coord;$/;"	m	namespace:nissa
source_coord	projects/reno_const/RIMOM.cpp	/^coords source_coord={0,0,0,0};$/;"	v
source_coord	projects/semileptonic/semileptonic_smeared.cpp	/^coords source_coord;$/;"	v
source_coord	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^int source_coord[4];$/;"	v
source_map	projects/ib/mel.cpp	/^const qprop_t source_map[nqprop_kind]=       {PROP_0,   PROP_0, PROP_0, PROP_0,   PROP_0,       PROP_PHOTON};\/\/,   PROP_0};$/;"	v
source_name	projects/ib/disco.cpp	/^std::string source_name="source";$/;"	v
source_name_tot	projects/ib/disco.cpp	/^std::string source_name_tot="source_tot";$/;"	v
source_op	projects/semileptonic/new_version/new_types.hpp	/^  int *source_op;$/;"	m	struct:two_pts_corr_pars_t
source_pos	projects/nucleons/nucleons_smeared.cpp	/^coords source_pos;$/;"	v
source_t	projects/semileptonic/new_version/new_semileptonic.cpp	/^struct source_t$/;"	s	file:
source_t	src/base/random.hpp	/^  enum source_t{POINT_SOURCE,UNDILUTED_SOURCE,COLOR_DILUTED_SOURCE,SPIN_DILUTED_SOURCE,SPINCOLOR_DILUTED_SOURCE};$/;"	g	namespace:nissa
source_term_t	projects/ib/prop.hpp	/^  typedef std::pair<std::string,std::pair<double,double>> source_term_t;$/;"	t	namespace:nissa
source_terms	projects/ib/prop.hpp	/^    std::vector<source_term_t> source_terms;$/;"	m	struct:nissa::qprop_t
source_time	projects/ib/mel.cpp	/^double source_time=0,photon_prop_time=0,lepton_prop_time=0;$/;"	v
sources	projects/semileptonic/new_version/new_semileptonic.cpp	/^source_t *sources;$/;"	v
sp	projects/ib/prop.hpp	/^    std::vector<spincolor*> sp;$/;"	m	struct:nissa::qprop_t
space_or_time	src/operations/smearing/smooth.hpp	/^    space_or_time_t space_or_time;$/;"	m	struct:nissa::smooth_pars_t
space_or_time_str_from_name	src/operations/smearing/smooth.hpp	/^    inline std::string space_or_time_str_from_name(space_or_time_t space_or_time)$/;"	f	struct:nissa::smooth_pars_t
space_or_time_t	src/operations/smearing/smooth.hpp	/^    enum space_or_time_t{SPACE,TIME,SPACETIME};$/;"	g	struct:nissa::smooth_pars_t
spat_smear_pars	src/operations/su3_paths/all_rectangles.hpp	/^    smooth_pars_t spat_smear_pars;$/;"	m	struct:nissa::all_rects_meas_pars_t
spat_smear_pars	src/operations/su3_paths/watusso.hpp	/^    smooth_pars_t spat_smear_pars;$/;"	m	struct:nissa::watusso_meas_pars_t
spectre	projects/x/tests/test_stochastic_source_null_mode.cpp	/^complex *spectre;$/;"	v
spi_barrier	src/bgq/spi.hpp	/^  EXTERN_SPI MUSPI_GIBarrier_t spi_barrier;$/;"	m	namespace:nissa
spi_barrier	work_in_prog/bgq/src/add_var.hpp	/^MUSPI_GIBarrier_t spi_barrier;$/;"	v
spi_bat_gr	src/bgq/spi.hpp	/^  EXTERN_SPI MUSPI_BaseAddressTableSubGroup_t spi_bat_gr;$/;"	m	namespace:nissa
spi_bat_gr	work_in_prog/bgq/src/add_var.hpp	/^  MUSPI_BaseAddressTableSubGroup_t spi_bat_gr;$/;"	m	struct:spi_comm_t
spi_bat_id	src/bgq/spi.hpp	/^  EXTERN_SPI uint32_t spi_bat_id[2];$/;"	m	namespace:nissa
spi_comm_start	src/bgq/spi.cpp	/^  void spi_comm_start(comm_t &in,int *dir_comm,int tot_size)$/;"	f	namespace:nissa
spi_comm_t	work_in_prog/bgq/src/add_var.hpp	/^struct spi_comm_t$/;"	s
spi_comm_wait	src/bgq/spi.cpp	/^  void spi_comm_wait(comm_t &in)$/;"	f	namespace:nissa
spi_desc_count	src/bgq/spi.hpp	/^  EXTERN_SPI uint64_t *spi_fifo[NSPI_FIFO],spi_desc_count[NSPI_FIFO];$/;"	m	namespace:nissa
spi_desc_count	work_in_prog/bgq/src/add_var.hpp	/^uint64_t *spi_fifo[8],spi_desc_count[8];$/;"	v
spi_descriptor_setup	src/bgq/spi.cpp	/^  void spi_descriptor_setup(comm_t &in)$/;"	f	namespace:nissa
spi_descriptor_unset	src/bgq/spi.cpp	/^  void spi_descriptor_unset(comm_t &in)$/;"	f	namespace:nissa
spi_dest	src/bgq/spi.hpp	/^  EXTERN_SPI MUHWI_Destination spi_dest[8];$/;"	m	namespace:nissa
spi_dest	src/communicate/communicate.hpp	/^    MUHWI_Destination spi_dest[8];$/;"	m	struct:nissa::comm_t
spi_dest_coord	src/bgq/spi.hpp	/^  EXTERN_SPI coords_5D spi_dest_coord[8];$/;"	m	namespace:nissa
spi_dir_is_torus	projects/semileptonic/test_bgq.cpp	/^  coords_5D spi_dir_is_torus;$/;"	v
spi_dir_is_torus	src/bgq/spi.hpp	/^  EXTERN_SPI coords_5D spi_dir_is_torus,spi_dir_size;$/;"	m	namespace:nissa
spi_dir_size	src/bgq/spi.hpp	/^  EXTERN_SPI coords_5D spi_dir_is_torus,spi_dir_size;$/;"	m	namespace:nissa
spi_fifo	src/bgq/spi.hpp	/^  EXTERN_SPI uint64_t *spi_fifo[NSPI_FIFO],spi_desc_count[NSPI_FIFO];$/;"	m	namespace:nissa
spi_fifo	work_in_prog/bgq/src/add_var.hpp	/^uint64_t *spi_fifo[8],spi_desc_count[8];$/;"	v
spi_fifo_map	src/bgq/spi.hpp	/^  EXTERN_SPI uint64_t spi_fifo_map[8];$/;"	m	namespace:nissa
spi_fifo_sg_ptr	src/bgq/spi.hpp	/^  EXTERN_SPI MUSPI_InjFifoSubGroup_t spi_fifo_sg_ptr;$/;"	m	namespace:nissa
spi_fifo_sg_ptr	work_in_prog/bgq/src/add_var.hpp	/^MUSPI_InjFifoSubGroup_t spi_fifo_sg_ptr;$/;"	v
spi_global_barrier	src/bgq/spi.cpp	/^  void spi_global_barrier()$/;"	f	namespace:nissa
spi_hint_ABCD	src/bgq/spi.hpp	/^  EXTERN_SPI uint8_t spi_hint_ABCD[8],spi_hint_E[8];$/;"	m	namespace:nissa
spi_hint_E	src/bgq/spi.hpp	/^  EXTERN_SPI uint8_t spi_hint_ABCD[8],spi_hint_E[8];$/;"	m	namespace:nissa
spi_inited	src/bgq/spi.hpp	/^  EXTERN_SPI int spi_inited;$/;"	m	namespace:nissa
spi_neigh	src/bgq/spi.hpp	/^  EXTERN_SPI MUHWI_Destination_t spi_neigh[2][4];$/;"	m	namespace:nissa
spi_neighpp	work_in_prog/bgq/src/add_var.hpp	/^MUHWI_Destination_t spi_neighpp[2][4];$/;"	v
spi_rank_coord	src/bgq/spi.hpp	/^  EXTERN_SPI coords_5D spi_rank_coord;$/;"	m	namespace:nissa
spi_rank_coord	work_in_prog/bgq/src/add_var.hpp	/^coords_5D spi_rank_coord;$/;"	v
spi_recv_counter	src/bgq/spi.cpp	/^  volatile uint64_t spi_recv_counter;$/;"	m	namespace:nissa	file:
spi_send_buf_phys_addr	src/bgq/spi.hpp	/^  EXTERN_SPI uint64_t spi_send_buf_phys_addr;$/;"	m	namespace:nissa
spin	src/new_types/spin.hpp	/^  typedef complex spin[NDIRAC];$/;"	t	namespace:nissa
spin1field	src/new_types/spin.hpp	/^  typedef complex spin1field[NDIM];$/;"	t	namespace:nissa
spin1field_bw_derivative	projects/x/src/routines/derivatives.cpp	/^void spin1field_bw_derivative(spin1field *der,spin1field *in,momentum_t bc,int mu)$/;"	f
spin1field_fw_derivative	projects/x/src/routines/derivatives.cpp	/^void spin1field_fw_derivative(spin1field *der,spin1field *in,momentum_t bc,int mu)$/;"	f
spin1prop	src/new_types/spin.hpp	/^  typedef spin1field spin1prop[NDIM];$/;"	t	namespace:nissa
spin_conj	src/new_types/spin.hpp	/^  inline void spin_conj(spin out,const spin in)$/;"	f	namespace:nissa
spin_copy	src/new_types/spin.hpp	/^  inline void spin_copy(spin out,const spin in)$/;"	f	namespace:nissa
spin_direct_prod	src/new_types/spin.hpp	/^  inline void spin_direct_prod(spinspin out,const spin a,const spin b)$/;"	f	namespace:nissa
spin_print	src/new_types/spin.hpp	/^  inline void spin_print(const spin s)$/;"	f	namespace:nissa
spin_prod_double	src/new_types/spin.hpp	/^  inline void spin_prod_double(spin a,const spin b,double c)$/;"	f	namespace:nissa
spin_prodassign_double	src/new_types/spin.hpp	/^  inline void spin_prodassign_double(spin a,double b)$/;"	f	namespace:nissa
spin_put_to_zero	src/new_types/spin.hpp	/^  inline void spin_put_to_zero(spin s)$/;"	f	namespace:nissa
spin_subt	src/new_types/spin.hpp	/^  inline void spin_subt(spin a,const spin b,const spin c)$/;"	f	namespace:nissa
spin_subt_the_complex_conj2_prod	src/new_types/spin.hpp	/^  inline void spin_subt_the_complex_conj2_prod(spin a,const spin b,const complex c)$/;"	f	namespace:nissa
spin_subt_the_complex_prod	src/new_types/spin.hpp	/^  inline void spin_subt_the_complex_prod(spin a,const spin b,const complex c)$/;"	f	namespace:nissa
spin_subtassign	src/new_types/spin.hpp	/^  inline void spin_subtassign(spin a,const spin b)$/;"	f	namespace:nissa
spin_summ	src/new_types/spin.hpp	/^  inline void spin_summ(spin a,const spin b,const spin c)$/;"	f	namespace:nissa
spin_summ_the_complex_conj2_prod	src/new_types/spin.hpp	/^  inline void spin_summ_the_complex_conj2_prod(spin a,const spin b,const complex c)$/;"	f	namespace:nissa
spin_summ_the_complex_prod	src/new_types/spin.hpp	/^  inline void spin_summ_the_complex_prod(spin a,const spin b,const complex c)$/;"	f	namespace:nissa
spin_summassign	src/new_types/spin.hpp	/^  inline void spin_summassign(spin a,const spin b)$/;"	f	namespace:nissa
spincolor	src/new_types/su3.hpp	/^  typedef color spincolor[NDIRAC];$/;"	t	namespace:nissa
spincolor_128	src/new_types/float_128.hpp	/^  typedef color_128 spincolor_128[NDIRAC];$/;"	t	namespace:nissa
spincolor_copy	src/new_types/su3_op.hpp	/^  inline void spincolor_copy(spincolor b,const spincolor a) {for(size_t i=0;i<NDIRAC;i++) color_copy(b[i],a[i]);}$/;"	f	namespace:nissa
spincolor_print	src/new_types/su3_op.hpp	/^  inline void spincolor_print(spincolor c)$/;"	f	namespace:nissa
spincolor_prod_double	src/new_types/su3_op.hpp	/^  inline void spincolor_prod_double(spincolor a,const spincolor b,const double factor)$/;"	f	namespace:nissa
spincolor_prod_idouble	src/new_types/su3_op.hpp	/^  inline void spincolor_prod_idouble(spincolor a,const spincolor b,const double factor)$/;"	f	namespace:nissa
spincolor_prodassign_complex	src/new_types/su3_op.hpp	/^  inline void spincolor_prodassign_complex(spincolor a,const complex factor)$/;"	f	namespace:nissa
spincolor_prodassign_double	src/new_types/su3_op.hpp	/^  inline void spincolor_prodassign_double(spincolor a,const double factor)$/;"	f	namespace:nissa
spincolor_prodassign_idouble	src/new_types/su3_op.hpp	/^  inline void spincolor_prodassign_idouble(spincolor a,const double factor)$/;"	f	namespace:nissa
spincolor_put_to_zero	src/new_types/su3_op.hpp	/^  inline void spincolor_put_to_zero(spincolor m) {for(size_t id=0;id<NDIRAC;id++) color_put_to_zero(m[id]);}$/;"	f	namespace:nissa
spincolor_scalar_prod	src/new_types/su3_op.hpp	/^  inline void spincolor_scalar_prod(complex out,const spincolor in1,const spincolor in2)$/;"	f	namespace:nissa
spincolor_subt	src/new_types/su3_op.hpp	/^  inline void spincolor_subt(spincolor a,const spincolor b,const spincolor c) {for(size_t i=0;i<NDIRAC;i++) color_subt(a[i],b[i],c[i]);}$/;"	f	namespace:nissa
spincolor_subtassign	src/new_types/su3_op.hpp	/^  inline void spincolor_subtassign(spincolor a,const spincolor b) {spincolor_subt(a,a,b);}$/;"	f	namespace:nissa
spincolor_summ	src/new_types/su3_op.hpp	/^  inline void spincolor_summ(spincolor a,const spincolor b,const spincolor c) {for(size_t i=0;i<NDIRAC;i++) color_summ(a[i],b[i],c[i]);}$/;"	f	namespace:nissa
spincolor_summ_the_prod_complex	src/new_types/su3_op.hpp	/^  inline void spincolor_summ_the_prod_complex(spincolor a,const spincolor b,const complex factor)$/;"	f	namespace:nissa
spincolor_summ_the_prod_idouble	src/new_types/su3_op.hpp	/^  inline void spincolor_summ_the_prod_idouble(spincolor a,const spincolor b,const double c) {for(size_t i=0;i<NDIRAC;i++) color_summ_the_prod_idouble(a[i],b[i],c);}$/;"	f	namespace:nissa
spincolor_summassign	src/new_types/su3_op.hpp	/^  inline void spincolor_summassign(spincolor a,const spincolor b) {spincolor_summ(a,a,b);}$/;"	f	namespace:nissa
spincolorspin	src/new_types/su3.hpp	/^  typedef colorspin spincolorspin[NDIRAC];$/;"	t	namespace:nissa
spinpol_meas	build/projects/generate_confs/parser.cpp	/^    nissa::spinpol_meas_pars_t *spinpol_meas;$/;"	m	union:YYSTYPE	file:
spinpol_meas	build/projects/generate_confs/parser.hpp	/^    nissa::spinpol_meas_pars_t *spinpol_meas;$/;"	m	union:YYSTYPE
spinpol_meas	projects/generate_confs/driver.hpp	/^    std::vector<spinpol_meas_pars_t> spinpol_meas;$/;"	m	class:nissa::driver_t
spinpol_meas_pars_t	src/operations/stag/spinpol.hpp	/^    spinpol_meas_pars_t() :$/;"	f	struct:nissa::spinpol_meas_pars_t
spinpol_meas_pars_t	src/operations/stag/spinpol.hpp	/^  struct spinpol_meas_pars_t : base_fermionic_meas_t$/;"	s	namespace:nissa
spinspin	src/new_types/spin.hpp	/^  typedef spin spinspin[NDIRAC];$/;"	t	namespace:nissa
spinspin_copy	src/new_types/spin.hpp	/^  inline void spinspin_copy(spinspin b,const spinspin a) {for(int i=0;i<NDIRAC;i++) spin_copy(b[i],a[i]);}$/;"	f	namespace:nissa
spinspin_det	src/new_types/spin.hpp	/^  inline void spinspin_det(complex d,const spinspin s)$/;"	f	namespace:nissa
spinspin_dirac_prod_complex	src/new_types/spin.hpp	/^  inline void spinspin_dirac_prod_complex(spinspin out,const dirac_matr *in,const complex c)$/;"	f	namespace:nissa
spinspin_dirac_prod_double	src/new_types/spin.hpp	/^  inline void spinspin_dirac_prod_double(spinspin out,const dirac_matr *in,double r)$/;"	f	namespace:nissa
spinspin_dirac_prod_idouble	src/new_types/spin.hpp	/^  inline void spinspin_dirac_prod_idouble(spinspin out,const dirac_matr *in,double r)$/;"	f	namespace:nissa
spinspin_dirac_subt_the_prod_complex	src/new_types/spin.hpp	/^  inline void spinspin_dirac_subt_the_prod_complex(spinspin out,const dirac_matr *in,const complex c)$/;"	f	namespace:nissa
spinspin_dirac_summ_the_prod_complex	src/new_types/spin.hpp	/^  inline void spinspin_dirac_summ_the_prod_complex(spinspin out,const dirac_matr *in,const complex c)$/;"	f	namespace:nissa
spinspin_dirac_summ_the_prod_double	src/new_types/spin.hpp	/^  inline void spinspin_dirac_summ_the_prod_double(spinspin out,const dirac_matr *in,double r)$/;"	f	namespace:nissa
spinspin_dirac_summ_the_prod_idouble	src/new_types/spin.hpp	/^  inline void spinspin_dirac_summ_the_prod_idouble(spinspin out,const dirac_matr *in,double r)$/;"	f	namespace:nissa
spinspin_dirac_summ_the_prod_spinspin	src/new_types/spin.hpp	/^  inline void spinspin_dirac_summ_the_prod_spinspin(spinspin out,const dirac_matr *in,const spinspin c)$/;"	f	namespace:nissa
spinspin_norm2	src/new_types/spin.hpp	/^  inline double spinspin_norm2(const spinspin a)$/;"	f	namespace:nissa
spinspin_print	src/new_types/spin.hpp	/^  inline void spinspin_print(const spinspin s)$/;"	f	namespace:nissa
spinspin_prod_double	src/new_types/spin.hpp	/^  inline void spinspin_prod_double(spinspin a,const spinspin b,double c)$/;"	f	namespace:nissa
spinspin_prod_idouble	src/new_types/spin.hpp	/^  inline void spinspin_prod_idouble(spinspin a,const spinspin b,double c)$/;"	f	namespace:nissa
spinspin_prodassign_double	src/new_types/spin.hpp	/^  inline void spinspin_prodassign_double(spinspin a,double b)$/;"	f	namespace:nissa
spinspin_prodassign_idouble	src/new_types/spin.hpp	/^  inline void spinspin_prodassign_idouble(spinspin a,double b)$/;"	f	namespace:nissa
spinspin_put_to_diag	src/new_types/spin.hpp	/^  inline void spinspin_put_to_diag(spinspin a,const complex b)$/;"	f	namespace:nissa
spinspin_put_to_diag	src/new_types/spin.hpp	/^  inline void spinspin_put_to_diag(spinspin a,double b)$/;"	f	namespace:nissa
spinspin_put_to_id	src/new_types/spin.hpp	/^  inline void spinspin_put_to_id(spinspin a)$/;"	f	namespace:nissa
spinspin_put_to_idiag	src/new_types/spin.hpp	/^  inline void spinspin_put_to_idiag(spinspin a,double b)$/;"	f	namespace:nissa
spinspin_put_to_zero	src/new_types/spin.hpp	/^  inline void spinspin_put_to_zero(spinspin a)$/;"	f	namespace:nissa
spinspin_subt	src/new_types/spin.hpp	/^  inline void spinspin_subt(spinspin a,const spinspin b,const spinspin c)$/;"	f	namespace:nissa
spinspin_subt_the_complex_conj2_prod	src/new_types/spin.hpp	/^  inline void spinspin_subt_the_complex_conj2_prod(spinspin a,const spinspin b,const complex c)$/;"	f	namespace:nissa
spinspin_subt_the_complex_prod	src/new_types/spin.hpp	/^  inline void spinspin_subt_the_complex_prod(spinspin a,const spinspin b,const complex c)$/;"	f	namespace:nissa
spinspin_subt_the_spinspin_prod	src/new_types/spin.hpp	/^  inline void spinspin_subt_the_spinspin_prod(spinspin out,const spinspin a,const spinspin b)$/;"	f	namespace:nissa
spinspin_subtassign	src/new_types/spin.hpp	/^  inline void spinspin_subtassign(spinspin a,const spinspin b)$/;"	f	namespace:nissa
spinspin_subtassign_the_complex_prod	src/new_types/spin.hpp	/^  inline void spinspin_subtassign_the_complex_prod(spinspin a,const complex b){spinspin_subt_the_complex_prod(a,a,b);}$/;"	f	namespace:nissa
spinspin_summ	src/new_types/spin.hpp	/^  inline void spinspin_summ(spinspin a,const spinspin b,const spinspin c)$/;"	f	namespace:nissa
spinspin_summ_the_complex_conj2_prod	src/new_types/spin.hpp	/^  inline void spinspin_summ_the_complex_conj2_prod(spinspin a,const spinspin b,const complex c)$/;"	f	namespace:nissa
spinspin_summ_the_complex_prod	src/new_types/spin.hpp	/^  inline void spinspin_summ_the_complex_prod(spinspin a,const spinspin b,const complex c)$/;"	f	namespace:nissa
spinspin_summ_the_prod_double	src/new_types/spin.hpp	/^  inline void spinspin_summ_the_prod_double(spinspin a,const spinspin b,double c)$/;"	f	namespace:nissa
spinspin_summ_the_prod_idouble	src/new_types/spin.hpp	/^  inline void spinspin_summ_the_prod_idouble(spinspin a,const spinspin b,double c)$/;"	f	namespace:nissa
spinspin_summ_the_spinspin_dag_prod	src/new_types/spin.hpp	/^  inline void spinspin_summ_the_spinspin_dag_prod(spinspin out,const spinspin a,const spinspin b)$/;"	f	namespace:nissa
spinspin_summ_the_spinspin_prod	src/new_types/spin.hpp	/^  inline void spinspin_summ_the_spinspin_prod(spinspin out,const spinspin a,const spinspin b)$/;"	f	namespace:nissa
spinspin_summassign	src/new_types/spin.hpp	/^  inline void spinspin_summassign(spinspin a,const spinspin b)$/;"	f	namespace:nissa
spinspin_summassign_the_complex_prod	src/new_types/spin.hpp	/^  inline void spinspin_summassign_the_complex_prod(spinspin a,const complex b){spinspin_summ_the_complex_prod(a,a,b);}$/;"	f	namespace:nissa
split	src/new_types/float_256.cpp	/^  void split(double &a_hi,double &a_lo,double a)$/;"	f	namespace:nissa
split_lx_vector_into_eo_parts	src/geometry/geometry_mix.hpp	/^  template <class T> void split_lx_vector_into_eo_parts(T **out_eo,T *in_lx)$/;"	f	namespace:nissa
spread	src/operations/remez/remez_algorithm.hpp	/^    float_high_prec_t spread;$/;"	m	struct:nissa::rat_approx_finder_t
sqr	src/routines/math_routines.hpp	/^  T sqr(T a)$/;"	f	namespace:nissa
squared_staples_lx_conf_compute_and_start_communicating_fw_surf_bw_staples	src/operations/su3_paths/squared_staples.cpp	/^  void squared_staples_lx_conf_compute_and_start_communicating_fw_surf_bw_staples(squared_staples_t *out,quad_su3 *conf,int thread_id)$/;"	f	namespace:nissa
squared_staples_lx_conf_compute_fw_surf_fw_staples	src/operations/su3_paths/squared_staples.cpp	/^  void squared_staples_lx_conf_compute_fw_surf_fw_staples(squared_staples_t *out,quad_su3 *conf,int thread_id)$/;"	f	namespace:nissa
squared_staples_lx_conf_compute_non_fw_surf_bw_staples	src/operations/su3_paths/squared_staples.cpp	/^  void squared_staples_lx_conf_compute_non_fw_surf_bw_staples(squared_staples_t *out,quad_su3 *conf,int thread_id)$/;"	f	namespace:nissa
squared_staples_lx_conf_compute_non_fw_surf_fw_staples	src/operations/su3_paths/squared_staples.cpp	/^  void squared_staples_lx_conf_compute_non_fw_surf_fw_staples(squared_staples_t *out,quad_su3 *conf,int thread_id)$/;"	f	namespace:nissa
squared_staples_lx_conf_finish_communicating_fw_surf_bw_staples	src/operations/su3_paths/squared_staples.cpp	/^  void squared_staples_lx_conf_finish_communicating_fw_surf_bw_staples(squared_staples_t *out,int thread_id)$/;"	f	namespace:nissa
squared_staples_lx_conf_finish_communicating_lower_surface	src/operations/su3_paths/squared_staples.cpp	/^  void squared_staples_lx_conf_finish_communicating_lower_surface(quad_su3 *conf,int thread_id)$/;"	f	namespace:nissa
squared_staples_lx_conf_start_communicating_lower_surface	src/operations/su3_paths/squared_staples.cpp	/^  void squared_staples_lx_conf_start_communicating_lower_surface(quad_su3 *conf,int thread_id)$/;"	f	namespace:nissa
squared_staples_t	src/operations/su3_paths/squared_staples.hpp	/^  typedef su3 squared_staples_t[NDIM][NDIM*(NDIM+1)\/2];$/;"	t	namespace:nissa
srcdir	build/Makefile	/^srcdir = ..$/;"	m
srcdir	build/projects/Makefile	/^srcdir = ..\/..\/projects$/;"	m
srcdir	build/src/Makefile	/^srcdir = ..\/..\/src$/;"	m
srcdir	build/tools/Makefile	/^srcdir = ..\/..\/tools$/;"	m
sss	projects/nucleons/nucleons_smeared.cpp	/^typedef spinspin sss[4];$/;"	t	file:
ssss	projects/nucleons/nucleons_smeared.cpp	/^typedef sss ssss[4];$/;"	t	file:
sssss	projects/nucleons/nucleons_smeared.cpp	/^typedef ssss sssss[4];$/;"	t	file:
ssssss	projects/nucleons/nucleons_smeared.cpp	/^typedef sssss ssssss[4];$/;"	t	file:
st	src/io/buffer.hpp	/^    std::stringstream st;$/;"	m	struct:nissa::buffer_t
stag	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    color *stag;$/;"	m	struct:nissa::pseudofermion_t
stag	src/operations/stag/qed_corr.cpp	/^  namespace stag$/;"	n	namespace:nissa	file:
stag	src/operations/stag/stag.cpp	/^  namespace stag$/;"	n	namespace:nissa	file:
stag	src/operations/stag/stag.hpp	/^  namespace stag$/;"	n	namespace:nissa
staples_inited	src/operations/su3_paths/gauge_sweeper.hpp	/^    bool staples_inited,par_geom_inited,packing_inited;$/;"	m	struct:nissa::gauge_sweeper_t
start_communicating_Leb_ev_and_od_borders	src/communicate/borders.cpp	/^  void start_communicating_Leb_ev_and_od_borders(comm_t &comm,void **vec)$/;"	f	namespace:nissa
start_communicating_Leb_ev_or_od_borders	src/communicate/borders.cpp	/^  void start_communicating_Leb_ev_or_od_borders(comm_t &comm,void *vec,int eo)$/;"	f	namespace:nissa
start_communicating_Leblx_borders	src/communicate/borders.cpp	/^  void start_communicating_Leblx_borders(comm_t &comm,void *vec)$/;"	f	namespace:nissa
start_communicating_ev_and_od_borders	src/communicate/borders.cpp	/^  void start_communicating_ev_and_od_borders(comm_t &comm,void **vec)$/;"	f	namespace:nissa
start_communicating_ev_or_od_borders	src/communicate/borders.cpp	/^  void start_communicating_ev_or_od_borders(comm_t &comm,void *vec,int eo)$/;"	f	namespace:nissa
start_communicating_lx_borders	src/communicate/borders.cpp	/^  void start_communicating_lx_borders(comm_t &comm,void *vec)$/;"	f	namespace:nissa
start_cond	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    start_conf_cond_t start_cond;$/;"	m	struct:nissa::conf_pars_t
start_conf_cond_t	src/operations/gaugeconf.hpp	/^  enum start_conf_cond_t{UNSPEC_START_COND,HOT_START_COND,COLD_START_COND};$/;"	g	namespace:nissa
start_conf_id	tools/clusterize2.cpp	/^int start_conf_id,nconfs,nconfs_teo,confs_each;$/;"	v
start_copy_id	tools/clusterize2.cpp	/^int start_copy_id,ncopies;$/;"	v
start_glb_rnd_gen	src/base/random.cpp	/^  void start_glb_rnd_gen(const char *text)$/;"	f	namespace:nissa
start_glb_rnd_gen	src/base/random.cpp	/^  void start_glb_rnd_gen(int seed)$/;"	f	namespace:nissa
start_hit	projects/ib/prop.hpp	/^  inline void start_hit(int ihit)$/;"	f	namespace:nissa
start_loc_rnd_gen	src/base/random.cpp	/^  void start_loc_rnd_gen(const char *text)$/;"	f	namespace:nissa
start_loc_rnd_gen	src/base/random.cpp	/^  void start_loc_rnd_gen(int seed)$/;"	f	namespace:nissa
start_massS0der	projects/semileptonic/semileptonic_smeared.cpp	/^int start_massS0der;$/;"	v
start_new_conf	projects/ib/conf.cpp	/^  void start_new_conf()$/;"	f	namespace:nissa
start_new_conf	projects/ib/mel.cpp	/^void start_new_conf()$/;"	f
start_new_path_from_loclx	src/operations/su3_paths/arbitrary.hpp	/^    void start_new_path_from_loclx(int lx) {$/;"	f	struct:nissa::paths_calculation_structure
start_rnd_gen	src/base/random.cpp	/^  void start_rnd_gen(rnd_gen *out,int seed)$/;"	f	namespace:nissa
start_threaded_function	src/routines/thread.cpp	/^  void start_threaded_function(void(*function)(void),const char *name)$/;"	f	namespace:nissa
status	src/base/DDalphaAMG_bridge.cpp	/^  DDalphaAMG_status status;$/;"	m	namespace:DD	file:
status	src/new_types/dsfmt.hpp	/^    w128_t status[DSFMT_N+1];$/;"	m	class:nissa::dsfmt_t
step	src/operations/remez/remez_algorithm.hpp	/^    float_high_prec_t *zero,*xmax,*step,*yy,*poly;$/;"	m	struct:nissa::rat_approx_finder_t
stoc_source	work_in_prog/detM/detM_est.cpp	/^void stoc_source(spincolor *spinore)$/;"	f
stoc_source	work_in_prog/detM/detM_est2.cpp	/^void stoc_source(spincolor *spinore)$/;"	f
stochastic_mom_space_qqg_vertex	projects/x/src/vertex/mom_space_stochastic_qqg_vertex.cpp	/^void stochastic_mom_space_qqg_vertex(spin *q_out,spin *q_in,quark_info qu,spin1field *g_in,gluon_info gl)$/;"	f
stochastic_x_space_qqg_vertex	projects/x/src/vertex/mom_space_stochastic_qqg_vertex.cpp	/^void stochastic_x_space_qqg_vertex(spin *q_out,spin *q_in,quark_info qu,spin1field *g_in,gluon_info gl)$/;"	f
stochastic_x_space_qqg_vertex	projects/x/src/vertex/mom_space_stochastic_qqg_vertex.cpp	/^void stochastic_x_space_qqg_vertex(spinspin *q_out,spinspin *q_in,quark_info qu,spin1field *g_in,gluon_info gl)$/;"	f
stochastic_x_space_qqg_vertex	projects/x/src/vertex/x_space_stochastic_qqg_vertex.cpp	/^void stochastic_x_space_qqg_vertex(spinspin *q_out,spinspin *q_in,quark_info qu,spin1field *g_in,gluon_info gl,bool g_dag=false)$/;"	f
stochastic_x_space_qqg_vertex_source	projects/x/src/vertex/x_space_stochastic_qqg_vertex.cpp	/^void stochastic_x_space_qqg_vertex_source(spinspin *q_out,spinspin *q_in,quark_info qu,spin1field *g_in,gluon_info gl,bool g_dag=false)$/;"	f
stop	tools/conf_measure/magn.cpp	/^void stop()$/;"	f
stop_current_path	src/operations/su3_paths/arbitrary.hpp	/^    void stop_current_path() {$/;"	f	struct:nissa::paths_calculation_structure
stop_loc_rnd_gen	src/base/random.cpp	/^  void stop_loc_rnd_gen()$/;"	f	namespace:nissa
stop_res_S0	projects/semileptonic/semileptonic_smeared.cpp	/^double *stop_res_S0;$/;"	v
stop_res_S1	projects/semileptonic/semileptonic_smeared.cpp	/^double *stop_res_S1;$/;"	v
stopping_residue	projects/g/g.cpp	/^double *stopping_residue;$/;"	v
stopping_residues	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double *stopping_residues;$/;"	v
stopping_residues	projects/nucleons/nucleons_smeared.cpp	/^double *stopping_residues;$/;"	v
stopping_residues	projects/reno_const/RIMOM.cpp	/^double *stopping_residues;$/;"	v
stopping_residues	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^double *stopping_residues;$/;"	v
stopping_residues	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double *stopping_residues;$/;"	v
storable_vector_t	src/io/ILDG_File.hpp	/^  template<class T> struct storable_vector_t : std::vector<T>$/;"	s	namespace:nissa
store	projects/ib/contr.hpp	/^    int store;$/;"	m	struct:nissa::handcuffs_side_map_t
store	projects/ib/disco.cpp	/^  void store(int nh)$/;"	f	namespace:hits
store	projects/ib/prop.hpp	/^    bool store;$/;"	m	struct:nissa::qprop_t
store_all	projects/ib/disco.cpp	/^  void store_all()$/;"	f	namespace:curr
store_conf_each	projects/generate_confs/generate_quenched.cpp	/^int store_conf_each;$/;"	v
store_conf_if_necessary	projects/generate_confs/generate.cpp	/^void store_conf_if_necessary()$/;"	f
store_conf_if_necessary	projects/generate_confs/generate_quenched.cpp	/^void store_conf_if_necessary()$/;"	f
store_conf_path_templ	projects/generate_confs/generate_quenched.cpp	/^char store_conf_path_templ[1024];$/;"	v
store_each	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int store_each;$/;"	m	struct:nissa::conf_pars_t
store_if_needed	src/operations/su3_paths/topological_charge.cpp	/^  void topotential_pars_t::store_if_needed(quad_su3 **ext_conf,int iconf)$/;"	f	class:nissa::topotential_pars_t
store_or_load	projects/ib/disco.cpp	/^  void store_or_load(int nh,int store_or_load)$/;"	f	namespace:hits
store_path	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    std::string store_path;$/;"	m	struct:nissa::conf_pars_t
store_running	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    int store_running;$/;"	m	struct:nissa::conf_pars_t
store_running_temp_conf	projects/generate_confs/generate_quenched.cpp	/^int store_running_temp_conf;$/;"	v
store_topo_corr	src/operations/su3_paths/topological_charge.cpp	/^  void store_topo_corr(FILE *file,double *corr,int itraj,double top,vector_remap_t *topo_corr_rem)$/;"	f	namespace:nissa
stored_last_conf	projects/generate_confs/generate.cpp	/^int stored_last_conf=0;$/;"	v
stout	src/operations/smearing/smooth.hpp	/^    stout_pars_t stout;$/;"	m	struct:nissa::smooth_pars_t
stout_conf_eo	tools/conf_measure/magn.cpp	/^quad_su3 *base_conf_eo[2],*stout_conf_eo[2];$/;"	v
stout_conf_smearing	projects/semileptonic/semileptonic_smeared.cpp	/^enum conf_smearing_t{no_conf_smearing,ape_conf_smearing,stout_conf_smearing};$/;"	e	enum:conf_smearing_t	file:
stout_link_staples	src/operations/smearing/stout.hpp	/^  struct stout_link_staples$/;"	s	namespace:nissa
stout_pars	build/projects/generate_confs/parser.cpp	/^    nissa::stout_pars_t *stout_pars;$/;"	m	union:YYSTYPE	file:
stout_pars	build/projects/generate_confs/parser.hpp	/^    nissa::stout_pars_t *stout_pars;$/;"	m	union:YYSTYPE
stout_pars	src/hmc/gauge/topological_action.hpp	/^    stout_pars_t stout_pars;$/;"	m	struct:nissa::topotential_pars_t
stout_pars	src/hmc/theory_pars.hpp	/^    stout_pars_t stout_pars;$/;"	m	struct:nissa::theory_pars_t
stout_pars	tools/conf_measure/magn.cpp	/^stout_pars_t stout_pars;$/;"	v
stout_pars_t	src/operations/smearing/stout.hpp	/^    stout_pars_t() :$/;"	f	struct:nissa::stout_pars_t
stout_pars_t	src/operations/smearing/stout.hpp	/^  struct stout_pars_t$/;"	s	namespace:nissa
stout_smear_compute_staples	src/operations/smearing/stout_eo.cpp	/^  void stout_smear_compute_staples(stout_link_staples *out,quad_su3 **conf,int p,int A,int mu,double rho)$/;"	f	namespace:nissa
stout_smear_compute_staples	src/operations/smearing/stout_lx.cpp	/^  void stout_smear_compute_staples(stout_link_staples *out,quad_su3 *conf,int A,int mu,double rho)$/;"	f	namespace:nissa
stout_smear_compute_weighted_staples	src/operations/smearing/stout_eo.cpp	/^  void stout_smear_compute_weighted_staples(su3 staples,quad_su3 **conf,int p,int A,int mu,double rho)$/;"	f	namespace:nissa
stout_smear_compute_weighted_staples	src/operations/smearing/stout_lx.cpp	/^  void stout_smear_compute_weighted_staples(su3 staples,quad_su3 *conf,int A,int mu,double rho)$/;"	f	namespace:nissa
stout_smearing_pars	projects/semileptonic/semileptonic_smeared.cpp	/^stout_pars_t stout_smearing_pars;$/;"	v
stouted_force_compute_Lambda	src/operations/smearing/stout_common.cpp	/^  void stouted_force_compute_Lambda(su3 Lambda,su3 U,su3 F,hermitian_exp_ingredients *ing)$/;"	f	namespace:nissa
str_from_name	src/hmc/quark_pars.hpp	/^    inline std::string str_from_name(name_t name)$/;"	f	namespace:nissa::ferm_discretiz
study_0_method	projects/x/tests/test_stochastic_source_null_mode.cpp	/^void study_0_method()$/;"	f
su	src/new_types/su3_op.hpp	/^    double cu,su;$/;"	m	struct:nissa::hermitian_exp_ingredients
su2	src/new_types/su3.hpp	/^  typedef color2 su2[2];$/;"	t	namespace:nissa
su2_get_overrelaxing	src/new_types/su3_op.hpp	/^  inline void su2_get_overrelaxing(double &x0,double &x1,double &x2,double &x3,const double r0,const double r1,const double r2,const double r3)$/;"	f	namespace:nissa
su2_inv	src/new_types/su3_op.hpp	/^  inline void su2_inv(double &a,double &b,double &c,double &d, const double a0,const double b0,const double c0,const double d0)$/;"	f	namespace:nissa
su2_nonunitarity	src/new_types/su3_op.hpp	/^  inline double su2_nonunitarity(double A,const double B,const double C,const double D)$/;"	f	namespace:nissa
su2_nonunitarity	src/new_types/su3_op.hpp	/^  inline double su2_nonunitarity(su2 mod)$/;"	f	namespace:nissa
su2_part_of_su3	src/new_types/su3_op.hpp	/^  inline double su2_part_of_su3(double &A,double &B,double &C,double &D,const su3 in,const int isub_gr)$/;"	f	namespace:nissa
su2_prodassign_su3	src/new_types/su3_op.hpp	/^  inline void su2_prodassign_su3(const double A,const double B,const double C,const double D,const int isub_gr,su3 in)$/;"	f	namespace:nissa
su2_prodassign_su3	src/new_types/su3_op.hpp	/^  inline void su2_prodassign_su3(const su2 mod,const int isub_gr,su3 in)$/;"	f	namespace:nissa
su3	src/new_types/su3.hpp	/^  typedef color su3[NCOL];$/;"	t	namespace:nissa
su3_build_third_row	src/new_types/su3_op.hpp	/^  inline void su3_build_third_row(su3 o)$/;"	f	namespace:nissa
su3_copy	src/new_types/su3_op.hpp	/^  inline void su3_copy(su3 b,const su3 a)$/;"	f	namespace:nissa
su3_dag_subt_the_prod_color	src/new_types/su3_op.hpp	/^  inline void su3_dag_subt_the_prod_color(color a,const su3 b,const color c)$/;"	f	namespace:nissa
su3_dag_subt_the_prod_colorspinspin	src/new_types/su3_op.hpp	/^  inline void su3_dag_subt_the_prod_colorspinspin(colorspinspin a,const su3 b,const colorspinspin c)$/;"	f	namespace:nissa
su3_dag_subt_the_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void su3_dag_subt_the_prod_spincolor(spincolor out,const su3 U,const spincolor in)$/;"	f	namespace:nissa
su3_dag_subt_the_prod_su3spinspin	src/new_types/su3_op.hpp	/^  inline void su3_dag_subt_the_prod_su3spinspin(su3spinspin a,const su3 b,const su3spinspin c)$/;"	f	namespace:nissa
su3_dag_summ_the_prod_color	src/new_types/su3_op.hpp	/^  inline void su3_dag_summ_the_prod_color(color a,const su3 b,const color c)$/;"	f	namespace:nissa
su3_dag_summ_the_prod_color_128	src/new_types/float_128.hpp	/^  inline void su3_dag_summ_the_prod_color_128(color_128 a,su3 b,color_128 c)$/;"	f	namespace:nissa
su3_dag_summ_the_prod_colorspinspin	src/new_types/su3_op.hpp	/^  inline void su3_dag_summ_the_prod_colorspinspin(colorspinspin a,const su3 b,const colorspinspin c)$/;"	f	namespace:nissa
su3_dag_summ_the_prod_double	src/new_types/su3_op.hpp	/^  inline void su3_dag_summ_the_prod_double(su3 a,const su3 b,const double r)$/;"	f	namespace:nissa
su3_dag_summ_the_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void su3_dag_summ_the_prod_spincolor(spincolor out,const su3 U,const spincolor in)$/;"	f	namespace:nissa
su3_dag_summ_the_prod_su3	src/new_types/su3_op.hpp	/^  inline void su3_dag_summ_the_prod_su3(su3 a,const su3 b,const su3 c)$/;"	f	namespace:nissa
su3_dag_summ_the_prod_su3spinspin	src/new_types/su3_op.hpp	/^  inline void su3_dag_summ_the_prod_su3spinspin(su3spinspin a,const su3 b,const su3spinspin c)$/;"	f	namespace:nissa
su3_det	src/new_types/su3_op.hpp	/^  inline void su3_det(complex d,const su3 U)$/;"	f	namespace:nissa
su3_find_cooled_eo_conf	src/new_types/su3_op.cpp	/^  void su3_find_cooled_eo_conf(su3 u,quad_su3 **eo_conf,int par,int ieo,int mu)$/;"	f	namespace:nissa
su3_find_cooled_lx_conf	src/new_types/su3_op.cpp	/^  inline void su3_find_cooled_lx_conf(su3 u,quad_su3 *lx_conf,int ivol,int mu)$/;"	f	namespace:nissa
su3_find_heatbath	src/base/random.cpp	/^  void su3_find_heatbath(su3 out,su3 in,su3 staple,double beta,int nhb_hits,rnd_gen *gen)$/;"	f	namespace:nissa
su3_find_overrelaxed	src/new_types/su3_op.cpp	/^  void su3_find_overrelaxed(su3 out,const su3 in,const su3 staple,int nov_hits)$/;"	f	namespace:nissa
su3_get_non_unitariness	src/new_types/su3_op.hpp	/^  inline double su3_get_non_unitariness(const su3 u)$/;"	f	namespace:nissa
su3_linear_comb	src/new_types/su3_op.hpp	/^  inline void su3_linear_comb(su3 a,const su3 b,const double cb,su3 c,const double cc) {for(size_t ic=0;ic<NCOL;ic++) color_linear_comb(a[ic],b[ic],cb,c[ic],cc);}$/;"	f	namespace:nissa
su3_norm2	src/new_types/su3_op.hpp	/^  inline double su3_norm2(const su3 U)$/;"	f	namespace:nissa
su3_overrelax	src/new_types/su3_op.cpp	/^  void su3_overrelax(su3 out,const su3 in,const double w,const double *coeff,int ord)$/;"	f	namespace:nissa
su3_overrelax	src/new_types/su3_op.hpp	/^  inline void su3_overrelax(su3 out,const su3 in,const double w)$/;"	f	namespace:nissa
su3_print	src/new_types/su3_op.hpp	/^  inline void su3_print(const su3 U)$/;"	f	namespace:nissa
su3_prod_double	src/new_types/su3_op.hpp	/^  inline void su3_prod_double(su3 a,const su3 b,const double r)$/;"	f	namespace:nissa
su3_prod_idouble	src/new_types/su3_op.hpp	/^  inline void su3_prod_idouble(su3 a,const su3 b,const double r) {for(size_t i=0;i<NCOL;i++) color_prod_idouble(a[i],b[i],r);}$/;"	f	namespace:nissa
su3_prodassign_double	src/new_types/su3_op.hpp	/^  inline void su3_prodassign_double(su3 a,const double r)$/;"	f	namespace:nissa
su3_prodassign_idouble	src/new_types/su3_op.hpp	/^  inline void su3_prodassign_idouble(su3 a,const double r) {su3_prod_idouble(a,a,r);}$/;"	f	namespace:nissa
su3_prodassign_su3	src/new_types/su3_op.hpp	/^  inline void su3_prodassign_su3(su3 a,const su3 b) {safe_su3_prod_su3(a,a,b);}$/;"	f	namespace:nissa
su3_put_to_diag	src/new_types/su3_op.hpp	/^  inline void su3_put_to_diag(su3 m,const color in) {su3_put_to_zero(m);for(size_t ic=0;ic<NCOL;ic++) complex_copy(m[ic][ic],in[ic]);}$/;"	f	namespace:nissa
su3_put_to_diag	src/new_types/su3_op.hpp	/^  inline void su3_put_to_diag(su3 m,const complex in) {su3_put_to_zero(m);for(size_t ic=0;ic<NCOL;ic++) complex_copy(m[ic][ic],in);}$/;"	f	namespace:nissa
su3_put_to_diag	src/new_types/su3_op.hpp	/^  inline void su3_put_to_diag(su3 m,const double in) {su3_put_to_zero(m);for(size_t ic=0;ic<NCOL;ic++) m[ic][ic][0]=in;}$/;"	f	namespace:nissa
su3_put_to_id	src/new_types/su3_op.hpp	/^  inline void su3_put_to_id(su3 m) {su3_put_to_zero(m);for(size_t ic=0;ic<NCOL;ic++) m[ic][ic][RE]=1;}$/;"	f	namespace:nissa
su3_put_to_rnd	src/base/random.cpp	/^  void su3_put_to_rnd(su3 u_ran,rnd_gen &rnd)$/;"	f	namespace:nissa
su3_put_to_zero	src/new_types/su3_op.hpp	/^  inline void su3_put_to_zero(su3 m) {for(size_t ic=0;ic<NCOL;ic++) color_put_to_zero(m[ic]);}$/;"	f	namespace:nissa
su3_real_det	src/new_types/su3_op.hpp	/^  inline double su3_real_det(const su3 u)$/;"	f	namespace:nissa
su3_real_trace	src/new_types/su3_op.hpp	/^  inline double su3_real_trace(const su3 m)$/;"	f	namespace:nissa
su3_sub_gr_indices	src/new_types/su3_op.hpp	/^  const int su3_sub_gr_indices[3][2]={{0,1},{1,2},{0,2}};$/;"	m	namespace:nissa
su3_subt	src/new_types/su3_op.hpp	/^  inline void su3_subt(su3 a,const su3 b,const su3 c)$/;"	f	namespace:nissa
su3_subt_complex	src/new_types/su3_op.hpp	/^  inline void su3_subt_complex(su3 a,const su3 b,const complex c) {su3_copy(a,b);for(size_t i=0;i<NCOL;i++) complex_subt(a[i][i],b[i][i],c);}$/;"	f	namespace:nissa
su3_subt_the_prod_color	src/new_types/su3_op.hpp	/^  inline void su3_subt_the_prod_color(color a,const su3 b,const color c)$/;"	f	namespace:nissa
su3_subt_the_prod_color_128	src/new_types/float_128.hpp	/^  inline void su3_subt_the_prod_color_128(color_128 a,su3 b,color_128 c)$/;"	f	namespace:nissa
su3_subt_the_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void su3_subt_the_prod_spincolor(spincolor out,const su3 U,const spincolor in)$/;"	f	namespace:nissa
su3_subt_the_prod_su3_dag	src/new_types/su3_op.hpp	/^  inline void su3_subt_the_prod_su3_dag(su3 a,const su3 b,const su3 c)$/;"	f	namespace:nissa
su3_subtassign	src/new_types/su3_op.hpp	/^  inline void su3_subtassign(su3 a,const su3 b) {su3_subt(a,a,b);}$/;"	f	namespace:nissa
su3_subtassign_su3_dag	src/new_types/su3_op.hpp	/^  inline void su3_subtassign_su3_dag(su3 a,const su3 b) {unsafe_su3_subt_su3_dag(a,a,b);}$/;"	f	namespace:nissa
su3_summ	src/new_types/su3_op.hpp	/^  inline void su3_summ(su3 a,const su3 b,const su3 c)$/;"	f	namespace:nissa
su3_summ_real	src/new_types/su3_op.hpp	/^  inline void su3_summ_real(su3 a,const su3 b,const double c)$/;"	f	namespace:nissa
su3_summ_the_dag_prod_su3	src/new_types/su3_op.hpp	/^  inline void su3_summ_the_dag_prod_su3(su3 a,const su3 b,const su3 c)$/;"	f	namespace:nissa
su3_summ_the_hermitian_prod_double	src/new_types/su3_op.hpp	/^  inline void su3_summ_the_hermitian_prod_double(su3 a,const su3 b,const double r)$/;"	f	namespace:nissa
su3_summ_the_prod_color	src/new_types/su3_op.hpp	/^  inline void su3_summ_the_prod_color(color a,const su3 b,const color c)$/;"	f	namespace:nissa
su3_summ_the_prod_color_128	src/new_types/float_128.hpp	/^  inline void su3_summ_the_prod_color_128(color_128 a,su3 b,color_128 c)$/;"	f	namespace:nissa
su3_summ_the_prod_colorspinspin	src/new_types/su3_op.hpp	/^  inline void su3_summ_the_prod_colorspinspin(colorspinspin a,const su3 b,const colorspinspin c)$/;"	f	namespace:nissa
su3_summ_the_prod_complex	src/new_types/su3_op.hpp	/^  inline void su3_summ_the_prod_complex(su3 a,const su3 b,const complex c) {for(size_t ic=0;ic<NCOL;ic++) color_summ_the_prod_complex(a[ic],b[ic],c);}$/;"	f	namespace:nissa
su3_summ_the_prod_double	src/new_types/su3_op.hpp	/^  inline void su3_summ_the_prod_double(su3 a,const su3 b,const double r) {for(size_t i=0;i<NCOL;i++) color_summ_the_prod_double(a[i],b[i],r);}$/;"	f	namespace:nissa
su3_summ_the_prod_idouble	src/new_types/su3_op.hpp	/^  inline void su3_summ_the_prod_idouble(su3 a,const su3 b,const double r) {for(size_t i=0;i<NCOL;i++) color_summ_the_prod_idouble(a[i],b[i],r);}$/;"	f	namespace:nissa
su3_summ_the_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void su3_summ_the_prod_spincolor(spincolor out,const su3 U,const spincolor in)$/;"	f	namespace:nissa
su3_summ_the_prod_su3	src/new_types/su3_op.hpp	/^  inline void su3_summ_the_prod_su3(su3 a,const su3 b,const su3 c)$/;"	f	namespace:nissa
su3_summ_the_prod_su3_dag	src/new_types/su3_op.hpp	/^  inline void su3_summ_the_prod_su3_dag(su3 a,const su3 b,const su3 c)$/;"	f	namespace:nissa
su3_summ_the_prod_su3spinspin	src/new_types/su3_op.hpp	/^  inline void su3_summ_the_prod_su3spinspin(su3spinspin a,const su3 b,const su3spinspin c)$/;"	f	namespace:nissa
su3_summ_the_trace	src/new_types/su3_op.hpp	/^  inline void su3_summ_the_trace(complex tr,const su3 m)$/;"	f	namespace:nissa
su3_summassign	src/new_types/su3_op.hpp	/^  inline void su3_summassign(su3 a,const su3 b){su3_summ(a,a,b);}$/;"	f	namespace:nissa
su3_summassign_su3_dag	src/new_types/su3_op.hpp	/^  inline void su3_summassign_su3_dag(su3 a,const su3 b) {unsafe_su3_summ_su3_dag(a,a,b);}$/;"	f	namespace:nissa
su3_trace	src/new_types/su3_op.hpp	/^  inline void su3_trace(complex tr,const su3 m)$/;"	f	namespace:nissa
su3_unitarize_explicitly_inverting	src/new_types/su3_op.hpp	/^  inline void su3_unitarize_explicitly_inverting(su3 new_link,const su3 prop_link,const double tol=1e-15)$/;"	f	namespace:nissa
su3_unitarize_maximal_trace_projecting	src/new_types/su3_op.cpp	/^  void su3_unitarize_maximal_trace_projecting(su3 out,const su3 M,const double precision,const int niter_max)$/;"	f	namespace:nissa
su3_unitarize_maximal_trace_projecting	src/new_types/su3_op.hpp	/^  inline void su3_unitarize_maximal_trace_projecting(su3 out,const double precision=5e-15,int niter_max=20000)$/;"	f	namespace:nissa
su3_unitarize_maximal_trace_projecting_iteration	src/new_types/su3_op.hpp	/^  inline double su3_unitarize_maximal_trace_projecting_iteration(su3 U,const su3 M)$/;"	f	namespace:nissa
su3_unitarize_maximal_trace_projecting_iteration_slow	src/new_types/su3_op.hpp	/^  inline void su3_unitarize_maximal_trace_projecting_iteration_slow(su3 U,const su3 M)$/;"	f	namespace:nissa
su3_unitarize_orthonormalizing	src/new_types/su3_op.hpp	/^  inline void su3_unitarize_orthonormalizing(su3 o,const su3 i)$/;"	f	namespace:nissa
su3_unitarize_with_sqrt	src/new_types/su3_op.cpp	/^  void su3_unitarize_with_sqrt(su3 out,const su3 in)$/;"	f	namespace:nissa
su3spinspin	src/new_types/su3.hpp	/^  typedef colorspinspin su3spinspin[NCOL];$/;"	t	namespace:nissa
su3spinspin_copy	src/new_types/su3_op.hpp	/^  inline void su3spinspin_copy(su3spinspin b,const su3spinspin a) {for(size_t i=0;i<NCOL;i++) colorspinspin_copy(b[i],a[i]);}$/;"	f	namespace:nissa
su3spinspin_prod_complex	src/new_types/su3_op.hpp	/^  inline void su3spinspin_prod_complex(su3spinspin out,const su3spinspin in,const complex factor)$/;"	f	namespace:nissa
su3spinspin_prod_complex_conj	src/new_types/su3_op.hpp	/^  inline void su3spinspin_prod_complex_conj(su3spinspin out,const su3spinspin in,const complex factor)$/;"	f	namespace:nissa
su3spinspin_prod_double	src/new_types/su3_op.hpp	/^  inline void su3spinspin_prod_double(su3spinspin out,const su3spinspin in,const double factor)$/;"	f	namespace:nissa
su3spinspin_prodassign_complex	src/new_types/su3_op.hpp	/^  inline void su3spinspin_prodassign_complex(su3spinspin c,const complex f)$/;"	f	namespace:nissa
su3spinspin_prodassign_complex_conj	src/new_types/su3_op.hpp	/^  inline void su3spinspin_prodassign_complex_conj(su3spinspin c,const complex f)$/;"	f	namespace:nissa
su3spinspin_prodassign_double	src/new_types/su3_op.hpp	/^  inline void su3spinspin_prodassign_double(su3spinspin out,const double factor)$/;"	f	namespace:nissa
su3spinspin_prodassign_idouble	src/new_types/su3_op.hpp	/^  inline void su3spinspin_prodassign_idouble(su3spinspin out,const double factor)$/;"	f	namespace:nissa
su3spinspin_put_to_zero	src/new_types/su3_op.hpp	/^  inline void su3spinspin_put_to_zero(su3spinspin m) {for(size_t ic=0;ic<NCOL;ic++) colorspinspin_put_to_zero(m[ic]);}$/;"	f	namespace:nissa
su3spinspin_subt	src/new_types/su3_op.hpp	/^  inline void su3spinspin_subt(su3spinspin out,const su3spinspin in1,const su3spinspin in2) {for(size_t i=0;i<NCOL;i++) colorspinspin_subt(out[i],in1[i],in2[i]);}$/;"	f	namespace:nissa
su3spinspin_subtassign	src/new_types/su3_op.hpp	/^  inline void su3spinspin_subtassign(su3spinspin out,const su3spinspin in) {su3spinspin_subt(out,out,in);}$/;"	f	namespace:nissa
su3spinspin_summ	src/new_types/su3_op.hpp	/^  inline void su3spinspin_summ(su3spinspin out,const su3spinspin in1,const su3spinspin in2) {for(size_t i=0;i<NCOL;i++) colorspinspin_summ(out[i],in1[i],in2[i]);}$/;"	f	namespace:nissa
su3spinspin_summ_the_prod_double	src/new_types/su3_op.hpp	/^  inline void su3spinspin_summ_the_prod_double(su3spinspin out,const su3spinspin in,const double factor)$/;"	f	namespace:nissa
su3spinspin_summ_the_prod_idouble	src/new_types/su3_op.hpp	/^  inline void su3spinspin_summ_the_prod_idouble(su3spinspin out,const su3spinspin in,const double factor)$/;"	f	namespace:nissa
su3spinspin_summassign	src/new_types/su3_op.hpp	/^  inline void su3spinspin_summassign(su3spinspin out,const su3spinspin in) {su3spinspin_summ(out,out,in);}$/;"	f	namespace:nissa
subdir	build/Makefile	/^subdir = .$/;"	m
subdir	build/projects/Makefile	/^subdir = projects$/;"	m
subdir	build/src/Makefile	/^subdir = src$/;"	m
subdir	build/tools/Makefile	/^subdir = tools$/;"	m
summ	src/routines/math_routines.hpp	/^  T summ(T a,T b)$/;"	f	namespace:nissa
summ_all_propagators	projects/ib/disco.cpp	/^void summ_all_propagators()$/;"	f
summ_corr	projects/x/tests/test_meson_self_energy_stochastic_correction.cpp	/^corr16 *corr,*summ_corr,*temp_corr;$/;"	v
summ_covariant_shift	src/operations/stag/stag.cpp	/^    void summ_covariant_shift(color **out,quad_su3 **conf,int mu,color **in,shift_orie_t side)$/;"	f	namespace:nissa::stag
summ_src_and_all_inv_stD2ee_m2_cgm	src/inverters/staggered/cgm_invert_stD2ee_m2.cpp	/^  void summ_src_and_all_inv_stD2ee_m2_cgm(color *chi_e,quad_su3 **eo_conf,rat_approx_t *appr,int niter_max,double req_res,color *source)$/;"	f	namespace:nissa
summ_src_and_all_inv_stD2ee_m2_cgm	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square.cpp	/^  void summ_src_and_all_inv_stD2ee_m2_cgm(color *chi_e,quad_su3 **eo_conf,rat_approx_t *appr,int niter_max,double req_res,color *source)$/;"	f	namespace:nissa
summ_src_and_all_inv_stD2ee_m2_cgm_32	src/inverters/staggered/cgm_32_invert_stD2ee_m2.cpp	/^  void summ_src_and_all_inv_stD2ee_m2_cgm_32(color *chi_e,quad_su3 **eo_conf,rat_approx_t *appr,int niter_max,double req_res,color *source)$/;"	f	namespace:nissa
summ_the_contribution_of_self_energy_twisted_diagram_in_x_space	projects/x/src/diagrams/propagator_self_energy.cpp	/^void summ_the_contribution_of_self_energy_twisted_diagram_in_x_space(spinspin *q_out,spinspin *osi,spinspin *q,spin1prop *g,int nu,int mu,spinspin *oso,double weight)$/;"	f
summ_the_exchange_contributionA	projects/x/src/diagrams/meson_exchange_not_working.cpp	/^void summ_the_exchange_contributionA(corr16 corr,spinspin OB,spinspin pB,spinspin BX,spinspin XA,spinspin pA,spinspin AO,complex AB,double w)$/;"	f
summ_the_exchange_contributionB	projects/x/src/diagrams/meson_exchange_not_working.cpp	/^void summ_the_exchange_contributionB(corr16 corr,spinspin XB,spinspin pB,spinspin BO,spinspin XA,spinspin pA,spinspin AO,complex AB,double w)$/;"	f
summ_the_loc_forw_back_contractions	src/operations/contract/optimized_mesons_2pts.cpp	/^  void two_pts_comp_t::summ_the_loc_forw_back_contractions(double *out,double *S_forw,double *S_back,int nel,int twall)$/;"	f	class:nissa::two_pts_comp_t
summ_the_spectre	projects/x/tests/test_stochastic_source_null_mode.cpp	/^void summ_the_spectre()$/;"	f
summ_the_stoch_contribution	projects/x/tests/test_twisted_propagator_stochastic_correction.cpp	/^void summ_the_stoch_contribution(spinspin *osi,spinspin *q,spin1field *phi,spin1field *eta,int nu,int mu,spinspin *oso,double sign)$/;"	f
summ_the_trace_dirac_prod_spinspin	src/new_types/spin.hpp	/^  inline void summ_the_trace_dirac_prod_spinspin(complex c,const dirac_matr *a,const spinspin b)$/;"	f	namespace:nissa
summ_the_trace_prod_spinspins	src/new_types/spin.hpp	/^  inline void summ_the_trace_prod_spinspins(complex c,const spinspin a,const spinspin b)$/;"	f	namespace:nissa
summ_the_trace_spinspin	src/new_types/spin.hpp	/^  inline void summ_the_trace_spinspin(complex c,const spinspin a)$/;"	f	namespace:nissa
summ_to_previous_path	src/operations/su3_paths/arbitrary.hpp	/^    void summ_to_previous_path() {$/;"	f	struct:nissa::paths_calculation_structure
summ_with_coeff	projects/x/progs/average_corr.cpp	/^void summ_with_coeff(double c)$/;"	f
surfLeblx_of_bordLeblx	src/geometry/geometry_Leb.hpp	/^  EXTERN_GEOMETRY_LEB int *surfLeblx_of_bordLeblx;$/;"	m	namespace:nissa
surf_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t surf_vol,bw_surf_vol,fw_surf_vol;$/;"	m	namespace:nissa
surfeo_of_bordeo	src/geometry/geometry_eo.hpp	/^  EXTERN_GEOMETRY_EO int *surfeo_of_bordeo[2];$/;"	m	namespace:nissa
surflx_of_bordlx	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int *surflx_of_bordlx;$/;"	m	namespace:nissa
sweep_conf	src/operations/su3_paths/gauge_sweeper.hpp	/^    void sweep_conf(quad_su3 *conf,void (*update_fun)(su3 out,su3 staples,int ivol,int mu,void *pars),void *pars)$/;"	f	struct:nissa::gauge_sweeper_t
sweeper	projects/generate_confs/generate_quenched.cpp	/^gauge_sweeper_t *sweeper;$/;"	v
switch_to_next_step	src/operations/su3_paths/arbitrary.hpp	/^    void switch_to_next_step() {$/;"	f	struct:nissa::paths_calculation_structure
sysconfdir	build/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	build/projects/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	build/src/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	build/tools/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
tad	projects/x/progs/compute_corrections.cpp	/^  int tad;$/;"	m	struct:flags	file:
tadpole	projects/ib/mel.cpp	/^double tadpole[4];$/;"	v
tadpole	projects/ib/pars.hpp	/^  EXTERN_PARS double tadpole[NDIM];$/;"	m	namespace:nissa
tag	projects/generate_confs/driver.hpp	/^    std::string tag;$/;"	m	class:nissa::driver_t
tag	projects/ib/disco.cpp	/^  const char tag[4][10]={"1","2","4","6alt"};$/;"	m	namespace:EU1_EU2_EU4_EU6alt	file:
tag	src/base/vectors.hpp	/^    char tag[NISSA_VECT_STRING_LENGTH];$/;"	m	struct:nissa::nissa_vect
tag	src/routines/ios.hpp	/^    T tag;$/;"	m	class:nissa::lock_file_t
take_last_characters	src/routines/ios.cpp	/^  void take_last_characters(char *out,const char *in,int size)$/;"	f	namespace:nissa
take_time	src/base/debug.cpp	/^  double take_time()$/;"	f	namespace:nissa
tardir	build/Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	build/Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	build/Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	build/Makefile	/^	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz$/;"	m
tardir	build/Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
target_alias	build/Makefile	/^target_alias = $/;"	m
target_alias	build/projects/Makefile	/^target_alias = $/;"	m
target_alias	build/src/Makefile	/^target_alias = $/;"	m
target_alias	build/tools/Makefile	/^target_alias = $/;"	m
target_precision	src/operations/gauge_fixing.hpp	/^    double target_precision;$/;"	m	struct:nissa::LC_gauge_fixing_pars_t
tau3	src/new_types/dirac.hpp	/^  EXTERN_DIRAC int tau3[2]$/;"	m	namespace:nissa
tcontr_2pt	projects/nucleons/nucleons_smeared.cpp	/^double tinv=0,tcontr_2pt=0,tcontr_3pt=0,tot_prog_time=0;$/;"	v
tcontr_3pt	projects/nucleons/nucleons_smeared.cpp	/^double tinv=0,tcontr_2pt=0,tcontr_3pt=0,tot_prog_time=0;$/;"	v
temp1	projects/x/tests/test_Wilson_gluon_Klein_Gordon_operator.cpp	/^spin1field *temp1,*temp2;$/;"	v
temp2	projects/x/tests/test_Wilson_gluon_Klein_Gordon_operator.cpp	/^spin1field *temp1,*temp2;$/;"	v
temp_build_t	src/communicate/all_to_all.cpp	/^  temp_build_t::temp_build_t()$/;"	f	class:nissa::temp_build_t
temp_build_t	src/communicate/all_to_all.hpp	/^  struct temp_build_t$/;"	s	namespace:nissa
temp_conf	projects/generate_confs/generate_quenched.cpp	/^quad_su3 *conf,*temp_conf;$/;"	v
temp_corr	projects/x/progs/average_corr.cpp	/^corr16 *temp_corr;$/;"	v
temp_corr	projects/x/tests/test_meson_self_energy_stochastic_correction.cpp	/^corr16 *corr,*summ_corr,*temp_corr;$/;"	v
temp_corr	projects/x/tests/test_twisted_propagator_stochastic_correction.cpp	/^spinspin *d2_corr,*temp_corr;$/;"	v
temp_der_vec	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^spincolor *temp_der_vec[2];$/;"	v
temp_der_vec	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^spincolor *temp_der_vec[2];$/;"	v
temp_lep	projects/ib/mel.cpp	/^spinspin **L,*temp_lep;$/;"	v
temp_lep	projects/ib/prop.hpp	/^  EXTERN_PROP spinspin *temp_lep;$/;"	m	namespace:nissa
temp_smear_pars	src/operations/su3_paths/all_rectangles.hpp	/^    smooth_pars_t temp_smear_pars;$/;"	m	struct:nissa::all_rects_meas_pars_t
temp_smear_pars	src/operations/su3_paths/watusso.hpp	/^    smooth_pars_t temp_smear_pars;$/;"	m	struct:nissa::watusso_meas_pars_t
temp_sol	projects/g/g.cpp	/^spincolor *source,*temp_sol;$/;"	v
temp_solution	projects/generate_confs/generate_quenched.cpp	/^spincolor *source,*temp_solution;$/;"	v
temp_solution	projects/ib/mel.cpp	/^spincolor *temp_solution;$/;"	v
temp_source	projects/nucleons/nucleons_smeared.cpp	/^spincolor *source,*temp_source;$/;"	v
temp_transp	projects/semileptonic/gevp.cpp	/^colorspinspin *ori_source,*temp_transp,*S0[2][4][4];$/;"	v
temp_vec	projects/eight_BK/smeared_BK_all_in_one.cpp	/^spincolor **cgm_solution,*temp_vec[2];$/;"	v
temp_vec	projects/semileptonic/gevp.cpp	/^spincolor *source,*temp_vec[2],*cgm_solution[1];$/;"	v
temp_vec	projects/semileptonic/gevp_3pts.cpp	/^spincolor *source,*cgm_solution[1],*temp_vec[2];$/;"	v
temp_vec	projects/semileptonic/semileptonic_smeared.cpp	/^spincolor **cgm_solution,*temp_vec[2];$/;"	v
temp_vec	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^spincolor **cgm_solution,*temp_vec[2];$/;"	v
temp_vec	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^spincolor **cgm_solution,*temp_vec[2];$/;"	v
template_pathpp	projects/semileptonic/new_version/new_types.hpp	/^  char template_pathpp[1024];$/;"	m	struct:prop_group_command_t
test	test/nissa/src/common.cpp	/^void test(int passed,const char *test_name)$/;"	f
test_Q2tm_inversion	test/nissa/src/Q2tm_cg_inversion.cpp	/^int test_Q2tm_inversion()$/;"	f
test_eo_geometry	test/nissa/src/eo_geometry.cpp	/^int test_eo_geometry()$/;"	f
test_plaquette_computation	test/nissa/src/plaquette_computation.cpp	/^int test_plaquette_computation()$/;"	f
test_random_source_generation	test/nissa/src/random_source_generation.cpp	/^int test_random_source_generation()$/;"	f
test_spincolor_writing_and_reading	test/nissa/src/spincolor_writing_and_reading.cpp	/^int test_spincolor_writing_and_reading()$/;"	f
test_unitarity	tools/APE_smear/smear.cpp	/^void test_unitarity(quad_su3 *conf)$/;"	f
test_unitarity	tools/unitarity_check/unitarity_check.cpp	/^void test_unitarity(FILE *fout,quad_su3 *conf,char *filename)$/;"	f
text	build/projects/generate_confs/parser.cpp	/^    std::string *text;$/;"	m	union:YYSTYPE	file:
text	build/projects/generate_confs/parser.hpp	/^    std::string *text;$/;"	m	union:YYSTYPE
text	build/projects/semileptonic/parse_corr.cpp	/^  char *text;$/;"	m	union:YYSTYPE	file:
text	build/projects/semileptonic/parse_corr.hpp	/^  char *text;$/;"	m	union:YYSTYPE
text	src/hmc/quark_pars.hpp	/^    const char text[nknown][20]={"RootStag","RootTmClov"};$/;"	m	namespace:nissa::ferm_discretiz
text_list	build/projects/generate_confs/parser.cpp	/^    std::vector<std::string> *text_list;$/;"	m	union:YYSTYPE	file:
text_list	build/projects/generate_confs/parser.hpp	/^    std::vector<std::string> *text_list;$/;"	m	union:YYSTYPE
theories	projects/generate_confs/driver.hpp	/^    std::vector<theory_pars_t> theories;$/;"	m	class:nissa::driver_t
theory	build/projects/generate_confs/parser.cpp	/^    nissa::theory_pars_t *theory;$/;"	m	union:YYSTYPE	file:
theory	build/projects/generate_confs/parser.hpp	/^    nissa::theory_pars_t *theory;$/;"	m	union:YYSTYPE
theory_pars	projects/generate_confs/generate_quenched.cpp	/^theory_pars_t theory_pars;$/;"	v
theory_pars_t	src/hmc/theory_pars.hpp	/^    theory_pars_t() :$/;"	f	struct:nissa::theory_pars_t
theory_pars_t	src/hmc/theory_pars.hpp	/^  struct theory_pars_t$/;"	s	namespace:nissa
theta	projects/g/g.cpp	/^double *theta;$/;"	v
theta	projects/ib/disco2.cpp	/^momentum_t theta={-1,0,0,0};$/;"	v
theta	projects/ib/prop.hpp	/^    double theta[NDIM];$/;"	m	struct:nissa::qprop_t
theta	projects/semileptonic/new_version/new_semileptonic.cpp	/^  double *theta;$/;"	m	struct:propgroup_t	file:
theta	src/hmc/gauge/topological_action.hpp	/^    double theta;$/;"	m	struct:nissa::topotential_pars_t
theta	src/new_types/su3_op.hpp	/^    double u,w,theta;$/;"	m	struct:nissa::hermitian_exp_ingredients
theta	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^double *mass,*theta;$/;"	v
theta	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double *mass,*theta;$/;"	v
thetaS0	projects/semileptonic/semileptonic_smeared.cpp	/^double *massS0,*thetaS0;$/;"	v
thetaS1	projects/semileptonic/semileptonic_smeared.cpp	/^double *massS1,*thetaS1;$/;"	v
theta_group	projects/semileptonic/new_version/test.cpp	/^theta_group_t *theta_group;$/;"	v
theta_group_t	projects/semileptonic/new_version/new_types.hpp	/^  theta_group_t() {thppeta=NULL;}$/;"	f	struct:thppeta_group_t
theta_needed	projects/semileptonic/gevp_3pts.cpp	/^double theta_needed,mass,residue,kappa;$/;"	v
thppeta	projects/semileptonic/new_version/new_types.hpp	/^  double *thppeta;$/;"	m	struct:thppeta_group_t
thppeta	projects/semileptonic/new_version/new_types.hpp	/^  momentum_t thppeta;$/;"	m	struct:gauge_conf_t
thppeta	projects/semileptonic/new_version/new_types.hpp	/^  theta_group_t *thppeta;$/;"	m	struct:prop_group_t
thppeta_group_t	projects/semileptonic/new_version/new_types.hpp	/^  thppeta_group_t(int n) {create(n);}$/;"	f	struct:thppeta_group_t
thppeta_group_t	projects/semileptonic/new_version/new_types.hpp	/^struct thppeta_group_t$/;"	s
thread_barrier_internal	src/base/thread_macros.hpp	/^inline void thread_barrier_internal()$/;"	f
thread_barrier_with_check	src/routines/thread.cpp	/^  void thread_barrier_with_check(const char *barr_file,int barr_line)$/;"	f	namespace:nissa
thread_master_start	src/routines/thread.cpp	/^  void thread_master_start(int narg,char **arg,void(*main_function)(int narg,char **arg))$/;"	f	namespace:nissa
thread_pool	src/routines/thread.cpp	/^  void thread_pool()$/;"	f	namespace:nissa
thread_pool_lock	src/routines/thread.cpp	/^  void thread_pool_lock()$/;"	f	namespace:nissa
thread_pool_stop	src/routines/thread.cpp	/^  void thread_pool_stop()$/;"	f	namespace:nissa
thread_pool_unlock	src/routines/thread.cpp	/^  void thread_pool_unlock()$/;"	f	namespace:nissa
threaded_function_ptr	src/routines/thread.hpp	/^  EXTERN_THREAD void(*threaded_function_ptr)();$/;"	m	namespace:nissa
three_pts_comp	projects/semileptonic/semileptonic_smeared.cpp	/^two_pts_comp_t two_pts_comp,three_pts_comp;$/;"	v
three_summ	src/new_types/float_256.cpp	/^  void three_summ(double &a,double &b,double &c)$/;"	f	namespace:nissa
three_summ	src/new_types/float_256.cpp	/^  void three_summ(double &a,double &b,double &c,double x,double y,double z)$/;"	f	namespace:nissa
three_summ2	src/new_types/float_256.cpp	/^  void three_summ2(double &a,double &b,double c)$/;"	f	namespace:nissa
three_summ2	src/new_types/float_256.cpp	/^  void three_summ2(double &a,double &b,double x,double y,double c)$/;"	f	namespace:nissa
time_bc	projects/reno_const/RIMOM.cpp	/^time_bc_t time_bc;$/;"	v
time_bc_t	projects/reno_const/RIMOM.cpp	/^enum time_bc_t{PERIODIC,ANTIPERIODIC};$/;"	g	file:
time_mpi_timing	projects/semileptonic/test_bgq.cpp	/^void time_mpi_timing()$/;"	f
tins	projects/ib/prop.hpp	/^    int tins;$/;"	m	struct:nissa::qprop_t
tinv	projects/nucleons/nucleons_smeared.cpp	/^double tinv=0,tcontr_2pt=0,tcontr_3pt=0,tot_prog_time=0;$/;"	v
tlSym_action	src/hmc/gauge/Symanzik_action.hpp	/^  template <class T> void tlSym_action(double *action,T lx_conf,double beta)$/;"	f	namespace:nissa
tmD_or_Qkern_eoprec_square_eos_bgq	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.hpp	/^  inline void tmD_or_Qkern_eoprec_square_eos_bgq(vir_spincolor *out,vir_spincolor *temp,vir_oct_su3 **conf,double kappa,double mu,vir_spincolor *in,int D_or_Q)$/;"	f	namespace:nissa
tmDee_or_oo_eos	src/free_theory/twisted_free_Dirac_eoprec_operator.cpp	/^  void tmDee_or_oo_eos(spin *out,tm_quark_info qu,spin *in)$/;"	f	namespace:nissa
tmDkern_eoprec_eos	src/free_theory/twisted_free_Dirac_eoprec_operator.cpp	/^  void tmDkern_eoprec_eos(spin *out,spin *temp,tm_quark_info qu,spin *in)$/;"	f	namespace:nissa
tmDkern_eoprec_eos_bgq	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.hpp	/^  inline void tmDkern_eoprec_eos_bgq(vir_spincolor *out,vir_oct_su3 **conf,double kappa,double mu,vir_spincolor *in)$/;"	f	namespace:nissa
tmDkern_eoprec_square_eos	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_portable.cpp	/^  void tmDkern_eoprec_square_eos(spincolor *out,spincolor *temp1,spincolor *temp2,quad_su3 **conf,double kappa,double mu,spincolor *in)$/;"	f	namespace:nissa
tmDkern_eoprec_square_eos	src/free_theory/twisted_free_Dirac_eoprec_operator.cpp	/^  void tmDkern_eoprec_square_eos(spin *out,spin *temp1,spin *temp2,tm_quark_info qu,spin *in)$/;"	f	namespace:nissa
tmDkern_eoprec_square_eos_128	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_128.cpp	/^  void tmDkern_eoprec_square_eos_128(spincolor_128 *out,spincolor_128 *temp1,spincolor_128 *temp2,quad_su3 **conf,double kappa,double mu,spincolor_128 *in)$/;"	f	namespace:nissa
tmDkern_eoprec_square_eos_bgq	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.hpp	/^  inline void tmDkern_eoprec_square_eos_bgq(vir_spincolor *out,vir_spincolor *temp,vir_oct_su3 **conf,double kappa,double mu,vir_spincolor *in)$/;"	f	namespace:nissa
tmLQCD	src/base/tmLQCD_bridge.hpp	/^namespace tmLQCD$/;"	n
tmLQCD_init	src/base/tmLQCD_bridge.cpp	/^  void tmLQCD_init()$/;"	f	namespace:nissa
tmQkern_eoprec_eos_bgq	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.hpp	/^  inline void tmQkern_eoprec_eos_bgq(vir_spincolor *out,vir_oct_su3 **conf,double kappa,double mu,vir_spincolor *in)$/;"	f	namespace:nissa
tmQkern_eoprec_square_eos_bgq	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.hpp	/^  inline void tmQkern_eoprec_square_eos_bgq(vir_spincolor *out,vir_spincolor *temp,vir_oct_su3 **conf,double kappa,double mu,vir_spincolor *in)$/;"	f	namespace:nissa
tm_basis_t	src/free_theory/free_theory_types.hpp	/^  enum tm_basis_t{WILSON_BASE,MAX_TWIST_BASE};$/;"	g	namespace:nissa
tm_quark_energy	src/free_theory/twisted_propagator.cpp	/^  double tm_quark_energy(tm_quark_info qu,int imom)$/;"	f	namespace:nissa
tm_quark_info	src/free_theory/free_theory_types.hpp	/^    tm_quark_info() {}$/;"	f	struct:nissa::tm_quark_info
tm_quark_info	src/free_theory/free_theory_types.hpp	/^    tm_quark_info(double kappa,double mass,int r,double theta) :$/;"	f	struct:nissa::tm_quark_info
tm_quark_info	src/free_theory/free_theory_types.hpp	/^    tm_quark_info(double kappa,double mass,int r,momentum_t _bc) :$/;"	f	struct:nissa::tm_quark_info
tm_quark_info	src/free_theory/free_theory_types.hpp	/^  struct tm_quark_info$/;"	s	namespace:nissa
tmclovDkern_eoprec_square_eos	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_portable.cpp	/^  void tmclovDkern_eoprec_square_eos(spincolor *out,spincolor *temp1,spincolor *temp2,quad_su3 **conf,double kappa,clover_term_t *Cl_odd,inv_clover_term_t *invCl_evn,double mu,spincolor *in)$/;"	f	namespace:nissa
tmclovDkern_eoprec_square_eos_128	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_128.cpp	/^  void tmclovDkern_eoprec_square_eos_128(spincolor_128 *out,spincolor_128 *temp1,spincolor_128 *temp2,quad_su3 **conf,double kappa,clover_term_t *Cl_odd,inv_clover_term_t *invCl_evn,double mu,spincolor_128 *in)$/;"	f	namespace:nissa
tmclovDkern_eoprec_square_eos_bgq	src/dirac_operators/tmclovD_eoprec/dirac_operator_tmclovD_eoprec_bgq.hpp	/^  inline void tmclovDkern_eoprec_square_eos_bgq(vir_spincolor *out,vir_spincolor *temp1,vir_spincolor *temp2,vir_oct_su3 **conf,double kappa,vir_clover_term_t *Cl_odd,vir_inv_clover_term_t *invCl_evn,double mu,vir_spincolor *in)$/;"	f	namespace:nissa
tmclovDkern_eoprec_square_eos_wrap	src/inverters/twisted_clover/cgm_invert_tmclovDkern_eoprec_square_portable.cpp	/^  inline void tmclovDkern_eoprec_square_eos_wrap(spincolor *out,spincolor *temp1,spincolor *temp2,quad_su3 **conf,double kappa,clover_term_t *Cl_odd,inv_clover_term_t *invCl_evn,double mu,double dum,spincolor *in)$/;"	f	namespace:nissa
tmn2Deo_eos	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_portable.cpp	/^  void tmn2Deo_eos(spincolor *out,quad_su3 **conf,spincolor *in){tmn2Deo_or_tmn2Doe_eos(out,conf,0,in);}$/;"	f	namespace:nissa
tmn2Deo_eos	src/free_theory/twisted_free_Dirac_eoprec_operator.cpp	/^  void tmn2Deo_eos(spin *out,spin *in,momentum_t bc){tmn2Deo_or_tmn2Doe_eos(out,0,in,bc);}$/;"	f	namespace:nissa
tmn2Deo_eos_128	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_128.hpp	/^  inline void tmn2Deo_eos_128(spincolor_128 *out,quad_su3 **conf,spincolor_128 *in){tmn2Deo_or_tmn2Doe_eos_128(out,conf,0,in);}$/;"	f	namespace:nissa
tmn2Deo_eos_bgq	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.hpp	/^  inline void tmn2Deo_eos_bgq(vir_spincolor *out,vir_oct_su3 **conf,vir_spincolor *in){tmn2Doe_or_tmn2Deo_eos_bgq(out,conf,1,in);}$/;"	f	namespace:nissa
tmn2Deo_or_tmn2Doe_eos	src/free_theory/twisted_free_Dirac_eoprec_operator.cpp	/^  void tmn2Deo_or_tmn2Doe_eos(spin *out,int eooe,spin *in,momentum_t bc)$/;"	f	namespace:nissa
tmn2Doe_eos	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_portable.cpp	/^  void tmn2Doe_eos(spincolor *out,quad_su3 **conf,spincolor *in){tmn2Deo_or_tmn2Doe_eos(out,conf,1,in);}$/;"	f	namespace:nissa
tmn2Doe_eos	src/free_theory/twisted_free_Dirac_eoprec_operator.cpp	/^  void tmn2Doe_eos(spin *out,spin *in,momentum_t bc){tmn2Deo_or_tmn2Doe_eos(out,1,in,bc);}$/;"	f	namespace:nissa
tmn2Doe_eos_128	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_128.hpp	/^  inline void tmn2Doe_eos_128(spincolor_128 *out,quad_su3 **conf,spincolor_128 *in){tmn2Deo_or_tmn2Doe_eos_128(out,conf,1,in);}$/;"	f	namespace:nissa
tmn2Doe_eos_bgq	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.hpp	/^  inline void tmn2Doe_eos_bgq(vir_spincolor *out,vir_oct_su3 **conf,vir_spincolor *in){tmn2Doe_or_tmn2Deo_eos_bgq(out,conf,0,in);}$/;"	f	namespace:nissa
tmn2Doe_or_tmn2Deo_eos_bgq	src/dirac_operators/tmD_eoprec/dirac_operator_tmD_eoprec_bgq.hpp	/^  inline void tmn2Doe_or_tmn2Deo_eos_bgq(vir_spincolor *out,vir_oct_su3 **conf,int oe_or_eo,vir_spincolor *in)$/;"	f	namespace:nissa
tokenize_corr__create_buffer	build/projects/semileptonic/tokenize_corr.cpp	/^    YY_BUFFER_STATE tokenize_corr__create_buffer  (FILE * file, int  size , yyscan_t yyscanner)$/;"	f
tokenize_corr__delete_buffer	build/projects/semileptonic/tokenize_corr.cpp	/^    void tokenize_corr__delete_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)$/;"	f
tokenize_corr__flush_buffer	build/projects/semileptonic/tokenize_corr.cpp	/^    void tokenize_corr__flush_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)$/;"	f
tokenize_corr__init_buffer	build/projects/semileptonic/tokenize_corr.cpp	/^    static void tokenize_corr__init_buffer  (YY_BUFFER_STATE  b, FILE * file , yyscan_t yyscanner)$/;"	f	file:
tokenize_corr__load_buffer_state	build/projects/semileptonic/tokenize_corr.cpp	/^static void tokenize_corr__load_buffer_state  (yyscan_t yyscanner)$/;"	f	file:
tokenize_corr__scan_buffer	build/projects/semileptonic/tokenize_corr.cpp	/^YY_BUFFER_STATE tokenize_corr__scan_buffer  (char * base, yy_size_t  size , yyscan_t yyscanner)$/;"	f
tokenize_corr__scan_bytes	build/projects/semileptonic/tokenize_corr.cpp	/^YY_BUFFER_STATE tokenize_corr__scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len , yyscan_t yyscanner)$/;"	f
tokenize_corr__scan_string	build/projects/semileptonic/tokenize_corr.cpp	/^YY_BUFFER_STATE tokenize_corr__scan_string (yyconst char * yystr , yyscan_t yyscanner)$/;"	f
tokenize_corr__switch_to_buffer	build/projects/semileptonic/tokenize_corr.cpp	/^    void tokenize_corr__switch_to_buffer  (YY_BUFFER_STATE  new_buffer , yyscan_t yyscanner)$/;"	f
tokenize_corr_alloc	build/projects/semileptonic/tokenize_corr.cpp	/^void *tokenize_corr_alloc (yy_size_t  size , yyscan_t yyscanner)$/;"	f
tokenize_corr_ensure_buffer_stack	build/projects/semileptonic/tokenize_corr.cpp	/^static void tokenize_corr_ensure_buffer_stack (yyscan_t yyscanner)$/;"	f	file:
tokenize_corr_free	build/projects/semileptonic/tokenize_corr.cpp	/^void tokenize_corr_free (void * ptr , yyscan_t yyscanner)$/;"	f
tokenize_corr_get_column	build/projects/semileptonic/tokenize_corr.cpp	/^int tokenize_corr_get_column  (yyscan_t yyscanner)$/;"	f
tokenize_corr_get_debug	build/projects/semileptonic/tokenize_corr.cpp	/^int tokenize_corr_get_debug  (yyscan_t yyscanner)$/;"	f
tokenize_corr_get_extra	build/projects/semileptonic/tokenize_corr.cpp	/^YY_EXTRA_TYPE tokenize_corr_get_extra  (yyscan_t yyscanner)$/;"	f
tokenize_corr_get_in	build/projects/semileptonic/tokenize_corr.cpp	/^FILE *tokenize_corr_get_in  (yyscan_t yyscanner)$/;"	f
tokenize_corr_get_leng	build/projects/semileptonic/tokenize_corr.cpp	/^yy_size_t tokenize_corr_get_leng  (yyscan_t yyscanner)$/;"	f
tokenize_corr_get_lineno	build/projects/semileptonic/tokenize_corr.cpp	/^int tokenize_corr_get_lineno  (yyscan_t yyscanner)$/;"	f
tokenize_corr_get_lloc	build/projects/semileptonic/tokenize_corr.cpp	/^YYLTYPE *tokenize_corr_get_lloc  (yyscan_t yyscanner)$/;"	f
tokenize_corr_get_lval	build/projects/semileptonic/tokenize_corr.cpp	/^YYSTYPE * tokenize_corr_get_lval  (yyscan_t yyscanner)$/;"	f
tokenize_corr_get_out	build/projects/semileptonic/tokenize_corr.cpp	/^FILE *tokenize_corr_get_out  (yyscan_t yyscanner)$/;"	f
tokenize_corr_get_text	build/projects/semileptonic/tokenize_corr.cpp	/^char *tokenize_corr_get_text  (yyscan_t yyscanner)$/;"	f
tokenize_corr_lex_destroy	build/projects/semileptonic/tokenize_corr.cpp	/^int tokenize_corr_lex_destroy  (yyscan_t yyscanner)$/;"	f
tokenize_corr_lex_init	build/projects/semileptonic/tokenize_corr.cpp	/^int tokenize_corr_lex_init(yyscan_t* ptr_yy_globals)$/;"	f
tokenize_corr_lex_init_extra	build/projects/semileptonic/tokenize_corr.cpp	/^int tokenize_corr_lex_init_extra(YY_EXTRA_TYPE yy_user_defined,yyscan_t* ptr_yy_globals )$/;"	f
tokenize_corr_pop_buffer_state	build/projects/semileptonic/tokenize_corr.cpp	/^void tokenize_corr_pop_buffer_state (yyscan_t yyscanner)$/;"	f
tokenize_corr_push_buffer_state	build/projects/semileptonic/tokenize_corr.cpp	/^void tokenize_corr_push_buffer_state (YY_BUFFER_STATE new_buffer , yyscan_t yyscanner)$/;"	f
tokenize_corr_realloc	build/projects/semileptonic/tokenize_corr.cpp	/^void *tokenize_corr_realloc  (void * ptr, yy_size_t  size , yyscan_t yyscanner)$/;"	f
tokenize_corr_restart	build/projects/semileptonic/tokenize_corr.cpp	/^    void tokenize_corr_restart  (FILE * input_file , yyscan_t yyscanner)$/;"	f
tokenize_corr_set_column	build/projects/semileptonic/tokenize_corr.cpp	/^void tokenize_corr_set_column (int  column_no , yyscan_t yyscanner)$/;"	f
tokenize_corr_set_debug	build/projects/semileptonic/tokenize_corr.cpp	/^void tokenize_corr_set_debug (int  bdebug , yyscan_t yyscanner)$/;"	f
tokenize_corr_set_extra	build/projects/semileptonic/tokenize_corr.cpp	/^void tokenize_corr_set_extra (YY_EXTRA_TYPE  user_defined , yyscan_t yyscanner)$/;"	f
tokenize_corr_set_in	build/projects/semileptonic/tokenize_corr.cpp	/^void tokenize_corr_set_in (FILE *  in_str , yyscan_t yyscanner)$/;"	f
tokenize_corr_set_lineno	build/projects/semileptonic/tokenize_corr.cpp	/^void tokenize_corr_set_lineno (int  line_number , yyscan_t yyscanner)$/;"	f
tokenize_corr_set_lloc	build/projects/semileptonic/tokenize_corr.cpp	/^void tokenize_corr_set_lloc (YYLTYPE *  yylloc_param , yyscan_t yyscanner)$/;"	f
tokenize_corr_set_lval	build/projects/semileptonic/tokenize_corr.cpp	/^void tokenize_corr_set_lval (YYSTYPE *  yylval_param , yyscan_t yyscanner)$/;"	f
tokenize_corr_set_out	build/projects/semileptonic/tokenize_corr.cpp	/^void tokenize_corr_set_out (FILE *  out_str , yyscan_t yyscanner)$/;"	f
tokenize_corr_wrap	build/projects/semileptonic/tokenize_corr.cpp	329;"	d	file:
tokenizer__create_buffer	build/projects/generate_confs/tokenizer.cpp	/^    YY_BUFFER_STATE tokenizer__create_buffer  (FILE * file, int  size , yyscan_t yyscanner)$/;"	f
tokenizer__delete_buffer	build/projects/generate_confs/tokenizer.cpp	/^    void tokenizer__delete_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)$/;"	f
tokenizer__flush_buffer	build/projects/generate_confs/tokenizer.cpp	/^    void tokenizer__flush_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)$/;"	f
tokenizer__init_buffer	build/projects/generate_confs/tokenizer.cpp	/^    static void tokenizer__init_buffer  (YY_BUFFER_STATE  b, FILE * file , yyscan_t yyscanner)$/;"	f	file:
tokenizer__load_buffer_state	build/projects/generate_confs/tokenizer.cpp	/^static void tokenizer__load_buffer_state  (yyscan_t yyscanner)$/;"	f	file:
tokenizer__scan_buffer	build/projects/generate_confs/tokenizer.cpp	/^YY_BUFFER_STATE tokenizer__scan_buffer  (char * base, yy_size_t  size , yyscan_t yyscanner)$/;"	f
tokenizer__scan_bytes	build/projects/generate_confs/tokenizer.cpp	/^YY_BUFFER_STATE tokenizer__scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len , yyscan_t yyscanner)$/;"	f
tokenizer__scan_string	build/projects/generate_confs/tokenizer.cpp	/^YY_BUFFER_STATE tokenizer__scan_string (yyconst char * yystr , yyscan_t yyscanner)$/;"	f
tokenizer__switch_to_buffer	build/projects/generate_confs/tokenizer.cpp	/^    void tokenizer__switch_to_buffer  (YY_BUFFER_STATE  new_buffer , yyscan_t yyscanner)$/;"	f
tokenizer_alloc	build/projects/generate_confs/tokenizer.cpp	/^void *tokenizer_alloc (yy_size_t  size , yyscan_t yyscanner)$/;"	f
tokenizer_ensure_buffer_stack	build/projects/generate_confs/tokenizer.cpp	/^static void tokenizer_ensure_buffer_stack (yyscan_t yyscanner)$/;"	f	file:
tokenizer_free	build/projects/generate_confs/tokenizer.cpp	/^void tokenizer_free (void * ptr , yyscan_t yyscanner)$/;"	f
tokenizer_get_column	build/projects/generate_confs/tokenizer.cpp	/^int tokenizer_get_column  (yyscan_t yyscanner)$/;"	f
tokenizer_get_debug	build/projects/generate_confs/tokenizer.cpp	/^int tokenizer_get_debug  (yyscan_t yyscanner)$/;"	f
tokenizer_get_extra	build/projects/generate_confs/tokenizer.cpp	/^YY_EXTRA_TYPE tokenizer_get_extra  (yyscan_t yyscanner)$/;"	f
tokenizer_get_in	build/projects/generate_confs/tokenizer.cpp	/^FILE *tokenizer_get_in  (yyscan_t yyscanner)$/;"	f
tokenizer_get_leng	build/projects/generate_confs/tokenizer.cpp	/^yy_size_t tokenizer_get_leng  (yyscan_t yyscanner)$/;"	f
tokenizer_get_lineno	build/projects/generate_confs/tokenizer.cpp	/^int tokenizer_get_lineno  (yyscan_t yyscanner)$/;"	f
tokenizer_get_lloc	build/projects/generate_confs/tokenizer.cpp	/^YYLTYPE *tokenizer_get_lloc  (yyscan_t yyscanner)$/;"	f
tokenizer_get_lval	build/projects/generate_confs/tokenizer.cpp	/^YYSTYPE * tokenizer_get_lval  (yyscan_t yyscanner)$/;"	f
tokenizer_get_out	build/projects/generate_confs/tokenizer.cpp	/^FILE *tokenizer_get_out  (yyscan_t yyscanner)$/;"	f
tokenizer_get_text	build/projects/generate_confs/tokenizer.cpp	/^char *tokenizer_get_text  (yyscan_t yyscanner)$/;"	f
tokenizer_lex_destroy	build/projects/generate_confs/tokenizer.cpp	/^int tokenizer_lex_destroy  (yyscan_t yyscanner)$/;"	f
tokenizer_lex_init	build/projects/generate_confs/tokenizer.cpp	/^int tokenizer_lex_init(yyscan_t* ptr_yy_globals)$/;"	f
tokenizer_lex_init_extra	build/projects/generate_confs/tokenizer.cpp	/^int tokenizer_lex_init_extra(YY_EXTRA_TYPE yy_user_defined,yyscan_t* ptr_yy_globals )$/;"	f
tokenizer_pop_buffer_state	build/projects/generate_confs/tokenizer.cpp	/^void tokenizer_pop_buffer_state (yyscan_t yyscanner)$/;"	f
tokenizer_push_buffer_state	build/projects/generate_confs/tokenizer.cpp	/^void tokenizer_push_buffer_state (YY_BUFFER_STATE new_buffer , yyscan_t yyscanner)$/;"	f
tokenizer_realloc	build/projects/generate_confs/tokenizer.cpp	/^void *tokenizer_realloc  (void * ptr, yy_size_t  size , yyscan_t yyscanner)$/;"	f
tokenizer_restart	build/projects/generate_confs/tokenizer.cpp	/^    void tokenizer_restart  (FILE * input_file , yyscan_t yyscanner)$/;"	f
tokenizer_set_column	build/projects/generate_confs/tokenizer.cpp	/^void tokenizer_set_column (int  column_no , yyscan_t yyscanner)$/;"	f
tokenizer_set_debug	build/projects/generate_confs/tokenizer.cpp	/^void tokenizer_set_debug (int  bdebug , yyscan_t yyscanner)$/;"	f
tokenizer_set_extra	build/projects/generate_confs/tokenizer.cpp	/^void tokenizer_set_extra (YY_EXTRA_TYPE  user_defined , yyscan_t yyscanner)$/;"	f
tokenizer_set_in	build/projects/generate_confs/tokenizer.cpp	/^void tokenizer_set_in (FILE *  in_str , yyscan_t yyscanner)$/;"	f
tokenizer_set_lineno	build/projects/generate_confs/tokenizer.cpp	/^void tokenizer_set_lineno (int  line_number , yyscan_t yyscanner)$/;"	f
tokenizer_set_lloc	build/projects/generate_confs/tokenizer.cpp	/^void tokenizer_set_lloc (YYLTYPE *  yylloc_param , yyscan_t yyscanner)$/;"	f
tokenizer_set_lval	build/projects/generate_confs/tokenizer.cpp	/^void tokenizer_set_lval (YYSTYPE *  yylval_param , yyscan_t yyscanner)$/;"	f
tokenizer_set_out	build/projects/generate_confs/tokenizer.cpp	/^void tokenizer_set_out (FILE *  out_str , yyscan_t yyscanner)$/;"	f
tokenizer_wrap	build/projects/generate_confs/tokenizer.cpp	329;"	d	file:
top_build_prefix	build/Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	build/projects/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	build/src/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	build/tools/Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	build/Makefile	/^top_builddir = .$/;"	m
top_builddir	build/projects/Makefile	/^top_builddir = ..$/;"	m
top_builddir	build/src/Makefile	/^top_builddir = ..$/;"	m
top_builddir	build/tools/Makefile	/^top_builddir = ..$/;"	m
top_distdir	build/Makefile	/^top_distdir = $(distdir)$/;"	m
top_meas	build/projects/generate_confs/parser.cpp	/^    nissa::top_meas_pars_t *top_meas;$/;"	m	union:YYSTYPE	file:
top_meas	build/projects/generate_confs/parser.hpp	/^    nissa::top_meas_pars_t *top_meas;$/;"	m	union:YYSTYPE
top_meas	projects/generate_confs/driver.hpp	/^    std::vector<top_meas_pars_t> top_meas;$/;"	m	class:nissa::driver_t
top_meas_pars	projects/generate_confs/generate_quenched.cpp	/^top_meas_pars_t top_meas_pars;$/;"	v
top_meas_pars_t	src/operations/su3_paths/topological_charge.hpp	/^    top_meas_pars_t() :$/;"	f	struct:nissa::top_meas_pars_t
top_meas_pars_t	src/operations/su3_paths/topological_charge.hpp	/^  struct top_meas_pars_t$/;"	s	namespace:nissa
top_meas_time	projects/generate_confs/generate.cpp	/^double *top_meas_time;$/;"	v
top_srcdir	build/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	build/projects/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	build/src/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	build/tools/Makefile	/^top_srcdir = ..\/..$/;"	m
topo_file_name	src/hmc/gauge/topological_action.cpp	/^  const char topo_file_name[]="topo_potential";$/;"	m	namespace:nissa	file:
topo_time	projects/generate_confs/generate_quenched.cpp	/^double topo_time=0;$/;"	v
topodynamical_potential	src/hmc/gauge/topological_action.cpp	/^  double topodynamical_potential(double Q,topotential_pars_t &pars)$/;"	f	namespace:nissa
topotential_action	src/hmc/gauge/topological_action.cpp	/^  double topotential_action(quad_su3 **ext_conf,topotential_pars_t &pars)$/;"	f	namespace:nissa
topotential_action	src/hmc/gauge/topological_action.cpp	/^  double topotential_action(quad_su3 *lx_conf,topotential_pars_t &pars)$/;"	f	namespace:nissa
topotential_pars	build/projects/generate_confs/parser.cpp	/^    nissa::topotential_pars_t *topotential_pars;$/;"	m	union:YYSTYPE	file:
topotential_pars	build/projects/generate_confs/parser.hpp	/^    nissa::topotential_pars_t *topotential_pars;$/;"	m	union:YYSTYPE
topotential_pars	src/hmc/theory_pars.hpp	/^    topotential_pars_t topotential_pars;$/;"	m	struct:nissa::theory_pars_t
topotential_pars_t	src/hmc/gauge/topological_action.hpp	/^    topotential_pars_t() :$/;"	f	struct:nissa::topotential_pars_t
topotential_pars_t	src/hmc/gauge/topological_action.hpp	/^  struct topotential_pars_t : meta_pars_t$/;"	s	namespace:nissa
torus_grid_t	tools/find_best_vir_partitioning/find.cpp	/^  torus_grid_t() {}$/;"	f	struct:torus_grid_t
torus_grid_t	tools/find_best_vir_partitioning/find.cpp	/^  torus_grid_t()$/;"	f	struct:torus_grid_t
torus_grid_t	tools/find_best_vir_partitioning/find.cpp	/^  torus_grid_t(int a,int b,int c,int d)$/;"	f	struct:torus_grid_t
torus_grid_t	tools/find_best_vir_partitioning/find.cpp	/^struct torus_grid_t$/;"	s	file:
tot_contr_2pts_time	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double tot_contr_2pts_time=0;$/;"	v
tot_contr_3pts_time	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double tot_contr_3pts_time=0;$/;"	v
tot_inv_time	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double tot_prog_time=0,tot_inv_time=0;$/;"	v
tot_mess_size	src/communicate/communicate.hpp	/^    uint64_t tot_mess_size;$/;"	m	struct:nissa::comm_t
tot_prog_time	projects/eight_BK/smeared_BK_all_in_one.cpp	/^double tot_prog_time=0,tot_inv_time=0;$/;"	v
tot_prog_time	projects/g/g.cpp	/^double tot_prog_time=0,inv_time=0;$/;"	v
tot_prog_time	projects/ib/conf.hpp	/^  EXTERN_CONF double tot_prog_time,wall_time;$/;"	m	namespace:nissa
tot_prog_time	projects/ib/mel.cpp	/^double tot_prog_time=0,wall_time;$/;"	v
tot_prog_time	projects/nucleons/nucleons_smeared.cpp	/^double tinv=0,tcontr_2pt=0,tcontr_3pt=0,tot_prog_time=0;$/;"	v
tot_prog_time	projects/reno_const/RIMOM.cpp	/^double tot_prog_time=0,inv_time=0,contr_time=0,fix_time=0;$/;"	v
tot_prog_time	projects/semileptonic/gevp.cpp	/^double wall_time,conf_smear_time=0,tot_prog_time=0,inv_time=0,smear_time=0,corr_time=0;$/;"	v
tot_prog_time	projects/semileptonic/gevp_3pts.cpp	/^double wall_time,conf_smear_time=0,tot_prog_time=0,inv_time=0,smear_time=0,corr_time=0;$/;"	v
tot_prog_time	projects/semileptonic/semileptonic_smeared.cpp	/^double tot_prog_time=0;$/;"	v
tot_prog_time	tools/x_clusterize/x_clusterize.cpp	/^double tot_prog_time=0;$/;"	v
tot_time	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_point_source_tens.cpp	/^double tot_time=0,inv_time=0,contr_time=0;$/;"	v
tot_time	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^double tot_time=0,inv_time=0;$/;"	v
trace_dirac_prod_spinspin	src/new_types/spin.hpp	/^  inline void trace_dirac_prod_spinspin(complex c,const dirac_matr *a,const spinspin b)$/;"	f	namespace:nissa
trace_g_ccss_dag_g_ccss	src/operations/contract/site_contract.cpp	/^  void trace_g_ccss_dag_g_ccss(complex c,dirac_matr *g1,su3spinspin s1,dirac_matr *g2,su3spinspin s2)$/;"	f	namespace:nissa
trace_g_css_dag_g_css	src/operations/contract/site_contract.cpp	/^  void trace_g_css_dag_g_css(complex c,dirac_matr *g1,colorspinspin s1,dirac_matr *g2,colorspinspin s2)$/;"	f	namespace:nissa
trace_g_ss_dag_g_ss	src/operations/contract/site_contract.cpp	/^  void trace_g_ss_dag_g_ss(complex c,dirac_matr *g1,spinspin s1,dirac_matr *g2,spinspin s2)$/;"	f	namespace:nissa
trace_g_ss_dag_g_ss_g_ss_dag_g_ss	src/operations/contract/site_contract.cpp	/^  void trace_g_ss_dag_g_ss_g_ss_dag_g_ss(complex c,dirac_matr *g1,spinspin s1,dirac_matr *g2,spinspin s2, dirac_matr *g3,spinspin s3,dirac_matr *g4,spinspin s4)$/;"	f	namespace:nissa
trace_prod_spinspins	src/new_types/spin.hpp	/^  inline void trace_prod_spinspins(complex c,const spinspin a,const spinspin b)$/;"	f	namespace:nissa
trace_spinspin	src/new_types/spin.hpp	/^  inline void trace_spinspin(complex c,const spinspin a)$/;"	f	namespace:nissa
trace_spinspin_prod_spinspin	src/new_types/spin.hpp	/^  inline void trace_spinspin_prod_spinspin(complex c,const spinspin a,const spinspin b)$/;"	f	namespace:nissa
trace_spinspin_with_dirac	src/new_types/spin.hpp	/^  inline void trace_spinspin_with_dirac(complex out,const spinspin s,const dirac_matr *m)$/;"	f	namespace:nissa
trace_su3_prod_su3	src/new_types/su3_op.hpp	/^  inline void trace_su3_prod_su3(complex t,const su3 a,const su3 b)$/;"	f	namespace:nissa
traj_length	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^    double traj_length;$/;"	m	struct:nissa::pure_gauge_evol_pars_t
traj_length	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    double traj_length;$/;"	m	struct:nissa::hmc_evol_pars_t
transf	projects/x/tests/test_nazario2.cpp	/^void transf(double *corrx,complex *corrp,int ord)$/;"	f
transform	build/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	build/projects/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	build/src/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	build/tools/Makefile	/^transform = $(program_transform_name)$/;"	m
tree	projects/x/progs/compute_corrections.cpp	/^  int tree;$/;"	m	struct:flags	file:
tricoords_copy	src/operations/su3_paths/all_rectangles.cpp	/^  void tricoords_copy(tricoords_t out,tricoords_t in)$/;"	f	namespace:nissa
tricoords_t	src/operations/su3_paths/all_rectangles.cpp	/^  typedef int tricoords_t[3];$/;"	t	namespace:nissa	file:
triple_tag	src/io/input.cpp	/^      template <class T> triple_tag(std::string name,T &val) : name(name),type(get_tag(val)),size(sizeof(T)),pointer(&val) {}$/;"	f	struct:nissa::__anon9::triple_tag
triple_tag	src/io/input.cpp	/^    struct triple_tag$/;"	s	namespace:nissa::__anon9	file:
true_exch	projects/x/tests/test_nazario2.cpp	183;"	d	file:
try_lock	src/routines/ios.hpp	/^    void try_lock(const std::string &ext_path)$/;"	f	class:nissa::lock_file_t
tsep	projects/g/g.cpp	/^int tsep;$/;"	v
tsep	projects/semileptonic/gevp_3pts.cpp	/^int nsources,twall,tsep;$/;"	v
tsep	projects/semileptonic/semileptonic_smeared.cpp	/^int tsep;$/;"	v
tsep	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int tsep;$/;"	v
tsepa	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int nsepa,*tsepa;$/;"	v
tseparation	projects/nucleons/nucleons_smeared.cpp	/^int tseparation;$/;"	v
tsink	projects/nucleons/nucleons_smeared.cpp	/^int tsink;$/;"	v
tsource	projects/semileptonic/test_proj.cpp	/^int T,L,seed,tsource,npassed_conf,ntot_conf,rprop,binary_ascii;$/;"	v
twall	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int nwall,*twall;$/;"	v
twall	projects/g/g.cpp	/^int seed,noise_type,twall;$/;"	v
twall	projects/semileptonic/gevp.cpp	/^int ndoubles,twall;$/;"	v
twall	projects/semileptonic/gevp_3pts.cpp	/^int nsources,twall,tsep;$/;"	v
twall	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int seed,noise_type,twall;$/;"	v
twisted_anti_particle_projector_of_imom	src/free_theory/twisted_propagator.hpp	/^  inline double twisted_anti_particle_projector_of_imom(spinspin proj,tm_quark_info qu,int imom,tm_basis_t base)$/;"	f	namespace:nissa
twisted_on_shell_operator_of_imom	src/free_theory/twisted_propagator.cpp	/^  double twisted_on_shell_operator_of_imom(spinspin proj,tm_quark_info qu,int imom,bool tilded,int esign,tm_basis_t base)$/;"	f	namespace:nissa
twisted_particle_anti_particle_projector_of_imom	src/free_theory/twisted_propagator.hpp	/^  inline double twisted_particle_anti_particle_projector_of_imom(spinspin proj,tm_quark_info qu,int imom,int part_apart,tm_basis_t base)$/;"	f	namespace:nissa
twisted_particle_projector_of_imom	src/free_theory/twisted_propagator.hpp	/^  inline double twisted_particle_projector_of_imom(spinspin proj,tm_quark_info qu,int imom,tm_basis_t base)$/;"	f	namespace:nissa
twisted_run	projects/ib/pars.hpp	/^  EXTERN_PARS int twisted_run;$/;"	m	namespace:nissa
twisted_wavefunction_of_imom	src/free_theory/twisted_propagator.cpp	/^  void twisted_wavefunction_of_imom(spin wf,tm_quark_info qu,int imom,int par_apar,int s,tm_basis_t base)$/;"	f	namespace:nissa
two_prod	src/new_types/float_256.cpp	/^  void two_prod(double &p,double &e,double a,double b)$/;"	f	namespace:nissa
two_pts_comp	projects/semileptonic/gevp.cpp	/^two_pts_comp_t two_pts_comp[4][4][4][4];$/;"	v
two_pts_comp	projects/semileptonic/semileptonic_smeared.cpp	/^two_pts_comp_t two_pts_comp,three_pts_comp;$/;"	v
two_pts_comp_off	projects/semileptonic/gevp.cpp	/^int two_pts_comp_off[4][4][4][4];$/;"	v
two_pts_comp_t	src/operations/contract/optimized_mesons_2pts.hpp	/^  struct two_pts_comp_t: std::map<forw_back_comp_id_t,corr_id_weight_t>$/;"	s	namespace:nissa
two_pts_corr_group	projects/semileptonic/new_version/new_types.hpp	/^  two_pts_corr_group_t *two_pts_corr_group;$/;"	m	struct:corr_command_t
two_pts_corr_group	projects/semileptonic/new_version/test.cpp	/^two_pts_corr_group_t *two_pts_corr_group;$/;"	v
two_pts_corr_group_t	projects/semileptonic/new_version/new_types.hpp	/^  two_pts_corr_group_t() {reset();}$/;"	f	struct:two_pts_corr_group_t
two_pts_corr_group_t	projects/semileptonic/new_version/new_types.hpp	/^struct two_pts_corr_group_t$/;"	s
two_pts_corr_pars_t	projects/semileptonic/new_version/new_types.cpp	/^two_pts_corr_pars_t::two_pts_corr_pars_t(const char *what,double c1,int si1,int so1)$/;"	f	class:two_pts_corr_pars_t
two_pts_corr_pars_t	projects/semileptonic/new_version/new_types.cpp	/^two_pts_corr_pars_t::two_pts_corr_pars_t(const char *what,double c1,int si1,int so1,double c2,int si2,int so2,double c3,int si3,int so3)$/;"	f	class:two_pts_corr_pars_t
two_pts_corr_pars_t	projects/semileptonic/new_version/new_types.hpp	/^struct two_pts_corr_pars_t$/;"	s
two_pts_parser_driver	build/projects/semileptonic/tokenize_corr.cpp	/^two_pts_parser_driver::two_pts_parser_driver(const char *path)$/;"	f	class:two_pts_parser_driver
two_pts_parser_driver	projects/semileptonic/driver_corr.hpp	/^class two_pts_parser_driver$/;"	c
two_stage_computation_pos_t	src/new_types/two_stage_computation.hpp	/^    two_stage_computation_pos_t()$/;"	f	struct:nissa::two_stage_computation_pos_t
two_stage_computation_pos_t	src/new_types/two_stage_computation.hpp	/^  struct two_stage_computation_pos_t$/;"	s	namespace:nissa
two_summ	src/new_types/float_256.cpp	/^  void two_summ(double &s,double &e,double a,double b)$/;"	f	namespace:nissa
type	projects/semileptonic/new_version/new_semileptonic.cpp	/^  int type;$/;"	m	struct:source_t	file:
type	src/base/vectors.hpp	/^    char type[NISSA_VECT_STRING_LENGTH];$/;"	m	struct:nissa::nissa_vect
type	src/io/ILDG_File.hpp	/^    char type[128];$/;"	m	struct:nissa::ILDG_header
type	src/io/input.cpp	/^      std::string type;$/;"	m	struct:nissa::__anon9::triple_tag	file:
type	tools/conf_transform/edit/ILDG_File_light.hpp	/^  char type[128];$/;"	m	struct:ILDG_header
u	src/io/endianness.cpp	/^    uint16_t u;$/;"	m	union:nissa::uint16_t_reverter_t	file:
u	src/new_types/dsfmt.hpp	/^      uint64_t u[2];$/;"	m	union:nissa::dsfmt_t::w128_t
u	src/new_types/su3_op.hpp	/^    double u,w,theta;$/;"	m	struct:nissa::hermitian_exp_ingredients
u1b	tools/conf_measure/magn.cpp	/^quad_u1 *u1b[2];$/;"	v
u32	src/new_types/dsfmt.hpp	/^      uint32_t u32[4];$/;"	m	union:nissa::dsfmt_t::w128_t
uint16_t_reverter_t	src/io/endianness.cpp	/^  union uint16_t_reverter_t$/;"	u	namespace:nissa	file:
uint16s_to_uint16s_changing_endianness	tools/conf_transform/edit/ILDG_File_light.cpp	/^void uint16s_to_uint16s_changing_endianness(uint16_t *dest,uint16_t *sour,int nshorts)$/;"	f
uint32s_to_uint32s_changing_endianness	tools/conf_transform/edit/ILDG_File_light.cpp	/^void uint32s_to_uint32s_changing_endianness(uint32_t *dest,uint32_t *sour,int nints,int verbose=1)$/;"	f
uint64s_to_uint64s_changing_endianness	tools/conf_transform/edit/ILDG_File_light.cpp	/^void uint64s_to_uint64s_changing_endianness(uint64_t *dest,uint64_t *sour,int nints)$/;"	f
unfix_conf	projects/reno_const/RIMOM.cpp	/^quad_su3 *conf,*unfix_conf;$/;"	v
unitarity_check_lx_conf	src/operations/gaugeconf.cpp	/^  void unitarity_check_lx_conf(unitarity_check_result_t &result,quad_su3 *conf)$/;"	f	namespace:nissa
unitarity_check_result_t	src/operations/gaugeconf.hpp	/^    unitarity_check_result_t () : nbroken_links(0),average_diff(0.0),max_diff(0.0) {}$/;"	f	struct:nissa::unitarity_check_result_t
unitarity_check_result_t	src/operations/gaugeconf.hpp	/^  struct unitarity_check_result_t$/;"	s	namespace:nissa
unitarize_each	src/operations/gauge_fixing.hpp	/^    int unitarize_each;$/;"	m	struct:nissa::LC_gauge_fixing_pars_t
units	src/operations/smearing/recursive_Wflower.hpp	/^      int units; \/\/length of the Wflowing in units of the fundamental, for this level$/;"	m	struct:nissa::recursive_Wflower_t::Wflow_lev_t
unput	build/projects/generate_confs/tokenizer.cpp	199;"	d	file:
unput	build/projects/semileptonic/tokenize_corr.cpp	199;"	d	file:
unroll_corr_to_contr	projects/semileptonic/new_version/new_types.cpp	/^two_pts_corr_pars_t *unroll_corr_to_contr(const char *what)$/;"	f
unsafe_apply_point_chromo_operator_to_spincolor	src/operations/su3_paths/clover_term.cpp	/^  void unsafe_apply_point_chromo_operator_to_spincolor(spincolor out,clover_term_t Cl,spincolor in)$/;"	f	namespace:nissa
unsafe_apply_point_chromo_operator_to_spincolor_128	src/operations/su3_paths/clover_term.cpp	/^  void unsafe_apply_point_chromo_operator_to_spincolor_128(spincolor_128 out,clover_term_t Cl,spincolor_128 in)$/;"	f	namespace:nissa
unsafe_color_128_prod_complex_64	src/new_types/float_128.hpp	/^  inline void unsafe_color_128_prod_complex_64(color_128 out,color_128 in,complex factor)$/;"	f	namespace:nissa
unsafe_color_prod_complex	src/new_types/su3_op.hpp	/^  inline void unsafe_color_prod_complex(color out,const color in,const complex factor)$/;"	f	namespace:nissa
unsafe_color_prod_complex_conj	src/new_types/su3_op.hpp	/^  inline void unsafe_color_prod_complex_conj(color out,const color in,const complex factor)$/;"	f	namespace:nissa
unsafe_color_prod_su3	src/new_types/su3_op.hpp	/^  inline void unsafe_color_prod_su3(color a,const color b,const su3 c)$/;"	f	namespace:nissa
unsafe_color_prod_su3_dag	src/new_types/su3_op.hpp	/^  inline void unsafe_color_prod_su3_dag(color a,const color b,const su3 c)$/;"	f	namespace:nissa
unsafe_colorspinspin_prod_complex	src/new_types/su3_op.hpp	/^  inline void unsafe_colorspinspin_prod_complex(colorspinspin out,const colorspinspin in,const complex factor)$/;"	f	namespace:nissa
unsafe_complex_128_prod_64	src/new_types/float_128.hpp	/^  inline void unsafe_complex_128_prod_64(complex_128 a,complex_128 b,complex c)$/;"	f	namespace:nissa
unsafe_complex_64_conj1_prod_128	src/new_types/float_128.hpp	/^  inline void unsafe_complex_64_conj1_prod_128(complex_128 a,complex b,complex_128 c)$/;"	f	namespace:nissa
unsafe_complex_64_prod_128	src/new_types/float_128.hpp	/^  inline void unsafe_complex_64_prod_128(complex_128 a,complex b,complex_128 c)$/;"	f	namespace:nissa
unsafe_complex_conj1_prod	src/new_types/complex.hpp	/^  inline void unsafe_complex_conj1_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
unsafe_complex_conj1_prod_minus	src/new_types/complex.hpp	/^  inline void unsafe_complex_conj1_prod_minus(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
unsafe_complex_conj2_prod	src/new_types/complex.hpp	/^  inline void unsafe_complex_conj2_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
unsafe_complex_conj2_prod_minus	src/new_types/complex.hpp	/^  inline void unsafe_complex_conj2_prod_minus(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
unsafe_complex_conj_conj_prod	src/new_types/complex.hpp	/^  inline void unsafe_complex_conj_conj_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
unsafe_complex_conj_conj_prod_minus	src/new_types/complex.hpp	/^  inline void unsafe_complex_conj_conj_prod_minus(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
unsafe_complex_prod	src/new_types/complex.hpp	/^  inline void unsafe_complex_prod(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
unsafe_complex_prod_minus	src/new_types/complex.hpp	/^  inline void unsafe_complex_prod_minus(complex a,const complex b,const complex c)$/;"	f	namespace:nissa
unsafe_dirac_compl_prod	src/new_types/dirac.hpp	/^  inline void unsafe_dirac_compl_prod(dirac_matr *out,dirac_matr *in,complex c)$/;"	f	namespace:nissa
unsafe_dirac_prod_colorspinspin	src/new_types/su3_op.hpp	/^  inline void unsafe_dirac_prod_colorspinspin(colorspinspin out,const dirac_matr *m,const colorspinspin in)$/;"	f	namespace:nissa
unsafe_dirac_prod_complex	src/new_types/dirac.hpp	/^  inline void unsafe_dirac_prod_complex(dirac_matr *out,dirac_matr *in1,complex in2)$/;"	f	namespace:nissa
unsafe_dirac_prod_spin	src/new_types/spin.hpp	/^  inline void unsafe_dirac_prod_spin(spin out,const dirac_matr *m,const spin in)$/;"	f	namespace:nissa
unsafe_dirac_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void unsafe_dirac_prod_spincolor(spincolor out,const dirac_matr *m,const spincolor in)$/;"	f	namespace:nissa
unsafe_dirac_prod_spinspin	src/new_types/spin.hpp	/^  inline void unsafe_dirac_prod_spinspin(spinspin out,const dirac_matr *m,const spinspin in)$/;"	f	namespace:nissa
unsafe_dirac_prod_spinspin_dag	src/new_types/spin.hpp	/^  inline void unsafe_dirac_prod_spinspin_dag(spinspin out,const dirac_matr *m,const spinspin in)$/;"	f	namespace:nissa
unsafe_dirac_prod_spinspin_transp	src/new_types/spin.hpp	/^  inline void unsafe_dirac_prod_spinspin_transp(spinspin out,const dirac_matr *m,const spinspin in)$/;"	f	namespace:nissa
unsafe_dirac_prod_su3spinspin	src/new_types/su3_op.hpp	/^  inline void unsafe_dirac_prod_su3spinspin(su3spinspin out,const dirac_matr *m,const su3spinspin in)$/;"	f	namespace:nissa
unsafe_halfspincolor_halfspincolor_dag_times_halfspincolor	src/new_types/su3_op.hpp	/^  inline void unsafe_halfspincolor_halfspincolor_dag_times_halfspincolor(halfspincolor a,const halfspincolor_halfspincolor b,const halfspincolor c)$/;"	f	namespace:nissa
unsafe_halfspincolor_halfspincolor_dag_times_halfspincolor_128	src/new_types/float_128.hpp	/^  inline void unsafe_halfspincolor_halfspincolor_dag_times_halfspincolor_128(halfspincolor_128 a,halfspincolor_halfspincolor b,halfspincolor_128 c)$/;"	f	namespace:nissa
unsafe_halfspincolor_halfspincolor_times_halfspincolor	src/new_types/su3_op.hpp	/^  inline void unsafe_halfspincolor_halfspincolor_times_halfspincolor(halfspincolor a,const halfspincolor_halfspincolor b,const halfspincolor c)$/;"	f	namespace:nissa
unsafe_halfspincolor_halfspincolor_times_halfspincolor_128	src/new_types/float_128.hpp	/^  inline void unsafe_halfspincolor_halfspincolor_times_halfspincolor_128(halfspincolor_128 a,halfspincolor_halfspincolor b,halfspincolor_128 c)$/;"	f	namespace:nissa
unsafe_shift_spin_dw	projects/x/src/routines/shift.cpp	/^void unsafe_shift_spin_dw(spin *out,spin *in,momentum_t bc,int mu)$/;"	f
unsafe_shift_spin_up	projects/x/src/routines/shift.cpp	/^void unsafe_shift_spin_up(spin *out,spin *in,momentum_t bc,int mu)$/;"	f
unsafe_shift_spin_updw	projects/x/src/routines/shift.cpp	/^void unsafe_shift_spin_updw(spin *out,spin *in,momentum_t bc,int mu,int ud)$/;"	f
unsafe_single_complex_prod	src/new_types/complex.hpp	/^  inline void unsafe_single_complex_prod(single_complex a,const single_complex b,const single_complex c)$/;"	f	namespace:nissa
unsafe_single_single_complex_prod	src/new_types/complex.hpp	/^  inline void unsafe_single_single_complex_prod(single_complex a,const single_complex b,const single_complex c)$/;"	f	namespace:nissa
unsafe_single_su3_prod_single_color	src/new_types/su3_op.hpp	/^  inline void unsafe_single_su3_prod_single_color(single_color a,const single_su3 b,const single_color c)$/;"	f	namespace:nissa
unsafe_spin_prod_dirac	src/new_types/spin.hpp	/^  inline void unsafe_spin_prod_dirac(spin out,const spin in,const dirac_matr *m)$/;"	f	namespace:nissa
unsafe_spin_prod_spinspin	src/new_types/spin.hpp	/^  inline void unsafe_spin_prod_spinspin(spin out,const spin a,const spinspin b)$/;"	f	namespace:nissa
unsafe_spincolor_prod_complex	src/new_types/su3_op.hpp	/^  inline void unsafe_spincolor_prod_complex(spincolor a,const spincolor b,const complex factor)$/;"	f	namespace:nissa
unsafe_spincolor_prod_dirac	src/new_types/su3_op.hpp	/^  inline void unsafe_spincolor_prod_dirac(spincolor out,const spincolor in,const dirac_matr *m)$/;"	f	namespace:nissa
unsafe_spincolor_prod_spinspin	src/new_types/su3_op.hpp	/^  inline void unsafe_spincolor_prod_spinspin(spincolor out,const spincolor a,const spinspin b)$/;"	f	namespace:nissa
unsafe_spinspin_hermitian	src/new_types/spin.hpp	/^  inline void unsafe_spinspin_hermitian(spinspin b,const spinspin a)$/;"	f	namespace:nissa
unsafe_spinspin_prod_complex	src/new_types/spin.hpp	/^  inline void unsafe_spinspin_prod_complex(spinspin a,const spinspin b,const complex c)$/;"	f	namespace:nissa
unsafe_spinspin_prod_complex_conj2	src/new_types/spin.hpp	/^  inline void unsafe_spinspin_prod_complex_conj2(spinspin a,const spinspin b,const complex c)$/;"	f	namespace:nissa
unsafe_spinspin_prod_dirac	src/new_types/spin.hpp	/^  inline void unsafe_spinspin_prod_dirac(spinspin out,const spinspin in,const dirac_matr *m)$/;"	f	namespace:nissa
unsafe_spinspin_prod_spin	src/new_types/spin.hpp	/^  inline void unsafe_spinspin_prod_spin(spin out,const spinspin a,spin b)$/;"	f	namespace:nissa
unsafe_spinspin_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void unsafe_spinspin_prod_spincolor(spincolor out,const spinspin a,spincolor b)$/;"	f	namespace:nissa
unsafe_spinspin_prod_spinspin	src/new_types/spin.hpp	/^  inline void unsafe_spinspin_prod_spinspin(spinspin out,const spinspin a,const spinspin b)$/;"	f	namespace:nissa
unsafe_spinspin_prod_spinspin_dag	src/new_types/spin.hpp	/^  inline void unsafe_spinspin_prod_spinspin_dag(spinspin out,const spinspin a,const spinspin b)$/;"	f	namespace:nissa
unsafe_su3_dag_dirac_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_dag_dirac_prod_spincolor(spincolor out,const su3 U,const dirac_matr *m,const spincolor in)$/;"	f	namespace:nissa
unsafe_su3_dag_dirac_summ_the_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_dag_dirac_summ_the_prod_spincolor(spincolor out,const su3 U,const dirac_matr *m,const spincolor in)$/;"	f	namespace:nissa
unsafe_su3_dag_prod_color	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_dag_prod_color(color a,const su3 b,const color c)$/;"	f	namespace:nissa
unsafe_su3_dag_prod_color_128	src/new_types/float_128.hpp	/^  inline void unsafe_su3_dag_prod_color_128(color_128 a,su3 b,color_128 c)$/;"	f	namespace:nissa
unsafe_su3_dag_prod_colorspinspin	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_dag_prod_colorspinspin(colorspinspin a,const su3 b,const colorspinspin c)$/;"	f	namespace:nissa
unsafe_su3_dag_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_dag_prod_spincolor(spincolor out,const su3 U,const spincolor in)$/;"	f	namespace:nissa
unsafe_su3_dag_prod_su3	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_dag_prod_su3(su3 a,const su3 b,const su3 c,const size_t nr_max=NCOL)$/;"	f	namespace:nissa
unsafe_su3_dag_prod_su3_dag	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_dag_prod_su3_dag(su3 a,const su3 b,const su3 c,const size_t nr_max=NCOL)$/;"	f	namespace:nissa
unsafe_su3_dag_prod_su3spinspin	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_dag_prod_su3spinspin(su3spinspin a,const su3 b,const su3spinspin c)$/;"	f	namespace:nissa
unsafe_su3_dirac_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_dirac_prod_spincolor(spincolor out,const su3 U,const dirac_matr *m,const spincolor in)$/;"	f	namespace:nissa
unsafe_su3_dirac_subt_the_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_dirac_subt_the_prod_spincolor(spincolor out,const su3 U,const dirac_matr *m,const spincolor in)$/;"	f	namespace:nissa
unsafe_su3_dirac_summ_the_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_dirac_summ_the_prod_spincolor(spincolor out,const su3 U,const dirac_matr *m,const spincolor in)$/;"	f	namespace:nissa
unsafe_su3_explicit_inverse	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_explicit_inverse(su3 invU,const su3 U)$/;"	f	namespace:nissa
unsafe_su3_hermitian	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_hermitian(su3 out,const su3 in)$/;"	f	namespace:nissa
unsafe_su3_hermitian_prod_double	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_hermitian_prod_double(su3 a,const su3 b,const double r)$/;"	f	namespace:nissa
unsafe_su3_prod_color	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_prod_color(color a,const su3 b,const color c)$/;"	f	namespace:nissa
unsafe_su3_prod_color_128	src/new_types/float_128.hpp	/^  inline void unsafe_su3_prod_color_128(color_128 a,su3 b,color_128 c)$/;"	f	namespace:nissa
unsafe_su3_prod_colorspinspin	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_prod_colorspinspin(colorspinspin a,const su3 b,const colorspinspin c)$/;"	f	namespace:nissa
unsafe_su3_prod_complex	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_prod_complex(su3 a,const su3 b,const complex c)$/;"	f	namespace:nissa
unsafe_su3_prod_complex_conj	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_prod_complex_conj(su3 a,const su3 b,const complex c)$/;"	f	namespace:nissa
unsafe_su3_prod_spincolor	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_prod_spincolor(spincolor out,const su3 U,const spincolor in)$/;"	f	namespace:nissa
unsafe_su3_prod_su3	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_prod_su3(su3 a,const su3 b,const su3 c,const size_t nr_max=NCOL)$/;"	f	namespace:nissa
unsafe_su3_prod_su3_dag	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_prod_su3_dag(su3 a,const su3 b,const su3 c,const size_t nr_max=NCOL)$/;"	f	namespace:nissa
unsafe_su3_prod_su3spinspin	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_prod_su3spinspin(su3spinspin a,const su3 b,const su3spinspin c)$/;"	f	namespace:nissa
unsafe_su3_sqrt	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_sqrt(su3 x,const su3 y)$/;"	f	namespace:nissa
unsafe_su3_subt_su3_dag	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_subt_su3_dag(su3 a,const su3 b,const su3 c)$/;"	f	namespace:nissa
unsafe_su3_summ_su3_dag	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_summ_su3_dag(su3 a,const su3 b,const su3 c)$/;"	f	namespace:nissa
unsafe_su3_taylor_exponentiate	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_taylor_exponentiate(su3 out,const su3 in,size_t order)$/;"	f	namespace:nissa
unsafe_su3_traceless_anti_hermitian_part	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_traceless_anti_hermitian_part(su3 out,const su3 in)$/;"	f	namespace:nissa
unsafe_su3_traceless_hermitian_part	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_traceless_hermitian_part(su3 out,const su3 in)$/;"	f	namespace:nissa
unsafe_su3_transpose	src/new_types/su3_op.hpp	/^  inline void unsafe_su3_transpose(su3 out,const su3 in)$/;"	f	namespace:nissa
unsafe_su3spinspin_prod_complex	src/new_types/su3_op.hpp	/^  inline void unsafe_su3spinspin_prod_complex(su3spinspin out,const su3spinspin in,const complex factor)$/;"	f	namespace:nissa
unsafe_vir_halfspincolor_halfspincolor_dag_times_vir_halfspincolor	src/bgq/clover_term_bgq.hpp	/^  inline void unsafe_vir_halfspincolor_halfspincolor_dag_times_vir_halfspincolor(vir_halfspincolor out,vir_halfspincolor_halfspincolor invCl,vir_halfspincolor in)$/;"	f	namespace:nissa
unsafe_vir_halfspincolor_halfspincolor_times_vir_halfspincolor	src/bgq/clover_term_bgq.hpp	/^  inline void unsafe_vir_halfspincolor_halfspincolor_times_vir_halfspincolor(vir_halfspincolor out,vir_halfspincolor_halfspincolor invCl,vir_halfspincolor in)$/;"	f	namespace:nissa
unset_Leb_geometry	src/geometry/geometry_Leb.cpp	/^  void unset_Leb_geometry()$/;"	f	namespace:nissa
unset_eo_geometry	src/geometry/geometry_eo.cpp	/^  void unset_eo_geometry()$/;"	f	namespace:nissa
unset_lx_geometry	src/geometry/geometry_lx.cpp	/^  void unset_lx_geometry()$/;"	f	namespace:nissa
unset_mapped_types	src/io/ILDG_File.cpp	/^  void unset_mapped_types(MPI_Datatype &etype,MPI_Datatype &ftype)$/;"	f	namespace:nissa
unset_vect_flag	src/base/vectors.cpp	/^  void unset_vect_flag(void *v,unsigned int flag)$/;"	f	namespace:nissa
unset_vect_flag_non_blocking	src/base/vectors.cpp	/^  void unset_vect_flag_non_blocking(void *v,unsigned int flag)$/;"	f	namespace:nissa
unset_vir_geometry	src/geometry/geometry_vir.cpp	/^  void unset_vir_geometry()$/;"	f	namespace:nissa
update	src/new_types/metadynamics.cpp	/^  void meta_pars_t::update(int isweep,double Q)$/;"	f	class:nissa::meta_pars_t
update	src/operations/smearing/recursive_Wflower.hpp	/^    int update(int nWflow,bool *dirs=all_dirs,int staple_min_dir=0)$/;"	f	struct:nissa::recursive_Wflower_t
update_arg	src/operations/smearing/Wflow.cpp	/^    void update_arg(quad_su3 *arg,quad_su3 *conf,double dt,bool *dirs,int iter)$/;"	f	namespace:nissa::Wflow
update_conf	src/operations/smearing/Wflow.cpp	/^    void update_conf(quad_su3 *arg,quad_su3 *conf,bool *dirs)$/;"	f	namespace:nissa::Wflow
update_lambda_momenta	projects/cpn/cpn.cpp	/^inline void update_lambda_momenta(double eps)$/;"	f
update_lambda_positions	projects/cpn/cpn.cpp	/^inline void update_lambda_positions(double eps)$/;"	f
update_level	src/operations/smearing/recursive_Wflower.hpp	/^    int update_level(int is,int nWflow,bool *dirs=all_dirs)$/;"	f	struct:nissa::recursive_Wflower_t
update_momenta	projects/cpn/cpn.cpp	/^inline void update_momenta(double eps)$/;"	f
update_positions	projects/cpn/cpn.cpp	/^void update_positions(double eps)$/;"	f
update_setup	src/base/DDalphaAMG_bridge.cpp	/^  void update_setup()$/;"	f	namespace:DD
update_zeta_momenta	projects/cpn/cpn.cpp	/^inline void update_zeta_momenta(double eps)$/;"	f
update_zeta_positions	projects/cpn/cpn.cpp	/^inline void update_zeta_positions(double eps)$/;"	f
usage	projects/reno_const/fourier.c	/^static void usage(void)$/;"	f	file:
use_128_bit_precision	src/new_types/float_128.hpp	/^  EXTERN_FLOAT_128 int use_128_bit_precision;$/;"	m	namespace:nissa
use_Facc	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^    int use_Facc;$/;"	m	struct:nissa::pure_gauge_evol_pars_t
use_Leb_geom	src/geometry/geometry_Leb.hpp	/^  EXTERN_GEOMETRY_LEB int use_Leb_geom;$/;"	m	namespace:nissa
use_adaptative_search	src/operations/gauge_fixing.hpp	/^    int use_adaptative_search;$/;"	m	struct:nissa::LC_gauge_fixing_pars_t
use_adjoint_flow	src/operations/stag/spinpol.hpp	/^    int use_adjoint_flow;$/;"	m	struct:nissa::spinpol_meas_pars_t
use_arpack	src/eigenvalues/eigenvalues_arpack.cpp	/^  int use_arpack;$/;"	m	namespace:nissa	file:
use_async_communications	src/communicate/communicate.hpp	/^  EXTERN_COMMUNICATE int use_async_communications;$/;"	m	namespace:nissa
use_cgm	projects/reno_const/RIMOM.cpp	/^int use_cgm;$/;"	v
use_cgm_S0	projects/semileptonic/semileptonic_smeared.cpp	/^int use_cgm_S0,use_cgm_S1;$/;"	v
use_cgm_S1	projects/semileptonic/semileptonic_smeared.cpp	/^int use_cgm_S0,use_cgm_S1;$/;"	v
use_eo_geom	src/geometry/geometry_eo.hpp	/^  EXTERN_GEOMETRY_EO int use_eo_geom;$/;"	m	namespace:nissa
use_ferm_conf_for_gluons	src/operations/stag/spinpol.hpp	/^    int use_ferm_conf_for_gluons;$/;"	m	struct:nissa::spinpol_meas_pars_t
use_fft_acc	src/operations/gauge_fixing.hpp	/^    int use_fft_acc;$/;"	m	struct:nissa::LC_gauge_fixing_pars_t
use_generalized_cg	src/operations/gauge_fixing.hpp	/^    int use_generalized_cg;$/;"	m	struct:nissa::LC_gauge_fixing_pars_t
use_hmc	src/hmc/gauge/pure_gauge_Omelyan_integrator.hpp	/^    int use_hmc;$/;"	m	struct:nissa::pure_gauge_evol_pars_t
use_hugepages	src/communicate/communicate.hpp	/^  EXTERN_COMMUNICATE int use_hugepages;$/;"	m	namespace:nissa
use_new_contraction_layout	projects/semileptonic/semileptonic_smeared.cpp	/^int use_new_contraction_layout;$/;"	v
use_new_contraction_layout	tools/clusterize2.cpp	/^int REIM,use_new_contraction_layout,binary_out;$/;"	v
use_smooth	src/operations/gaugeconf.hpp	/^    int use_smooth;$/;"	m	struct:nissa::gauge_obs_meas_pars_t
valid_partition_lister_t	tools/find_best_vir_partitioning/find.cpp	/^  valid_partition_lister_t(coords4D_t sides,int NR) : NR(NR)$/;"	f	struct:valid_partition_lister_t
valid_partition_lister_t	tools/find_best_vir_partitioning/find.cpp	/^struct valid_partition_lister_t$/;"	s	file:
vbord_vol	src/geometry/geometry_vir.hpp	/^  EXTERN_GEOMETRY_VIR int vbord_vol,vbord_volh;$/;"	m	namespace:nissa
vbord_volh	src/geometry/geometry_vir.hpp	/^  EXTERN_GEOMETRY_VIR int vbord_vol,vbord_volh;$/;"	m	namespace:nissa
vdir_bord_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t vdir_bord_vol,vdir_bord_volh;$/;"	m	namespace:nissa
vdir_bord_volh	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t vdir_bord_vol,vdir_bord_volh;$/;"	m	namespace:nissa
vec_perm_el	src/bgq/intrinsic/mergesplit.hpp	27;"	d
vect_content_fprintf	src/base/vectors.cpp	/^  void vect_content_fprintf(FILE *f,void *vec)$/;"	f	namespace:nissa
vect_content_fprintf	src/base/vectors.cpp	/^  void vect_content_fprintf(FILE *fout,nissa_vect *vect)$/;"	f	namespace:nissa
vect_content_printf	src/base/vectors.cpp	/^  void vect_content_printf(nissa_vect *vect)$/;"	f	namespace:nissa
vect_content_printf	src/base/vectors.cpp	/^  void vect_content_printf(void *vec)$/;"	f	namespace:nissa
vector_copy	src/base/vectors.cpp	/^  void vector_copy(void *a,const void *b)$/;"	f	namespace:nissa
vector_gather	src/operations/vector_gather.cpp	/^  void vector_gather(char *glb,char *loc,size_t bps,int dest_rank)$/;"	f	namespace:nissa
vector_get_str	projects/generate_confs/driver.hpp	/^    template <class T> std::string vector_get_str(std::vector<T> &v,bool full)$/;"	f	class:nissa::driver_t
vector_index_fct	src/base/DDalphaAMG_bridge.cpp	/^  static int vector_index_fct(int t,int z,int y,int x)$/;"	f	namespace:DD
vector_remap_t	src/operations/remap_vector.cpp	/^  vector_remap_t::vector_remap_t(int nel_fr,void (*index)(int &irank_to,int &iel_to,int iel_fr,void *pars),void *pars)$/;"	f	class:nissa::vector_remap_t
vector_remap_t	src/operations/remap_vector.hpp	/^  struct vector_remap_t : all_to_all_comm_t$/;"	s	namespace:nissa
vector_reset	src/base/vectors.cpp	/^  void vector_reset(void *a)$/;"	f	namespace:nissa
verb_call	src/routines/ios.hpp	/^  EXTERN_IOS int verb_call;$/;"	m	namespace:nissa
verbosity_lv	src/routines/ios.hpp	/^  EXTERN_IOS int verbosity_lv;$/;"	m	namespace:nissa
verbosity_lv1_master_printf	src/routines/ios.hpp	45;"	d
verbosity_lv2_master_printf	src/routines/ios.hpp	46;"	d
verbosity_lv3_master_printf	src/routines/ios.hpp	47;"	d
version	src/io/ILDG_File.hpp	/^    uint16_t version;$/;"	m	struct:nissa::ILDG_header
version	tools/conf_transform/edit/ILDG_File_light.hpp	/^  uint16_t version;$/;"	m	struct:ILDG_header
view_pos	src/io/ILDG_File.hpp	/^    MPI_Offset view_pos;$/;"	m	struct:nissa::ILDG_File_view
vir_clover_term_t	src/new_types/su3.hpp	/^  typedef vir_su3 vir_clover_term_t[4];$/;"	t	namespace:nissa
vir_color	src/new_types/su3.hpp	/^  typedef vir_complex vir_color[NCOL];$/;"	t	namespace:nissa
vir_color_128	src/new_types/float_128.hpp	/^  typedef vir_complex_128 vir_color_128[NCOL];$/;"	t	namespace:nissa
vir_color_halfspincolor	src/new_types/su3.hpp	/^  typedef vir_halfspincolor vir_color_halfspincolor[NCOL];$/;"	t	namespace:nissa
vir_complex	src/new_types/complex.hpp	/^  typedef complex vir_complex[2];$/;"	t	namespace:nissa
vir_complex_128	src/new_types/float_128.hpp	/^  typedef complex_128 vir_complex_128[2];$/;"	t	namespace:nissa
vir_geom_inited	src/geometry/geometry_vir.hpp	/^  EXTERN_GEOMETRY_VIR int vir_geom_inited;$/;"	m	namespace:nissa
vir_halfspin	src/new_types/su3.hpp	/^  typedef vir_complex vir_halfspin[2];$/;"	t	namespace:nissa
vir_halfspincolor	src/new_types/su3.hpp	/^  typedef vir_color vir_halfspincolor[2];$/;"	t	namespace:nissa
vir_halfspincolor	src/new_types/su3.hpp	/^  typedef vir_color vir_halfspincolor[NDIRAC\/2];$/;"	t	namespace:nissa
vir_halfspincolor_halfspincolor	src/new_types/su3.hpp	/^  typedef vir_color_halfspincolor vir_halfspincolor_halfspincolor[NDIRAC\/2];$/;"	t	namespace:nissa
vir_inv_clover_term_t	src/new_types/su3.hpp	/^  typedef vir_halfspincolor_halfspincolor vir_inv_clover_term_t[2];$/;"	t	namespace:nissa
vir_loc_size	src/geometry/geometry_vir.hpp	/^  EXTERN_GEOMETRY_VIR int vir_loc_size[4];$/;"	m	namespace:nissa
vir_oct_su3	src/new_types/su3.hpp	/^  typedef vir_su3 vir_oct_su3[2*NDIM];$/;"	t	namespace:nissa
vir_oct_su3_128	src/new_types/float_128.hpp	/^  typedef vir_su3_128 vir_oct_su3_128[8];$/;"	t	namespace:nissa
vir_quad_su3	src/new_types/su3.hpp	/^  typedef vir_su3 vir_quad_su3[NDIM];$/;"	t	namespace:nissa
vir_single_color	src/new_types/su3.hpp	/^  typedef vir_single_complex vir_single_color[NCOL];$/;"	t	namespace:nissa
vir_single_complex	src/new_types/complex.hpp	/^  typedef single_complex vir_single_complex[2];$/;"	t	namespace:nissa
vir_single_halfspincolor	src/new_types/su3.hpp	/^  typedef vir_single_color vir_single_halfspincolor[2];$/;"	t	namespace:nissa
vir_single_oct_su3	src/new_types/su3.hpp	/^  typedef vir_single_su3 vir_single_oct_su3[8];$/;"	t	namespace:nissa
vir_single_spincolor	src/new_types/su3.hpp	/^  typedef vir_single_color vir_single_spincolor[NDIRAC];$/;"	t	namespace:nissa
vir_single_su3	src/new_types/su3.hpp	/^  typedef vir_single_color vir_single_su3[NCOL];$/;"	t	namespace:nissa
vir_spincolor	src/new_types/su3.hpp	/^  typedef vir_color vir_spincolor[NDIRAC];$/;"	t	namespace:nissa
vir_spincolor_128	src/new_types/float_128.hpp	/^  typedef vir_color_128 vir_spincolor_128[NDIRAC];$/;"	t	namespace:nissa
vir_su3	src/new_types/su3.hpp	/^  typedef vir_color vir_su3[NCOL];$/;"	t	namespace:nissa
vir_su3_128	src/new_types/float_128.hpp	/^  typedef vir_color_128 vir_su3_128[NCOL];$/;"	t	namespace:nissa
vireo_of_loceo	src/geometry/geometry_vir.hpp	/^  EXTERN_GEOMETRY_VIR int *vireo_of_loceo[2],*loceo_of_vireo[2];$/;"	m	namespace:nissa
vireo_of_loclx	src/geometry/geometry_vir.hpp	/^  EXTERN_GEOMETRY_VIR int *loclx_of_vireo[2],*vireo_of_loclx;$/;"	m	namespace:nissa
virevn_or_odd_clover_term_t_remap_to_evn_or_odd	src/geometry/geometry_vir.hpp	/^  inline void virevn_or_odd_clover_term_t_remap_to_evn_or_odd(clover_term_t *out,vir_clover_term_t *in,int par)$/;"	f	namespace:nissa
virlx_clover_term_t_remap_to_lx	src/geometry/geometry_vir.hpp	/^  inline void virlx_clover_term_t_remap_to_lx(clover_term_t *out,vir_clover_term_t *in)$/;"	f	namespace:nissa
virlx_hopping_matrix_output_pos	src/bgq/Wilson_hopping_matrix_lx_bgq.hpp	/^  EXTERN_HOPPING_MATRIX_BGQ_LX two_stage_computation_pos_t virlx_hopping_matrix_output_pos;$/;"	m	namespace:nissa
virlx_of_loclx	src/geometry/geometry_vir.hpp	/^  EXTERN_GEOMETRY_VIR int *virlx_of_loclx,*loclx_of_virlx;$/;"	m	namespace:nissa
viroe_or_vireo_hopping_matrix_output_pos	src/bgq/Wilson_hopping_matrix_lx_bgq.hpp	/^  EXTERN_HOPPING_MATRIX_BGQ_LX two_stage_computation_pos_t viroe_or_vireo_hopping_matrix_output_pos[2];$/;"	m	namespace:nissa
vn0lx_of_loclx	src/geometry/geometry_vir.cpp	/^  int vn0lx_of_loclx(int lx)$/;"	f	namespace:nissa
vnode_eo_offset	src/geometry/geometry_vir.hpp	/^  EXTERN_GEOMETRY_VIR int vnode_lx_offset,vnode_eo_offset;$/;"	m	namespace:nissa
vnode_lx_offset	src/geometry/geometry_vir.hpp	/^  EXTERN_GEOMETRY_VIR int vnode_lx_offset,vnode_eo_offset;$/;"	m	namespace:nissa
vnode_of_loceo	src/geometry/geometry_vir.cpp	/^  inline int vnode_of_loceo(int par,int eo)$/;"	f	namespace:nissa
vnode_of_loclx	src/geometry/geometry_vir.cpp	/^  inline int vnode_of_loclx(int lx)$/;"	f	namespace:nissa
vnode_paral_dir	src/geometry/geometry_vir.hpp	/^  EXTERN_GEOMETRY_VIR int vnode_paral_dir;$/;"	m	namespace:nissa
vol_of_lx	src/geometry/geometry_lx.cpp	/^  int vol_of_lx(coords size)$/;"	f	namespace:nissa
vres	src/free_theory/free_theory_types.hpp	/^    int32_t vres;$/;"	m	struct:nissa::bmpfile_info_header
vsurf_vol	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t vsurf_vol,vsurf_volh;$/;"	m	namespace:nissa
vsurf_volh	src/geometry/geometry_lx.hpp	/^  EXTERN_GEOMETRY_LX int64_t vsurf_vol,vsurf_volh;$/;"	m	namespace:nissa
w	src/new_types/su3_op.hpp	/^    double u,w,theta;$/;"	m	struct:nissa::hermitian_exp_ingredients
w128_t	src/new_types/dsfmt.hpp	/^    union w128_t$/;"	u	class:nissa::dsfmt_t
wait_for_delayed_threads	src/routines/thread.cpp	/^  void wait_for_delayed_threads()$/;"	f	namespace:nissa
wall_name	projects/eight_BK/smeared_BK_all_in_one.cpp	/^char **wall_name;$/;"	v
wall_time	projects/eight_BK/smeared_BK_all_in_one.cpp	/^int wall_time,ntot_inv=0;$/;"	v
wall_time	projects/g/g.cpp	/^int wall_time;$/;"	v
wall_time	projects/ib/conf.hpp	/^  EXTERN_CONF double tot_prog_time,wall_time;$/;"	m	namespace:nissa
wall_time	projects/ib/mel.cpp	/^double tot_prog_time=0,wall_time;$/;"	v
wall_time	projects/reno_const/RIMOM.cpp	/^int wall_time;$/;"	v
wall_time	projects/semileptonic/gevp.cpp	/^double wall_time,conf_smear_time=0,tot_prog_time=0,inv_time=0,smear_time=0,corr_time=0;$/;"	v
wall_time	projects/semileptonic/gevp_3pts.cpp	/^double wall_time,conf_smear_time=0,tot_prog_time=0,inv_time=0,smear_time=0,corr_time=0;$/;"	v
wall_time	projects/semileptonic/new_version/new_semileptonic.cpp	/^int wall_time,seed,ape_niter;$/;"	v
wall_time	projects/semileptonic/new_version/test.cpp	/^int wall_time;$/;"	v
wall_time	projects/semileptonic/semileptonic_smeared.cpp	/^int wall_time;$/;"	v
wall_time	projects/semileptonic/test_proj.cpp	/^double kappa,mass,residue,init_time,wall_time;$/;"	v
wall_time	work_in_prog/semileptonic_smeared_point_source_tens/semileptonic_smeared_tens.cpp	/^int wall_time;$/;"	v
walltime	projects/generate_confs/driver.hpp	/^    int walltime;$/;"	m	class:nissa::driver_t
walltime	projects/generate_confs/generate_quenched.cpp	/^double walltime=0;$/;"	v
walltime_seed_get_str	projects/generate_confs/driver.hpp	/^    std::string walltime_seed_get_str(bool full)$/;"	f	class:nissa::driver_t
warn_if_not_communicated	src/communicate/communicate.hpp	/^  EXTERN_COMMUNICATE int warn_if_not_communicated;$/;"	m	namespace:nissa
warn_if_not_disallocated	src/base/vectors.hpp	/^  EXTERN_VECTORS int warn_if_not_disallocated;$/;"	m	namespace:nissa
watusso_meas	build/projects/generate_confs/parser.cpp	/^    nissa::watusso_meas_pars_t *watusso_meas;$/;"	m	union:YYSTYPE	file:
watusso_meas	build/projects/generate_confs/parser.hpp	/^    nissa::watusso_meas_pars_t *watusso_meas;$/;"	m	union:YYSTYPE
watusso_meas	projects/generate_confs/driver.hpp	/^    std::vector<watusso_meas_pars_t> watusso_meas;$/;"	m	class:nissa::driver_t
watusso_meas_pars_t	src/operations/su3_paths/watusso.hpp	/^    watusso_meas_pars_t() :$/;"	f	struct:nissa::watusso_meas_pars_t
watusso_meas_pars_t	src/operations/su3_paths/watusso.hpp	/^  struct watusso_meas_pars_t$/;"	s	namespace:nissa
weights	src/new_types/rat_approx.hpp	/^    std::vector<double> weights;$/;"	m	struct:nissa::rat_approx_t
well_tempering	src/new_types/metadynamics.hpp	/^    double well_tempering;$/;"	m	struct:nissa::meta_pars_t
which	src/eigenvalues/eigenvalues_arpack.hpp	/^    EXTERN_ARPACK char which[2][3] INIT_ARPACK_TO(={"SM","LM"});$/;"	m	namespace:nissa::arpack_data
which_r_S0	projects/semileptonic/semileptonic_smeared.cpp	/^int which_r_S0;$/;"	v
whichpp_r	projects/semileptonic/new_version/new_types.hpp	/^  TMR whichpp_r;$/;"	m	struct:prop_group_t
width	projects/ib/pars.hpp	/^    coords width;$/;"	m	struct:nissa::fft_mom_range_t
width	src/free_theory/free_theory_types.hpp	/^    int32_t width;$/;"	m	struct:nissa::bmpfile_info_header
width	src/new_types/metadynamics.hpp	/^    double width;$/;"	m	struct:nissa::meta_pars_t
work_in_physical_base	projects/reno_const/RIMOM.cpp	/^int work_in_physical_base;$/;"	v
write	projects/semileptonic/new_version/new_types.cpp	/^void prop_group_t::write(const char *ext_template_path,int save_reconstructing,int is_rotated,gauge_conf_t &gauge_conf)$/;"	f	class:prop_group_t
write	projects/semileptonic/new_version/new_types.hpp	/^  void write(const chppar *name) {write_colorspinspin(name,eta,64);}$/;"	f	struct:in_source_t
write	src/io/buffer.hpp	/^    std::ostream& write(const char *s,std::streamsize n){return st.write(s,n);}$/;"	f	struct:nissa::buffer_t
write	src/io/input.cpp	/^      void write()$/;"	f	struct:nissa::__anon9::triple_tag
write_all_propagators	projects/reno_const/RIMOM.cpp	/^void write_all_propagators(const char *name,int prec)$/;"	f
write_allaveraged_demo	projects/x/progs/correct.cpp	/^void write_allaveraged_demo(const char *path,double *c)$/;"	f
write_bmpfile	projects/x/src/routines/bmp.cpp	/^void write_bmpfile(const char *path,bmpfile &out)$/;"	f
write_complex	tools/conf_transform/convert/ildg_to_gpu.cpp	/^void write_complex(FILE *out,complex in)$/;"	f
write_conf	projects/cpn/cpn.cpp	/^void write_conf(const char *path,int iconf)$/;"	f
write_conf	projects/generate_confs/generate.cpp	/^void write_conf(std::string path,quad_su3 **conf)$/;"	f
write_conf	projects/generate_confs/generate_quenched.cpp	/^void write_conf(const char *path)$/;"	f
write_conf_time	projects/generate_confs/generate.cpp	/^double write_conf_time=0;$/;"	v
write_corr	projects/semileptonic/gevp_3pts.cpp	/^void write_corr()$/;"	f
write_corr16	projects/x/src/routines/read_and_write.cpp	/^void write_corr16(const char *path,corr16 *v,int prec=64)$/;"	f
write_demo	projects/x/progs/correct.cpp	/^void write_demo(const char *path,double *c)$/;"	f
write_fftprop	projects/reno_const/fourier.c	/^int write_fftprop(fftw_complex *****propa, char *s1, int s5){$/;"	f
write_file	projects/x/tests/test_stochastic_source_null_mode.cpp	/^void write_file(const char *path,complex *data)$/;"	f
write_file	tools/ave.cpp	/^void write_file(char *outpath)$/;"	f
write_fixed_conf	projects/reno_const/RIMOM.cpp	/^int write_fixed_conf;$/;"	v
write_ildg_gauge_conf	src/io/writer.cpp	/^  void write_ildg_gauge_conf(std::string path,quad_su3 *in,size_t prec,ILDG_message *mess=NULL)$/;"	f	namespace:nissa
write_nhits_done_so_far	projects/ib/disco.cpp	/^void write_nhits_done_so_far()$/;"	f
write_pars	projects/x/progs/correct.cpp	/^void write_pars(FILE *fout)$/;"	f
write_real_vector	src/io/writer.cpp	/^  void write_real_vector(ILDG_File &file,double *data,size_t nreals_per_site,size_t nbits,const char *header_message,ILDG_message *mess=NULL)$/;"	f	namespace:nissa
write_real_vector	src/io/writer.hpp	/^  template <class T> void write_real_vector(ILDG_File &file,T *data,size_t nbits,const char *header_message,ILDG_message *mess=NULL)$/;"	f	namespace:nissa
write_real_vector	src/io/writer.hpp	/^  template <class T> void write_real_vector(std::string path,T *data,size_t nbits,const char *header_message,ILDG_message *mess=NULL)$/;"	f	namespace:nissa
write_spincolor	src/io/writer.cpp	/^  void write_spincolor(std::string path,spincolor *spinor,size_t prec)$/;"	f	namespace:nissa
write_su3	tools/conf_transform/convert/ildg_to_gpu.cpp	/^void write_su3(FILE *out,su3 in)$/;"	f
write_time	projects/generate_confs/generate_quenched.cpp	/^double write_time=0;$/;"	v
write_unave	projects/x/progs/average_corr.cpp	/^void write_unave(const char *name,corr16 *out)$/;"	f
x_corr_flag	projects/generate_confs/generate_quenched.cpp	/^int x_corr_flag;$/;"	v
x_corr_kappa	projects/generate_confs/generate_quenched.cpp	/^double x_corr_kappa;$/;"	v
x_corr_mass	projects/generate_confs/generate_quenched.cpp	/^double x_corr_mass;$/;"	v
x_corr_nr	projects/generate_confs/generate_quenched.cpp	/^int x_corr_nr;$/;"	v
x_corr_path	projects/generate_confs/generate_quenched.cpp	/^char x_corr_path[200];$/;"	v
x_corr_residue	projects/generate_confs/generate_quenched.cpp	/^double x_corr_residue;$/;"	v
x_corr_time	projects/generate_confs/generate_quenched.cpp	/^double x_corr_time=0;$/;"	v
xi	projects/ib/disco.cpp	/^  enum field_t{J,j,xi,J_tot};$/;"	e	enum:curr::field_t	file:
xi0w	src/new_types/su3_op.hpp	/^    double xi0w;$/;"	m	struct:nissa::hermitian_exp_ingredients
xmax	src/operations/remez/remez_algorithm.hpp	/^    float_high_prec_t *zero,*xmax,*step,*yy,*poly;$/;"	m	struct:nissa::rat_approx_finder_t
yy	src/operations/remez/remez_algorithm.hpp	/^    float_high_prec_t *zero,*xmax,*step,*yy,*poly;$/;"	m	struct:nissa::rat_approx_finder_t
yy_accept	build/projects/generate_confs/tokenizer.cpp	/^static yyconst flex_int16_t yy_accept[800] =$/;"	v	file:
yy_accept	build/projects/semileptonic/tokenize_corr.cpp	/^static yyconst flex_int16_t yy_accept[61] =$/;"	v	file:
yy_at_bol	build/projects/generate_confs/tokenizer.cpp	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_at_bol	build/projects/semileptonic/tokenize_corr.cpp	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	build/projects/generate_confs/tokenizer.cpp	/^static yyconst flex_int16_t yy_base[806] =$/;"	v	file:
yy_base	build/projects/semileptonic/tokenize_corr.cpp	/^static yyconst flex_int16_t yy_base[66] =$/;"	v	file:
yy_bs_column	build/projects/generate_confs/tokenizer.cpp	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_column	build/projects/semileptonic/tokenize_corr.cpp	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	build/projects/generate_confs/tokenizer.cpp	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	build/projects/semileptonic/tokenize_corr.cpp	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	build/projects/generate_confs/tokenizer.cpp	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	build/projects/semileptonic/tokenize_corr.cpp	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	build/projects/generate_confs/tokenizer.cpp	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	build/projects/semileptonic/tokenize_corr.cpp	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_stack	build/projects/generate_confs/tokenizer.cpp	/^    YY_BUFFER_STATE * yy_buffer_stack; \/**< Stack as an array. *\/$/;"	m	struct:yyguts_t	file:
yy_buffer_stack	build/projects/semileptonic/tokenize_corr.cpp	/^    YY_BUFFER_STATE * yy_buffer_stack; \/**< Stack as an array. *\/$/;"	m	struct:yyguts_t	file:
yy_buffer_stack_max	build/projects/generate_confs/tokenizer.cpp	/^    size_t yy_buffer_stack_max; \/**< capacity of stack. *\/$/;"	m	struct:yyguts_t	file:
yy_buffer_stack_max	build/projects/semileptonic/tokenize_corr.cpp	/^    size_t yy_buffer_stack_max; \/**< capacity of stack. *\/$/;"	m	struct:yyguts_t	file:
yy_buffer_stack_top	build/projects/generate_confs/tokenizer.cpp	/^    size_t yy_buffer_stack_top; \/**< index of top of stack. *\/$/;"	m	struct:yyguts_t	file:
yy_buffer_stack_top	build/projects/semileptonic/tokenize_corr.cpp	/^    size_t yy_buffer_stack_top; \/**< index of top of stack. *\/$/;"	m	struct:yyguts_t	file:
yy_buffer_state	build/projects/generate_confs/tokenizer.cpp	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_state	build/projects/semileptonic/tokenize_corr.cpp	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	build/projects/generate_confs/tokenizer.cpp	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_status	build/projects/semileptonic/tokenize_corr.cpp	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	build/projects/generate_confs/tokenizer.cpp	/^    char *yy_c_buf_p;$/;"	m	struct:yyguts_t	file:
yy_c_buf_p	build/projects/semileptonic/tokenize_corr.cpp	/^    char *yy_c_buf_p;$/;"	m	struct:yyguts_t	file:
yy_ch_buf	build/projects/generate_confs/tokenizer.cpp	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_ch_buf	build/projects/semileptonic/tokenize_corr.cpp	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	build/projects/generate_confs/tokenizer.cpp	/^static yyconst flex_int16_t yy_chk[1762] =$/;"	v	file:
yy_chk	build/projects/semileptonic/tokenize_corr.cpp	/^static yyconst flex_int16_t yy_chk[118] =$/;"	v	file:
yy_def	build/projects/generate_confs/tokenizer.cpp	/^static yyconst flex_int16_t yy_def[806] =$/;"	v	file:
yy_def	build/projects/semileptonic/tokenize_corr.cpp	/^static yyconst flex_int16_t yy_def[66] =$/;"	v	file:
yy_did_buffer_switch_on_eof	build/projects/generate_confs/tokenizer.cpp	/^    int yy_did_buffer_switch_on_eof;$/;"	m	struct:yyguts_t	file:
yy_did_buffer_switch_on_eof	build/projects/semileptonic/tokenize_corr.cpp	/^    int yy_did_buffer_switch_on_eof;$/;"	m	struct:yyguts_t	file:
yy_ec	build/projects/generate_confs/tokenizer.cpp	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_ec	build/projects/semileptonic/tokenize_corr.cpp	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fatal_error	build/projects/generate_confs/tokenizer.cpp	/^static void yy_fatal_error (yyconst char* msg , yyscan_t yyscanner)$/;"	f	file:
yy_fatal_error	build/projects/semileptonic/tokenize_corr.cpp	/^static void yy_fatal_error (yyconst char* msg , yyscan_t yyscanner)$/;"	f	file:
yy_fill_buffer	build/projects/generate_confs/tokenizer.cpp	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_fill_buffer	build/projects/semileptonic/tokenize_corr.cpp	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_debug	build/projects/generate_confs/tokenizer.cpp	137;"	d	file:
yy_flex_debug	build/projects/semileptonic/tokenize_corr.cpp	137;"	d	file:
yy_flex_debug_r	build/projects/generate_confs/tokenizer.cpp	/^    int yy_flex_debug_r;$/;"	m	struct:yyguts_t	file:
yy_flex_debug_r	build/projects/semileptonic/tokenize_corr.cpp	/^    int yy_flex_debug_r;$/;"	m	struct:yyguts_t	file:
yy_flex_strlen	build/projects/generate_confs/tokenizer.cpp	/^static int yy_flex_strlen (yyconst char * s , yyscan_t yyscanner)$/;"	f	file:
yy_flex_strlen	build/projects/semileptonic/tokenize_corr.cpp	/^static int yy_flex_strlen (yyconst char * s , yyscan_t yyscanner)$/;"	f	file:
yy_flex_strncpy	build/projects/generate_confs/tokenizer.cpp	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n , yyscan_t yyscanner)$/;"	f	file:
yy_flex_strncpy	build/projects/semileptonic/tokenize_corr.cpp	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n , yyscan_t yyscanner)$/;"	f	file:
yy_get_next_buffer	build/projects/generate_confs/tokenizer.cpp	/^static int yy_get_next_buffer (yyscan_t yyscanner)$/;"	f	file:
yy_get_next_buffer	build/projects/semileptonic/tokenize_corr.cpp	/^static int yy_get_next_buffer (yyscan_t yyscanner)$/;"	f	file:
yy_get_previous_state	build/projects/generate_confs/tokenizer.cpp	/^    static yy_state_type yy_get_previous_state (yyscan_t yyscanner)$/;"	f	file:
yy_get_previous_state	build/projects/semileptonic/tokenize_corr.cpp	/^    static yy_state_type yy_get_previous_state (yyscan_t yyscanner)$/;"	f	file:
yy_hold_char	build/projects/generate_confs/tokenizer.cpp	/^    char yy_hold_char;$/;"	m	struct:yyguts_t	file:
yy_hold_char	build/projects/semileptonic/tokenize_corr.cpp	/^    char yy_hold_char;$/;"	m	struct:yyguts_t	file:
yy_init	build/projects/generate_confs/tokenizer.cpp	/^    int yy_init;$/;"	m	struct:yyguts_t	file:
yy_init	build/projects/semileptonic/tokenize_corr.cpp	/^    int yy_init;$/;"	m	struct:yyguts_t	file:
yy_init_globals	build/projects/generate_confs/tokenizer.cpp	/^static int yy_init_globals (yyscan_t yyscanner)$/;"	f	file:
yy_init_globals	build/projects/semileptonic/tokenize_corr.cpp	/^static int yy_init_globals (yyscan_t yyscanner)$/;"	f	file:
yy_input_file	build/projects/generate_confs/tokenizer.cpp	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_input_file	build/projects/semileptonic/tokenize_corr.cpp	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	build/projects/generate_confs/tokenizer.cpp	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	build/projects/semileptonic/tokenize_corr.cpp	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	build/projects/generate_confs/tokenizer.cpp	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	build/projects/semileptonic/tokenize_corr.cpp	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_lac	build/projects/generate_confs/parser.cpp	/^yy_lac (yytype_int16 *yyesa, yytype_int16 **yyes,$/;"	f	file:
yy_lac_stack_realloc	build/projects/generate_confs/parser.cpp	/^yy_lac_stack_realloc (YYSIZE_T *yycapacity, YYSIZE_T yyadd,$/;"	f	file:
yy_last_accepting_cpos	build/projects/generate_confs/tokenizer.cpp	/^    char* yy_last_accepting_cpos;$/;"	m	struct:yyguts_t	file:
yy_last_accepting_cpos	build/projects/semileptonic/tokenize_corr.cpp	/^    char* yy_last_accepting_cpos;$/;"	m	struct:yyguts_t	file:
yy_last_accepting_state	build/projects/generate_confs/tokenizer.cpp	/^    yy_state_type yy_last_accepting_state;$/;"	m	struct:yyguts_t	file:
yy_last_accepting_state	build/projects/semileptonic/tokenize_corr.cpp	/^    yy_state_type yy_last_accepting_state;$/;"	m	struct:yyguts_t	file:
yy_location_print_	build/projects/generate_confs/parser.cpp	/^yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)$/;"	f	file:
yy_location_print_	build/projects/semileptonic/parse_corr.cpp	/^yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)$/;"	f	file:
yy_meta	build/projects/generate_confs/tokenizer.cpp	/^static yyconst flex_int32_t yy_meta[77] =$/;"	v	file:
yy_meta	build/projects/semileptonic/tokenize_corr.cpp	/^static yyconst flex_int32_t yy_meta[34] =$/;"	v	file:
yy_more_flag	build/projects/generate_confs/tokenizer.cpp	/^    int yy_more_flag;$/;"	m	struct:yyguts_t	file:
yy_more_flag	build/projects/semileptonic/tokenize_corr.cpp	/^    int yy_more_flag;$/;"	m	struct:yyguts_t	file:
yy_more_len	build/projects/generate_confs/tokenizer.cpp	/^    int yy_more_len;$/;"	m	struct:yyguts_t	file:
yy_more_len	build/projects/semileptonic/tokenize_corr.cpp	/^    int yy_more_len;$/;"	m	struct:yyguts_t	file:
yy_n_chars	build/projects/generate_confs/tokenizer.cpp	/^	yy_size_t yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	build/projects/generate_confs/tokenizer.cpp	/^    yy_size_t yy_n_chars;$/;"	m	struct:yyguts_t	file:
yy_n_chars	build/projects/semileptonic/tokenize_corr.cpp	/^	yy_size_t yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	build/projects/semileptonic/tokenize_corr.cpp	/^    yy_size_t yy_n_chars;$/;"	m	struct:yyguts_t	file:
yy_new_buffer	build/projects/generate_confs/tokenizer.cpp	303;"	d	file:
yy_new_buffer	build/projects/semileptonic/tokenize_corr.cpp	303;"	d	file:
yy_nxt	build/projects/generate_confs/tokenizer.cpp	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	build/projects/generate_confs/tokenizer.cpp	/^static yyconst flex_int16_t yy_nxt[1762] =$/;"	v	file:
yy_nxt	build/projects/semileptonic/tokenize_corr.cpp	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	build/projects/semileptonic/tokenize_corr.cpp	/^static yyconst flex_int16_t yy_nxt[118] =$/;"	v	file:
yy_reduce_print	build/projects/generate_confs/parser.cpp	/^yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, nissa::driver_t *driver)$/;"	f	file:
yy_reduce_print	build/projects/semileptonic/parse_corr.cpp	/^yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, two_pts_parser_driver *driver)$/;"	f	file:
yy_set_bol	build/projects/generate_confs/tokenizer.cpp	315;"	d	file:
yy_set_bol	build/projects/semileptonic/tokenize_corr.cpp	315;"	d	file:
yy_set_interactive	build/projects/generate_confs/tokenizer.cpp	305;"	d	file:
yy_set_interactive	build/projects/semileptonic/tokenize_corr.cpp	305;"	d	file:
yy_size_t	build/projects/generate_confs/tokenizer.cpp	/^typedef size_t yy_size_t;$/;"	t	file:
yy_size_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef size_t yy_size_t;$/;"	t	file:
yy_stack_print	build/projects/generate_confs/parser.cpp	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:
yy_stack_print	build/projects/semileptonic/parse_corr.cpp	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:
yy_start	build/projects/generate_confs/tokenizer.cpp	/^    int yy_start;$/;"	m	struct:yyguts_t	file:
yy_start	build/projects/semileptonic/tokenize_corr.cpp	/^    int yy_start;$/;"	m	struct:yyguts_t	file:
yy_start_stack	build/projects/generate_confs/tokenizer.cpp	/^    int *yy_start_stack;$/;"	m	struct:yyguts_t	file:
yy_start_stack	build/projects/semileptonic/tokenize_corr.cpp	/^    int *yy_start_stack;$/;"	m	struct:yyguts_t	file:
yy_start_stack_depth	build/projects/generate_confs/tokenizer.cpp	/^    int yy_start_stack_depth;$/;"	m	struct:yyguts_t	file:
yy_start_stack_depth	build/projects/semileptonic/tokenize_corr.cpp	/^    int yy_start_stack_depth;$/;"	m	struct:yyguts_t	file:
yy_start_stack_ptr	build/projects/generate_confs/tokenizer.cpp	/^    int yy_start_stack_ptr;$/;"	m	struct:yyguts_t	file:
yy_start_stack_ptr	build/projects/semileptonic/tokenize_corr.cpp	/^    int yy_start_stack_ptr;$/;"	m	struct:yyguts_t	file:
yy_state_type	build/projects/generate_confs/tokenizer.cpp	/^typedef int yy_state_type;$/;"	t	file:
yy_state_type	build/projects/semileptonic/tokenize_corr.cpp	/^typedef int yy_state_type;$/;"	t	file:
yy_symbol_print	build/projects/generate_confs/parser.cpp	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, nissa::driver_t *driver)$/;"	f	file:
yy_symbol_print	build/projects/semileptonic/parse_corr.cpp	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, two_pts_parser_driver *driver)$/;"	f	file:
yy_symbol_value_print	build/projects/generate_confs/parser.cpp	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, nissa::driver_t *driver)$/;"	f	file:
yy_symbol_value_print	build/projects/semileptonic/parse_corr.cpp	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, two_pts_parser_driver *driver)$/;"	f	file:
yy_trans_info	build/projects/generate_confs/tokenizer.cpp	/^struct yy_trans_info$/;"	s	file:
yy_trans_info	build/projects/semileptonic/tokenize_corr.cpp	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	build/projects/generate_confs/tokenizer.cpp	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state , yyscan_t yyscanner)$/;"	f	file:
yy_try_NUL_trans	build/projects/semileptonic/tokenize_corr.cpp	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state , yyscan_t yyscanner)$/;"	f	file:
yy_verify	build/projects/generate_confs/tokenizer.cpp	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yy_verify	build/projects/semileptonic/tokenize_corr.cpp	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	build/projects/generate_confs/parser.cpp	/^union yyalloc$/;"	u	file:
yyalloc	build/projects/semileptonic/parse_corr.cpp	/^union yyalloc$/;"	u	file:
yycheck	build/projects/generate_confs/parser.cpp	/^static const yytype_int16 yycheck[] =$/;"	v	file:
yycheck	build/projects/semileptonic/parse_corr.cpp	/^static const yytype_int8 yycheck[] =$/;"	v	file:
yyclearin	build/projects/generate_confs/parser.cpp	1277;"	d	file:
yyclearin	build/projects/semileptonic/parse_corr.cpp	609;"	d	file:
yycolumn	build/projects/generate_confs/tokenizer.cpp	136;"	d	file:
yycolumn	build/projects/semileptonic/tokenize_corr.cpp	136;"	d	file:
yyconst	build/projects/generate_confs/tokenizer.cpp	107;"	d	file:
yyconst	build/projects/generate_confs/tokenizer.cpp	109;"	d	file:
yyconst	build/projects/semileptonic/tokenize_corr.cpp	107;"	d	file:
yyconst	build/projects/semileptonic/tokenize_corr.cpp	109;"	d	file:
yydebug	build/projects/generate_confs/parser.cpp	/^int yydebug;$/;"	v
yydebug	build/projects/generate_confs/parser.cpp	66;"	d	file:
yydebug	build/projects/semileptonic/parse_corr.cpp	/^int yydebug;$/;"	v
yydebug	build/projects/semileptonic/parse_corr.cpp	66;"	d	file:
yydefact	build/projects/generate_confs/parser.cpp	/^static const yytype_uint16 yydefact[] =$/;"	v	file:
yydefact	build/projects/semileptonic/parse_corr.cpp	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	build/projects/generate_confs/parser.cpp	/^static const yytype_int16 yydefgoto[] =$/;"	v	file:
yydefgoto	build/projects/semileptonic/parse_corr.cpp	/^static const yytype_int8 yydefgoto[] =$/;"	v	file:
yydestruct	build/projects/generate_confs/parser.cpp	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, nissa::driver_t *driver)$/;"	f	file:
yydestruct	build/projects/semileptonic/parse_corr.cpp	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, two_pts_parser_driver *driver)$/;"	f	file:
yyerrok	build/projects/generate_confs/parser.cpp	1276;"	d	file:
yyerrok	build/projects/semileptonic/parse_corr.cpp	608;"	d	file:
yyerror	build/projects/generate_confs/parser.cpp	65;"	d	file:
yyerror	build/projects/semileptonic/parse_corr.cpp	65;"	d	file:
yyextra	build/projects/generate_confs/tokenizer.cpp	132;"	d	file:
yyextra	build/projects/semileptonic/tokenize_corr.cpp	132;"	d	file:
yyextra_r	build/projects/generate_confs/tokenizer.cpp	/^    YY_EXTRA_TYPE yyextra_r;$/;"	m	struct:yyguts_t	file:
yyextra_r	build/projects/semileptonic/tokenize_corr.cpp	/^    YY_EXTRA_TYPE yyextra_r;$/;"	m	struct:yyguts_t	file:
yyguts_t	build/projects/generate_confs/tokenizer.cpp	/^struct yyguts_t$/;"	s	file:
yyguts_t	build/projects/semileptonic/tokenize_corr.cpp	/^struct yyguts_t$/;"	s	file:
yyin	build/projects/generate_confs/tokenizer.cpp	130;"	d	file:
yyin	build/projects/semileptonic/tokenize_corr.cpp	130;"	d	file:
yyin_r	build/projects/generate_confs/tokenizer.cpp	/^    FILE *yyin_r, *yyout_r;$/;"	m	struct:yyguts_t	file:
yyin_r	build/projects/semileptonic/tokenize_corr.cpp	/^    FILE *yyin_r, *yyout_r;$/;"	m	struct:yyguts_t	file:
yyinput	build/projects/generate_confs/tokenizer.cpp	/^    static int yyinput (yyscan_t yyscanner)$/;"	f	file:
yyinput	build/projects/semileptonic/tokenize_corr.cpp	/^    static int yyinput (yyscan_t yyscanner)$/;"	f	file:
yyleng	build/projects/generate_confs/tokenizer.cpp	133;"	d	file:
yyleng	build/projects/semileptonic/tokenize_corr.cpp	133;"	d	file:
yyleng_r	build/projects/generate_confs/tokenizer.cpp	/^    yy_size_t yyleng_r;$/;"	m	struct:yyguts_t	file:
yyleng_r	build/projects/semileptonic/tokenize_corr.cpp	/^    yy_size_t yyleng_r;$/;"	m	struct:yyguts_t	file:
yyless	build/projects/generate_confs/tokenizer.cpp	186;"	d	file:
yyless	build/projects/generate_confs/tokenizer.cpp	3122;"	d	file:
yyless	build/projects/generate_confs/tokenizer.cpp	3123;"	d	file:
yyless	build/projects/semileptonic/tokenize_corr.cpp	1805;"	d	file:
yyless	build/projects/semileptonic/tokenize_corr.cpp	1806;"	d	file:
yyless	build/projects/semileptonic/tokenize_corr.cpp	186;"	d	file:
yylex	build/projects/generate_confs/parser.cpp	64;"	d	file:
yylex	build/projects/semileptonic/parse_corr.cpp	64;"	d	file:
yylineno	build/projects/generate_confs/tokenizer.cpp	135;"	d	file:
yylineno	build/projects/semileptonic/tokenize_corr.cpp	135;"	d	file:
yylineno_r	build/projects/generate_confs/tokenizer.cpp	/^    int yylineno_r;$/;"	m	struct:yyguts_t	file:
yylineno_r	build/projects/semileptonic/tokenize_corr.cpp	/^    int yylineno_r;$/;"	m	struct:yyguts_t	file:
yylloc	build/projects/generate_confs/tokenizer.cpp	1190;"	d	file:
yylloc	build/projects/semileptonic/tokenize_corr.cpp	562;"	d	file:
yylloc_r	build/projects/generate_confs/tokenizer.cpp	/^    YYLTYPE * yylloc_r;$/;"	m	struct:yyguts_t	file:
yylloc_r	build/projects/semileptonic/tokenize_corr.cpp	/^    YYLTYPE * yylloc_r;$/;"	m	struct:yyguts_t	file:
yyls_alloc	build/projects/generate_confs/parser.cpp	/^  YYLTYPE yyls_alloc;$/;"	m	union:yyalloc	file:
yyls_alloc	build/projects/semileptonic/parse_corr.cpp	/^  YYLTYPE yyls_alloc;$/;"	m	union:yyalloc	file:
yylval	build/projects/generate_confs/tokenizer.cpp	1188;"	d	file:
yylval	build/projects/semileptonic/tokenize_corr.cpp	560;"	d	file:
yylval_r	build/projects/generate_confs/tokenizer.cpp	/^    YYSTYPE * yylval_r;$/;"	m	struct:yyguts_t	file:
yylval_r	build/projects/semileptonic/tokenize_corr.cpp	/^    YYSTYPE * yylval_r;$/;"	m	struct:yyguts_t	file:
yymore	build/projects/generate_confs/tokenizer.cpp	1084;"	d	file:
yymore	build/projects/semileptonic/tokenize_corr.cpp	472;"	d	file:
yynerrs	build/projects/generate_confs/parser.cpp	67;"	d	file:
yynerrs	build/projects/semileptonic/parse_corr.cpp	67;"	d	file:
yyout	build/projects/generate_confs/tokenizer.cpp	131;"	d	file:
yyout	build/projects/semileptonic/tokenize_corr.cpp	131;"	d	file:
yyout_r	build/projects/generate_confs/tokenizer.cpp	/^    FILE *yyin_r, *yyout_r;$/;"	m	struct:yyguts_t	file:
yyout_r	build/projects/semileptonic/tokenize_corr.cpp	/^    FILE *yyin_r, *yyout_r;$/;"	m	struct:yyguts_t	file:
yypact	build/projects/generate_confs/parser.cpp	/^static const yytype_int16 yypact[] =$/;"	v	file:
yypact	build/projects/semileptonic/parse_corr.cpp	/^static const yytype_int8 yypact[] =$/;"	v	file:
yypact_value_is_default	build/projects/generate_confs/parser.cpp	883;"	d	file:
yypact_value_is_default	build/projects/semileptonic/parse_corr.cpp	519;"	d	file:
yyparse	build/projects/generate_confs/parser.cpp	/^yyparse (nissa::driver_t *driver)$/;"	f
yyparse	build/projects/generate_confs/parser.cpp	63;"	d	file:
yyparse	build/projects/semileptonic/parse_corr.cpp	/^yyparse (two_pts_parser_driver *driver)$/;"	f
yyparse	build/projects/semileptonic/parse_corr.cpp	63;"	d	file:
yypgoto	build/projects/generate_confs/parser.cpp	/^static const yytype_int16 yypgoto[] =$/;"	v	file:
yypgoto	build/projects/semileptonic/parse_corr.cpp	/^static const yytype_int8 yypgoto[] =$/;"	v	file:
yyr1	build/projects/generate_confs/parser.cpp	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr1	build/projects/semileptonic/parse_corr.cpp	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	build/projects/generate_confs/parser.cpp	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyr2	build/projects/semileptonic/parse_corr.cpp	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrline	build/projects/generate_confs/parser.cpp	/^static const yytype_uint16 yyrline[] =$/;"	v	file:
yyrline	build/projects/semileptonic/parse_corr.cpp	/^static const yytype_uint8 yyrline[] =$/;"	v	file:
yyscan_t	build/projects/generate_confs/tokenizer.cpp	/^typedef void* yyscan_t;$/;"	t	file:
yyscan_t	build/projects/semileptonic/tokenize_corr.cpp	/^typedef void* yyscan_t;$/;"	t	file:
yyss_alloc	build/projects/generate_confs/parser.cpp	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:
yyss_alloc	build/projects/semileptonic/parse_corr.cpp	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:
yystos	build/projects/generate_confs/parser.cpp	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystos	build/projects/semileptonic/parse_corr.cpp	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	build/projects/generate_confs/parser.cpp	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	build/projects/generate_confs/parser.cpp	1781;"	d	file:
yystpcpy	build/projects/semileptonic/parse_corr.cpp	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	build/projects/semileptonic/parse_corr.cpp	879;"	d	file:
yystrlen	build/projects/generate_confs/parser.cpp	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	build/projects/generate_confs/parser.cpp	1765;"	d	file:
yystrlen	build/projects/semileptonic/parse_corr.cpp	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	build/projects/semileptonic/parse_corr.cpp	863;"	d	file:
yysyntax_error	build/projects/generate_confs/parser.cpp	/^yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,$/;"	f	file:
yysyntax_error	build/projects/semileptonic/parse_corr.cpp	/^yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,$/;"	f	file:
yytable	build/projects/generate_confs/parser.cpp	/^static const yytype_uint16 yytable[] =$/;"	v	file:
yytable	build/projects/semileptonic/parse_corr.cpp	/^static const yytype_uint8 yytable[] =$/;"	v	file:
yytable_value_is_error	build/projects/generate_confs/parser.cpp	888;"	d	file:
yytable_value_is_error	build/projects/semileptonic/parse_corr.cpp	524;"	d	file:
yyterminate	build/projects/generate_confs/tokenizer.cpp	1321;"	d	file:
yyterminate	build/projects/semileptonic/tokenize_corr.cpp	693;"	d	file:
yytext	build/projects/generate_confs/tokenizer.cpp	134;"	d	file:
yytext	build/projects/semileptonic/tokenize_corr.cpp	134;"	d	file:
yytext_ptr	build/projects/generate_confs/tokenizer.cpp	336;"	d	file:
yytext_ptr	build/projects/semileptonic/tokenize_corr.cpp	336;"	d	file:
yytext_r	build/projects/generate_confs/tokenizer.cpp	/^    char *yytext_r;$/;"	m	struct:yyguts_t	file:
yytext_r	build/projects/semileptonic/tokenize_corr.cpp	/^    char *yytext_r;$/;"	m	struct:yyguts_t	file:
yytname	build/projects/generate_confs/parser.cpp	/^static const char *const yytname[] =$/;"	v	file:
yytname	build/projects/semileptonic/parse_corr.cpp	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	build/projects/generate_confs/parser.cpp	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytnamerr	build/projects/semileptonic/parse_corr.cpp	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	build/projects/generate_confs/parser.cpp	/^  enum yytokentype$/;"	g	file:
yytokentype	build/projects/generate_confs/parser.hpp	/^  enum yytokentype$/;"	g
yytokentype	build/projects/semileptonic/parse_corr.cpp	/^  enum yytokentype$/;"	g	file:
yytokentype	build/projects/semileptonic/parse_corr.hpp	/^  enum yytokentype$/;"	g
yytoknum	build/projects/generate_confs/parser.cpp	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytoknum	build/projects/semileptonic/parse_corr.cpp	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	build/projects/generate_confs/parser.cpp	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytranslate	build/projects/semileptonic/parse_corr.cpp	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	build/projects/generate_confs/parser.cpp	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	build/projects/generate_confs/parser.cpp	/^typedef short yytype_int16;$/;"	t	file:
yytype_int16	build/projects/semileptonic/parse_corr.cpp	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	build/projects/semileptonic/parse_corr.cpp	/^typedef short yytype_int16;$/;"	t	file:
yytype_int8	build/projects/generate_confs/parser.cpp	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	build/projects/generate_confs/parser.cpp	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_int8	build/projects/semileptonic/parse_corr.cpp	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	build/projects/semileptonic/parse_corr.cpp	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	build/projects/generate_confs/parser.cpp	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	build/projects/generate_confs/parser.cpp	/^typedef unsigned short yytype_uint16;$/;"	t	file:
yytype_uint16	build/projects/semileptonic/parse_corr.cpp	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	build/projects/semileptonic/parse_corr.cpp	/^typedef unsigned short yytype_uint16;$/;"	t	file:
yytype_uint8	build/projects/generate_confs/parser.cpp	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	build/projects/generate_confs/parser.cpp	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yytype_uint8	build/projects/semileptonic/parse_corr.cpp	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	build/projects/semileptonic/parse_corr.cpp	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyvs_alloc	build/projects/generate_confs/parser.cpp	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:
yyvs_alloc	build/projects/semileptonic/parse_corr.cpp	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:
zero	src/operations/remez/remez_algorithm.hpp	/^    float_high_prec_t *zero,*xmax,*step,*yy,*poly;$/;"	m	struct:nissa::rat_approx_finder_t
zero_mode_sub_t	src/free_theory/free_theory_types.hpp	/^  enum zero_mode_sub_t{PECIONA,UNNO_ALEMANNA,ONLY_100};$/;"	g	namespace:nissa
zero_mode_subtraction_mask	src/free_theory/tlSym_gauge_propagator.cpp	/^  bool zero_mode_subtraction_mask(gauge_info gl,int imom)$/;"	f	namespace:nissa
zeta	projects/cpn/cpn.cpp	/^ON_t *zeta,*zeta_old,*pi,*fpi;$/;"	v
zeta_old	projects/cpn/cpn.cpp	/^ON_t *zeta,*zeta_old,*pi,*fpi;$/;"	v
zeta_orthogonalize_with	projects/cpn/cpn.cpp	/^void zeta_orthogonalize_with(ON_t z,const ON_t w)$/;"	f
zeta_unitarize	projects/cpn/cpn.cpp	/^void zeta_unitarize(ON_t z)$/;"	f
zmp	src/free_theory/free_theory_types.hpp	/^    double zmp;$/;"	m	struct:nissa::tm_quark_info
zms	src/free_theory/free_theory_types.hpp	/^    zero_mode_sub_t zms;$/;"	m	struct:nissa::gauge_info
~all_to_all_comm_t	src/communicate/all_to_all.hpp	/^    ~all_to_all_comm_t(){destroy();}$/;"	f	struct:nissa::all_to_all_comm_t
~base_fermionic_meas_t	src/operations/stag/stag.hpp	/^    ~base_fermionic_meas_t(){};$/;"	f	struct:nissa::base_fermionic_meas_t
~chir_zumba_meas_pars_t	src/operations/stag/zumba.hpp	/^    virtual ~chir_zumba_meas_pars_t(){}$/;"	f	struct:nissa::chir_zumba_meas_pars_t
~corr_command_t	projects/semileptonic/new_version/new_types.hpp	/^  ~corr_command_t() {destroy();}$/;"	f	struct:corr_command_t
~driver_t	projects/generate_confs/driver.hpp	/^    ~driver_t() {destroy_scanner();}$/;"	f	class:nissa::driver_t
~fermion_adjoint_flower_t	src/operations/smearing/Wflow.hpp	/^    ~fermion_adjoint_flower_t()$/;"	f	struct:nissa::fermion_adjoint_flower_t
~fermion_flower_t	src/operations/smearing/Wflow.hpp	/^    ~fermion_flower_t()$/;"	f	struct:nissa::fermion_flower_t
~fermionic_putpourri_meas_pars_t	src/operations/stag/putpourri.hpp	/^    virtual ~fermionic_putpourri_meas_pars_t(){}$/;"	f	struct:nissa::fermionic_putpourri_meas_pars_t
~gauge_conf_t	projects/semileptonic/new_version/new_types.hpp	/^  ~gauge_conf_t() {destroy();}$/;"	f	struct:gauge_conf_t
~gauge_sweeper_t	src/operations/su3_paths/gauge_sweeper.cpp	/^  gauge_sweeper_t::~gauge_sweeper_t()$/;"	f	class:nissa::gauge_sweeper_t
~gauss_smear_pars_t	projects/semileptonic/new_version/new_types.hpp	/^  ~gauss_smear_pars_t() {destroy();}$/;"	f	struct:gauss_smear_pars_t
~in_source_t	projects/semileptonic/new_version/new_types.hpp	/^  ~in_source_t() {destroy();}$/;"	f	struct:in_source_t
~internal_fermion_flower_t	src/operations/smearing/Wflow.hpp	/^    ~internal_fermion_flower_t()$/;"	f	struct:nissa::internal_fermion_flower_t
~magnetization_meas_pars_t	src/operations/stag/magnetization.hpp	/^    virtual ~magnetization_meas_pars_t(){}$/;"	f	struct:nissa::magnetization_meas_pars_t
~mass_res_group_t	projects/semileptonic/new_version/new_types.hpp	/^  ~mass_res_group_t() {destroy();}$/;"	f	struct:mass_res_group_t
~meson_corr_meas_pars_t	src/operations/stag/mesons.hpp	/^    virtual ~meson_corr_meas_pars_t(){}$/;"	f	struct:nissa::meson_corr_meas_pars_t
~nucleon_corr_meas_pars_t	src/operations/stag/nucleon.hpp	/^    virtual ~nucleon_corr_meas_pars_t(){}$/;"	f	struct:nissa::nucleon_corr_meas_pars_t
~paths_calculation_structure	src/operations/su3_paths/arbitrary.hpp	/^    ~paths_calculation_structure() {$/;"	f	struct:nissa::paths_calculation_structure
~prop_group_t	projects/semileptonic/new_version/new_types.hpp	/^  ~prop_group_t() {destroy();}$/;"	f	struct:prop_group_t
~pseudofermion_t	src/hmc/multipseudo/multipseudo_rhmc_step.hpp	/^    ~pseudofermion_t() {destroy();}$/;"	f	struct:nissa::pseudofermion_t
~qed_corr_meas_pars_t	src/operations/stag/qed_corr.hpp	/^    virtual ~qed_corr_meas_pars_t(){}$/;"	f	struct:nissa::qed_corr_meas_pars_t
~qprop_t	projects/ib/prop.hpp	/^    ~qprop_t() {for(size_t i=0;i<sp.size();i++) nissa_free(sp[i]);}$/;"	f	struct:nissa::qprop_t
~quark_rendens_meas_pars_t	src/operations/stag/rendens.hpp	/^    virtual ~quark_rendens_meas_pars_t(){}$/;"	f	struct:nissa::quark_rendens_meas_pars_t
~recursive_Wflower_t	src/operations/smearing/recursive_Wflower.hpp	/^    ~recursive_Wflower_t()$/;"	f	struct:nissa::recursive_Wflower_t
~spinpol_meas_pars_t	src/operations/stag/spinpol.hpp	/^    virtual ~spinpol_meas_pars_t(){}$/;"	f	struct:nissa::spinpol_meas_pars_t
~temp_build_t	src/communicate/all_to_all.cpp	/^  temp_build_t::~temp_build_t()$/;"	f	class:nissa::temp_build_t
~thppeta_group_t	projects/semileptonic/new_version/new_types.hpp	/^  ~thppeta_group_t() {destroy();}$/;"	f	struct:thppeta_group_t
~two_pts_corr_group_t	projects/semileptonic/new_version/new_types.hpp	/^  ~two_pts_corr_group_t() {destroy();}$/;"	f	struct:two_pts_corr_group_t
~two_pts_parser_driver	projects/semileptonic/driver_corr.hpp	/^  virtual ~two_pts_parser_driver(){destroy_scanner();}$/;"	f	class:two_pts_parser_driver
~two_stage_computation_pos_t	src/new_types/two_stage_computation.hpp	/^    ~two_stage_computation_pos_t() {free();}$/;"	f	struct:nissa::two_stage_computation_pos_t
